{"id": "0ec1e2f1", "body": "", "comments": [{"timstamp": "16:49", "user": "ilhami", "body": "catch me when I jump from the bridge :P hehe"}, {"timstamp": "16:50", "user": "ilhami", "body": "first fix your backend response"}], "label": "other"}
{"id": "0ec1e3a6", "body": "", "comments": [{"timstamp": "08:42", "user": "Pyrrhus666", "body": "morning #angularjs"}, {"timstamp": "08:54", "user": "icebox", "body": "Pyrrhus666: traces of blood in sneezing... today we go to the vet, but it should be a quite common case when you get a kitten from a shelter... aniway it eats and plays ;)"}, {"timstamp": "08:55", "user": "icebox", "body": "*anyway"}, {"timstamp": "08:56", "user": "Pyrrhus666", "body": "icebox, some of the mist important properties of kittens :)"}], "label": "other"}
{"id": "93d594d3", "body": "", "comments": [{"timstamp": "2017-06-08 10:23", "user": "AndrewIsh", "body": "Hey guys, Angular 1.x question. I've a directive (D2) that calls a service method. However, depending on where it is being used, it may or may not need to include a property from an ancestor directive's (D1) controller. I'm using 'require' to access D1's controller, however, that will obviously crash and burn if D2 isn't being used as an descendant D1. Does anyone know if it's possible to determine if D1 exists before trying to require it?"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "> an ancestor directive's (D1) controller"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "that's your problem right there"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "use services for shared data"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "~ isolate all the scopes ~"}, {"timstamp": "2017-06-08 10:27", "user": "AndrewIsh", "body": "heartburn: Wow, excellent point. I'm actually needing to access a service property, I was just going to go via the ancestor directive (which injects the service) to get it, man, what an idiot. Thanks for that!"}, {"timstamp": "2017-06-08 10:27", "user": "heartburn", "body": "the scopes should never talk to each other by $parent or any similar means."}, {"timstamp": "2017-06-08 10:28", "user": "heartburn", "body": "they can have inputs via scope bindings but that still doesn't always cut it/is possible"}, {"timstamp": "2017-06-08 10:29", "user": "AndrewIsh", "body": "Indeed, my directive has isolated scope and is only being passed a single object, but the additional property I need is way above that scope. But it's in a service, so I just need to inject that. I can't believe I was overcomplicating it so much!"}, {"timstamp": "2017-06-08 10:30", "user": "heartburn", "body": "AndrewIsh: for further reading:"}, {"timstamp": "2017-06-08 10:31", "user": "AndrewIsh", "body": "heartburn: Heh heh, thanks, I've been working with Angular for a couple of years, it was just one of those brain fart moments, glad you brought some sanity to the rabbit hole I was disappearing down... ;-)"}, {"timstamp": "2017-06-08 10:35", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective?'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "sorry, typo"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "heartburn: true that with components, this should ideally not be used"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Yes, but that will fail if the directive is not being used as a descendant of ancestordirective"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: no, see the question mark"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Ahhhh!"}, {"timstamp": "2017-06-08 10:37", "user": "Elarcis", "body": "heartburn: however, with directives without scope, this can be debated, as directives often are DOM-related, so it makes sense that some directive just requires a parent directive to exist for a systematic behavior, rather than having the dev always passing parameters by hand."}], "label": "other"}
{"id": "73af7d22", "body": "", "comments": [{"timstamp": "02:59", "user": "yakiza", "body": "A good angular7-8 for begginer from youtube to doc anything you guys have to suggest?"}], "label": "other"}
{"id": "93d594e8", "body": "", "comments": [{"timstamp": "2017-01-05 01:12", "user": "herax", "body": "i started a nodejs express project all works fine i added angular through bower but i doesn't reflect on the web page, i have script all pointing to bower_comp folder so i saw this line 7"}, {"timstamp": "2017-01-05 01:32", "user": "graingert", "body": "herax: use yarn"}, {"timstamp": "2017-01-05 01:35", "user": "herax", "body": "graingert is yarn replacement for bower?"}, {"timstamp": "2017-01-05 01:35", "user": "graingert", "body": "herax: it's a replacement for npm"}, {"timstamp": "2017-01-05 01:35", "user": "graingert", "body": "herax: you don't need bower"}, {"timstamp": "2017-01-05 01:36", "user": "graingert", "body": "herax: angular2 is only available on npm"}, {"timstamp": "2017-01-05 01:36", "user": "graingert", "body": "herax: don't start a new project on angular 1"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: look at cli.angular.io and universal.angular.io"}, {"timstamp": "2017-01-05 01:37", "user": "herax", "body": "graingert my project is a node express project"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: cool you can use webpack to make it universal"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: don't use bower"}, {"timstamp": "2017-01-05 01:40", "user": "herax", "body": "if angular 2 is only available on npm how's yarn helpin"}, {"timstamp": "2017-01-05 01:41", "user": "graingert", "body": "herax: yarn installs from npm"}, {"timstamp": "2017-01-05 01:43", "user": "graingert", "body": "herax: in conclusion don't use angular 1 or bower in projects"}, {"timstamp": "2017-01-05 01:43", "user": "herax", "body": "can i add angular 2 to node express project?"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: yeah express isn't anything special"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: look at universal.angular.io"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: that lets you render your angular stuff on the server"}, {"timstamp": "2017-01-05 01:58", "user": "herax", "body": "graingert i got angular through yarn but still no change on the web page even though i get all the ng code completion in the html"}, {"timstamp": "2017-01-05 01:59", "user": "graingert", "body": "herax: you using cli.angular.io?"}, {"timstamp": "2017-01-05 02:00", "user": "herax", "body": "yes started a new project that way"}, {"timstamp": "2017-01-05 02:00", "user": "graingert", "body": "herax: yeah that should just work"}, {"timstamp": "2017-01-05 02:01", "user": "graingert", "body": "herax: when you save your files the page will reload"}, {"timstamp": "2017-01-05 02:01", "user": "herax", "body": "whats the equivalent of app.js in a cli.angular?"}, {"timstamp": "2017-01-05 02:15", "user": "graingert", "body": "herax: what's app.js?"}, {"timstamp": "2017-01-05 02:16", "user": "herax", "body": "server.js"}, {"timstamp": "2017-01-05 02:17", "user": "herax", "body": "or the project fro angular.cli is just front end and to back involved like the non make a node express pjoect?"}, {"timstamp": "2017-01-05 02:17", "user": "herax", "body": "*no back"}], "label": "other"}
{"id": "93d59533", "body": "", "comments": [{"timstamp": "2016-07-06 13:10", "user": "Elarcis", "body": "I want to sleep so bad"}], "label": "other"}
{"id": "93d5953d", "body": "", "comments": [{"timstamp": "2016-05-26 19:42", "user": "jpstone", "body": "is it possible to $watch an attribute in a directive in the controller: property instead of inside the link function"}, {"timstamp": "2016-05-26 19:43", "user": "sunimasuno", "body": "jpstone: yes, you can set up a $watch nearly anywhere"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "if the attribute is 2-way databound (so string isn't avaible on this.attributeName)"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "sunimasuno: how can I do that without the string inside the attribute?"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "maybe create another scope binding for the same attribute, but name it differently?"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "bindToController: {attribute: '=attribute', attributeString: '@attribute'} ?"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "then $scope.$watch(this.attributeString, ...)"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "?"}, {"timstamp": "2016-05-26 19:44", "user": "sunimasuno", "body": "That sounds like it would work, but it feels a bit clunky, can you explain a bit more of the situation to me jpstone I feel like there's a better way"}, {"timstamp": "2016-05-26 19:45", "user": "jpstone", "body": "well, for one, when i add a link function to the directive, angular complains it can't find the required controller...which is weird"}, {"timstamp": "2016-05-26 19:45", "user": "jpstone", "body": "require: '^ngDisabled'"}, {"timstamp": "2016-05-26 19:46", "user": "jpstone", "body": "ngDisabled is clearly an attribute on the element, just like my directive is"}, {"timstamp": "2016-05-26 19:46", "user": "sunimasuno", "body": "jpstone: just a silly question to get out of the way, you do have ng-disabled in the html, right? The cap to - is a gotcha that gets people so often"}, {"timstamp": "2016-05-26 19:46", "user": "jpstone", "body": "yes"}, {"timstamp": "2016-05-26 19:47", "user": "sunimasuno", "body": "ok, sorry if that was beneath you, just wanted to make sure"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "<div ng-disabled=\"someString\" nullify-on-disabled>"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "there's also an ng-model on there"}, {"timstamp": "2016-05-26 19:47", "user": "sunimasuno", "body": "ok"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "which I want to nullify when ng-disabled evaluates as true"}, {"timstamp": "2016-05-26 19:50", "user": "sunimasuno", "body": "man jpstone you've got a good one, can you make a jsfiddle of it?"}, {"timstamp": "2016-05-26 19:51", "user": "sunimasuno", "body": "the string to print"}, {"timstamp": "2016-05-26 19:57", "user": "jpstone", "body": "sure"}], "label": "other"}
{"id": "8addb274", "body": "", "comments": [{"timstamp": "2017-02-10 19:55", "user": "kas84", "body": "Id like to calculate a ng-style based on some dom of the page, but the ng-style fires some time before angular finished manipulating the dom"}, {"timstamp": "2017-02-10 19:56", "user": "kas84", "body": "is there a way to do a timeout or something like that to wait for changes?"}], "label": "feature"}
{"id": "0ec1e30a", "body": "", "comments": [{"timstamp": "12:36", "user": "anddam", "body": "how can I set the width of a material select dropdown menu?"}, {"timstamp": "12:37", "user": "stennowork", "body": ""}, {"timstamp": "12:39", "user": "anddam", "body": "ohh"}, {"timstamp": "12:40", "user": "anddam", "body": "I just realized I was looking at an autocomplete panel, it has @Input() panelWidth"}, {"timstamp": "12:40", "user": "anddam", "body": "\"Specify the width of the autocomplete panel. Can be any CSS sizing value, otherwise it will match the width of its host.\""}, {"timstamp": "12:41", "user": "anddam", "body": "the mat-select answer is a bit ugly though, there should be a way to override look via CSS, not by hardcoding style in the template"}, {"timstamp": "12:41", "user": "anddam", "body": "or by passing it as component parameters"}], "label": "other"}
{"id": "93d59535", "body": "", "comments": [{"timstamp": "2017-04-25 13:06", "user": "E1arcis", "body": "back"}, {"timstamp": "2017-04-25 13:07", "user": "SargoDarya", "body": "wb E1arcis"}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "I really hate atlassian today..."}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "Still can't access Jira."}, {"timstamp": "2017-04-25 13:32", "user": "uru", "body": "SargoDarya:"}, {"timstamp": "2017-04-25 13:33", "user": "uru", "body": "Main problem is they are having issues with their account servers it seems, I can use JIRA fine as I had an existing session from yesterday, co-worker can't log in though"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "uru: Yeah, figured that already. They're also saying that on their status page"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "Honestly though, that issues seems to be open for 13 hours already."}, {"timstamp": "2017-04-25 13:37", "user": "uru", "body": "Yea< I can't even load their offical status page, it's just times out. It's all rather annoying :)"}, {"timstamp": "2017-04-25 13:38", "user": "SargoDarya", "body": "That one works for me though. Are you using status.atlassian.com?"}, {"timstamp": "2017-04-25 13:46", "user": "uru", "body": "Nope, I can't actually access that"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh, seems to be working now"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh well"}, {"timstamp": "2017-04-25 13:47", "user": "SargoDarya", "body": "You mean the status page or what"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "because I'm still receiving freaking cloudflare errors"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "front, not flare"}, {"timstamp": "2017-04-25 14:11", "user": "uru", "body": "The status page, I can't access the log in page but I'm already logged in so it's not a problem for me."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I'm not."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I miss my tickets :<"}, {"timstamp": "2017-04-25 14:14", "user": "uru", "body": "The ones of us that have access still are sending screenshots of issues to people who don't"}, {"timstamp": "2017-04-25 14:19", "user": "uru", "body": "I am actually, getting to build lots of fun stuff at the moment"}, {"timstamp": "2017-04-25 14:21", "user": "Elarcis", "body": "uru: I might have to look at C# again someday, so I'm hopeful :P"}, {"timstamp": "2017-04-25 14:30", "user": "uru", "body": "Elarcis: Neat, I've been doing a bit of Go recently (the language, not the game)"}, {"timstamp": "2017-04-25 14:30", "user": "SargoDarya", "body": "uru: Rare to see someone who even knows go (the game)"}, {"timstamp": "2017-04-25 14:30", "user": "Elarcis", "body": "uru: I've been told to learn Haskell for fun. I don't know if I'll ever be masochist enough"}, {"timstamp": "2017-04-25 14:31", "user": "Elarcis", "body": "SargoDarya: Come on, it made the headlines a few years ago"}, {"timstamp": "2017-04-25 14:31", "user": "SargoDarya", "body": "Elarcis: Well, sure but I'd say still not much people know about it."}, {"timstamp": "2017-04-25 14:32", "user": "Elarcis", "body": "SargoDarya: right"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Still have a large go-ban in the basement"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Loved playing it back then, think I actually got to 17kyu"}, {"timstamp": "2017-04-25 14:34", "user": "Elarcis", "body": "SargoDarya: I don't know the rules of Go, though"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "location[varname]"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Easy to learn, hard to master. It's really about recognising patterns and knowing when to attack or safe"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: sounds a lot like Overwatch"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: *hides in a corner*"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Except that in overwatch 95% of the time your team mates are at fault for losing :P"}, {"timstamp": "2017-04-25 14:36", "user": "Elarcis", "body": "SargoDarya: well obviously, I play way too well to be at fault"}, {"timstamp": "2017-04-25 14:36", "user": "SargoDarya", "body": "And god damn Hanzo. OP when on the other team, non existent when on your team"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: best I saw was a Junkrat who would take long pauses to hide behind a wall between each. grenade."}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "Elarcis: lol, I was subjected to it at uni"}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "SargoDarya: Co-worker plays it ;)"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: or a Winston that would take the flag, then go back to the spawn and decide to clean it (and die) before rushing to the flagpole."}, {"timstamp": "2017-04-25 14:37", "user": "SargoDarya", "body": "lol Elarcis, I actually haven't played in ages."}, {"timstamp": "2017-04-25 14:38", "user": "Elarcis", "body": "\"ages\", the game has been out for less than a year :D"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "Elarcis: {{location[field]}} seems not to work while {{location.fieldname}} does"}, {"timstamp": "2017-04-25 14:38", "user": "SargoDarya", "body": "Was a regular at goproblems.com. That site still looks ages old and is Java driven if I remember correctly"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "in FE"}, {"timstamp": "2017-04-25 14:39", "user": "Elarcis", "body": "justelex: what's FE?"}, {"timstamp": "2017-04-25 14:41", "user": "justelex", "body": "Frontend.. The html template.. sorry"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: well if it works"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: problem solved"}, {"timstamp": "2017-04-25 14:45", "user": "justelex", "body": "Elarcis: I need a variable in this. Like location.$SomeVariableIDontknowInAdvance. With one of the fieldsnames in loctation it works, if I hardcode the name."}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: location[fieldName], I stand my grounds"}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: it's how you access dynamically named variables in an object"}, {"timstamp": "2017-04-25 14:47", "user": "Elarcis", "body": "justelex: if it doesn't work, either fieldName is wrong or location doesn't have any key going by that name"}, {"timstamp": "2017-04-25 14:47", "user": "justelex", "body": "Gnaahh... Sorry, my fault. Had an dumb spelling error in this."}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "Sorry for wasting your time ;)"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "np"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "I'll fax you my hourly rates"}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "hmm... Do this. will be back later, need to search my fax..."}, {"timstamp": "2017-04-25 14:51", "user": "SargoDarya", "body": "Elarcis: Heh, fax."}, {"timstamp": "2017-04-25 14:52", "user": "Elarcis", "body": "SargoDarya: should have said they're on my Minitel."}, {"timstamp": "2017-04-25 14:53", "user": "SargoDarya", "body": "I'm only 28 and I feel freaking old. Somethings wrong."}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: 24 and feel the same"}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: what should I say."}, {"timstamp": "2017-04-25 14:56", "user": "SargoDarya", "body": "Back to work mate"}, {"timstamp": "2017-04-25 14:56", "user": "Pyrrhus666", "body": "SargoDarya, yeeeeaaaahhhh thatd be greeaat."}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": "Pyrrhus666: ?"}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": ""}, {"timstamp": "2017-04-25 14:59", "user": "Pyrrhus666", "body": "SargoDarya,"}, {"timstamp": "2017-04-25 15:00", "user": "Pyrrhus666", "body": "also"}, {"timstamp": "2017-04-25 15:27", "user": "SargoDarya", "body": "Honestly though it's getting to the point where it's laughable with Atlassian"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "yeah :|"}, {"timstamp": "2017-04-25 15:28", "user": "Elarcis", "body": "SargoDarya: reminds me of GitLab a few weeks ago"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "and they got quite a bit of money"}, {"timstamp": "2017-04-25 15:28", "user": "SargoDarya", "body": "I especially love this sentence in the past incidents from yesterdays unavailable login: \"Our teams have completed an extensive health check and are confident Atlassian Account services will remain healthy.\""}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "SargoDarya, they've revamped the UI at least :)"}, {"timstamp": "2017-04-25 15:29", "user": "SargoDarya", "body": "Confidence of a 3 year old"}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: don't mess with Murphy's law"}, {"timstamp": "2017-04-25 15:30", "user": "SargoDarya", "body": "Probably some technician who was like: \"HAHAHAAAAAAAAAAAA nope.\""}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: making a statement like that, it was begging for an incident to happen"}], "label": "other"}
{"id": "0ec1e4a8", "body": "", "comments": [{"timstamp": "20:08", "user": "Ben_1", "body": "is it possible to use the service of an application in all of its sub projects?"}], "label": "feature"}
{"id": "93d59499", "body": "", "comments": [{"timstamp": "2016-05-26 15:54", "user": "Paladice", "body": "re-hello :) if I want to delete a line in my database, I must do $http.put ?"}, {"timstamp": "2016-05-26 15:55", "user": "icebox", "body": "Paladice: no... use a sql statement :)"}, {"timstamp": "2016-05-26 15:55", "user": "Paladice", "body": "icebox, ok thanks i'll search about it"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: no... it is a joke (half joke) :)"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: read again your question"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: generally speaking database and frontend are not connectect"}, {"timstamp": "2016-05-26 15:57", "user": "icebox", "body": "Paladice: in the midlle there is the backend... and I would call a backend api (with a get) to delete manny rows"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": ":) yes I know it :) but if I want to spell a webservice which will delete my line, I can spell it with put ?"}, {"timstamp": "2016-05-26 15:58", "user": "icebox", "body": "Paladice: so there is not any relation between how to call a backend api (get, post, put, delete) and how to remove a row in the db"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": "okok"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": "thanks :)"}], "label": "other"}
{"id": "93d594b5", "body": "", "comments": [{"timstamp": "2019-01-16 11:18", "user": "jlebrech", "body": "i'd tidy up a few bugs and maintain the old code base then rewrite it all in Vue, it depends on existing code size tho."}, {"timstamp": "2019-01-16 11:19", "user": "SargoDarya", "body": "jlebrech: Vue master race \\o/"}, {"timstamp": "2019-01-16 11:19", "user": "jlebrech", "body": "directives need to burn, switch those to components at the very least"}, {"timstamp": "2019-01-16 11:20", "user": "Elarcis", "body": "or MVW"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "MadnessVitriolCurses"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "Vue is just the"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "real angularjs 2"}, {"timstamp": "2019-01-16 11:21", "user": "jlebrech", "body": "Directives are like using hotglue in an electronics project"}, {"timstamp": "2019-01-16 11:24", "user": "Elarcis", "body": "jlebrech: directives are the basis for AngularJS's almost-everything, but it's like manually soldering dozens of transistors when a microprocessor is proposed to you"}, {"timstamp": "2019-01-16 11:25", "user": "jlebrech", "body": "Yep, jumpwires"}, {"timstamp": "2019-01-16 11:26", "user": "SuperTyp", "body": "ping"}, {"timstamp": "2019-01-16 11:26", "user": "jlebrech", "body": "when AngularJS fails as a framework you're then told, it's \"a framework to build frameworks dummy\""}, {"timstamp": "2019-01-16 11:28", "user": "pdobrogost", "body": "Elarcis: As I have '<main-dir my-attr=\"xxx\">` in html and scope: { myAttr: '=' } in the code I would suspect that scope.myAttr should be 'xxx'."}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost:"}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost: when you use =, it is expected that xxx is an expression, not a hardcoded string"}, {"timstamp": "2019-01-16 11:31", "user": "pdobrogost", "body": "Elarcis: ok, thanks"}, {"timstamp": "2019-01-16 11:41", "user": "Elarcis", "body": "pdobrogost: just in case, this is how you'd do what you tried to do in modern AngularJS (regardless of the organisation of your files, etc.)"}, {"timstamp": "2019-01-16 11:42", "user": "pdobrogost", "body": "Elarcis: Thanks a lot!"}, {"timstamp": "2019-01-16 11:48", "user": "pdobrogost", "body": "Elarcis: Although I'm not sure why you have \"my-input\" attribute declared also in <sub-dir> as in the original case it was defined only in <main-dir> and the task was just to get its value inside <sub-dir>?"}, {"timstamp": "2019-01-16 11:49", "user": "Elarcis", "body": "pdobrogost: because it is now considered good practice, if you want an input to \"flow down\" the children of a component, to declare it explicitely in the parent rather than have the children manually require it"}, {"timstamp": "2019-01-16 11:50", "user": "Elarcis", "body": "pdobrogost: the mindset is \"always have the container decide what the children get\", and not the opposite, this way the flow of data and logic is always down the DOM, and not two-ways"}, {"timstamp": "2019-01-16 11:50", "user": "pdobrogost", "body": "react style :)"}, {"timstamp": "2019-01-16 11:51", "user": "pdobrogost", "body": "By input you mean also \"configuration\"?"}, {"timstamp": "2019-01-16 11:52", "user": "Elarcis", "body": "pdobrogost: yes. see components as functions. they take parameters in, get events out. It is desirable to have as few side effects as possible, aka stuff that doesn't go through inputs and outputs"}, {"timstamp": "2019-01-16 11:55", "user": "Elarcis", "body": "pdobrogost: if you need \"side effects\" (caching data, making something available through the whole app, etc.) AngularJS services can be used to share data and logic without overloading inputs and outputs (or if it's even too complicated to synchronise data between parent and children via inputs/outputs)"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "pdobrogost: even if you know a bit of AngularJS, I recommend you check out the official tutorial, it evolved a lot these years and now fully explains how to get the better from components"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "*the best"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: how can this be so hard"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: this is realy hard programming rite"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "berz3rk: not sure the answer would make you feel better :P"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": ":-)"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": "i make a STACKBLITZ(krieg)"}, {"timstamp": "2019-01-16 11:58", "user": "Elarcis", "body": "berz3rk: can we see it? is it \"working\"?"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "Here guys"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "theres a textbox with ngmodel onto the value and a checkbox"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "its not working as intended (yet)"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "i cant use ngmodel because ngmodel uses true/false. I need 1/0 tho for my data model"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "if you modify bottom text you notice it doesnt check or uncheck properly, and initial state is not working as intented as well"}, {"timstamp": "2019-01-16 12:09", "user": "berz3rk", "body": "Elarcis: .: - T_T - :."}, {"timstamp": "2019-01-16 12:09", "user": "pdobrogost", "body": "Elarcis: Thanks for tips"}, {"timstamp": "2019-01-16 12:10", "user": "Pyrrhus666", "body": "berz3rk, you initialize MYVALUE as 1, so the initial state is wrong. also : wtf are you even trying to do ?"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "what do you mean the inital state is wrong"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "there can be a state with 1"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "All I want is ngmodel for MYVALUE"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "but ngmodel for checkbox is true/false, my values i need is 1/0 tho."}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "so it takes 1/0 converts it to true/false (caus javascript)"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "but writes back true and false instead of 0 and 1"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "isnt that obvious )"}, {"timstamp": "2019-01-16 12:12", "user": "Pyrrhus666", "body": "the (change) is not fired on initial render. so the checkbox is not checked. also, youre going about it wrong, imho"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "i thought [value] would be the thing for that"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "or is that [checked] ?"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "checked doesnt give me the right effect either"}, {"timstamp": "2019-01-16 12:15", "user": "Pyrrhus666", "body": "[checked] is an input binding, it doesnt work two-ways. reap the mat-checkbox api and use the properties and methods provided."}, {"timstamp": "2019-01-16 12:17", "user": "Pyrrhus666", "body": "*read, although reap is quite applicable too"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "hm"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "i dont even want it two ways because the format is wrong"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "I think i got it working now"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "forgot i had to send event after i change the value not before"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "wasnt in the example tho"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "If anyone is curios"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "theres a syntax tho to access the curent elemtn right?"}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "so i dont need #check ?"}], "label": "other"}
{"id": "0ec1e512", "body": "", "comments": [{"timstamp": "15:26", "user": "pagios", "body": "hi all, when it comes to webcomponents, is it easier for me to create a webcomponent using angular or to create a webcomponent using vanilla javascript? idea is to have a webcomponent that is reusable across thirdparty websites and thus replace using an iframe, thanks"}, {"timstamp": "15:28", "user": "stennowork", "body": "pagios, web components is still a rather new technology and might not be supported that well"}, {"timstamp": "15:29", "user": "pagios", "body": "stennowork, the idea is to have some code loaded on some third party website, i dont want to bother the third party web developer, and give me an easy way of embedding my code, should i go with an iframe?"}, {"timstamp": "15:36", "user": "stennowork", "body": "in case of doubt, use iframe"}, {"timstamp": "15:40", "user": "pagios", "body": "stennowork, any alternatives?"}, {"timstamp": "15:40", "user": "stennowork", "body": "well, web components, if you are fine with not supporting all (tm) browsers"}, {"timstamp": "15:42", "user": "stennowork", "body": "keep in mind that angulars components are not the same as vanilla components"}], "label": "other"}
{"id": "93d594ce", "body": "", "comments": [{"timstamp": "2016-09-23 21:12", "user": "[1]David", "body": "anyone used ngMaterial?"}, {"timstamp": "2016-09-23 21:13", "user": "dopry", "body": "[1]David, da_wunder has a seed for that... maybe he knows."}, {"timstamp": "2016-09-23 21:13", "user": "[1]David", "body": "dopry: sorry to be a complete idiot, but what is a seed?"}, {"timstamp": "2016-09-23 21:14", "user": "dopry", "body": "[1]David,"}, {"timstamp": "2016-09-23 21:15", "user": "[1]David", "body": "so like a basic project to build on?"}, {"timstamp": "2016-09-23 21:17", "user": "grizzm0", "body": "[1]David, seed/skeleton"}, {"timstamp": "2016-09-23 21:18", "user": "grizzm0", "body": "Something to start upon. So yeah."}, {"timstamp": "2016-09-23 21:18", "user": "[1]David", "body": "cool thanks"}, {"timstamp": "2016-09-23 21:20", "user": "[1]David", "body": "ok next dumb question, how do i know if i am able to use ES6 or not? as far as i know i am using javascript and angularjs"}, {"timstamp": "2016-09-23 21:21", "user": "da_wunder", "body": "[1]David: first question are you using any build tools?"}, {"timstamp": "2016-09-23 21:22", "user": "[1]David", "body": "da_wunder: i am using webstorm IDE and i dont think i have installed any build tools"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "da_wunder: I am a mathematician/financier who was fascinated by webdevelopment so am trying to learn"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "I can code java/C# and a few others"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "[1]David: and for that i would read john papa's guide"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": "but this is a whole different world"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "and see some projects that are public"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": ""}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "yep"}, {"timstamp": "2016-09-23 21:25", "user": "[1]David", "body": "ok will do thanks"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "da_wunder, I think there should be a channel bot that responds to all \"how do I\" questions with,"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "have you read"}, {"timstamp": "2016-09-23 21:27", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-09-23 21:28", "user": "[1]David", "body": "really thank you all for your help. I appreciate it!#"}, {"timstamp": "2016-09-23 21:34", "user": "da_wunder", "body": "[1]David: np"}], "label": "other"}
{"id": "93d59484", "body": "", "comments": [{"timstamp": "2017-08-23 11:27", "user": "Elarcis", "body": "Blehy"}, {"timstamp": "2017-08-23 11:27", "user": "SargoDarya", "body": "?"}, {"timstamp": "2017-08-23 11:28", "user": "Pyrrhus666", "body": "and a good morning to you to Elarcis ;)"}, {"timstamp": "2017-08-23 11:29", "user": "Elarcis", "body": "was meant to be bleh!"}, {"timstamp": "2017-08-23 11:35", "user": "Elarcis", "body": "sorry ;_;"}, {"timstamp": "2017-08-23 11:35", "user": "Elarcis", "body": "IM SO SOJJYYYY"}, {"timstamp": "2017-08-23 11:36", "user": "SargoDarya", "body": "I think you meant to say sorrz"}, {"timstamp": "2017-08-23 11:37", "user": "Elarcis", "body": "SargoDarya: I dud"}, {"timstamp": "2017-08-23 11:37", "user": "Pyrrhus666", "body": "yes, yes you are :P"}, {"timstamp": "2017-08-23 11:54", "user": "Elarcis", "body": "Pyrrhus666: How are you going?"}, {"timstamp": "2017-08-23 11:56", "user": "Pyrrhus666", "body": "Elarcis, coping with a severe case of extended monday-blues. prognosis is itll last until friday..."}, {"timstamp": "2017-08-23 11:57", "user": "Pyrrhus666", "body": "luckily the boss is still on vacation, so I can sort of get away with it because most stuff I need to do is done already ;)"}, {"timstamp": "2017-08-23 11:59", "user": "Pyrrhus666", "body": "Elarcis, and you ? is the PM away ? and the intern is gone ?"}, {"timstamp": "2017-08-23 11:59", "user": "SargoDarya", "body": "I feel like most people seem to forgot that this channel is logged xD"}, {"timstamp": "2017-08-23 12:00", "user": "Pyrrhus666", "body": "nothing connects my nick to my work, luckily ;)"}, {"timstamp": "2017-08-23 12:01", "user": "SargoDarya", "body": "I'm pretty sure it's possible to create a complete profile of my life with that nick."}, {"timstamp": "2017-08-23 12:02", "user": "Elarcis", "body": "me as well"}, {"timstamp": "2017-08-23 12:04", "user": "Pyrrhus666", "body": "private laptop at work, connected to a private vpn. paranoid much ? yeah..."}, {"timstamp": "2017-08-23 13:10", "user": "Elarcis", "body": "bleh!"}, {"timstamp": "2017-08-23 13:26", "user": "Elarcis", "body": "Lifes sad when iceboxs not around..."}, {"timstamp": "2017-08-23 13:49", "user": "Pyrrhus666", "body": "E1arcis, well have to manage for another week or so..."}, {"timstamp": "2017-08-23 15:42", "user": "lpapp", "body": "Elarcis: ok, thanks"}, {"timstamp": "2017-08-23 15:42", "user": "lpapp", "body": "I am new to angularjs, I can see that a controller function is called because I put a console.log inside it, but the directive does not get called at the \"same time\". Is this normal?"}, {"timstamp": "2017-08-23 15:49", "user": "Elarcis", "body": "lpapp: what do you mean by <unconvertable> same time?"}, {"timstamp": "2017-08-23 15:49", "user": "lpapp", "body": "loading a page"}, {"timstamp": "2017-08-23 15:52", "user": "lpapp", "body": "I am looking at this angular mode:"}, {"timstamp": "2017-08-23 15:52", "user": "lpapp", "body": "I tried to extend it with a directive next to the controller, but I do not seem to be able to get the code executed after adding that directive."}, {"timstamp": "2017-08-23 15:54", "user": "lpapp", "body": "Also, I am a bit confused that this html does not seem to refer to the previous angular js module..."}, {"timstamp": "2017-08-23 15:55", "user": "lpapp", "body": "still, as a newbie, I am confused."}, {"timstamp": "2017-08-23 15:56", "user": "lpapp", "body": "e.g. I cannot see ng-controller assignment, which I thought would be needed for an angular module controller..."}, {"timstamp": "2017-08-23 16:04", "user": "Elarcis", "body": "lpapp: you need to understand that before, after, <unconvertable> next to <unconvertable> are very generic terms and can mean anything without us looking at the same thing than you"}, {"timstamp": "2017-08-23 16:04", "user": "lpapp", "body": "sure, this is why I tried to provide context."}, {"timstamp": "2017-08-23 16:04", "user": "Elarcis", "body": "lpapp: ngController is pretty much obsolete. AngularJS is component-based since 1.5"}, {"timstamp": "2017-08-23 16:04", "user": "lpapp", "body": "let me know if you need more information."}, {"timstamp": "2017-08-23 16:05", "user": "Elarcis", "body": "lpapp: we have a plunker template you can use to toy with and share us examples, if that can help"}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "Elarcis: not sure I can do that today, sorry."}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "but I would appreciate help today, though."}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "I feel I provided the source to the code, so who is willing to read that probably can tell me what is going on"}, {"timstamp": "2017-08-23 16:14", "user": "Elarcis", "body": "lpapp: you should probably ask the projects maintainer, who would be more apt to answer your question, since they seem to be having an exotic setup"}, {"timstamp": "2017-08-23 16:15", "user": "Elarcis", "body": "lpapp: at least to me, and having only quickly checked your links"}, {"timstamp": "2017-08-23 16:16", "user": "Elarcis", "body": "lpapp: whats certain is that declaring the controller isnt merely enough; theres probably someplace in the code where they link the controller to the template, probably on Javas side"}, {"timstamp": "2017-08-23 16:21", "user": "lpapp", "body": "Elarcis: ok, sent an email to their mailing list, thank you."}, {"timstamp": "2017-08-23 16:27", "user": "Elarcis", "body": "lpapp: np"}], "label": "other"}
{"id": "93d594e2", "body": "", "comments": [{"timstamp": "2017-06-16 08:25", "user": "platowork", "body": "is there a simple way to check if a file in the local project folder exists?"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: sure... but not from the browser :)"}, {"timstamp": "2017-06-16 08:26", "user": "platowork", "body": "like \"show this div only if there is a \"./assets/something.txt\" file"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: and it is not related to angularjs or angular :)"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: only in the backend"}, {"timstamp": "2017-06-16 08:27", "user": "platowork", "body": "even if that file is part of the angular project?"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: it is the same... it doesn't game the change"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: fetch that resource and act accordingly"}, {"timstamp": "2017-06-16 08:27", "user": "platowork", "body": "well I want to do something like this"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: but it is not a check \"if a file exists\""}, {"timstamp": "2017-06-16 08:28", "user": "platowork", "body": "render \"text-de.md\" if this file exists"}, {"timstamp": "2017-06-16 08:28", "user": "platowork", "body": "else fallback to \"text-en.md\""}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: that is another use case... rendering conditionally different resources... it seems related to i18n"}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: anyway you cannot render markdonw without any lib"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "thats not part of the problem"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "the markdown rendering already works :)"}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: nice"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "with ng2-markdown"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: generally speaking, you may give a look at"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: you said angularjs"}, {"timstamp": "2017-06-16 08:30", "user": "platowork", "body": "I just want to catch the case when there is no localized file"}, {"timstamp": "2017-06-16 08:30", "user": "platowork", "body": "and fallback to the standard english file"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: or angular?"}, {"timstamp": "2017-06-16 08:31", "user": "platowork", "body": "angular 2+"}, {"timstamp": "2017-06-16 08:31", "user": "icebox", "body": "ok"}, {"timstamp": "2017-06-16 08:31", "user": "icebox", "body": "platowork: see i18n solutions for angular"}, {"timstamp": "2017-06-16 08:33", "user": "platowork", "body": "well I already have localization for text in the project"}, {"timstamp": "2017-06-16 08:33", "user": "platowork", "body": "and conditionally choosing the right markdown file also works"}, {"timstamp": "2017-06-16 08:34", "user": "platowork", "body": "I just want to fallback to the standard language file when the localized one does not exist yet"}, {"timstamp": "2017-06-16 08:34", "user": "platowork", "body": "just as simple as an ngIf or so :D"}, {"timstamp": "2017-06-16 08:34", "user": "icebox", "body": "platowork: perfect... usually i18n solutions provide a default language (\"catch all\", fallback)"}, {"timstamp": "2017-06-16 08:34", "user": "icebox", "body": "platowork: are you saying you have not fallback?"}, {"timstamp": "2017-06-16 08:35", "user": "platowork", "body": "not for the markdown rendering"}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "terrible... fix it"}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "it should be the first use case to implement"}, {"timstamp": "2017-06-16 08:35", "user": "platowork", "body": "well I thought it's just a simple as \"check if this file is there, if not, use another\""}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "platowork: is it a custom solution or you use a lib?"}, {"timstamp": "2017-06-16 08:36", "user": "icebox", "body": "it seemd weirdly a i18n solution doesn't provide a fallback"}, {"timstamp": "2017-06-16 08:36", "user": "icebox", "body": "*seems"}, {"timstamp": "2017-06-16 08:37", "user": "icebox", "body": "platowork: if it is a custom solution, follow the same approach you used to load the other resources"}, {"timstamp": "2017-06-16 08:44", "user": "icebox", "body": "platowork: if you are fetching the resources, I would check for 404... is it feasible?"}, {"timstamp": "2017-06-16 09:15", "user": "platowork", "body": "well that could work, icebox"}], "label": "other"}
{"id": "0ec1e28a", "body": "", "comments": [{"timstamp": "13:09", "user": "Paradisee", "body": "how does a push notification work?"}, {"timstamp": "13:10", "user": "Paradisee", "body": "i basically have a json on my server, where there are a list of notifications i would like to send to the user"}, {"timstamp": "13:11", "user": "Paradisee", "body": "the list is complitely generated as a standalone project"}, {"timstamp": "13:13", "user": "Paradisee", "body": "i'm reading this:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "it says: What we know as Web Push Notifications are actually based on two separate browser standards:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Push API - this is an API that allows messages to be pushed from a server to a browser (even when the site isn't focused or the browser is closed)"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Notifications API: displays native system notifications to the user"}], "label": "other"}
{"id": "93d5947e", "body": "", "comments": [{"timstamp": "2016-05-26 15:56", "user": "byteme", "body": "I am using signalR with angular js 1.5x and I want to add ng-change to detect data changes. The ng-change=\"model.dataUpdated()\" ng-model=\"model.data\" is not firing"}, {"timstamp": "2016-05-26 16:14", "user": "Fenikkusu", "body": "byteme, ngModel will update immediately with the value, regardless of ngChange. Are you sure you need ngChange?"}], "label": "other"}
{"id": "93d59490", "body": "", "comments": [{"timstamp": "2016-07-12 07:08", "user": "spider_", "body": "hey how to add methode of aary and then retrieve one by ine"}], "label": "other"}
{"id": "73af7d2f", "body": "", "comments": [{"timstamp": "12:21", "user": "jlebrech", "body": "what's buckbot?"}, {"timstamp": "12:27", "user": "trampi", "body": "jlebrech: join #buckbot"}, {"timstamp": "12:41", "user": "jlebrech", "body": "ok, that's fun"}], "label": "other"}
{"id": "93d5949f", "body": "", "comments": [{"timstamp": "2016-10-18 14:44", "user": "LIERO", "body": ""}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "is there any reason the code in the <unconvertable> else if <unconvertable> or even the else doesnt ever execute?"}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "basically, the api either returns a string (the condition of the if statement..) or an empty object -> {}"}, {"timstamp": "2016-10-18 14:49", "user": "Elarcis", "body": "LIERO: if first condition doesn't crash, then the else if will never be true"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "if the object is empty, its still truthy?"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "oh, wait"}, {"timstamp": "2016-10-18 14:50", "user": "Elarcis", "body": "LIERO: your if() assumes that res already has keys, if results is undefined or is not an array, you JS code will throw an exception"}, {"timstamp": "2016-10-18 14:51", "user": "Elarcis", "body": "LIERO: if it throws an exception, the code stops there. if it doesn't, that means res.results is a non-empty array, etc."}, {"timstamp": "2016-10-18 14:51", "user": "Pyrrhus666", "body": "Elarcis: that sounds highly plausible in this case."}, {"timstamp": "2016-10-18 14:52", "user": "icebox", "body": "LIERO: empty object is true... :) you should \"guard\" that \"if\"..."}, {"timstamp": "2016-10-18 14:52", "user": "Elarcis", "body": "LIERO: I recommend to sanitize your res object. check that it has a non-empty result array that has a non-empty alternatives array"}, {"timstamp": "2016-10-18 14:53", "user": "Elarcis", "body": "icebox: didn't know it was called like that :D"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "empty object is true but it's not testing against empty object, so it's not that"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "i'll be doing if(undefined)"}, {"timstamp": "2016-10-18 14:54", "user": "icebox", "body": "bd-: agreed... the point was... check that \"if\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: that's why I'd love to, but won't for this project, start using TS's --strictNullChecks"}, {"timstamp": "2016-10-18 14:55", "user": "bd-", "body": "maybe just reorder it and swap the if and the elseif"}, {"timstamp": "2016-10-18 14:55", "user": "icebox", "body": "Elarcis: sorry... \"I know\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: YOU."}, {"timstamp": "2016-10-18 14:56", "user": "LIERO", "body": "if I put <unconvertable> Object.keys(res).length > 0 <unconvertable> as the initial if condition, still nothing executes after that"}, {"timstamp": "2016-10-18 14:56", "user": "icebox", "body": "bd-: maybe using intermediate variables :)"}, {"timstamp": "2016-10-18 14:57", "user": "icebox", "body": "LIERO: if you debug that code, you get the answer in seconds"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "^"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "LIERO you can trust JS, it means that Object.keys(res).length is always more than 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "Elarcis, its not, it says its 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "also, works the same with if(typeof res.results[0].alternatives[0].transcript === \"string\"), which cant be true if res is an empty object"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "also, on invalid input it doesnt execute the code in the initial if as well"}, {"timstamp": "2016-10-18 15:08", "user": "Elarcis", "body": "LIERO: there's definitely an issue with your code, Object.keys() is native and cannot lie"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "but then doesnt do anything if I only have an else (no else if)"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "if Im getting an empty object that means the promise is returned for sure, right?"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO: you're in a promise chain?"}, {"timstamp": "2016-10-18 15:09", "user": "LIERO", "body": "the callback*"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO... if you're using promise and not using any catch() block, your if just throws an exception that is swallowed by the promise chain"}, {"timstamp": "2016-10-18 15:10", "user": "LIERO", "body": "Im not in a promise chain, my mistake"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: guard your object's content, not with typeof"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: this way you can debug more easily, and will have an easier time figuring out what's wrong"}], "label": "other"}
{"id": "93d59510", "body": "", "comments": [{"timstamp": "2018-12-11 19:54", "user": "maxy_86_dev", "body": "please I have to update an AngularJS project from 1.5.8 to 1.6.1 I have a deadline, then my application will stop to work"}, {"timstamp": "2018-12-11 19:54", "user": "maxy_86_dev", "body": "I need support via skype"}, {"timstamp": "2018-12-11 19:55", "user": "maxy_86_dev", "body": "or something else"}, {"timstamp": "2018-12-11 19:55", "user": "maxy_86_dev", "body": "I tried on .codementor.io but I didn't find anyone"}, {"timstamp": "2018-12-11 19:57", "user": "SuperTyp", "body": "but we told you already what to do?"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "yes, I cannot do without angularfire"}, {"timstamp": "2018-12-11 19:57", "user": "SuperTyp", "body": "otherwise, hire a IT Consulting company to help you"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "and I cannot use stackbliz"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "of course, I need a professional"}, {"timstamp": "2018-12-11 19:58", "user": "maxy_86_dev", "body": "expert on migration"}, {"timstamp": "2018-12-11 19:58", "user": "maxy_86_dev", "body": "but I don't know where to ask"}], "label": "other"}
{"id": "8addb265", "body": "", "comments": [{"timstamp": "2017-03-20 13:59", "user": "jlebrech", "body": "I have a problem with angular-bootstrap and opening of modals, it seems when I open a modal after another modal that it opens below it, but i'd like the new modal to open above."}, {"timstamp": "2017-03-20 14:00", "user": "Pyrrhus666", "body": "jlebrech, probably because the both have the same z-index ? can you even control that from ng-bootstrap ?"}, {"timstamp": "2017-03-20 14:01", "user": "jlebrech", "body": "Pyrrhus666: there's no option to set a z-index when launching it, and I can see the new modal having a lower z-index. I don't want to hack the ui-modal code"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, lower... thats weird..."}, {"timstamp": "2017-03-20 14:02", "user": "jlebrech", "body": "i saw a few issues and SO, and they say wontfix because modal + modal is bad form"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, which is sort of true."}, {"timstamp": "2017-03-20 14:03", "user": "jlebrech", "body": "so it's anoying, it worked in a previous version ui-bootstrap"}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, cant you hack it via css ? (some custom class having z-index: 10000!important; or smh ?)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: but previous functionality should stay the same."}, {"timstamp": "2017-03-20 14:04", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, but this was never meant as a functionality, it seems ;)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: wouldn't that be nice, but then the overlay is fucked"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: yep, anoying"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, cant you do away with the second modal ?"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, if they say its bad form, theyll probably reject your PR..."}, {"timstamp": "2017-03-20 14:05", "user": "jlebrech", "body": "I could edit and try to PR it"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "Pyrrhus666: yeah, I can try. but sometimes it's a confirmation modal (i.e 'are you sure') or a userguide popup with and instructional video"}, {"timstamp": "2017-03-20 14:06", "user": "heartburn", "body": "why wouldn't you use system ones for that?"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "^ my idea"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "except for the video ones ;)"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "because confirm box is ugly"}, {"timstamp": "2017-03-20 14:07", "user": "Pyrrhus666", "body": "jlebrech, <shrug> its functional as f*ck though ;)"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "wellthatslikejustyouropinionman.jpeg"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "they are ugly on windows mostly.)"}, {"timstamp": "2017-03-20 14:07", "user": "jlebrech", "body": "i have an option, to stop opening another video at the sametime, just hide and reopen it."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "Pyrrhus666: yeah, unfortunately it's not my product"}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "s/video/modal"}, {"timstamp": "2017-03-20 14:08", "user": "Pyrrhus666", "body": "jlebrech, that sounds like a logical option."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "yeah, i'm doing that"}, {"timstamp": "2017-03-20 14:09", "user": "jlebrech", "body": "Pyrrhus666: modals where a short term passable solution anyways"}, {"timstamp": "2017-03-20 14:11", "user": "heartburn", "body": "seriously tho, confirm()'s are platform-consistent and truly modal, so there's nothing wrong about using them. they save you a lot of trouble."}, {"timstamp": "2017-03-20 14:12", "user": "heartburn", "body": "but yea, they go look ugly on windows."}, {"timstamp": "2017-03-20 14:14", "user": "Pyrrhus666", "body": "heartburn, they look alike on all OSs I use. browser-dependent of course"}, {"timstamp": "2017-03-20 14:49", "user": "heartburn", "body": "ngdoc: location"}, {"timstamp": "2017-03-20 14:54", "user": "jlebrech", "body": "Pyrrhus666: i've fixed my issue with modal using CSS but that'll assumes that there's always ever 2 levels of modal (which is probably for the best)"}, {"timstamp": "2017-03-20 14:55", "user": "Pyrrhus666", "body": "jlebrech, ah yes, if you fix all levels inc backdrop, thatll work :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "Pyrrhus666: I could give each level a class, and hardcode which height I want each to be. and two level of backdrop too :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "shitty solution :D but will work"}, {"timstamp": "2017-03-20 14:57", "user": "Pyrrhus666", "body": "jlebrech, good enough in these circumstances :)"}, {"timstamp": "2017-03-20 14:58", "user": "jlebrech", "body": "i'll fix backdrop class if someone requests a backdrop, for now the first backdrop shows"}], "label": "feature"}
{"id": "93d594a8", "body": "", "comments": [{"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "hi"}, {"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "anybody in the room"}, {"timstamp": "2016-08-30 12:18", "user": "ngWalrus", "body": "nope"}, {"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "Hi people"}, {"timstamp": "2016-08-30 12:19", "user": "aaa__", "body": "any good documentation about design patterns used in angular js"}, {"timstamp": "2016-08-30 12:19", "user": "aaa__", "body": "?"}, {"timstamp": "2016-08-30 12:20", "user": "ngWalrus", "body": "Yes"}, {"timstamp": "2016-08-30 12:21", "user": "Elarciss", "body": "read the docs"}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": ""}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": "also this"}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": ""}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": "that's pretty good too"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "any docs to master javascript"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "and javascript design patterns"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "?"}, {"timstamp": "2016-08-30 12:23", "user": "uru", "body": "aaa__: Google and lots of practice"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "practice is on the way"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "but still want to dig more"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "can anybody help"}, {"timstamp": "2016-08-30 12:25", "user": "aaa__", "body": "please share if you have any resources. Which u feel best"}, {"timstamp": "2016-08-30 12:25", "user": "Elarciss", "body": "aaa you will become master when you will work in real time environment,unless you have weird,strange,etc kind of demands by clients ,you can't become an master in any technology!"}, {"timstamp": "2016-08-30 12:26", "user": "aaa__", "body": "yes Elarciss you are right"}, {"timstamp": "2016-08-30 12:27", "user": "aaa__", "body": "still thurst expect something from mates"}, {"timstamp": "2016-08-30 12:27", "user": "aaa__", "body": "please share if u have any"}, {"timstamp": "2016-08-30 12:27", "user": "uru", "body": "aaa__: google.com"}, {"timstamp": "2016-08-30 12:28", "user": "uru", "body": "There's loads of stuff out there about design patterns in general and JS/angular specific if you look for them"}, {"timstamp": "2016-08-30 12:28", "user": "Elarciss", "body": "aaa download projects from google and study them!"}, {"timstamp": "2016-08-30 12:29", "user": "Preuk", "body": "aaa__: try to remake some nice stuff you like: when so see somehing nice in a module or on a page, try to make it your way"}, {"timstamp": "2016-08-30 12:29", "user": "Elarciss", "body": "aaa follow preuk"}, {"timstamp": "2016-08-30 12:29", "user": "aaa__", "body": "ok"}, {"timstamp": "2016-08-30 12:29", "user": "Preuk", "body": "there are so many ways to use JS ..."}, {"timstamp": "2016-08-30 12:31", "user": "Preuk", "body": "for fun stuff, you can look at some JS game system (warnet, factoryidle, cookie clicker come to mind :p) or replicate some google tools interface (google keep is pretty interesting for example)"}, {"timstamp": "2016-08-30 12:31", "user": "Preuk", "body": "the most different use case you know how to handle, the closer you are to \"mastery\""}, {"timstamp": "2016-08-30 12:32", "user": "Preuk", "body": "or even better: find clients ready to pay you for learning :p"}, {"timstamp": "2016-08-30 12:34", "user": "aaa__", "body": "Thank you ngWalrus,Elarciss and Preuk"}], "label": "other"}
{"id": "93d59544", "body": "", "comments": [{"timstamp": "2016-09-27 11:40", "user": "Pyrrhus666", "body": "what are you guys reading ?"}, {"timstamp": "2016-09-27 11:41", "user": "icebox", "body": "Pyrrhus666:"}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "> Load only what's needed."}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "lies?"}, {"timstamp": "2016-09-27 11:41", "user": "icebox", "body": "bd-: marketing? :)"}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "i'm not sure how a giant 4mb .js file can be considered only loading what's needed"}, {"timstamp": "2016-09-27 11:42", "user": "Pyrrhus666", "body": "icebox: ah, thx :)"}, {"timstamp": "2016-09-27 11:44", "user": "Pyrrhus666", "body": "wow, those statistics are thoroughly unimpressive indeed..."}, {"timstamp": "2016-09-27 11:46", "user": "Pyrrhus666", "body": "that conclusion : <unconvertable> the way it _feels_ faster than the alternatives. yeah good metric you got there...."}, {"timstamp": "2016-09-27 11:49", "user": "bd-", "body": "certainly doesn't feel faster here"}], "label": "other"}
{"id": "93d5953c", "body": "", "comments": [{"timstamp": "2018-01-31 13:45", "user": "Tazmain", "body": "Hi all, would it be better to have a button using ng-show or ng-if , for when I want to add a button right after the user clicks something?"}, {"timstamp": "2018-01-31 14:37", "user": "Elarcis", "body": "Tazmain: ngShow is lighter than ngIf (just a CSS class toggle), ngIf spares performances if your hidden element contains lots of logic (it removes the element from the dom and doesnt run anything in it)"}, {"timstamp": "2018-01-31 14:38", "user": "Elarcis", "body": "Tazmain: in short: if it has lots of logic, use ngIf, if its a dumb element whose presence doesnt mean too much, ngShow."}, {"timstamp": "2018-01-31 14:39", "user": "Pyrrhus6661", "body": "Elarcis, I was specifically targetting SuperTyps statement about just a button. your generalization is correct."}, {"timstamp": "2018-01-31 14:39", "user": "Tazmain", "body": "Elarcis, so if its a button with one function ?"}, {"timstamp": "2018-01-31 14:39", "user": "Elarcis", "body": "Tazmain: the function is on a ngClick I guess, so it doesnt even matter"}, {"timstamp": "2018-01-31 14:39", "user": "Elarcis", "body": "Tazmain: ngShow"}, {"timstamp": "2018-01-31 14:40", "user": "Elarcis", "body": "Pyrrhus6661: both about your next gen game dev question"}, {"timstamp": "2018-01-31 14:40", "user": "Elarcis", "body": ":P"}, {"timstamp": "2018-01-31 14:40", "user": "Pyrrhus6661", "body": "Elarcis, ah, ok :)"}, {"timstamp": "2018-01-31 14:44", "user": "Pyrrhus6661", "body": "just make sure whatever happens client side is checked server side. then you can stop caring about client side"}, {"timstamp": "2018-01-31 14:44", "user": "Elarcis", "body": "Pyrrhus6661: or dont have any server side, like me :P"}, {"timstamp": "2018-01-31 14:44", "user": "Pyrrhus6661", "body": "Elarcis, even better :P"}, {"timstamp": "2018-01-31 14:44", "user": "Elarcis", "body": "Pyrrhus6661: no data is reliable, so dont care about data :P"}, {"timstamp": "2018-01-31 14:45", "user": "Pyrrhus6661", "body": "sounds about right for s/data/people/g too ;)"}, {"timstamp": "2018-01-31 14:45", "user": "Elarcis", "body": "I dont know how to do it for Angular, but Im pretty sure its moderately hard."}], "label": "other"}
{"id": "73af7cdb", "body": "", "comments": [{"timstamp": "05:38", "user": "_genuser_", "body": "hello people. I have a question. When I hit the back button (in browser) on an angular app, the CanDeactivate route guard kicks off. But only the first time. Subsequent times, it doens't."}, {"timstamp": "05:38", "user": "_genuser_", "body": "is this something that is known, not known, is my app doing something different from what should happen?"}], "label": "other"}
{"id": "8addb25a", "body": "", "comments": [{"timstamp": "2017-06-29 00:08", "user": "ferretzzz", "body": "Is there a way to tell the angular cli to put all my services into a services folder?"}, {"timstamp": "2017-06-29 00:20", "user": "helloNL", "body": "ferretzzz: the cli is expecting you to do it from root everytime"}, {"timstamp": "2017-06-29 00:21", "user": "helloNL", "body": "ng generate c s services/servicename is what you have to do"}, {"timstamp": "2017-06-29 00:22", "user": "helloNL", "body": "But this is sort of fixable by aliases in your terminal"}, {"timstamp": "2017-06-29 00:26", "user": "ferretzzz", "body": "helloNL: Yeah that's too much work for aliases. spelling out the directory works fine I suppose. thanks!"}, {"timstamp": "2017-06-29 00:27", "user": "ferretzzz", "body": "I feel like it would be a useful cli feature to just specify that I want all services in a services folder"}, {"timstamp": "2017-06-29 00:27", "user": "helloNL", "body": "ferretzzz: I have that issue with more systems :P"}], "label": "feature"}
{"id": "93d59485", "body": "", "comments": [{"timstamp": "2018-09-04 16:42", "user": "d0x1", "body": "Hello guys!"}, {"timstamp": "2018-09-04 16:42", "user": "d0x1", "body": "I need help, i cant refill $scope.name_model when clear this same ng-model."}, {"timstamp": "2018-09-04 16:43", "user": "SargoDarya", "body": "d0x1: I don't even get what your problem is."}, {"timstamp": "2018-09-04 16:43", "user": "d0x1", "body": "1o $scope.name_model = '' (WORK) 2o $scope.name_model = 'hello' (doesn't work);"}, {"timstamp": "2018-09-04 16:45", "user": "icebox", "body": "d0x1: behaviour expected"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "I need tag RFID card"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "i have 1o $rootScope.tagID = hextagid;"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "i need refill this same ng-model=\"tagID\", and i cant fill"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "refill*"}, {"timstamp": "2018-09-04 16:47", "user": "icebox", "body": "d0x1: \"By default, ngModel watches the model by reference, not value.\" -"}, {"timstamp": "2018-09-04 17:00", "user": "BORSCHT", "body": "d0x1: post some context. how are you getting the hextagid? is there any async logic involved?"}], "label": "other"}
{"id": "93d5947d", "body": "", "comments": [{"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "hi guys, I have a pdf with a lot of text that I'd need to transform to json, to make it visible in a dialog"}, {"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "(general terms and conditions)"}, {"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "the headers needs to be inidcated so that I can style them, any idea what would be the best way to do so?"}, {"timstamp": "2017-09-20 13:04", "user": "Pyrrhus666", "body": "SuperTyp, pdf2html, and pray to whatever god you want you have a properly layed out pdf or else it will be garbage."}, {"timstamp": "2017-09-20 13:06", "user": "Pyrrhus666", "body": "or just give a link to the pdf and a checkbox to let people say theyve read it ;)"}, {"timstamp": "2017-09-20 13:08", "user": "SuperTyp", "body": "yeah thats what I told UX too..."}], "label": "other"}
{"id": "0edea28b", "body": "", "comments": [{"timstamp": "03:45", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "03:45", "user": "CssNoob", "body": ""}, {"timstamp": "03:45", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}, {"timstamp": "06:02", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "06:02", "user": "CssNoob", "body": ""}, {"timstamp": "06:02", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}], "label": "other"}
{"id": "93d5954c", "body": "", "comments": [{"timstamp": "2017-08-07 15:52", "user": "brnrnd", "body": "hi all"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": "does anyone hear me?"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": "Have a little question"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": ":)"}, {"timstamp": "2017-08-07 15:54", "user": "xhd", "body": "hi brnrnd :)"}, {"timstamp": "2017-08-07 15:54", "user": "brnrnd", "body": "hi xhd"}, {"timstamp": "2017-08-07 15:54", "user": "xhd", "body": "brnrnd: is it for angularjs or angular? :)"}, {"timstamp": "2017-08-07 15:54", "user": "brnrnd", "body": "question about ng-repeat, so angularjs i guess?"}, {"timstamp": "2017-08-07 15:55", "user": "xhd", "body": "go right ahead. i am old school. so i can probably help if its angular 1.6.6 and before."}, {"timstamp": "2017-08-07 15:55", "user": "brnrnd", "body": "my question is simple"}, {"timstamp": "2017-08-07 15:55", "user": "brnrnd", "body": "working on a contacts list and mail app"}, {"timstamp": "2017-08-07 15:56", "user": "brnrnd", "body": "Is it possible to convert a ng-repeat result in a concatanated variable?"}, {"timstamp": "2017-08-07 15:57", "user": "brnrnd", "body": "For example: a mails ng-repeat into one line text"}, {"timstamp": "2017-08-07 15:57", "user": "xhd", "body": "brnrnd: could you perhaps make a plunker? then I can help you there. you should be able to"}, {"timstamp": "2017-08-07 16:01", "user": "SuperTyp", "body": "brnrnd: sounds trivial, what is the problem?"}, {"timstamp": "2017-08-07 16:19", "user": "brnrnd", "body": "here is the plunker"}, {"timstamp": "2017-08-07 16:19", "user": "brnrnd", "body": ""}], "label": "other"}
{"id": "93d59534", "body": "", "comments": [{"timstamp": "2017-09-06 09:24", "user": "joakimk", "body": "I've set up a global/shared service (singleton) to share some parameters across my components. This contains two variables, id1 and id2, which various components can subscribe to in order to be \"notified\" when either changes"}, {"timstamp": "2017-09-06 09:25", "user": "joakimk", "body": "I want the component to reload/query the API whenever either variable changes. Problem is, on application load, id1 and id2 are initialized and \"broadcast\" to the components asynchronously. So, componentA will be notified of id1 and id2 in some order. How can I ensure that componentA.getData(id1, id2) is only invoked whenever BOTH id1 AND id2 are defined?"}, {"timstamp": "2017-09-06 09:27", "user": "joakimk", "body": "Way I've implemented it, is to set up two subscriptions in componentA.ngOnInit(): this._parameterService.id1.subscribe(data=>{this.getData(this.id1, this.id2);});"}, {"timstamp": "2017-09-06 09:27", "user": "joakimk", "body": "and similarily for id2... So getData(id1, id2) is invoked two times -- the first time with only one of the variables defined..."}, {"timstamp": "2017-09-06 09:28", "user": "joakimk", "body": "btw, the service's id1 and id2 are BehaviorSubjects"}], "label": "other"}
{"id": "8addb271", "body": "", "comments": [{"timstamp": "2017-08-14 23:46", "user": "lawd", "body": "hey all anyone know if it's possible to open an angular 2/4 route in new window and have it grab data from a service"}], "label": "feature"}
{"id": "93d59472", "body": "", "comments": [{"timstamp": "2018-02-12 16:06", "user": "mnms_", "body": "guys is there any way to pass object as param with httpclient?"}, {"timstamp": "2018-02-12 16:07", "user": "SuperTyp", "body": "mnms_: use post and add a payload"}, {"timstamp": "2018-02-12 16:07", "user": "SuperTyp", "body": "mnms_: see"}, {"timstamp": "2018-02-12 16:08", "user": "mnms_", "body": "I need to make a GET request"}, {"timstamp": "2018-02-12 16:08", "user": "mnms_", "body": "SuperTyp: ^^"}, {"timstamp": "2018-02-12 16:08", "user": "icebox", "body": "mnms_: ?"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "mnms_: get da fuck outa here"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "just kidding :D"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: HTTP doesnt support a body in GET requests"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: at least in the sense youre implying"}, {"timstamp": "2018-02-12 16:09", "user": "mnms_", "body": "I know that I would like to pass params as an object to GET request"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "ah"}, {"timstamp": "2018-02-12 16:09", "user": "icebox", "body": "?"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: any example?"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "something like /endpoint?object=something ?"}, {"timstamp": "2018-02-12 16:10", "user": "mnms_", "body": "something like that: .get(url, {params, headers})"}, {"timstamp": "2018-02-12 16:10", "user": "icebox", "body": "mnms_: do you mean you want to transform an object to query params?"}, {"timstamp": "2018-02-12 16:10", "user": "mnms_", "body": "Exactly"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "you want to add query params"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "yes"}, {"timstamp": "2018-02-12 16:11", "user": "mnms_", "body": "It was possible with http but it looks like not with httpclient"}, {"timstamp": "2018-02-12 16:11", "user": "SuperTyp", "body": "something like this he?"}, {"timstamp": "2018-02-12 16:12", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:13", "user": "mnms_", "body": "I would like to create HttpParams from object"}, {"timstamp": "2018-02-12 16:13", "user": "mnms_", "body": "not by using set for each property"}, {"timstamp": "2018-02-12 16:13", "user": "Elarcis", "body": "mnms_: Object.entries()"}, {"timstamp": "2018-02-12 16:16", "user": "icebox", "body": "mnms_: in angular 5 see \"fromObject\" in HttpParams"}, {"timstamp": "2018-02-12 16:16", "user": "mnms_", "body": "Look at the type"}, {"timstamp": "2018-02-12 16:16", "user": "Elarcis", "body": "icebox:"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "mnms_: who are you talking to, and about what?"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "icebox: ah yes, in the constructor options"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "icebox: my bad"}, {"timstamp": "2018-02-12 16:18", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:18", "user": "icebox", "body": "mnms_: hope that helps"}, {"timstamp": "2018-02-12 16:19", "user": "mnms_", "body": "icebox: I seen that and it doesnt allow to put objects which has key of type number"}, {"timstamp": "2018-02-12 16:19", "user": "mnms_", "body": "it expects strings"}, {"timstamp": "2018-02-12 16:20", "user": "icebox", "body": "mnms_: I don't think so... Object.keys(options.fromObject)"}, {"timstamp": "2018-02-12 16:21", "user": "icebox", "body": "mnms_: read the source code... it seems it is what you are asking for"}, {"timstamp": "2018-02-12 16:22", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:25", "user": "mnms_", "body": "icebox Yes.. You right it should work"}, {"timstamp": "2018-02-12 16:26", "user": "icebox", "body": "mnms_: if you provide a minimal working stackblitz reproducing your use case, we may give a look at it"}, {"timstamp": "2018-02-12 16:27", "user": "icebox", "body": "here it works"}, {"timstamp": "2018-02-12 16:28", "user": "mnms_", "body": "icebox:"}], "label": "other"}
{"id": "0ec1e202", "body": "", "comments": [{"timstamp": "16:01", "user": "Booster2ooo", "body": "Is there any way to inject a variable via command line at runtime? For instance to increase the version number of an app ?"}, {"timstamp": "16:02", "user": "stennowork", "body": "Booster2ooo, that sounds really bizarre"}, {"timstamp": "16:03", "user": "stennowork", "body": "do you want to do code hotloading?"}, {"timstamp": "16:03", "user": "Booster2ooo", "body": "why's that ?"}, {"timstamp": "16:03", "user": "stennowork", "body": "is your goal basically to update your code without causing any downtime?"}, {"timstamp": "16:04", "user": "stennowork", "body": "oh wait frontend"}, {"timstamp": "16:04", "user": "ray02", "body": "stennowork: no i think he would just change the name of the project"}, {"timstamp": "16:05", "user": "ray02", "body": "to have project1.0 project.1.1 etc.."}, {"timstamp": "16:05", "user": "ray02", "body": "right ?"}, {"timstamp": "16:05", "user": "Booster2ooo", "body": "My goal is simply to inject the \"build version\" from the CI"}, {"timstamp": "16:11", "user": "ray02", "body": "Booster2ooo: i don't think is possible"}, {"timstamp": "16:11", "user": "stennowork", "body": "for what?"}, {"timstamp": "16:11", "user": "stennowork", "body": "or #buckbot :P"}, {"timstamp": "16:12", "user": "Pyrrhus666", "body": "more likely :)"}, {"timstamp": "16:40", "user": "Booster2ooo", "body": "[16:11:10] <ray02> Booster2ooo: i don't think is possible // thanks, that's my assumption as well"}, {"timstamp": "16:45", "user": "ray02", "body": "Booster2ooo: but if you look the build files they have their custom name all the time"}, {"timstamp": "16:46", "user": "ray02", "body": "Booster2ooo: here we have some script, out of angular cli, that use/ modify that name"}, {"timstamp": "16:46", "user": "Booster2ooo", "body": "ray02: yea but i can't easily link the file name to my build #"}, {"timstamp": "16:47", "user": "Booster2ooo", "body": "the easier would be to create a .js file in the CI process and import this file in the angular project so it get compiled"}], "label": "other"}
{"id": "73af7cd7", "body": "", "comments": [{"timstamp": "10:15", "user": "ray02", "body": "how is going?"}, {"timstamp": "10:18", "user": "storkme", "body": "meh!"}, {"timstamp": "10:18", "user": "ray02", "body": "boring project?"}, {"timstamp": "10:19", "user": "Pyrrhus666", "body": "morning ray02 storkme"}, {"timstamp": "10:19", "user": "ray02", "body": "hey hey Pyrrhus666"}, {"timstamp": "10:21", "user": "storkme", "body": "not even that boring - i'm just very unmotivated"}, {"timstamp": "10:22", "user": "ray02", "body": "storkme: why is that?"}, {"timstamp": "10:22", "user": "storkme", "body": "personal problems"}, {"timstamp": "10:25", "user": "ray02", "body": "storkme: ah oks"}, {"timstamp": "10:26", "user": "ray02", "body": "storkme: sorry to hear that"}, {"timstamp": "10:26", "user": "storkme", "body": "thanks ray02"}, {"timstamp": "10:27", "user": "SargoDarya", "body": "Morning ray02"}, {"timstamp": "10:30", "user": "ray02", "body": "hey hey SargoDarya"}], "label": "other"}
{"id": "93d59522", "body": "", "comments": [{"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "f.email or user.email?"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "Hi, I am looking for some suggestions about angular best practice here. I was creating a form using FormsModule. I used #f = \"ngForm directive for the form, and something like [(ngModel)] = \"user.email\" If I want to check for validation, which"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "state should I go for?"}, {"timstamp": "2017-10-21 17:53", "user": "TRer", "body": "Or should I avoid two-way binding altogether?"}], "label": "other"}
{"id": "93d594c6", "body": "", "comments": [{"timstamp": "2016-05-15 13:07", "user": "CoderAbsolute", "body": "Hi all, I have a question to ask.... Am developing a mobile app using Ionic2 which is based on Angular2"}, {"timstamp": "2016-05-15 13:08", "user": "CoderAbsolute", "body": "When the user taps on a list item, I have a click event fired (i could see the object data being displayed in the console log)."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "But, how do I store this data globally which means if the user navigates to other page, the data should still be available..."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "This is more like a shopping cart"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStore?"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStorage?"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "Right after posting the question, I did manage to google and wrote something like this and it works for me.. I think"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "dishTapped(event, dish) { var dataToStore = JSON.stringify(dish); localStorage.setItem(\"basket\", dataToStore); console.log(dish); }"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "and move it to a service"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Thanks Ashe! =)"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Exactly. I was thinking about Service."}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Sorry, I can paste the code nicely if you prefer?"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "nah it's fine as it is"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "it's just that you'll likely want to split that logic from the component"}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "So, that this service should be accessible from other Pages as well."}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "Let me google the Service explanation and an example..."}, {"timstamp": "2016-05-15 13:19", "user": "CoderAbsolute", "body": "Maybe, another question... Where does the services should reside? In a separate folder?"}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": "I think this link should answer my question.."}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": ""}, {"timstamp": "2016-05-15 13:21", "user": "Ashe", "body": "personally I use something close to method 2 in that page"}, {"timstamp": "2016-05-15 13:22", "user": "Ashe", "body": "or more like a mix of 2 and 3 I suppose"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "I thought to have a dedicated folder as \"shared\" and have \"services\" underneath... which is close to 3"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "If i need to do something about services anywhere in the app I would go to just one folder and should be able to find things easily.. Hopefully in future... Just a thought."}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "dunno, I'd just call it \"shoppingcart\" rather than \"shared\", and components related to the shopping cart in there as well"}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "but these things are often a mix of rationale/taste/project size/etc"}, {"timstamp": "2016-05-15 13:24", "user": "CoderAbsolute", "body": "Right."}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "You know am loving Angular2"}, {"timstamp": "2016-05-15 13:25", "user": "Lecht", "body": "CoderAbsolute: Me as well"}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "This is my first mobile app and JS development and"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "But the local storage method should work in the real app as well right? I mean when my users download the app on their Android or iOS?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "not doing typescript?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "yeah localstorage will work"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "Thanks for answering about the local storage, Ashe!"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "I come from the C# background, I appreciate the concept of typescript."}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "But the tutorial of Ionic2 is in ES6 I think."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "then you can probably even stick to Visual Studio"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Yeah I can do that but am using sublime now...."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "although when getting started it's nicer to avoid letting the IDE do everything for you, at least that way you know what's going on"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Right..."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "So, I have downloaded the ES6 template and started to enhance it."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "Not sure why Ionic documentation is using ES6 but not typescript.."}, {"timstamp": "2016-05-15 13:29", "user": "Ashe", "body": "the syntax would likely be the same"}, {"timstamp": "2016-05-15 13:30", "user": "CoderAbsolute", "body": "Okies.."}], "label": "other"}
{"id": "93d594da", "body": "", "comments": [{"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "How do I passdatafrom one controller to the other in angular 1.6?"}, {"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "I make a json request and I don't want to make the request again from the other controller"}, {"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "angular-datatables makes me create an extra controller to fetch ajax data from the server"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "I'm using a service"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "to fetch the data"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "but calling the service again won't make the request again?="}, {"timstamp": "2017-03-02 06:20", "user": "heartbur1", "body": "what does it mean, calling the service again?"}, {"timstamp": "2017-03-02 06:21", "user": "j4f-shredder_", "body": "I have a dashboard, I use a dashboard controller, now I integrated angular-datatables"}, {"timstamp": "2017-03-02 06:21", "user": "j4f-shredder_", "body": "I need to use the json data to fill the table and to draw a graphic as well"}, {"timstamp": "2017-03-02 06:22", "user": "j4f-shredder_", "body": "I need to know how to be able to use that data for both tasks without making the request twice"}, {"timstamp": "2017-03-02 06:22", "user": "j4f-shredder_", "body": "the graphic and the datatables are both in different controllers"}, {"timstamp": "2017-03-02 06:23", "user": "j4f-shredder_", "body": "not because I want it that way, but because in angular-datatables docssays to create a new controller"}, {"timstamp": "2017-03-02 06:23", "user": "heartbur1", "body": "where are you storing the json data?"}, {"timstamp": "2017-03-02 06:24", "user": "heartbur1", "body": "once you fetched it, where do you keep it?"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "I'm keeping it"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "on the scope of DashboardController"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "dashboardService.getDashboardData() .then(function(dashboardData) { console.log(dashboardData); $scope.global_clicks = dashboardData.global_clicks; $scope.global_users_reached = dashboardData.global_users_reached; $scope.global_money_raised = dashboardData.global_money_raised; $scope.ads_statistics = dashboardData.ads_statistics; },"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "cause I'm a noob"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "I would like to know"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "the best place"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "to store that"}, {"timstamp": "2017-03-02 06:38", "user": "j4f-shredder_", "body": "so, should I do one service to get data from server and one to keep the data in memory?"}, {"timstamp": "2017-03-02 06:39", "user": "j4f-shredder_", "body": "one more question, I want to do real time updates and I will be calling the server every 5 minutes...should I update this service everytime I fetch the data???"}, {"timstamp": "2017-03-02 06:40", "user": "heartburn", "body": "that's entirely up to you. do what best fits in your current architecture."}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "I don't have an architecture, I need some advice to be honest"}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "I just make an ajax request"}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "and diplay a chart and a datatable"}, {"timstamp": "2017-03-02 06:42", "user": "heartburn", "body": "alright, if i were you, here's how i'd organize it."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "i'd create a separate service for every data source."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "say, stuffService."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "stuffService has a method, .fetchStuff"}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "it fetches json from the backend."}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "yes, I already have that method"}, {"timstamp": "2017-03-02 06:44", "user": "heartburn", "body": "every time it gets called, it caches the response as a property. say ._stuff"}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "and it works"}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "that's the part that I don't know how to do it"}, {"timstamp": "2017-03-02 06:44", "user": "heartburn", "body": "and returns a promise."}, {"timstamp": "2017-03-02 06:45", "user": "j4f-shredder_", "body": "I mean, I don't know where to store it, on a simple variable or services have $scope as well?"}, {"timstamp": "2017-03-02 06:45", "user": "heartburn", "body": "then i add a getter method, stuffService.getStuff = function () { return this._stuff; }"}, {"timstamp": "2017-03-02 06:45", "user": "j4f-shredder_", "body": "do you have any example?"}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": ""}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": "that is my actual service code"}, {"timstamp": "2017-03-02 06:46", "user": "heartburn", "body": "then in the controller, i do stuffService.fetchStuff().then(function () { ctrl.stuff = stuffService.getStuff(); })"}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": "ohh I see, in that way you have a unique source of truth"}, {"timstamp": "2017-03-02 06:47", "user": "j4f-shredder_", "body": "could you indicate me on that codeshare how to define a property that holds this data?"}, {"timstamp": "2017-03-02 06:52", "user": "j4f-shredder_", "body": ""}, {"timstamp": "2017-03-02 06:52", "user": "j4f-shredder_", "body": "is that ok?"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "I did it"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "it works"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "thanks"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "xD"}], "label": "other"}
{"id": "93d594dd", "body": "", "comments": [{"timstamp": "2017-02-17 12:34", "user": "rand0m", "body": "I hope lenovo mobile division fails badly"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "ThinkPad X1 Carbon is nice"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "but it is not mobile :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "I mean mobile mobile"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "aka Motorola"}, {"timstamp": "2017-02-17 12:36", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "since they bought the brand, the sales weren't that good. The company ceo said theyre rebuilding the team so next year they're expecting to break even"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "really I see only two smartphones: by apple or by google"}, {"timstamp": "2017-02-17 12:37", "user": "rand0m", "body": "but theyre software manufacturers :o"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "iphone or pixel :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "I still use Xperia Z3"}, {"timstamp": "2017-02-17 12:38", "user": "icebox", "body": "if you choose another option, good luck :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "still kicks iphone7s ass today"}, {"timstamp": "2017-02-17 12:39", "user": "Pyrrhus666", "body": "icebox, nah, my $150 chinaphone with lineageOS does fine ;)"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "Pyrrhus666: ok... you are lucky :)"}, {"timstamp": "2017-02-17 12:39", "user": "rand0m", "body": "check this icebox:"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "rand0m: nowadays a smartphone is not only \"specs\""}, {"timstamp": "2017-02-17 12:40", "user": "Pyrrhus666", "body": "icebox, nah, just pick a phone that has a stable lineageOS build and buy it. its all good :)"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "durability? software? support?"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "what is it"}, {"timstamp": "2017-02-17 12:40", "user": "icebox", "body": "it doesn't make sense comparing (only) those details"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "idk"}, {"timstamp": "2017-02-17 12:41", "user": "icebox", "body": "off for a break... see you later"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "make sense to me, I need faster processor, more ram, good screen size and display (dpi), longer battery and connectivity"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "my os of choice would be android everytime"}, {"timstamp": "2017-02-17 12:41", "user": "Pyrrhus666", "body": "support from vendors generally always sucks. hence lineageOS :)"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "Pyrrhus666, I can't use lineage :("}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "well I could, but only older versions"}, {"timstamp": "2017-02-17 12:42", "user": "Pyrrhus666", "body": "rand0m, buy a supported phone then ;)"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "rand0m: use case? imagine the difference of user experience between monster-in-law of mine and myself? :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "monster in law???"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "do you mean mother in law?"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "lolol"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "can't afford to atm Pyrrhus666"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "nougat comes with vulkan support baked in and my phones doesnt support that"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "and i've heard that there would be issues"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "I have a question; not offtopic I swear"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "you'll see a loading page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "I've used to see that on facebook and some other sites"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "I see a login page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "is that react specific?"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "oh you must be logged in Pyrrhus666"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "rand0m, ah, cant help you there, dont do all that shite."}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "basically before content is loaded onto the page, the page has placeholder divs"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "where the content gets loaded"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "and the placeholder shimmers like loading effect"}, {"timstamp": "2017-02-17 12:46", "user": "rand0m", "body": "linked in is not shite. is it?"}, {"timstamp": "2017-02-17 12:46", "user": "Pyrrhus666", "body": "its all shite to me, that social crap"}, {"timstamp": "2017-02-17 12:47", "user": "Pyrrhus666", "body": "rand0m, btw there seem to be unofficial lineage 14.1 builds around for your z3"}, {"timstamp": "2017-02-17 12:47", "user": "rand0m", "body": ":/"}, {"timstamp": "2017-02-17 12:48", "user": "rand0m", "body": "dont want to use unofficial builds"}, {"timstamp": "2017-02-17 12:48", "user": "Pyrrhus666", "body": "rand0m, I used unofficial cyanogenmods for years, most are fine, but read the reviews on xda ;)"}, {"timstamp": "2017-02-17 12:49", "user": "Pyrrhus666", "body": "most had better support than from vendors."}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "I used to use XDA 24/7 when I bought my first gti9000"}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "galaxy s"}, {"timstamp": "2017-02-17 12:50", "user": "Pyrrhus666", "body": "I started there when I bought an xperia sola. sony sucked so hard with android 5 I took to cyanogen. when I gave the phone away, it was happily running android 6 :)"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "sony did improve a lot since xperia z series"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "they have their own dev team in sweden for sony asop project"}, {"timstamp": "2017-02-17 12:55", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "rand0m, I have trust issues after being let down by vendors. also, I hate vendor roms with all their crap."}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "sony themselves will never release a lineage mod"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "your source should be"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "(but its not there, yet)"}, {"timstamp": "2017-02-17 12:56", "user": "rand0m", "body": ":( yeah"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "you know the feeing you have when you start a new job"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and you're the only guy who specialises in the tech the project is using"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and everyone around you sees you like you're come kind of freak coding god"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "thats me now :D"}, {"timstamp": "2017-02-17 12:57", "user": "Pyrrhus666", "body": "never had that, there were always other coders around ;)"}, {"timstamp": "2017-02-17 12:58", "user": "rand0m", "body": ":("}, {"timstamp": "2017-02-17 13:00", "user": "Pyrrhus666", "body": "rand0m, btw this seems stable and supported (but old)"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "Version: 5.1.x"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "LOL"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "I run 6.0.1"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I know :) but then again, as long as it works and is stable, I wouldnt really mind. seems the 14.1 build is very much a work in progress"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I run 7.1.1 :P"}, {"timstamp": "2017-02-17 13:02", "user": "rand0m", "body": "I still havent come across a device which I think would be nice for me"}, {"timstamp": "2017-02-17 13:03", "user": "Pyrrhus666", "body": "rand0m, I dont really care. I just need lineage, an sd card of 64GB or more, and enough mem and cpu to run candycrush. the rest is bonus."}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": ":|"}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": "you kidding?"}, {"timstamp": "2017-02-17 13:04", "user": "Pyrrhus666", "body": "currently on a xiaomi redmi note 3 special edition, picked up for $150, 3GB mem, 32GB flash, 64GB sd, 4g."}, {"timstamp": "2017-02-17 13:05", "user": "Elarcis", "body": "Pyrrhus666: \"CyenogenMod\""}, {"timstamp": "2017-02-17 13:05", "user": "Pyrrhus666", "body": "rand0m, not kidding. why would I want more as long as it does what I want ?"}, {"timstamp": "2017-02-17 13:05", "user": "rand0m", "body": "didn't think you as someone who plays cc"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "rand0m, everybody plays cc."}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "else theyre liars."}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: Got a OnePlus One for 2.5 years now. Still kickin', real pleasure to use, very solid and reliable, battery's still very good"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I never played CC :D"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, those where nice :)"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, liar !"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "me either"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "more liars !"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I avoid King's games as much as possible"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "rand0m: *neither"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "also, why trust chinese companies?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "I play them all. I just give them no permission to do anything :)"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: why trust any company?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "rand0m, all phones are chinese"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "yeah"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "but"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: for all I know, american phonemaker are even less reliable than chinese ones :D"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "buy them there just means its cheaper for me :)"}, {"timstamp": "2017-02-17 13:08", "user": "Elarcis", "body": "Pyrrhus666: it just means I wanted a good first smartphone :D"}, {"timstamp": "2017-02-17 13:08", "user": "Pyrrhus666", "body": "Elarcis, the newer ones are also nice. and run lineage :)"}, {"timstamp": "2017-02-17 13:09", "user": "Pyrrhus666", "body": "Elarcis, been on xiaomi for3 or 4 years now. no ragrets."}, {"timstamp": "2017-02-17 13:10", "user": "Elarcis", "body": "Pyrrhus666: what is lineage?"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "its the fork of cynaogenmod"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "cmod split into 2 companies"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaah"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "lineage and some other name"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "and cyno is dead"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "lineageOS is a continuation of the original cyanogenMOD (not cyanogenOS)"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "by the original guy, even."}, {"timstamp": "2017-02-17 13:14", "user": "Elarcis", "body": "CyanogenOS is dead?"}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "Elarcis, al but, yes."}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "*all"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: dammit, this explains why I haven't had any update in a while"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: will switch to LineageOS then"}, {"timstamp": "2017-02-17 13:16", "user": "Elarcis", "body": "Pyrrhus666: as long as it has adaptative light coloration, I'm game!"}, {"timstamp": "2017-02-17 13:16", "user": "Pyrrhus666", "body": "Elarcis, ah, you were on cyanogen ?"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "Pyrrhus666: yiss"}, {"timstamp": "2017-02-17 13:17", "user": "Pyrrhus666", "body": "Elarcis, 14.1 has that for all models, I think. mine too."}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "CyanogenMod, then Oxygen, then CyanogenOS"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "OxygenOS sucks as hell, it's like almost barebone Android"}, {"timstamp": "2017-02-17 13:18", "user": "rand0m", "body": "you should try this:"}, {"timstamp": "2017-02-17 13:19", "user": "Pyrrhus666", "body": "Elarcis,"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "honestly I don't care much about free software on my phone, since I'm using Google services extensively"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "Pyrrhus666: Yes, I've seen that :)"}, {"timstamp": "2017-02-17 13:21", "user": "Pyrrhus666", "body": "Elarcis, I dont really care either, I just dont want vendor bloat. and lineage has better app privacy management"}, {"timstamp": "2017-02-17 13:21", "user": "Elarcis", "body": "^"}], "label": "other"}
{"id": "8addb275", "body": "", "comments": [{"timstamp": "2017-03-23 05:42", "user": "Anish__", "body": "Is there any provision to built in Auth functionality in Angular 2?"}], "label": "feature"}
{"id": "93d594c5", "body": "", "comments": [{"timstamp": "2016-05-20 19:01", "user": "Hravula", "body": "hi there!"}, {"timstamp": "2016-05-20 19:01", "user": "Hravula", "body": "can someone help if there is an equivalent of $.active of jQuery in angularJS?"}], "label": "other"}
{"id": "93d5954d", "body": "", "comments": [{"timstamp": "2017-06-29 16:12", "user": "SargoDarya", "body": "I could need a designer for my game xD"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: I have to warn you: I use Comic Sans everywhere"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: So we have a deal?"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: damn, my repellant failed"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: Jokes on you, I'm a firm believer in dogecoin. Comic sans is my favorite font!"}, {"timstamp": "2017-06-29 16:16", "user": "Elarcis", "body": "zomg: sounds like our computation api"}], "label": "other"}
{"id": "93d59553", "body": "", "comments": [{"timstamp": "2017-08-31 18:07", "user": "Elarcis", "body": "I want to murder people. Can one of you step forward please?"}, {"timstamp": "2017-08-31 18:18", "user": "pheurton", "body": "but I don't want to get up"}], "label": "other"}
{"id": "93d594b3", "body": "", "comments": [{"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Is this really the best way to create my dto with the date?"}, {"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Looks a bit \"inconvenient\""}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "so hard :/"}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "i don't understand these observable things."}, {"timstamp": "2019-01-22 14:23", "user": "Paradisee", "body": "they said to make an Interface, but how can i make an interface? i mean, based on what? i just wanna see the xml i gets from the url. (for the moment)"}, {"timstamp": "2019-01-22 14:23", "user": "pupskuchen", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:26", "user": "Elarcis", "body": "Paradisee: you don't need an interface per se, it's just a helpful element to help the compiler to know the structure of what you got (should just be a string anyway since it's XML)"}, {"timstamp": "2019-01-22 14:26", "user": "Paradisee", "body": "ok, but it wants an observable anyway."}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": "that's my service"}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "i have to use this service from my main app."}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "to show the output somehow"}, {"timstamp": "2019-01-22 14:29", "user": "exonity01", "body": "myService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i don't have RssFeedService in my app."}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i just included it"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "import { RssFeedService } from './rss-feed.service';"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "but the instance it's not present yet."}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": "that'is the app.component"}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": "^"}, {"timstamp": "2019-01-22 14:35", "user": "exonity01", "body": "this.rssFeedService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:42", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:47", "user": "SuperTyp", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": "SuperTyp: please format your flippin code"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": ":P"}, {"timstamp": "2019-01-22 14:48", "user": "SuperTyp", "body": ":D"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "I pressed tab and the textarea lost focus"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: also don't show the use of 'any' to newcomers, please"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "right"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: it's enough of a bad practice without people using it in examples"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: you can however use 'unknown'"}, {"timstamp": "2019-01-22 14:50", "user": "SuperTyp", "body": "nice didn't know that"}, {"timstamp": "2019-01-22 14:52", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:55", "user": "Elarcis", "body": "Paradisee: congrats, your server is blocking requests coming from web pages outside of its domain whitelist"}, {"timstamp": "2019-01-22 14:55", "user": "Paradisee", "body": "mmm"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's a server issue though, nothing much you can do from Angular"}, {"timstamp": "2019-01-22 14:56", "user": "Paradisee", "body": "but im able to see the xml if i go to the page"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's because you're making a \"root\" GET request, but requests made from JS are identified through some domain (in your case localhost), and the server blocks that"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: when you do a \"root\" GET request, it gets the domain of the URL you're calling (feed.com)"}, {"timstamp": "2019-01-22 14:57", "user": "Elarcis", "body": "Paradisee: if you were making the request from a web page located on feed.com, it would work"}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "how do i solve the problem?"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "Changing the server rules ;-)"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "On server side."}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "its not mine."}, {"timstamp": "2019-01-22 14:58", "user": "Elarcis", "body": "Paradisee: that eiter means that you must configure the RSS server to accept requests from other domains, or if you can't configure it (e.g. it's not yours), you need a back-end app to do the request for you and act as a proxy so you can call it from Angular"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "So you can do nothing."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: they can"}, {"timstamp": "2019-01-22 14:59", "user": "pupskuchen", "body": "Elarcis: not feed.com, url.com"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Who can?"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "pupskuchen: sorry"}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "url.com is a dummy one."}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "i can't say the url here in chat."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: see my answer. CORS only applies to JS scripts located on web pages, not on regular apps like back-end"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Yes, but you post the cors error in your log"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "Paradisee: I had figured that out"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "me too :D"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Elarcis: I know his problem"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Thats why I said, it's a server side \"problem\""}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "Paradisee: you could try using the angular CLI proxy"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "with changeOrigin"}, {"timstamp": "2019-01-22 15:00", "user": "Paradisee", "body": "isnt there a way to see if this is the actual problem?"}, {"timstamp": "2019-01-22 15:00", "user": "Elarcis", "body": "exonity01: yes, if the server isn't theirs they have to proxy through a server-app of their own, ergo they can do something about it"}, {"timstamp": "2019-01-22 15:01", "user": "exonity01", "body": "Ah okay"}, {"timstamp": "2019-01-22 15:02", "user": "Paradisee", "body": "i just saw the xml, and it has an empty line as first line. and the xml isn't valid that way. could be that the problem?"}, {"timstamp": "2019-01-22 15:04", "user": "exonity01", "body": ""}, {"timstamp": "2019-01-22 15:11", "user": "Elarcis", "body": "Paradisee: no, your problem resides in the request, you're not even up to the point where your client can read the response"}, {"timstamp": "2019-01-22 15:22", "user": "Paradisee", "body": "Elarcis: so its my problem?"}, {"timstamp": "2019-01-22 15:24", "user": "Elarcis", "body": "Paradisee: CORS is your problem, yes"}, {"timstamp": "2019-01-22 15:25", "user": "Elarcis", "body": "Paradisee: but don't worry, it's bitten almost every beginner, even though it's a fondamental security aspect of webdev"}, {"timstamp": "2019-01-22 15:25", "user": "Paradisee", "body": "Elarcis: id like to know how to solve it too"}, {"timstamp": "2019-01-22 15:27", "user": "Elarcis", "body": "Paradisee: since you don't own the target server: you need a back-end, an app that runs on the same server that will be delivering your app. That back-end will act as a proxy to get that RSS. Regular out-of-browser apps aren't subject to CORS policies, so that will work. Your Angular app would then request that RSS through your back-end"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: yes, that might be quite an overhead. Is there another solution than a back-end proxy? I'm very afraid there isn'tc"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: mind you, that's not specific to AngularJS. You could try in VanillaJS and would run into the same issue"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "*ANgular, not AngularJS"}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "can't i just ask to the server's owner about this problem?"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: oh well if you have a mean of contact, you can indeed ask"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: but it'd be their decision that matters in the end"}, {"timstamp": "2019-01-22 15:29", "user": "SargoDarya", "body": "Paradisee: If you don't have access to the application running on the server you will have a problem with CORS unless running a local proxy."}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "yes i can, but i don't really know what to ask :D"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: ask them if it's possible to tweak their RSS's CORS settings so that other domains can request it"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: it should be done on the web server providing the RSS endpoint"}], "label": "other"}
{"id": "93d5951c", "body": "", "comments": [{"timstamp": "2018-10-09 16:37", "user": "Snugglebash", "body": "Hello all. I am trying to deploy an Angular 4 app. as part of the specs it needs to support IE 11... all tested UAT so far so good. I get to prod and suddenly it spits out SCRIPT1010: Expected identifier, 4 times. Now the Ops admin who has some higher permissioning can load it fine, the rest of us cannot load. Any ideas?"}], "label": "other"}
{"id": "93d594df", "body": "", "comments": [{"timstamp": "2019-02-07 13:26", "user": "d[10]", "body": "HEHAEeiuahuie"}, {"timstamp": "2019-02-07 13:27", "user": "ray02", "body": "ahah"}, {"timstamp": "2019-02-07 13:27", "user": "ray02", "body": "let's throws all away :d"}], "label": "other"}
{"id": "93d594cc", "body": "", "comments": [{"timstamp": "2017-04-24 11:27", "user": "icebox", "body": "E1arcis: hey"}, {"timstamp": "2017-04-24 11:27", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2017-04-24 11:27", "user": "Pyrrhus666", "body": "icebox, hey ! werent you supposed to be off until wednesday ?"}, {"timstamp": "2017-04-24 11:28", "user": "icebox", "body": "yep... indeed I am at sea house :)"}, {"timstamp": "2017-04-24 11:28", "user": "icebox", "body": "but at the moment it is my \"single\" time :)"}, {"timstamp": "2017-04-24 11:29", "user": "Pyrrhus666", "body": "icebox, ah ok :) and you spend single time like youre at work ? tsk ;)"}, {"timstamp": "2017-04-24 11:29", "user": "icebox", "body": "well... just to see if E1arcis was ok :)"}, {"timstamp": "2017-04-24 11:29", "user": "SargoDarya", "body": "Oh hey, icebox. Awaken from the dead?"}, {"timstamp": "2017-04-24 11:29", "user": "Pyrrhus666", "body": "icebox, hehe :)"}, {"timstamp": "2017-04-24 11:30", "user": "icebox", "body": "Pyrrhus666: well... played chess until now, in a few minutes I need to go, because the \"boss\" gave me a few urgent \"tasks\""}, {"timstamp": "2017-04-24 11:30", "user": "icebox", "body": "SargoDarya: hey"}, {"timstamp": "2017-04-24 11:32", "user": "Pyrrhus666", "body": "icebox, enjoy your precious single time ;)"}, {"timstamp": "2017-04-24 11:35", "user": "E1arcis", "body": "icebox: I'm touched, really :)"}, {"timstamp": "2017-04-24 11:35", "user": "E1arcis", "body": "icebox: I'm fine, and you?"}, {"timstamp": "2017-04-24 12:17", "user": "icebox", "body": "Elarc1s: have a bath in the sun :)"}, {"timstamp": "2017-04-24 12:17", "user": "icebox", "body": "tasks completed"}, {"timstamp": "2017-04-24 12:19", "user": "icebox", "body": "OT: Introducing a faster BBC News front page -"}, {"timstamp": "2017-04-24 12:34", "user": "iprime", "body": "icebox, meh, that's react :| :D"}], "label": "other"}
{"id": "93d59500", "body": "", "comments": [{"timstamp": "2018-08-09 15:10", "user": "CssNoob", "body": "any example code for this problem?"}, {"timstamp": "2018-08-09 16:11", "user": "Elarcis", "body": "CssNoob: the goal of that exercice is you figuring it out by yourselves"}, {"timstamp": "2018-08-09 16:24", "user": "SargoDarya", "body": "Elarcis: also Math.floor"}, {"timstamp": "2018-08-09 16:25", "user": "Elarcis", "body": "SargoDarya: Math.floor?"}, {"timstamp": "2018-08-09 16:25", "user": "SargoDarya", "body": "Elarcis: Never heard of Math.floor()?"}, {"timstamp": "2018-08-09 16:26", "user": "Elarcis", "body": "SargoDarya: I did, I just dont get how its relevant here :P"}, {"timstamp": "2018-08-09 16:29", "user": "Elarcis", "body": "CssNoob: if that might comfort you, I solved it. Show you made some efforts, and well share advices"}, {"timstamp": "2018-08-09 16:34", "user": "Elarcis", "body": "CssNoob: break it into small pieces. First, how to count how many of a bill is there in a given amount? then how much is left? then how to pass whats left to the next bill? then start again, while keeping the previous quantities? then showing the result? then showing an error if there is money left? then... oh wait, youre done."}, {"timstamp": "2018-08-09 16:53", "user": "CssNoob", "body": "Elarcis"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: well you have a nice start, dont give up!"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: I hope you didnt spend the whole hour on it, though :P"}, {"timstamp": "2018-08-09 17:21", "user": "CssNoob", "body": "I'm stuck"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: what, youre stuck?"}, {"timstamp": "2018-08-09 17:22", "user": "CssNoob", "body": "inputting a value"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: you have your amount of money, you have checked that its a number, it works"}, {"timstamp": "2018-08-09 17:24", "user": "Elarcis", "body": "CssNoob: what is wrong with your input?"}, {"timstamp": "2018-08-09 17:25", "user": "CssNoob", "body": "I don't know how to input by the type of bills"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "should I input like 2,500 Righ away? or like 1,000, and 500"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "for 1,500"}, {"timstamp": "2018-08-09 17:26", "user": "Elarcis", "body": "CssNoob: reread the exercice. What is asked is to convert a single amount into a list of bills and their quantities."}, {"timstamp": "2018-08-09 17:27", "user": "CssNoob", "body": "1,550 right?"}, {"timstamp": "2018-08-09 17:28", "user": "CssNoob", "body": "or I need to input a new integer?"}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its even written in the example. You give your code 1550, it spits you back a result, no matter the format. What matters is that the results logical."}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its an example... whatever is fine, it could be 3 for all you know"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: if your teacher/website checks your work itll pass a list of random values to test it"}, {"timstamp": "2018-08-09 17:29", "user": "CssNoob", "body": "Elarcis What do you mean ' 3 ' ?"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: well how to breakdown $3 into bills of $1000, $500, $100 and $50?"}, {"timstamp": "2018-08-09 17:30", "user": "CssNoob", "body": "so the program is breakdown the given total number ?"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "CssNoob: What's the result of 0.1 + 0.2?"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob: yes... if you input 1550, it spits out 1000 - 1 500 - 1 50 - 1"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "SargoDarya: that is not how you test for humanity."}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "and if it's not given from the type of bills show error"}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "hmm"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "Elarcis: :("}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob:"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "If the amount cant be breakdown into the available bills show an error message."}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "available bills = type of bills"}, {"timstamp": "2018-08-09 17:32", "user": "Elarcis", "body": "CssNoob: I suppose so, yes"}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "so my sample number is 1550"}, {"timstamp": "2018-08-09 17:33", "user": "Elarcis", "body": "CssNoob: what language are you mainly speaking?"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "Denomination of bills. There are 1000$ bills, 500$, 100$ and 50$."}, {"timstamp": "2018-08-09 17:33", "user": "CssNoob", "body": "I'm from philippines. My bad for my grammar"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "What is the least amount of bills you need for 2000$"}, {"timstamp": "2018-08-09 17:34", "user": "CssNoob", "body": "SargoDarya Depends?"}, {"timstamp": "2018-08-09 17:34", "user": "SargoDarya", "body": ":|"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: depending on the bills given in the exercice"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: there is only one solution."}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: _least_ amount of bills"}, {"timstamp": "2018-08-09 17:35", "user": "SargoDarya", "body": "Elarcis: Depends on the definition of least I guess xD"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "so for 2000$ . I can I put a const value like 1,000 and 1,000 ,500, 500"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "can I*"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "I Mean"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "1,000 , 500 , 500"}, {"timstamp": "2018-08-09 17:37", "user": "Elarcis", "body": "CssNoob: that would be a wrong answer... 2 bills of $1,000 is the least amount of bills needed."}, {"timstamp": "2018-08-09 17:37", "user": "CssNoob", "body": "dammit"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "CssNoob: How often does 10 fit into 45?"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "10, 10, 10 and 5?"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "..."}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh boy"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh man"}, {"timstamp": "2018-08-09 17:39", "user": "SargoDarya", "body": "Yupp, I'm out for today. Gotta leave before the storm."}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "SargoDarya thanks"}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "take care :)"}, {"timstamp": "2018-08-09 17:41", "user": "SargoDarya", "body": "The answer to the question of how often 10 fits in 45 is 4 times, because 4 * 10 = 40 but 5 * 10 would be 50 so that's too much. It leaves you with the rest 5."}, {"timstamp": "2018-08-09 17:41", "user": "CssNoob", "body": ":)"}, {"timstamp": "2018-08-09 18:00", "user": "Elarcis", "body": "CssNoob: I was bored so I rewrote the exercice in a (I hope) clearer way"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "ELarcis"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "oh man, you went out?"}], "label": "other"}
{"id": "93d59549", "body": "", "comments": [{"timstamp": "2017-07-28 19:59", "user": "aleek", "body": "hello! After 15 years of kernel developing, I moved back to developing web apps. Currently learning angular4. I loved the instand developing of typescript modules/components and see the result immediately. Question is - is it angular specyfic, or is this some kind of external framework, I can use to develop my own, typescipt-based library?"}, {"timstamp": "2017-07-28 20:01", "user": "zomg_", "body": "aleek: you get this with pretty much any web based stack"}, {"timstamp": "2017-07-28 20:01", "user": "bs0d", "body": "aleek so how is the transition from low-level to high-level development feels?"}, {"timstamp": "2017-07-28 20:01", "user": "zomg_", "body": "there might be a small compile step involved (ie. building TS into JS) but it's near instant compared to something like kernel dev I'm sure :D"}, {"timstamp": "2017-07-28 20:04", "user": "aleek", "body": "bs0d: It sucks as f***. I used to develop web apps around 2003, when php5 was shiny new tool, eveyone used flash, and javascript was just cool addition to make snow on your website. Now, there's clouds everywhere, whole business logic is on client side, and JS in general is so powefull... I LOVE IT :)"}, {"timstamp": "2017-07-28 20:04", "user": "aleek", "body": "But it's nice to play with something that has graphical interface though"}, {"timstamp": "2017-07-28 20:05", "user": "bs0d", "body": "aleek yeah, I started using Angular 2 recently myself, and am amazed by the possibilities of it"}, {"timstamp": "2017-07-28 20:08", "user": "aleek", "body": "zomg_: can you provide some examples? I know, that angular (or to be specyfic, `ng serve`) uses some extra tools/libraries to make it work"}, {"timstamp": "2017-07-28 20:09", "user": "aleek", "body": "also there is some cool tool, that translates javascipt exception stacks into typescript file line number"}, {"timstamp": "2017-07-28 20:10", "user": "zomg_", "body": "well these days \"modern\" JS projects tend to use tools like webpack"}, {"timstamp": "2017-07-28 20:10", "user": "zomg_", "body": "that bundles and compiles stuff for you, and can \"watch\" files so the build runs automatically etc."}, {"timstamp": "2017-07-28 20:12", "user": "bs0d", "body": "aleek: a quickstart example using angular-cli"}, {"timstamp": "2017-07-28 20:19", "user": "aleek", "body": "bs0d: great, thanks"}, {"timstamp": "2017-07-28 20:48", "user": "bs0d", "body": "a stupid question: filtering an Observable<Array<Record>>, why is filter argument of type Record[]? I expected it to be just Record, because filter is applied to every single element in an array. What am I missing here?"}, {"timstamp": "2017-07-28 20:48", "user": "zomg_", "body": "Observable<T>"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "filter(param : T)"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "see the issue?"}, {"timstamp": "2017-07-28 20:49", "user": "SargoDarya", "body": "Observable<Record[]> is probably what you want I guess"}, {"timstamp": "2017-07-28 20:49", "user": "SargoDarya", "body": "Also, sup zomg_?"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "SargoDarya: isn't that the same as Array<Record> though"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "iirc anyway"}, {"timstamp": "2017-07-28 20:50", "user": "SargoDarya", "body": "zomg_: not too sure actually"}, {"timstamp": "2017-07-28 20:50", "user": "zomg_", "body": "I recall at least in Flow T[] and Array<T> are same :)"}, {"timstamp": "2017-07-28 20:50", "user": "bs0d", "body": "I think they are the same"}, {"timstamp": "2017-07-28 20:52", "user": "bs0d", "body": "but still ... I changed it to Observable<Record[]> at it behaves exactly the same manner"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "yes the issue is that you have Observable<T>"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "where the filter function is filter(v : T)"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "what is T in your case going to be?"}, {"timstamp": "2017-07-28 20:54", "user": "bs0d", "body": "T will be Record[]"}, {"timstamp": "2017-07-28 20:54", "user": "zomg_", "body": "so see the problem now? :)"}, {"timstamp": "2017-07-28 20:54", "user": "bs0d", "body": "hmm, so if I wish to filter items having specific id property, I cannot use filter for this purpose, I need something else?"}, {"timstamp": "2017-07-28 20:55", "user": "zomg_", "body": "I don't know how it's supposed to be done with observables tbh but you could just filter the array inside the filter function again"}, {"timstamp": "2017-07-28 20:55", "user": "zomg_", "body": "maybe"}, {"timstamp": "2017-07-28 20:55", "user": "bs0d", "body": "zomg_: this.dataService.records.filter(x => x.id == 0) tells me Property id doesn't exist on type Record[]"}, {"timstamp": "2017-07-28 20:56", "user": "zomg_", "body": "perhaps flatMap might be the way to go"}, {"timstamp": "2017-07-28 20:56", "user": "zomg_", "body": "eg. records.flatMap(x => x.filter(y => y.id == 0))"}, {"timstamp": "2017-07-28 20:58", "user": "bs0d", "body": "zomg_ I'll give it a try"}, {"timstamp": "2017-07-28 21:00", "user": "bs0d", "body": "zomg_ it worked like magic! Thanks a lot. Btw, what is the use of filter if it filters not the elements of a container, but the container type itself?"}, {"timstamp": "2017-07-28 21:02", "user": "bs0d", "body": "zomg_ I was assuming that if I am filtering a container, the filter is applied to each of its elements. And I think this is the case for regular arrays, not obseervables"}, {"timstamp": "2017-07-28 21:02", "user": "zomg_", "body": "probably more useful for cases where the observable isn't an array"}, {"timstamp": "2017-07-28 21:03", "user": "zomg_", "body": "it seems a bit odd for the observable to be an array tbh :P"}, {"timstamp": "2017-07-28 21:03", "user": "sadme", "body": "it's not"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "isn't observable more for values over time"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "why do you have arrays over time?"}, {"timstamp": "2017-07-28 21:04", "user": "sadme", "body": "grabbing a collection of items from an http resource, for example"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "why not use a promise for that if it's a one time grab?"}, {"timstamp": "2017-07-28 21:05", "user": "bs0d", "body": "zomg_ in my case, I have a set of records which come from a web service. Users edit entries, delete/remove entries, and other components track these changes"}, {"timstamp": "2017-07-28 21:05", "user": "sadme", "body": "because it might not always be a one time grab :)"}, {"timstamp": "2017-07-28 21:06", "user": "sadme", "body": "also, promises aren't cancelable, so you shouldn't really use them for http requests"}, {"timstamp": "2017-07-28 21:06", "user": "zomg_", "body": "I wonder why they used it for fetch then"}, {"timstamp": "2017-07-28 21:06", "user": "sadme", "body": "because observable isn't part of ecmascript yet"}, {"timstamp": "2017-07-28 21:06", "user": "bs0d", "body": "Angular tutorial should be re-written to not to use promises"}, {"timstamp": "2017-07-28 21:08", "user": "bs0d", "body": "could be* - I was way too categoric"}, {"timstamp": "2017-07-28 21:08", "user": "Violinist", "body": "sadme,"}, {"timstamp": "2017-07-28 21:12", "user": "zomg_", "body": "sadme: tbh it seems semantically wrong to use an observable for something which only ever returns a single value like an http request :P"}, {"timstamp": "2017-07-28 21:13", "user": "sadme", "body": "why?"}, {"timstamp": "2017-07-28 21:14", "user": "zomg_", "body": "because an observable implies it may return multiple values"}, {"timstamp": "2017-07-28 21:14", "user": "sadme", "body": "no it doesn't"}, {"timstamp": "2017-07-28 21:14", "user": "zomg_", "body": "how do I know how many values will it produce?"}, {"timstamp": "2017-07-28 21:14", "user": "bs0d", "body": "zomg_ observables are used to subscribe to async requests, what, in your opinion, would be more proper way to react to async http server responses returning a single value?"}, {"timstamp": "2017-07-28 21:15", "user": "sadme", "body": "how do you know if a promise will resolve"}, {"timstamp": "2017-07-28 21:15", "user": "zomg_", "body": "sadme: how do you know if an observable will ever produce any values? :)"}, {"timstamp": "2017-07-28 21:15", "user": "sadme", "body": "indeed"}, {"timstamp": "2017-07-28 21:16", "user": "zomg_", "body": "bs0d: imo it would be a promise since it'll always produce just one result"}, {"timstamp": "2017-07-28 21:16", "user": "zomg_", "body": "with observables there's no clear distinction between those that return a single result and those which return multiple values"}, {"timstamp": "2017-07-28 21:17", "user": "zomg_", "body": "with http requests in particular it seems there would be some confusion between streaming and non streaming responses"}, {"timstamp": "2017-07-28 21:17", "user": "sadme", "body": "observables from http methods return a single value"}, {"timstamp": "2017-07-28 21:17", "user": "Violinist", "body": "std::stream"}, {"timstamp": "2017-07-28 21:18", "user": "bs0d", "body": "speaking about observables, is it possible to do a two-way data binding to an observable?"}, {"timstamp": "2017-07-28 21:18", "user": "Violinist", "body": "s << asdfasdfasdf;"}, {"timstamp": "2017-07-28 21:19", "user": "sadme", "body": "you can have a Subject, if that's what you mean"}, {"timstamp": "2017-07-28 21:19", "user": "Violinist", "body": "cant u just assign it to the scope model"}, {"timstamp": "2017-07-28 21:19", "user": "Violinist", "body": "the data u get from observable"}, {"timstamp": "2017-07-28 21:20", "user": "zomg_", "body": "sadme: you only know it returns a single value because the docs say so :)"}, {"timstamp": "2017-07-28 21:21", "user": "sadme", "body": "generally speaking, you only know how any observable behaves based on the documentation of the function which generates said observable.."}, {"timstamp": "2017-07-28 21:23", "user": "Violinist", "body": "documentation belongs in the trash"}, {"timstamp": "2017-07-28 21:23", "user": "Violinist", "body": "burn all the books"}, {"timstamp": "2017-07-28 21:24", "user": "Violinist", "body": "burn the priest"}, {"timstamp": "2017-07-28 21:24", "user": "zomg_", "body": "sadme: yeah that's why it's confusing semantically - why can you not use a type which clearly communicates the behavior?"}, {"timstamp": "2017-07-28 21:25", "user": "sadme", "body": "i mentioned cancellations before, that's a pretty good reason"}, {"timstamp": "2017-07-28 21:25", "user": "sadme", "body": "also observables are powerful composable objects, not just \"a value delivered asynchronously\""}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "ya u can make ur own observable class"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "then u can see that u can set it to anything u want"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "its actually kinda simple"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "its like 2 or 3 methods"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "about 15 lines of code"}, {"timstamp": "2017-07-28 21:30", "user": "bs0d", "body": "sadme what does a Subject do?"}, {"timstamp": "2017-07-28 21:31", "user": "bs0d", "body": "sadme I have a selectedRecord which comes from ngrx/store in the form of an observable. I need to display the items of this object in a form and let the user edit these values. Do I need a Subject for this?"}, {"timstamp": "2017-07-28 21:32", "user": "sadme", "body": "what kind of form are you using, reactive or model driven?"}, {"timstamp": "2017-07-28 21:32", "user": "sadme", "body": "a subject is both an observable and a subscriber, so it emits values and can receive them"}, {"timstamp": "2017-07-28 21:34", "user": "bs0d", "body": "sadme model driven forms, every input corresponds to a data field in an selectedRecord object"}, {"timstamp": "2017-07-28 21:34", "user": "sadme", "body": "with reactive forms you can just subscribe to it, and in the `next` method just call form.setValue({stuff})"}, {"timstamp": "2017-07-28 21:35", "user": "bs0d", "body": "sadme and with template driven forms I need to convert my selectedRecord into a subject and use it?"}, {"timstamp": "2017-07-28 21:36", "user": "sadme", "body": "nono, ignore the subject thing, i don't think you need to worry about that"}, {"timstamp": "2017-07-28 21:36", "user": "sadme", "body": "i guess with model driven forms you can just set 'myValue' inside your subscription ?"}, {"timstamp": "2017-07-28 21:37", "user": "bs0d", "body": "sadme I do not quite understand how to apply this subscription. I subscribe, and with every change to the obs I update a local copy of the same data, then bind my inputs to this local copy?"}, {"timstamp": "2017-07-28 21:39", "user": "sadme", "body": "well, your ngModel directive will point to a copy of the data in your component, right? so in your subscription you can just do (next) => {mydata = next;} or something"}, {"timstamp": "2017-07-28 21:40", "user": "sadme", "body": "i haven't really used template driven forms so i'm not totally sure"}, {"timstamp": "2017-07-28 21:41", "user": "bs0d", "body": "I am trying to avoid this, because I have ~15 components which require same data, I wouldn't like to keep 15 copies of the same dataset. This was the main reason why I started to use ngrx/store and ended up in shared data stored in observables"}, {"timstamp": "2017-07-28 21:42", "user": "bs0d", "body": "sadme: but I still need a way to display shared object's data fields in component template form, as well as let the user edit these values"}, {"timstamp": "2017-07-28 21:43", "user": "sadme", "body": "i'm not overly familiar with ngrx, but don't you need to fire an event or something to update data inside the store?"}, {"timstamp": "2017-07-28 21:57", "user": "bs0d", "body": "sadme yes, you are right. I do not need two way data binding here. I can fire update events to the store instead"}, {"timstamp": "2017-07-28 22:04", "user": "zomg_", "body": "sadme: assuming the promise doesn't have those issues then ther should be no reason not to use it"}, {"timstamp": "2017-07-28 22:05", "user": "zomg_", "body": "so more than anything it just seems like a poor design decision in the implementation of whatever"}, {"timstamp": "2017-07-28 22:07", "user": "sadme", "body": "\\_()_/ tell that to the angular team, all the Http methods in angular 2+ use observables"}, {"timstamp": "2017-07-28 22:07", "user": "zomg_", "body": "yeah I'm just talking on the theoretical level :)"}, {"timstamp": "2017-07-28 22:08", "user": "zomg_", "body": "*ideally* it seems like a promise or some other single-result type would function better for things which only produce a single result"}, {"timstamp": "2017-07-28 22:10", "user": "sadme", "body": "ideally isn't the word i'd use - unless you don't care about cancellation or composition"}, {"timstamp": "2017-07-28 22:10", "user": "zomg_", "body": "well, ideally you would be able to cancel it :P"}, {"timstamp": "2017-07-28 22:11", "user": "zomg_", "body": "but that kind of goes into other topics like high and low level apis etc."}], "label": "other"}
{"id": "93d594cf", "body": "", "comments": [{"timstamp": "2016-05-13 14:02", "user": "nodedfree", "body": "angular2 support avail here?"}, {"timstamp": "2016-05-13 14:02", "user": "arlekin", "body": "nodedfree: in a stochastic manner"}, {"timstamp": "2016-05-13 14:03", "user": "nodedfree", "body": "in angular2 component, in constructor > how can i call global function ? (bootstrap slider function)"}, {"timstamp": "2016-05-13 14:07", "user": "Pyrrhus", "body": "nodedfree: what do you mean by global ? isnt the slider a part of your component ?"}, {"timstamp": "2016-05-13 14:09", "user": "nodedfree", "body": "Pyrrhus: i added js file of bootstrap slider before angular files, and when running window.Slider(....) it works, but i get many errors from angular that it couldn't find this function"}, {"timstamp": "2016-05-13 14:10", "user": "Pyrrhus", "body": "nodedfree: you should consider using ng2-bootstrap, the angularized bootstrap. then, the slide is a native angular2 component."}, {"timstamp": "2016-05-13 14:10", "user": "nodedfree", "body": "Pyrrhus: i want to solve this issue for future conflicts.. any solutions?"}, {"timstamp": "2016-05-13 14:10", "user": "bd-", "body": "nodedfree: you getting errors from angular itself or from the typescript compiler?"}, {"timstamp": "2016-05-13 14:10", "user": "Pyrrhus", "body": "communicating with stuff outside of angular kind of sucks (at least it did in angular 1)"}, {"timstamp": "2016-05-13 14:13", "user": "nodedfree", "body": "bd-:"}, {"timstamp": "2016-05-13 14:14", "user": "bd-", "body": "i don't think the global exists there"}, {"timstamp": "2016-05-13 14:15", "user": "bd-", "body": "which slider thing are you using?"}, {"timstamp": "2016-05-13 14:16", "user": "nodedfree", "body": "bd-: the funny thing, if i put the code in try/catch - it works cleanly"}, {"timstamp": "2016-05-13 14:16", "user": "nodedfree", "body": ""}, {"timstamp": "2016-05-13 14:16", "user": "bd-", "body": "shouldn't you be using Slider instead of slider"}, {"timstamp": "2016-05-13 14:17", "user": "nodedfree", "body": "nope"}, {"timstamp": "2016-05-13 14:17", "user": "nodedfree", "body": "i use the native, without jquery"}, {"timstamp": "2016-05-13 14:17", "user": "bd-", "body": "yea and that page says Slider for that"}, {"timstamp": "2016-05-13 14:19", "user": "bd-", "body": "> var slider = new Slider('#ex1', {"}, {"timstamp": "2016-05-13 14:21", "user": "nodedfree", "body": "bd-: that's what i do.. nvm i'll search for more info"}, {"timstamp": "2016-05-13 14:21", "user": "nodedfree", "body": "ty.."}, {"timstamp": "2016-05-13 14:22", "user": "bd-", "body": "well the error is sayign you're not doing that"}, {"timstamp": "2016-05-13 14:22", "user": "bd-", "body": "> ReferenceError: slider is not defined"}], "label": "other"}
{"id": "93d59530", "body": "", "comments": [{"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "??"}, {"timstamp": "2016-12-15 08:06", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:18", "user": "zomg", "body": "DD2_: what does that have to do with angular?"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "i mean"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "there is a machine and card to scan rfid"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "but how i will get that rfid code from scanner and i have to send http request to server"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "is it the way to send request??"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "and which plugin we need to use"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg_>"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg> r u there..??"}, {"timstamp": "2016-12-15 08:24", "user": "zomg", "body": "DD2_: so is this like a USB rfid scanner?"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "nope there is a machine like ATM screen"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "or we can say punch machine"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "and rfid card"}, {"timstamp": "2016-12-15 08:25", "user": "zomg", "body": "so do you know how to read the rfid card?"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "no i dont have any information about it"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "i just want to use one listener which will just watch on it"}, {"timstamp": "2016-12-15 08:28", "user": "zomg", "body": "right, and is this program you're writing going to run in a browser on that computer?"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "yeah"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "actuly we r just developing some angular phase which is going to implement into that machine"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "which windows base machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "okay"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we r just developing front end side"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we have to complete this step"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "so what you would need to do is have some kind of a way to query the device on the machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "browsers don't have direct access to devices like this"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "I know some USB-based barcode scanners basically are keyboards, as in they produce keyboard events when you scan a barcode"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "if your rfid scanner worked like this, that would be the easiest way to set it up"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "but I'm guessing that isn't the case here, so what you would need to do is have some program running on the computer, which can access the device driver directly"}, {"timstamp": "2016-12-15 08:33", "user": "zomg", "body": "then, you set up the program to run a simple web server, and your angular application can just do an ajax request to it"}, {"timstamp": "2016-12-15 08:34", "user": "zomg", "body": "(or alternatively you could possibly embed webkit into a windows application, where you could provide a custom API for the device)"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "yeah u right ill write one api to call ajax but my question is"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "how it will continuously watch on it"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "there is rfid listener"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "plugin"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "i saw but m not getting how it will work and how to setup"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "well if you were to build an embedded webkit thing, then you could implement a custom API for it which can call a JS callback when the rfid listener sends data"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "but if you can't / don't want to do that, then you'd probably use either polling on the web server, or a websocket"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "polling on the web server means what??"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "can u plz explain"}, {"timstamp": "2016-12-15 08:37", "user": "zomg", "body": "repeatedly sending an ajax request at specific intervals"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": "i was talking abt this one"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "<zomg>"}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "but i dont know what exactly he's doing]"}, {"timstamp": "2016-12-15 08:40", "user": "zomg", "body": "hard to say, none of the links in that seem to work so I can't look at the source :)"}, {"timstamp": "2016-12-15 08:41", "user": "zomg", "body": "you could try installing it I guess and seeing if you can make use of it"}, {"timstamp": "2016-12-15 08:41", "user": "wafflejock", "body": "DD2_, will always be specific to the hardware basically"}, {"timstamp": "2016-12-15 08:42", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "yeah, that's entirely possible unless there's some standard for it"}, {"timstamp": "2016-12-15 08:42", "user": "wafflejock", "body": "DD2_, there are various protocols used for two wire or serial communication but with stuff like this it varies a lot"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "you might end up having to write a program in C# or such to deal with it tbh"}, {"timstamp": "2016-12-15 08:43", "user": "zomg", "body": "once upon a time I worked on some embedded JS stuff on phones, but thankfully we had another team which dealt with the device-specifics so we could just build to their api :P"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, on the making a web server side there are lots of built in node things to make that part simple"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, the hard part will be reading the data out of the device"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "well potentially hard"}, {"timstamp": "2016-12-15 08:44", "user": "wafflejock", "body": "sometimes it's cake just depends on the device and target audience"}, {"timstamp": "2016-12-15 08:45", "user": "DD2_", "body": "so that means its depend on hardware which we are using of we got details abt it then we can think about it right??"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "I've been messing around with at home PCB making lately, fun making your own hardware"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "DD2_, yeah or can make your hardware choices in part based on the software already there and how easy it'll be to integrate with"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "depends on how big of a deal that is vs user experience and other features"}, {"timstamp": "2016-12-15 08:46", "user": "DD2_", "body": "ohk"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "so finally m going to send a mail to one of my frnd"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "first we need to fixed all this hardware solution"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "then we can think abt it"}, {"timstamp": "2016-12-15 08:48", "user": "wafflejock", "body": "yeah and while choosing hardware good to reach out to their support to see if they respond and can help answer questions since you may have to work with them to get answers if documentation isn't great on their site"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "yeah sure"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "thnk u soooooooooooooooooo muchhhhhhhhhh"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "(y)"}], "label": "other"}
{"id": "93d594a6", "body": "", "comments": [{"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "hi everyone"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "i have a doubt"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "which is there is an array and i have some text fileds with firstname and lastname"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "ok now i am pusihing them every time"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "into array with help of object"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "but it is overiding the previous object"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "i want it to be stored like objects in array"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "which should not override by previous object"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "yeah when i push them in every submit"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "it should be unique"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "First Name:<input type=\"text\" ng-model=\"store.fname\"><br> Last Name:<input type=\"text\" ng-model=\"store.lname\"><br> Address:<input type=\"text\" ng-model=\"store.add\"> <button ng-click=\"submit(store)\">Submit</button>"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "function TodoCtrl($scope) { $scope.arr = []; $scope.store={}; $scope.submit = function(store){ $scope.store2={}; $scope.store2=$scope.store; console.log($scope.store2,'22'); $scope.arr.push($scope.store); console.log($scope.arr,'com'); }"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "here is the code"}, {"timstamp": "2016-08-29 14:17", "user": "z3r0_", "body": "Praveen: Use pastebin or PLunker"}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": "ok"}, {"timstamp": "2016-08-29 14:17", "user": "senayar", "body": "!help"}, {"timstamp": "2016-08-29 14:17", "user": "uru|away", "body": "senayar: I am not a bot! (promise)"}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": ""}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": "this is mine"}, {"timstamp": "2016-08-29 14:20", "user": "senayar", "body": ""}, {"timstamp": "2016-08-29 14:20", "user": "Praveen", "body": "<senayar> it is overiding previous object"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "yes"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "it's because you are pushing $scope.arr.push($scope.store); and not store2"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "it shouldnt be i enter new details it shuld be in"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "anothere object"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "like that"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "but what do you want exactly ?"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "see if i enter fname lastname"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "it takes one object in that array"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "again if i enter new fname lname"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "then it should be next object"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "in same array"}, {"timstamp": "2016-08-29 14:22", "user": "senayar", "body": "I wrote it why upper Praveen"}, {"timstamp": "2016-08-29 14:23", "user": "senayar", "body": "it's because you are pushing $scope.store and not $scope.store2 into your array"}, {"timstamp": "2016-08-29 14:23", "user": "Praveen", "body": "can you make changes in that"}, {"timstamp": "2016-08-29 14:23", "user": "Praveen", "body": "please"}, {"timstamp": "2016-08-29 14:24", "user": "senayar", "body": "do you understand what are you doing Praveen :("}, {"timstamp": "2016-08-29 14:24", "user": "Praveen", "body": "yeah"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "i think you didnt get my idea"}, {"timstamp": "2016-08-29 14:25", "user": "senayar", "body": ""}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "senayar"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "perfect"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "tanq so mcuh"}, {"timstamp": "2016-08-29 14:25", "user": "senayar", "body": "but you still don't understand :P"}, {"timstamp": "2016-08-29 14:26", "user": "Praveen", "body": "no no i just need this"}, {"timstamp": "2016-08-29 14:26", "user": "lalu", "body": "senayar can you help me?"}, {"timstamp": "2016-08-29 14:26", "user": "Praveen", "body": "you helped me"}, {"timstamp": "2016-08-29 14:27", "user": "Praveen", "body": "tanq z3ro_"}, {"timstamp": "2016-08-29 14:27", "user": "senayar", "body": "just saying is not working does not help lalu :o"}, {"timstamp": "2016-08-29 14:29", "user": "lalu", "body": "senayar , so is there any other browser where i can run my program?"}, {"timstamp": "2016-08-29 14:29", "user": "senayar", "body": "Safari ? IE ?"}, {"timstamp": "2016-08-29 14:30", "user": "lalu", "body": "IE sucks bro"}, {"timstamp": "2016-08-29 14:30", "user": "lalu", "body": "senayar where you run your ang programs?"}, {"timstamp": "2016-08-29 14:32", "user": "z3r0_", "body": "lalu: I use Chromium, and angular animate seems to work. have you checked in the JS Console if everything is loaded without errors ?"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "ya everything is fine"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "i tried many times"}, {"timstamp": "2016-08-29 14:33", "user": "z3r0_", "body": "What are you animating ?"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "its just hide and show thing"}, {"timstamp": "2016-08-29 14:34", "user": "z3r0_", "body": "with ng-show and ng-hide ?"}, {"timstamp": "2016-08-29 14:38", "user": "senayar", "body": "ng-display-none"}], "label": "other"}
{"id": "0edea393", "body": "", "comments": [{"timstamp": "15:19", "user": "jlebrech", "body": "tagging, and moving them to appropriate folders"}], "label": "other"}
{"id": "93d59546", "body": "", "comments": [{"timstamp": "2017-02-17 11:27", "user": "Ayz", "body": "guys using a table like this in plunker , on clicking the delete button if there is only one row then I dont want to delete it, how can i achieve it.. link -->>>"}, {"timstamp": "2017-02-17 11:28", "user": "arlekin", "body": "Ayz: u sure you posted good plnkr ? it doesn't seem to be working (or have callback for deleting things for that matter)"}, {"timstamp": "2017-02-17 11:29", "user": "Ayz", "body": "arlekin i ll check it once.."}, {"timstamp": "2017-02-17 11:29", "user": "Ayz", "body": "arlekin"}, {"timstamp": "2017-02-17 11:30", "user": "Pyrrhus666", "body": "arlekin, seems plunkr is having issues again, it works for me"}, {"timstamp": "2017-02-17 11:30", "user": "arlekin", "body": "Ayz: now its good, still, you just need put some conditional checking number of rows, and skipping deletion if there is only one row"}, {"timstamp": "2017-02-17 11:30", "user": "Pyrrhus666", "body": "Ayz,"}, {"timstamp": "2017-02-17 11:31", "user": "Pyrrhus666", "body": "Ayz, component.ts line 66"}, {"timstamp": "2017-02-17 11:31", "user": "Pyrrhus666", "body": "Ayz, oops. doesnt works as it should..."}, {"timstamp": "2017-02-17 11:32", "user": "Ayz", "body": "Pyrrhus666 ya not working"}, {"timstamp": "2017-02-17 11:33", "user": "Ayz", "body": "Pyrrhus666 after using that line it doesnt delete at all"}, {"timstamp": "2017-02-17 11:34", "user": "Pyrrhus666", "body": "Ayz, yes, I noticed, looking closer now :)"}, {"timstamp": "2017-02-17 11:34", "user": "Ayz", "body": "Pyrrhus666 :-)"}, {"timstamp": "2017-02-17 11:35", "user": "Ayz", "body": "Pyrrhus666 use >=1 it works.."}, {"timstamp": "2017-02-17 11:36", "user": "Ayz", "body": "Pyrrhus666 while using >=1 it works even splices the last column too ;-)"}, {"timstamp": "2017-02-17 11:37", "user": "Pyrrhus666", "body": "Ayz, yes, its some confusion in your use of data and datas as properties :)"}, {"timstamp": "2017-02-17 11:37", "user": "Ayz", "body": "data is the array and datas is the instance"}, {"timstamp": "2017-02-17 11:37", "user": "Ayz", "body": "Pyrrhus666 data is the array and datas is the instance"}, {"timstamp": "2017-02-17 11:40", "user": "Ayz", "body": "Pyrrhus666 length spelling buddy"}, {"timstamp": "2017-02-17 11:41", "user": "Pyrrhus666", "body": "Ayz, haha, good catch :)"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 nw working right??"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 ha ha ha.."}, {"timstamp": "2017-02-17 11:41", "user": "Pyrrhus666", "body": "looks good from here"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 ya working here too..."}, {"timstamp": "2017-02-17 11:42", "user": "Pyrrhus666", "body": "Ayz, a suggestion though : per row just a delete, and one add button under the table. an add on every row feels a bit much :)"}, {"timstamp": "2017-02-17 11:43", "user": "Ayz", "body": "Pyrrhus666 ya the suggestion seems good and i ll use it.. :-)"}, {"timstamp": "2017-02-17 11:44", "user": "Pyrrhus666", "body": "Ayz, and for good measure : hide the delete button when data.length <= 1"}, {"timstamp": "2017-02-17 11:45", "user": "Ayz", "body": "Pyrrhus666 ya sure i ll.."}], "label": "other"}
{"id": "8addb272", "body": "", "comments": [{"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "I want to have the link of ng-view hidden when I click on it and the new page renders. I don't need the usual upper nav where the links or routes are present"}, {"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "Transition to a new page"}], "label": "feature"}
{"id": "93d594e7", "body": "", "comments": [{"timstamp": "2016-05-26 19:57", "user": "Twirl", "body": "anyone has some simple tutorial on how to make a deployable package? the tutorial in the official angular website shows an example on how to deploy locally to an open browser (completely useless)"}, {"timstamp": "2016-05-26 20:17", "user": "Twirl", "body": "anyone has some tutorial on how to deploy an angular2 app with gulp or something?"}, {"timstamp": "2016-05-26 20:17", "user": "sunimasuno", "body": "Twirl: I have my default \"how to build a js project\" link,"}, {"timstamp": "2016-05-26 20:20", "user": "Twirl", "body": "sunimasuno: i said angular2"}, {"timstamp": "2016-05-26 20:26", "user": "scssquatch", "body": "sunimasuno: okay I believe the problem was due to a binding being in an ng-if during compile time"}, {"timstamp": "2016-05-26 20:26", "user": "sunimasuno", "body": "Twirl yeah, he uses some angular 1 examples, but ng2 doesn't have any unique build requirements that I'm aware of. Is there something special you need in your build process?"}, {"timstamp": "2016-05-26 20:26", "user": "scssquatch", "body": "so rest easy, accessing that attr doesn't blow anything up :)"}, {"timstamp": "2016-05-26 20:27", "user": "sunimasuno", "body": "scssquatch: the world makes sense now, thanks!"}, {"timstamp": "2016-05-26 20:27", "user": "scssquatch", "body": "Any time!"}, {"timstamp": "2016-05-26 20:28", "user": "Twirl", "body": "sunimasuno: i'm a complete noob when it comes to angular, i followed the tutorial and it deploys to a running browser in your local machine @ localhost"}, {"timstamp": "2016-05-26 20:28", "user": "Twirl", "body": "sunimasuno: i want to test this in my vagrant vm"}, {"timstamp": "2016-05-26 20:30", "user": "sunimasuno", "body": "Hmmm... so Twirl I think the issue then is nailing down exactly what you want. gulp, grunt, npm, etc all just line up your steps for you, you still have to write them. You want to push your code to a web server for sure, but do you need to transpile, minify, test, etc?"}, {"timstamp": "2016-05-26 20:30", "user": "Twirl", "body": "yea i don't know how to do any of that, do you have a tutorial or an example or something"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "functionally you can ignore the word \"angular\" when doing a JS project build and deployment, unless your transpiling something special"}, {"timstamp": "2016-05-26 20:31", "user": "Twirl", "body": "minify i don't really care"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "Do you have a web server up and running?"}, {"timstamp": "2016-05-26 20:31", "user": "Twirl", "body": "yes"}, {"timstamp": "2016-05-26 20:31", "user": "scssquatch", "body": "there's probably an heroku buildpack if you're cool with heroku"}, {"timstamp": "2016-05-26 20:31", "user": "scssquatch", "body": "ah never mind then"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "what one?"}, {"timstamp": "2016-05-26 20:32", "user": "Twirl", "body": "sunimasuno: what web server?"}, {"timstamp": "2016-05-26 20:32", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 20:32", "user": "Twirl", "body": "sunimasuno: why does it matter? i have all of them anyways, currently using tomcat"}, {"timstamp": "2016-05-26 20:33", "user": "Twirl", "body": "but i could stop it and start nginx or apache"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "It should have a public html directory in there somewhere, you just need to copy your html, css, and js files into it"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "that's what gulp/grunt/npm do"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "most of them literally run cp or COPY under the hood"}, {"timstamp": "2016-05-26 20:33", "user": "Twirl", "body": "yea, so i just put my angular app in the folder being served and access the index.html?"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 20:34", "user": "sunimasuno", "body": "so long as your file structure and relative links make sense you should be fine"}, {"timstamp": "2016-05-26 20:34", "user": "Twirl", "body": "well, no, the tutorial uses typescript and compile on the fly on the browser"}, {"timstamp": "2016-05-26 20:35", "user": "Twirl", "body": "also, every mistake is freaking costly it takes this vm literally 10 minutes to start tomcat"}, {"timstamp": "2016-05-26 20:36", "user": "sunimasuno", "body": "The one I sent he transpiles and drops the code in dist, then starts up an express server and tells it to serve the dist directory, which the transpile (browserify) droped an index.html into"}, {"timstamp": "2016-05-26 20:37", "user": "Twirl", "body": "yes i need to transpile all the typescript files somehow, maybe with a task manager or npm script (what i'm asking) test and deploy"}, {"timstamp": "2016-05-26 20:37", "user": "sunimasuno", "body": "so if you look for build:scripts you'll see where he transpiles the typescript"}, {"timstamp": "2016-05-26 20:38", "user": "sunimasuno", "body": "\"test\": shows where he runs the tests"}, {"timstamp": "2016-05-26 20:38", "user": "sunimasuno", "body": "\"serve\": is where he stands up the server, you'd probably wanta \"deploy\" where you copy out to your tomcat server"}, {"timstamp": "2016-05-26 20:39", "user": "sunimasuno", "body": "he also has a \"clean\" to kill old stuffs"}, {"timstamp": "2016-05-26 20:39", "user": "sunimasuno", "body": "a few other helper tasks"}, {"timstamp": "2016-05-26 20:40", "user": "Twirl", "body": "alright seems like i forgot all the freaking node modules"}, {"timstamp": "2016-05-26 20:40", "user": "sunimasuno", "body": "yeah, there's a lot of them. When the tech stack gets deep so do the modules"}, {"timstamp": "2016-05-26 20:42", "user": "Twirl", "body": "sunimasuno: alright, so the guy uses npm scripts instead of gulp and grunt?"}, {"timstamp": "2016-05-26 20:42", "user": "Twirl", "body": "and explains the whole process? looks like a good read then"}, {"timstamp": "2016-05-26 20:42", "user": "sunimasuno", "body": "Yeah, all three just end up running things in the command line at the end of the day"}, {"timstamp": "2016-05-26 20:42", "user": "sunimasuno", "body": "Half the time I just write a bash script myself"}, {"timstamp": "2016-05-26 20:43", "user": "sunimasuno", "body": "But, ya'know, I gotta play nice with them windows folks"}, {"timstamp": "2016-05-26 20:43", "user": "Twirl", "body": "i hate windows"}, {"timstamp": "2016-05-26 20:43", "user": "Twirl", "body": "it's a virus"}, {"timstamp": "2016-05-26 20:44", "user": "Twirl", "body": "just kidding, it's good for playing computer games"}, {"timstamp": "2016-05-26 20:44", "user": "sunimasuno", "body": "there is that"}, {"timstamp": "2016-05-26 20:44", "user": "Twirl", "body": "anyways, i gotta read all of that, it's going to take a while"}, {"timstamp": "2016-05-26 20:44", "user": "sunimasuno", "body": "good luck!"}], "label": "other"}
{"id": "0edea285", "body": "", "comments": [{"timstamp": "19:07", "user": "Ben_1", "body": "is it possible to have multiple projects which will work as blackbox in a single parent application without using any third party library? I just wanna show multiple apps on the right side and navigate through them on the left side navigation."}, {"timstamp": "19:07", "user": "Ben_1", "body": "is this possible by using the parent applications router in combination with the router of each child app?"}], "label": "feature"}
{"id": "93d594ab", "body": "", "comments": [{"timstamp": "2016-08-07 13:48", "user": "zomg", "body": "so what makes you think that spamming the channel is going to make people more inclined to help you?"}, {"timstamp": "2016-08-07 13:51", "user": "ng-dirty", "body": "zomg you always pop-up like an silly amazon advertisement"}, {"timstamp": "2016-08-07 13:53", "user": "ng-dirty", "body": "what is the use of ng-dirty?"}, {"timstamp": "2016-08-07 13:54", "user": "MarkTheMark", "body": "its the dirt you apply on your dirty little face ng-dirty"}, {"timstamp": "2016-08-07 13:54", "user": "drej", "body": "The ng-dirty class tells you that the form has been modified by the user"}, {"timstamp": "2016-08-07 13:55", "user": "ng-dirty", "body": "drej ya i read the same on docs but even after modifying the form the suggested color of the form is not changing"}, {"timstamp": "2016-08-07 14:00", "user": "ng-dirty", "body": "MarktheMark are u P.A of zomg"}, {"timstamp": "2016-08-07 14:01", "user": "Velocity", "body": "ng-dirty they both are stupid ,never mind"}, {"timstamp": "2016-08-07 14:02", "user": "MarkTheMark", "body": "you are even dummer"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "Cool, another person to add to my list of people that I won't bother helping :p"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "aka /ignore"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "lol"}, {"timstamp": "2016-08-07 14:05", "user": "zomg", "body": "And it's the first time I've seen you here, so... :P"}], "label": "other"}
{"id": "93d5950d", "body": "", "comments": [{"timstamp": "2017-05-30 15:16", "user": "jlebrech", "body": "should services be monadic? if you want to use something more than once but query only once?"}, {"timstamp": "2017-05-30 15:17", "user": "Elarcis", "body": "jlebrech: you have entered black magic realm"}, {"timstamp": "2017-05-30 15:18", "user": "jlebrech", "body": "like this?"}, {"timstamp": "2017-05-30 15:19", "user": "jlebrech", "body": "Restangular returns a promise already so I could return that, but is 'suggestions' exists I want it to be a promise too."}, {"timstamp": "2017-05-30 15:21", "user": "Pyrrhus666", "body": "someone once said <unconvertable> if you use $q.defer() youre doing it wrong. in the instances I use(d) restangular, I always returnd its promises directly."}, {"timstamp": "2017-05-30 15:22", "user": "jlebrech", "body": "but I have to return the precached variable as a promise?"}, {"timstamp": "2017-05-30 15:23", "user": "jlebrech", "body": "or I could return {then: function(){return suggestions}}"}, {"timstamp": "2017-05-30 15:23", "user": "Pyrrhus666", "body": "if its cached, restangular has already taken care of it, no ?"}, {"timstamp": "2017-05-30 15:24", "user": "jlebrech", "body": "not cached that way, but if the variable exists"}, {"timstamp": "2017-05-30 15:24", "user": "Pyrrhus666", "body": "I must admit, its been a while. I used $http caching combined with restangular."}, {"timstamp": "2017-05-30 15:24", "user": "jlebrech", "body": "i feel like Restangular has a out of the box way of doing this"}, {"timstamp": "2017-05-30 15:24", "user": "Pyrrhus666", "body": "then you can return a new promise with the data and not bother with restangular, is that what you mean ?"}, {"timstamp": "2017-05-30 15:25", "user": "Pyrrhus666", "body": "that promise will resolve immediately on <unconvertable> the other side."}, {"timstamp": "2017-05-30 15:26", "user": "jlebrech", "body": "yup"}, {"timstamp": "2017-05-30 15:28", "user": "jlebrech", "body": "restangular is another thing I want to ditch"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "jlebrech: if your promise is already resolve, you can always return it, it'll be resolved immediately"}, {"timstamp": "2017-05-30 15:28", "user": "Pyrrhus666", "body": "OT : deep cloning with JSON.parse(JSON.stringify(obj)) as the fastest way to do it still baffles me (barring cyclic stuff)"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "jlebrech: each then() returns a new promise, so you won't break the initial promise by appending more then()"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "Pyrrhus666: angular.copy() :P"}, {"timstamp": "2017-05-30 15:29", "user": "Elarcis", "body": "Pyrrhus666: also yes, it's awfully hack-looking"}, {"timstamp": "2017-05-30 15:29", "user": "Pyrrhus666", "body": "Elarcis, many many times slower (but handles cyclic)"}, {"timstamp": "2017-05-30 15:29", "user": "Elarcis", "body": "Pyrrhus666: yeah, well... JSON.stringify doesn't handle functions or advanced info, it only works with base JS objects"}, {"timstamp": "2017-05-30 15:30", "user": "Pyrrhus666", "body": "Elarcis, yup. there should be a recursive Object.assign or something..."}, {"timstamp": "2017-05-30 15:31", "user": "jlebrech", "body": "I still need to do: if (a == null) { Restangular.one('foo').get().then(function(r){ a = r }) } else { defer.resolve(a) }"}, {"timstamp": "2017-05-30 15:32", "user": "jlebrech", "body": "or should there be a way for restangular to return a promise and set the return to a var at the same time"}, {"timstamp": "2017-05-30 15:32", "user": "jlebrech", "body": "I can I also try something with getList"}, {"timstamp": "2017-05-30 15:32", "user": "Elarcis", "body": "Pyrrhus666: Object.doMagic()"}, {"timstamp": "2017-05-30 15:33", "user": "Elarcis", "body": "jlebrech: where is that defer coming from?"}, {"timstamp": "2017-05-30 15:33", "user": "jlebrech", "body": "$q :P"}, {"timstamp": "2017-05-30 15:33", "user": "Pyrrhus666", "body": "Elarcis, please make sure thats a thing in the next ES update..."}, {"timstamp": "2017-05-30 15:33", "user": "Elarcis", "body": "what"}, {"timstamp": "2017-05-30 15:34", "user": "jlebrech", "body": "it's basically this"}, {"timstamp": "2017-05-30 15:34", "user": "Pyrrhus666", "body": "jlebrech, if (a) { return a } else { return restangular.one(foo).get() }"}, {"timstamp": "2017-05-30 15:34", "user": "Elarcis", "body": "jlebrech: but isn't a already a promise?"}, {"timstamp": "2017-05-30 15:34", "user": "Pyrrhus666", "body": "assuming a is a previously resolved promise"}, {"timstamp": "2017-05-30 15:34", "user": "jlebrech", "body": "a is a list that restangular populates"}, {"timstamp": "2017-05-30 15:35", "user": "jlebrech", "body": "but I only want to populate it once"}, {"timstamp": "2017-05-30 15:35", "user": "Pyrrhus666", "body": "just return the same promise every time then."}, {"timstamp": "2017-05-30 15:35", "user": "jlebrech", "body": "oh"}, {"timstamp": "2017-05-30 15:36", "user": "Elarcis", "body": "jlebrech:"}, {"timstamp": "2017-05-30 15:36", "user": "Pyrrhus666", "body": "^^ like so"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "shiiiiiiit"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "store to promise as var"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "duh"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "*slowclap*"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "the*"}, {"timstamp": "2017-05-30 15:37", "user": "Pyrrhus666", "body": "*ding* there goes the light :)"}, {"timstamp": "2017-05-30 15:37", "user": "jlebrech", "body": "nice"}, {"timstamp": "2017-05-30 15:38", "user": "Elarcis", "body": "jlebrech: updated because I'm an asshole"}, {"timstamp": "2017-05-30 15:38", "user": "Elarcis", "body": "jlebrech: why though? if you're using typescript or babel, you can write { suggestions } and the :suggestions will be inferred"}, {"timstamp": "2017-05-30 15:39", "user": "Elarcis", "body": "*because if"}, {"timstamp": "2017-05-30 15:39", "user": "Elarcis", "body": "jlebrech: if you're using typescript or babel, you should use services and classes anyway :P"}, {"timstamp": "2017-05-30 15:39", "user": "jlebrech", "body": "ok"}, {"timstamp": "2017-05-30 15:40", "user": "jlebrech", "body": "I realised I needed a junkdrawer service :)"}, {"timstamp": "2017-05-30 15:41", "user": "jlebrech", "body": "this service writing style will really clean stuff up"}, {"timstamp": "2017-05-30 15:41", "user": "Pyrrhus666", "body": "jlebrech, just make a ServiceService to encapsulate all services and inject it everywhere :P"}, {"timstamp": "2017-05-30 15:42", "user": "jlebrech", "body": "yeah, well I thought of having a initial view service with all the crap I need to first show the page"}], "label": "other"}
{"id": "73af7ce0", "body": "", "comments": [{"timstamp": "09:13", "user": "trampi", "body": "morning everyone!"}], "label": "other"}
{"id": "93d59524", "body": "", "comments": [{"timstamp": "2017-02-10 10:43", "user": "amharris", "body": "hey, icebox. pm? got a couple of quick questions"}, {"timstamp": "2017-02-10 10:44", "user": "icebox", "body": "amharris: no pm, please... here in the channel... so other users may help"}, {"timstamp": "2017-02-10 10:44", "user": "amharris", "body": "icebox: sure thing, sorry."}, {"timstamp": "2017-02-10 10:44", "user": "icebox", "body": "amharris: no problem"}, {"timstamp": "2017-02-10 10:45", "user": "amharris", "body": "so, a while back I was working on some bits for an Angular modal, if you recall. I fixed that but revisiting the project, I still need to make it dynamic/relevant for content."}, {"timstamp": "2017-02-10 10:45", "user": "amharris", "body": "I'm using ngDialog"}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "I can seem to use {{foo.bar}} within the ngDialog <script> modal inclusions."}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "can't*"}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "they don't render"}, {"timstamp": "2017-02-10 10:47", "user": "amharris", "body": "I did a fair bit of digging and am somewhat confident that I may need to set up a controller to pull the data into the scope, but am having trouble doing this."}, {"timstamp": "2017-02-10 10:47", "user": "amharris", "body": "the data is a JSON API endpoint and always at a particular URL (for this page); so do I need to somehow feed that into $rootScope; and if so, how?"}, {"timstamp": "2017-02-10 10:48", "user": "icebox", "body": "amharris: ok... I don't use ngDialog... but it seems you are on the right path... it seems you need to pass \"some var\" to the dialog"}, {"timstamp": "2017-02-10 10:48", "user": "icebox", "body": "amharris: root scope is out of question... forget it :)"}, {"timstamp": "2017-02-10 10:49", "user": "icebox", "body": "amharris: I see you can pass a controller"}, {"timstamp": "2017-02-10 10:50", "user": "amharris", "body": "icebox: so I can pass values to render _from_ the ngDialog usage controller I've written, but I need to get my data to that."}, {"timstamp": "2017-02-10 10:51", "user": "amharris", "body": "icebox: I would've just prefered if it could render {{foo.bar}} as usual. I assume being in a <script> within a template is the problem and is preventing that?"}, {"timstamp": "2017-02-10 10:52", "user": "icebox", "body": "amharris: you use case should be a common case"}, {"timstamp": "2017-02-10 10:52", "user": "amharris", "body": "icebox: common case?"}, {"timstamp": "2017-02-10 10:52", "user": "icebox", "body": "amharris: your use case should not be so inusual"}, {"timstamp": "2017-02-10 10:53", "user": "icebox", "body": "amharris: try to provide a plunker reproducing your use case and we may give a look at it"}, {"timstamp": "2017-02-10 10:57", "user": "amharris", "body": "icebox: it's just a bit awkward to, given the data coming from a headless Drupal instance in real-time"}, {"timstamp": "2017-02-10 10:57", "user": "amharris", "body": "icebox: basically, recreating how that works isn't the quickest thing"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: no problem... you can use $http in plunker to fetch data"}, {"timstamp": "2017-02-10 10:58", "user": "amharris", "body": "icebox: though I can happily ping you the front-end code and explain what doesn't work"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: or simply you cam mock them"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: really I would not prefer to debug the whole app :) I think ten lines of code should reproduce your use case"}, {"timstamp": "2017-02-10 10:59", "user": "icebox", "body": "amharris: no plunker, no party :)"}, {"timstamp": "2017-02-10 11:02", "user": "amharris", "body": "icebox: I didn't mean the entire thing. ;-) I meant the usage of ngDialog controller script and the relevant section of my template :P"}], "label": "other"}
{"id": "93d594e0", "body": "", "comments": [{"timstamp": "2018-07-12 16:22", "user": "Blizzard_", "body": "Hello everyone, what's a way to make the function fire everytime something happens?"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "I have a getTotalPrice() func but some optional things can be selected later, so I want that to reflect on the UI"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "is using $watch and updating a hoisted $scope.total variable the only way?"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "Or am I missing something?"}, {"timstamp": "2018-07-12 16:24", "user": "Blizzard_", "body": "(1.5)"}, {"timstamp": "2018-07-12 16:30", "user": "icebox", "body": "Blizzard_: no need for that... update data and automagically the template is updated"}, {"timstamp": "2018-07-12 16:30", "user": "Blizzard_", "body": "It's not happening, as it stands it just renders the total price the first time"}, {"timstamp": "2018-07-12 16:30", "user": "icebox", "body": "Blizzard_: here it works"}, {"timstamp": "2018-07-12 16:30", "user": "Blizzard_", "body": "and if I place a watcher on the func, it shows new values coming in"}, {"timstamp": "2018-07-12 16:31", "user": "Blizzard_", "body": "getTotalPrice() should fire everytime $scope is updated you think?"}, {"timstamp": "2018-07-12 16:31", "user": "icebox", "body": "Blizzard_: watchers are bad pratices... you need them only for attrs in directives"}, {"timstamp": "2018-07-12 16:31", "user": "icebox", "body": "Blizzard_: ok... read the rules, please..."}, {"timstamp": "2018-07-12 16:33", "user": "icebox", "body": "Blizzard_: if you provide a minimal working stackblitz reproducing your use case, we may give a look at it"}, {"timstamp": "2018-07-12 16:33", "user": "Elarcis", "body": "Blizzard_: expressions written in the template are evaluated on each detection cycle. If you need your value to always reflect a particular state, you need to either compute it dynamically in a function called from the template, or store it in a service where its updated everytime its dependencies change (and make sure the template points to the variable stored on the service, and not to a local copy of it)"}, {"timstamp": "2018-07-12 16:33", "user": "icebox", "body": "Blizzard_: template link in the topic"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "Haha yeah makes sense"}, {"timstamp": "2018-07-12 16:34", "user": "icebox", "body": "Blizzard_: and generally speaking you should not put functions in the template"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "Yes that's a good point"}, {"timstamp": "2018-07-12 16:34", "user": "Elarcis", "body": "Blizzard_: $watchers should be avoided as much as possible, because they add a performance cost on each detection cycle, vs. calculating what you need when data change"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "I'm coming back to angular after a good few years so totally out of touch :S"}, {"timstamp": "2018-07-12 16:35", "user": "Elarcis", "body": "Blizzard_: yes, things have changed a lot"}, {"timstamp": "2018-07-12 16:35", "user": "icebox", "body": "Blizzard_: state of art for angularjs 1.5+ is here"}, {"timstamp": "2018-07-12 16:36", "user": "Blizzard_", "body": "So I should stick to hoisting a variable and firing on an interaction?"}, {"timstamp": "2018-07-12 16:37", "user": "icebox", "body": "Blizzard_: you should focus on \"manipulating\" data :)"}, {"timstamp": "2018-07-12 16:37", "user": "icebox", "body": "the rest is magic"}, {"timstamp": "2018-07-12 16:37", "user": "Elarcis", "body": "Blizzard_: yeah, probably"}, {"timstamp": "2018-07-12 16:38", "user": "Blizzard_", "body": "Thanks guys! : )"}, {"timstamp": "2018-07-12 16:38", "user": "icebox", "body": "Blizzard_: see the example in the topic"}, {"timstamp": "2018-07-12 16:39", "user": "Blizzard_", "body": "The biggest takeaway is not using watchers because that's what I thought would make my func fire but then once you start using them, you have to add a bunch of variables etc to compare and update state"}, {"timstamp": "2018-07-12 16:41", "user": "Elarcis", "body": "Blizzard_: yes, it gets ugly very quickly"}, {"timstamp": "2018-07-12 16:41", "user": "Elarcis", "body": "Blizzard_: if youre using components, you can also use ngOnChange(), which fires everytime a binding is changed"}, {"timstamp": "2018-07-12 16:43", "user": "icebox", "body": "off... bye"}], "label": "other"}
{"id": "93d594cb", "body": "", "comments": [{"timstamp": "2017-02-10 10:55", "user": "heartburn", "body": "\"The real programmers will say <unconvertable> Yeah it works but youre leaking memory everywhere. Perhaps we should fix that. <unconvertable> Ill just restart Apache every 10 requests.\""}, {"timstamp": "2017-02-10 10:56", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 10:58", "user": "Pyrrhus666", "body": "heartburn, a really lazy person makes apache do that itself."}, {"timstamp": "2017-02-10 10:58", "user": "heartburn", "body": "C R O N S U P R E M A C Y"}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, nah, apache has it builtin."}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, its actually very useful, due to all the other programmers making leaky stuff."}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: well... that post proves the opposite :)"}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: what is the difference between Talent or Even Passion and Hard Work? :)"}, {"timstamp": "2017-02-10 11:02", "user": "heartburn", "body": "for hard work, you get paid."}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: in an interview the journalist said to a great violinist he had a great talent... the violinist replied for all the life he had been playing 12 hours per day"}, {"timstamp": "2017-02-10 11:04", "user": "heartburn", "body": "well, i don't see a contradiction. :o)"}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: exactly... so the title is false :)"}, {"timstamp": "2017-02-10 11:06", "user": "Pyrrhus666", "body": "talent does play into it though, because not everybody can play the violin, not even after doing it 30 years 12 hours a day..."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "well, i used to code 8 hours a day for a few years."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "was it a passionate experience? fuck no."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "but hey, i did pretty well anyway. they wanted to promote me, but i quit instead."}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "what i learned from that is, what one calls 'an elegant abstraction' another would call 'over-engineering'."}, {"timstamp": "2017-02-10 11:08", "user": "Pyrrhus666", "body": "heartburn, so, talented..."}, {"timstamp": "2017-02-10 11:08", "user": "icebox", "body": "heartburn: X Doesnt Require Talent or Even Passion... you can say it for anything... and that statement is false until we define Talend and Passion :)"}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "lol no."}, {"timstamp": "2017-02-10 11:09", "user": "Pyrrhus666", "body": "icebox, we can agree that theyre not the same, at least ?"}, {"timstamp": "2017-02-10 11:09", "user": "icebox", "body": "Pyrrhus666: agreed"}, {"timstamp": "2017-02-10 11:09", "user": "heartburn", "body": "don't go all philosophical on me m8."}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: :P"}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: sorry... I am too \"meta\" :)"}, {"timstamp": "2017-02-10 11:11", "user": "icebox", "body": "*too much"}, {"timstamp": "2017-02-10 11:13", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 11:16", "user": "heartburn", "body": "my loins are glowing with passion for programming."}, {"timstamp": "2017-02-10 11:18", "user": "heartburn", "body": "gonna put it in my cv."}], "label": "other"}
{"id": "93d59536", "body": "", "comments": [{"timstamp": "2017-02-17 11:57", "user": "sunny", "body": "Hello randOm please check this code"}, {"timstamp": "2017-02-17 11:57", "user": "sunny", "body": ""}, {"timstamp": "2017-02-17 11:58", "user": "sunny", "body": "i want to use scotchApp.controller('contactController', function($scope) { $scope.message = 'Contact us! JK. This is just a demo.'; }); in contact.html file"}, {"timstamp": "2017-02-17 11:58", "user": "sunny", "body": "how ?"}, {"timstamp": "2017-02-17 11:59", "user": "Elarcis", "body": "sunny: have you read any angular tutorial? this is usually the first step"}, {"timstamp": "2017-02-17 11:59", "user": "icebox", "body": "sunny: don't put code in the template... a few days saying this :)"}, {"timstamp": "2017-02-17 11:59", "user": "Elarcis", "body": "sunny: ng-controller."}, {"timstamp": "2017-02-17 11:59", "user": "sunny", "body": "send link ng-controller"}, {"timstamp": "2017-02-17 12:00", "user": "icebox", "body": "sunny:"}, {"timstamp": "2017-02-17 12:00", "user": "icebox", "body": "sunny: I am sure google is out of order there, isn't it?"}], "label": "other"}
{"id": "93d594a5", "body": "", "comments": [{"timstamp": "2017-01-30 13:25", "user": "JJH", "body": "If someone got some time to help with my \"regex\" that would be great :D"}], "label": "other"}
{"id": "73af7cfe", "body": "", "comments": [{"timstamp": "10:09", "user": "ray02", "body": "hello hello"}, {"timstamp": "10:09", "user": "ray02", "body": "morning folks"}], "label": "other"}
{"id": "93d594c1", "body": "", "comments": [{"timstamp": "2016-09-29 11:21", "user": "Pyrrhus666", "body": "Im experimenting with ui-router (ng1). is it ok to have child-states _without_ having nested views ? traditionally, the chilld-state takes over the complete view, but from a logical standpoint it _is_ a child-state."}, {"timstamp": "2016-09-29 11:32", "user": "Pyrrhus666", "body": "since electron is cross platform ("}, {"timstamp": "2016-09-29 11:34", "user": "rand0m", "body": "mornin Elarcis Pyrrhus666"}, {"timstamp": "2016-09-29 11:34", "user": "Pyrrhus666", "body": "morning rand0m"}, {"timstamp": "2016-09-29 11:35", "user": "rand0m", "body": "hmmm, is electron a wrapper with builtin browser ?"}, {"timstamp": "2016-09-29 11:35", "user": "rand0m", "body": "like ionic for desktops"}, {"timstamp": "2016-09-29 11:35", "user": "ngWalrus", "body": "it is"}, {"timstamp": "2016-09-29 11:35", "user": "Pyrrhus666", "body": "it packages chrome and node, so yes"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": "VS Code, Slack, Atom are made with it"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": "and others :)"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": ""}, {"timstamp": "2016-09-29 11:36", "user": "Pyrrhus666", "body": "and since vscode is built on it, it must be good :)"}, {"timstamp": "2016-09-29 11:37", "user": "Elarcis", "body": "Pyrrhus666: o/"}, {"timstamp": "2016-09-29 11:37", "user": "rand0m", "body": "nice"}, {"timstamp": "2016-09-29 11:37", "user": "Pyrrhus666", "body": "Elarcis: you seem to have lost an arm ?"}, {"timstamp": "2016-09-29 11:37", "user": "Pyrrhus666", "body": "\\ have another"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "oh btw, I have a question which relates to gulp if anyone can answer"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "Im trying to copy some fonts over to my dist/fonts folder"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "Pyrrhus666: but you could say that Atom is built on Electron, so it can't be good"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "#trololololo"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "can I create a folder and move the fonts into the folder"}, {"timstamp": "2016-09-29 11:38", "user": "Pyrrhus666", "body": "Elarcis: I could, but I didnt. atom being the pos it is, is not electrons fault :P"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "rand0m: just directly pipe your src to your dest"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "i thought so too"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "but the problem is with the folder naming structure"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "im trying to copy fonts from fontawesome"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "and they labelled the fonts directory simply as fonts"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "where as in bootstrap, its bootstrap/assets/fonts/bootstrap"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "so when we copy fonts folder, then its neatly organised :)"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "when I copy both folders I get something like this"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "dist/fonts/bootstrap/bootstrap.ttf, dist/fonts/font-awesome.ttf,"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "which TECHNICALLY WORKS, but I would like to organize it"}, {"timstamp": "2016-09-29 11:41", "user": "senayar", "body": "are you going to edit CSS and JS file to change path structure ? rand0m"}, {"timstamp": "2016-09-29 11:41", "user": "senayar", "body": "I think not"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "umm, im using sass"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "and they take font location as variables"}, {"timstamp": "2016-09-29 11:42", "user": "rand0m", "body": "so I can change the variable to whatever I want and it gets compiled"}, {"timstamp": "2016-09-29 11:42", "user": "rand0m", "body": ":)"}], "label": "other"}
{"id": "93d59537", "body": "", "comments": [{"timstamp": "2017-05-31 07:42", "user": "juria_roberts", "body": "How do I convert a string \"false\" to boolean false inside link function of directives?"}, {"timstamp": "2017-05-31 07:45", "user": "juria_roberts", "body": "zomg: is there a way through $parse or someother angular service?"}, {"timstamp": "2017-05-31 07:46", "user": "zomg", "body": "not sure what would the point of that other than to make it more complicated =)"}, {"timstamp": "2017-05-31 07:47", "user": "juria_roberts", "body": "zomg: just for my knowledge :) $parse returns a function. Not sure how to get a boolean from it"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "yeah I forget what that does tbh"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "if it returns a function, try calling it"}, {"timstamp": "2017-05-31 07:47", "user": "juria_roberts", "body": "hmm didn't think of that"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "iirc it might be something like var fn = $parse('stuff');, and then fn($scope)"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "so basically it gives you a function which will parse some expression in context of the scope you pass it"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "assuming I remember correctly anyway"}, {"timstamp": "2017-05-31 07:48", "user": "juria_roberts", "body": "ohhhh"}, {"timstamp": "2017-05-31 07:48", "user": "juria_roberts", "body": "Thanks a lot...will give it a shot"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "the docs for $parse probably have more info :)"}, {"timstamp": "2017-05-31 07:50", "user": "juria_roberts", "body": "your explanation clarified the docs for me..Thank you"}, {"timstamp": "2017-05-31 08:33", "user": "Elarcis", "body": "zomg, juria_roberts: $parse(expression) returns a function that's the JS equivalent of the given expression. The function must be called with the scope against which it will be evaluated as an argument"}, {"timstamp": "2017-05-31 08:34", "user": "Elarcis", "body": "zomg, juria_roberts: e.g. $parse('value = 4')(scope) where scope is {value: null} will sets its value property to 4"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "zomg, juria_roberts: to remember it easily, see $parse() as a service that parses stringified code to a runable function, but the function still needs to be ran against some context"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: today I discovered ng-if-start and ng-if-end"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: t'is the end of many forced divs just to group visibility checks"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: also works on many structural directives"}, {"timstamp": "2017-05-31 08:37", "user": "icebox", "body": "interesting"}, {"timstamp": "2017-05-31 08:37", "user": "Elarcis", "body": "icebox:"}, {"timstamp": "2017-05-31 08:39", "user": "icebox", "body": ":P"}, {"timstamp": "2017-05-31 08:45", "user": "SargoDarya", "body": "Good morning Elarcis icebox and the whole other gang"}, {"timstamp": "2017-05-31 08:46", "user": "icebox", "body": "hey"}, {"timstamp": "2017-05-31 08:48", "user": "Elarcis", "body": "trying GitKraken for a GUI git client"}, {"timstamp": "2017-05-31 08:48", "user": "Elarcis", "body": "you pals have any preference?"}, {"timstamp": "2017-05-31 08:48", "user": "zomg", "body": "I just use the git cli :P"}, {"timstamp": "2017-05-31 08:49", "user": "Elarcis", "body": "zomg: too predictable"}, {"timstamp": "2017-05-31 08:49", "user": "zomg", "body": "I've not really found any reason to not use the cli one"}, {"timstamp": "2017-05-31 08:50", "user": "Elarcis", "body": "zomg: a window can show me the most useful data without me having to type anything"}, {"timstamp": "2017-05-31 08:50", "user": "zomg", "body": "Elarcis: such as?"}, {"timstamp": "2017-05-31 08:52", "user": "Elarcis", "body": "zomg: the list of commits with their dates, the global graph of branches and commits, the status of my files, how many pulls/push differ from the origin remote..."}, {"timstamp": "2017-05-31 08:52", "user": "Elarcis", "body": "zomg: as well indeed as graphic diff tools"}, {"timstamp": "2017-05-31 08:52", "user": "zomg", "body": "why do you need to see that info all the time?"}, {"timstamp": "2017-05-31 08:54", "user": "SargoDarya", "body": "neat Node 8.0.0"}, {"timstamp": "2017-05-31 08:55", "user": "Elarcis", "body": "zomg: not all the time, when I want an overview of my repo. It's all available in a window, all those commands concentrated in one compact and well structured and cleartype(TM) display"}, {"timstamp": "2017-05-31 08:56", "user": "Elarcis", "body": "SourceTree devs are amateurs. I don't understand how they can implement so many issues with mercurial at each release"}, {"timstamp": "2017-05-31 08:56", "user": "zomg", "body": "yeah was just wondering since you said you can then see that stuff without typing anything"}, {"timstamp": "2017-05-31 08:57", "user": "zomg", "body": "but at least for me I don't really need to see that unless I'm doing something specific with that info, and in that case you'd probably have to click around the GUI a bit anyway or so I would imagine"}, {"timstamp": "2017-05-31 08:57", "user": "Elarcis", "body": "zomg: though I agree that using a GUI is likely to keep me oblivious of git's advanced features or easy possibilities"}, {"timstamp": "2017-05-31 09:12", "user": "icebox", "body": "Elarcis: git cli comes with git-gui"}], "label": "other"}
{"id": "93d5953a", "body": "", "comments": [{"timstamp": "2016-05-28 10:45", "user": "zenman", "body": "Hi, anyone know why this wouldn't work for ngDialog? ng-click=\"forget() && closeThisDialog('Confirm')\""}, {"timstamp": "2016-05-28 10:46", "user": "zenman", "body": "just having closeThisDialog('Confirm') closes the dialog, but adding it to forget doesn't close it."}, {"timstamp": "2016-05-28 11:06", "user": "SET001", "body": "zenman, ^"}, {"timstamp": "2016-05-28 11:12", "user": "zenman", "body": "SET001: queef worked"}, {"timstamp": "2016-05-28 11:12", "user": "keemyb", "body": "zenman: you want the semicolon as SET001 says. using the operators is only useful if you are returning truthy / falsy values"}, {"timstamp": "2016-05-28 11:12", "user": "keemyb", "body": "but I'm ofc too late :)"}, {"timstamp": "2016-05-28 11:14", "user": "SET001", "body": "googled for what is queef is -"}], "label": "other"}
{"id": "93d594f7", "body": "", "comments": [{"timstamp": "2016-10-07 21:54", "user": "TrentonDAdams", "body": "Angular is an MVC framework, not a scripting language"}, {"timstamp": "2016-10-07 21:56", "user": "TrentonDAdams", "body": "It does a lot of the boilerplate stuff for you. Things that would require you to write a bunch of jQuery code are now done for you."}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "[angular.js] Narretz pushed 1 new commit to master:"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "angular.js/master f41bd76 Martin Staffa: docs(changelog): add missing commit and remove empty lines"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "[angular.js] Narretz pushed 1 new commit to v1.5.x:"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "angular.js/v1.5.x 5395573 Martin Staffa: docs(changelog): add missing commit and remove empty lines"}, {"timstamp": "2016-10-07 22:15", "user": "Scooby", "body": "<ngbot> Could I ask you a quick question?"}, {"timstamp": "2016-10-07 22:19", "user": "Scooby", "body": "Can someone tell me is ther a popular Angular 2, forum site that I could be pointed to for questions?"}], "label": "other"}
{"id": "73af7ce7", "body": "", "comments": [{"timstamp": "10:24", "user": "storkme", "body": "services are good for this"}, {"timstamp": "10:24", "user": "murii", "body": "^"}], "label": "other"}
{"id": "93d594cd", "body": "", "comments": [{"timstamp": "2016-10-14 14:01", "user": "antiPoP", "body": "I'm going to give a try to"}, {"timstamp": "2016-10-14 14:02", "user": "antiPoP", "body": "can try"}, {"timstamp": "2016-10-14 14:11", "user": "antiPoP", "body": "that does not support ng2, trying"}], "label": "other"}
{"id": "8addb25f", "body": "", "comments": [{"timstamp": "2017-03-21 15:49", "user": "ARandomFurry", "body": "Hello! Is there a way to make sure that an async operation is completed before my route builds and renders a component in angular 2?"}, {"timstamp": "2017-03-21 15:49", "user": "uru", "body": "ARandomFurry: Sounds like you want to take a look at router guards"}, {"timstamp": "2017-03-21 15:51", "user": "ARandomFurry", "body": "uru; I am using canActivate and resolve for my route. They're executed after my component's constructor and ngOnInit function."}, {"timstamp": "2017-03-21 15:52", "user": "ARandomFurry", "body": "uru; the route is defined with the loadChildren field by the way."}, {"timstamp": "2017-03-21 15:54", "user": "uru", "body": "ARandomFurry: iirc not much you can do other than wrapping the content in an ngif then, I load data in to a service via the guard, which then only completes navigation after the request is finished, as long as canActivate returns an observer/promise"}, {"timstamp": "2017-03-21 15:55", "user": "ARandomFurry", "body": "uru; Shame, such a step backwards."}, {"timstamp": "2017-03-21 15:58", "user": "ARandomFurry", "body": "uru; Thank you for assissting me though!"}, {"timstamp": "2017-03-21 15:58", "user": "uru", "body": "ARandomFurry: No worries"}], "label": "feature"}
{"id": "93d594ad", "body": "", "comments": [{"timstamp": "2017-07-18 15:30", "user": "lyxthe", "body": "is this possible to ask questions in here ?"}, {"timstamp": "2017-07-18 15:30", "user": "icebox", "body": "lyxthe: sure"}, {"timstamp": "2017-07-18 15:31", "user": "icebox", "body": "lyxthe: you had one free question... sorry, consumed"}, {"timstamp": "2017-07-18 15:31", "user": "SargoDarya", "body": "lyxthe: Depends, does your question have anything to do with angular?"}, {"timstamp": "2017-07-18 15:31", "user": "lyxthe", "body": "yep it does :)"}, {"timstamp": "2017-07-18 15:31", "user": "SargoDarya", "body": "Wrong channel then, we only have fun here."}, {"timstamp": "2017-07-18 15:32", "user": "lyxthe", "body": "arf ... should leave then... or maybe I could ask my question and see if anyone find fun in it :p"}, {"timstamp": "2017-07-18 15:33", "user": "lyxthe", "body": "it concerns this module"}, {"timstamp": "2017-07-18 15:33", "user": "icebox", "body": "lyxthe:"}, {"timstamp": "2017-07-18 15:33", "user": "SargoDarya", "body": "Damn, looks like we got a smart one. lyxthe, in general for all of IRC, always just ask and wait for an answer."}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "ok did not know that..."}, {"timstamp": "2017-07-18 15:34", "user": "SargoDarya", "body": "No worries, just remember it for the next time ;)"}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "yep"}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "I see a plunkr could help so I make one then I return :p"}], "label": "other"}
{"id": "73af7cd4", "body": "", "comments": [{"timstamp": "09:48", "user": "Pyrrhus666", "body": "doing some more serious doctrine stuff for the first time, and struggling a bit. but hey, vacation starts tomorrow afternoon :)"}], "label": "other"}
{"id": "73af7d32", "body": "", "comments": [{"timstamp": "13:28", "user": "trampi", "body": "I'll be off for today. Wish everyone a short friday and a nice weekend!"}, {"timstamp": "13:30", "user": "SargoDarya", "body": "trampi: Have fun, enjoy bodensee"}, {"timstamp": "13:35", "user": "jlebrech", "body": "have fun trampi"}], "label": "other"}
{"id": "93d5951a", "body": "", "comments": [{"timstamp": "2016-08-04 22:16", "user": "RomulusDaniel", "body": "icfantv can you please check where I am doing wrong injecting the http service"}, {"timstamp": "2016-08-04 22:17", "user": "RomulusDaniel", "body": "it is about the same project as before"}, {"timstamp": "2016-08-04 22:18", "user": "RomulusDaniel", "body": ""}, {"timstamp": "2016-08-04 22:19", "user": "RomulusDaniel", "body": "or anybody else?"}, {"timstamp": "2016-08-04 22:20", "user": "RomulusDaniel", "body": "I am getting Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: lemme look"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: are you minifiying your code?"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "nope"}, {"timstamp": "2016-08-04 22:22", "user": "icfantv", "body": "that service looks fine"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "you should still pull that CORS stuff out of the service"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "it should be done once and only once"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "making it a service is overkill"}, {"timstamp": "2016-08-04 22:24", "user": "RomulusDaniel", "body": "I will just call it once in the future"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "i suppose one other thing to check would be to use array syntax for those DI args to see if that changes anything"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "are you familiar with that syntax?"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "angular.module.service('MyService', ['$scope', function($scope) { ... }]);"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "I am"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "just something to try and eliminate stuff"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "will do that"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "i would be surprised if it did change anything"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "nope the same"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:28", "user": "RomulusDaniel", "body": "it doesn't say from where the error is coming the service or the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "oh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "duh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "you can't inject scope to service"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services have no scope"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "remember that scope is the \"glue\" between the view and the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services are agnostic"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "(they're supposed to be)"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "RomulusDaniel: ^^"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "services shouldn't care how they're used or who uses them"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "I remember from what I once learned yes you are right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "this means I can't use $scope at all in the service"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "?"}, {"timstamp": "2016-08-04 22:33", "user": "icfantv", "body": "exactly"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "I will modify my code"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:35", "user": "icfantv", "body": "yep"}], "label": "other"}
{"id": "73af7cfd", "body": "", "comments": [{"timstamp": "10:03", "user": "trampi", "body": "morning everyone!"}, {"timstamp": "10:04", "user": "Pyrrhus666", "body": "morning trampi"}], "label": "other"}
{"id": "93d594ae", "body": "", "comments": [{"timstamp": "2016-11-04 11:34", "user": "loZio", "body": "Hello, I'm building a google maps with ng-map (AngularJS) and I want to customize infowindow...Do you have advices or examples? Thanks!"}], "label": "other"}
{"id": "93d594d2", "body": "", "comments": [{"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "trying to use select onchange to pass the ng-options to controller function"}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": ""}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "see pastebin"}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "thx for help"}, {"timstamp": "2016-10-19 16:56", "user": "senayar", "body": "required is enough zorph"}, {"timstamp": "2016-10-19 16:56", "user": "senayar", "body": "required=\"\""}, {"timstamp": "2016-10-19 16:58", "user": "zorph", "body": "I want to save the value and label - when the select changes.."}, {"timstamp": "2016-10-19 16:58", "user": "senayar", "body": "what does changeDuration zorph"}, {"timstamp": "2016-10-19 16:58", "user": "senayar", "body": "d.value and d.label are sure undefined inside the ng-change"}], "label": "other"}
{"id": "93d59551", "body": "", "comments": [{"timstamp": "2016-07-19 10:00", "user": "blizzzard", "body": "What are your thoughts on using the same directive for the header and footer?"}, {"timstamp": "2016-07-19 10:09", "user": "blizzzard", "body": "has anyone tried using the same directive for the footer and header?"}, {"timstamp": "2016-07-19 10:09", "user": "blizzzard", "body": "is it even possible to do that?"}, {"timstamp": "2016-07-19 10:11", "user": "Pyrrhus", "body": "blizzzard: havent done it, but its possbile. and if header and footer are functionally the same, why not ?"}, {"timstamp": "2016-07-19 10:11", "user": "blizzzard", "body": "yeah exactly, Pyyrhus because I need to update meta information and do a few ajax calls in the footer since it's outside the ng-view"}, {"timstamp": "2016-07-19 10:11", "user": "blizzzard", "body": "and doing that enables me to minimize ajax calls :)"}, {"timstamp": "2016-07-19 10:12", "user": "blizzzard", "body": "The only issue is I'm trying to find how I would find what part to render from the template file"}, {"timstamp": "2016-07-19 10:12", "user": "icebox", "body": "blizzzard: use services to share data or to refactor common methods"}, {"timstamp": "2016-07-19 10:12", "user": "Pyrrhus", "body": "if the footer is outside of angular, how could it be a directive ? or am I missing something here ?"}, {"timstamp": "2016-07-19 10:12", "user": "icebox", "body": "blizzzard: I second Pyrrhus's concern"}, {"timstamp": "2016-07-19 10:12", "user": "blizzzard", "body": "like ng-if(cond) - > render div.footer or div.header"}, {"timstamp": "2016-07-19 10:13", "user": "blizzzard", "body": "Hello icebox, I'm using promise based factories for all ajax calls but every time I reference it , it will make a new call right?"}, {"timstamp": "2016-07-19 10:14", "user": "icebox", "body": "blizzzard: what do you mean for \"reference it\"? calling it?"}, {"timstamp": "2016-07-19 10:14", "user": "blizzzard", "body": "Yeah I mean calling it"}, {"timstamp": "2016-07-19 10:14", "user": "icebox", "body": "blizzzard: yes"}, {"timstamp": "2016-07-19 10:15", "user": "blizzzard", "body": "like ajaxFactory.fetch().then(function(something){}) -> I want to minimize these calls"}, {"timstamp": "2016-07-19 10:15", "user": "icebox", "body": "blizzzard: when a promise is resolved, it is resolved"}, {"timstamp": "2016-07-19 10:15", "user": "blizzzard", "body": "so I have a directive for the meta part of my page and a lot of deal specific info which is pulled into the footer(it's the same json that both need to call)"}, {"timstamp": "2016-07-19 10:16", "user": "blizzzard", "body": "@icebox: Even if it's called from another part of the application?"}, {"timstamp": "2016-07-19 10:17", "user": "icebox", "body": "blizzzard: yes"}, {"timstamp": "2016-07-19 10:17", "user": "icebox", "body": "blizzzard: but I think we are talking about two different things"}, {"timstamp": "2016-07-19 10:18", "user": "blizzzard", "body": "<Pyrrhus>Yeah it's just outside the ng-view so it doesn't have access to $scope when initialized."}, {"timstamp": "2016-07-19 10:19", "user": "icebox", "body": "blizzzard: I am talking about promises, you about ajax calls... if you have... getFoo() { return $http... }... every time calling getFoo, an ajax call is done"}, {"timstamp": "2016-07-19 10:19", "user": "blizzzard", "body": "@icebox: possibly, what I'm trying to understand is when we make an ajax call from a factory in 3 different places(directive, controller etc.) , my understanding is that it's called 3 times"}, {"timstamp": "2016-07-19 10:20", "user": "blizzzard", "body": "Yes I'm also talking about promises, so it keeps to once, that's awesome!"}, {"timstamp": "2016-07-19 10:20", "user": "blizzzard", "body": "I'm going to check the trace"}, {"timstamp": "2016-07-19 10:23", "user": "icebox", "body": "blizzzard: yes... it is called three times... but if you have getFoo() { return myPromise; } and another method callBar() { myPromise = $http... }... you can call callBar once and many times getFoo"}, {"timstamp": "2016-07-19 10:25", "user": "icebox", "body": "blizzzard: basically if you can load that constant value when the component is activated and then you can use the promise resolved (or rejected)"}, {"timstamp": "2016-07-19 10:25", "user": "icebox", "body": "blizzzard: does it make sense?"}, {"timstamp": "2016-07-19 10:27", "user": "blizzzard", "body": "Hmm yes makes sense as I just checked the trace and it's being called multiple times"}, {"timstamp": "2016-07-19 10:28", "user": "icebox", "body": "blizzzard: bottom line, the reference you use in the service, it might be also a \"normal\" reference, not a promise... getFoo() { return foo; } ... callBar() { $http...then(function (res) { angular.extend(foo, res.data); }); }"}, {"timstamp": "2016-07-19 10:29", "user": "icebox", "body": "blizzzard: the trick is using a default value for foo"}, {"timstamp": "2016-07-19 10:30", "user": "icebox", "body": "blizzzard: that is a common pattern, splitting how to access to the reference and how to update the reference"}, {"timstamp": "2016-07-19 10:31", "user": "blizzzard", "body": ""}, {"timstamp": "2016-07-19 10:34", "user": "blizzzard", "body": "@icebox will read up on angular.extend or store the json in localstorage and access it from there?"}, {"timstamp": "2016-07-19 10:34", "user": "blizzzard", "body": "This is how I call stuff in my factory"}, {"timstamp": "2016-07-19 10:34", "user": "icebox", "body": "blizzzard: why do ask for this now? I don't follow you"}, {"timstamp": "2016-07-19 10:50", "user": "blizzzard", "body": "@icebox: I'm showing you my factory which is returning $q.defer().promise at the end, extending that gives me an error"}, {"timstamp": "2016-07-19 10:50", "user": "blizzzard", "body": "because it could be called in places when it's not resolved when initialized(why I used promise to begin with("}, {"timstamp": "2016-07-19 10:53", "user": "icebox", "body": "blizzzard: ah ok... you need to apply \"extend\" to the object reference you returned, for instance, to the controller... you use that factory in callBar and in \".then\" part you can use \"extend\"... as in the pseudo example I provided"}, {"timstamp": "2016-07-19 10:54", "user": "mdk", "body": "icebox: Hum in the"}, {"timstamp": "2016-07-19 10:55", "user": "mdk", "body": "icebox: is that just to avoid using underscores?"}, {"timstamp": "2016-07-19 10:57", "user": "icebox", "body": "mdk: there are a few ways to accomplish the same task... experiment it :)"}], "label": "other"}
{"id": "93d59480", "body": "", "comments": [{"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "GDIAF"}, {"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "Use feature modules my friend."}, {"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "Go die in a fire xD"}, {"timstamp": "2018-12-04 11:25", "user": "SargoDarya", "body": "imho that leads to overblown modules but it's your choice."}], "label": "other"}
{"id": "93d594c9", "body": "", "comments": [{"timstamp": "2017-02-10 08:58", "user": "Miaow", "body": "hello ! let's say i have a user who can create some tasks. i have created 2 services (UserService & TaskService) which allow me to do some stuff. So my question : what is the best practice between having a method getTasks() on UserService, and having a method getTasks(user) in the TaskService ?? tyvm"}, {"timstamp": "2017-02-10 09:02", "user": "icebox", "body": "Miaow: what is your concern about that?"}, {"timstamp": "2017-02-10 09:04", "user": "Miaow", "body": "icebox: ?"}, {"timstamp": "2017-02-10 09:04", "user": "icebox", "body": "Miaow: what are you asking for?"}, {"timstamp": "2017-02-10 09:05", "user": "icebox", "body": "Miaow: I don't see any issue, apart the naming"}, {"timstamp": "2017-02-10 09:05", "user": "Miaow", "body": "my concern is the best pratice to do what i want (through this simple use case) : get user tasks"}, {"timstamp": "2017-02-10 09:05", "user": "Miaow", "body": "it's not only an Angular question"}, {"timstamp": "2017-02-10 09:06", "user": "icebox", "body": "Miaow: and what is your concern? you created a method in the controller calling a method of a service"}, {"timstamp": "2017-02-10 09:06", "user": "icebox", "body": "Miaow: or you are calling a method of a service from another service"}, {"timstamp": "2017-02-10 09:07", "user": "icebox", "body": "Miaow: and?"}, {"timstamp": "2017-02-10 09:22", "user": "Miaow", "body": "icebox: that's my question, where shall i have to place the getTasks() method ? in the UserService or in the TaskService knowing that i have to have the userID data ?"}, {"timstamp": "2017-02-10 09:23", "user": "icebox", "body": "Miaow: TaskService"}, {"timstamp": "2017-02-10 09:23", "user": "icebox", "body": "Miaow: userID is a parameter"}, {"timstamp": "2017-02-10 09:24", "user": "icebox", "body": "Miaow: but there is not best practice... it depends on how you designed your data model"}, {"timstamp": "2017-02-10 09:25", "user": "icebox", "body": "Miaow: from a point of view creating pure functions (no side effects), it would be better using an explicit parameter"}, {"timstamp": "2017-02-10 09:26", "user": "Miaow", "body": "icebox: i dont' have anything yet, i wondered what i should do"}, {"timstamp": "2017-02-10 09:27", "user": "Miaow", "body": "the only thing i know is that my User object has an array of Tasks"}, {"timstamp": "2017-02-10 09:27", "user": "icebox", "body": "Miaow: ok... but really it is not an angular question, neither js one :)"}, {"timstamp": "2017-02-10 09:27", "user": "icebox", "body": "Miaow: it is a sort of how to design my api\" :)"}, {"timstamp": "2017-02-10 09:27", "user": "Miaow", "body": "not, that's what i told you, that's not only an angular question"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "Miaow: I suggest to follow a TDD approach"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "Miaow: surely you will have a few iterations"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "refactory the code a few times"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "*refactoring"}, {"timstamp": "2017-02-10 09:54", "user": "Miaow", "body": "icebox: ok ty"}, {"timstamp": "2017-02-10 09:55", "user": "icebox", "body": "Miaow: you are welcome"}, {"timstamp": "2017-02-10 09:57", "user": "Miaow", "body": "i think i'll retrieve Tasks from the TaskService by using the user id, but maybe i shouldn't attach a tasks array to my user model ?"}, {"timstamp": "2017-02-10 09:58", "user": "Miaow", "body": "keep the datas separated"}, {"timstamp": "2017-02-10 09:59", "user": "icebox", "body": "Miaow: feasible... when you think on it you should ask yourself \"what if data is updated and how the changes are propagated?\""}, {"timstamp": "2017-02-10 10:00", "user": "icebox", "body": "Miaow: then there are different kind of objects... business objects, dao objects, display objects and so on :)"}, {"timstamp": "2017-02-10 10:00", "user": "icebox", "body": "Miaow: generally speaking, you need to outline an application architecture :)"}, {"timstamp": "2017-02-10 10:01", "user": "icebox", "body": "Miaow: but here we enter in consultant domain :) how many hours your team have and what is your budget? :)"}, {"timstamp": "2017-02-10 10:01", "user": "Miaow", "body": "lol"}, {"timstamp": "2017-02-10 10:02", "user": "Miaow", "body": "my team is me and my budget is none"}, {"timstamp": "2017-02-10 10:03", "user": "icebox", "body": "Miaow: ah sorry... we interface only 500 Fortune companies :)"}, {"timstamp": "2017-02-10 10:03", "user": "icebox", "body": "Elarcis:"}, {"timstamp": "2017-02-10 10:04", "user": "icebox", "body": "Elarcis: strong dynamic type checking"}, {"timstamp": "2017-02-10 10:06", "user": "icebox", "body": "zomg: agreed... anyway it is a nice try :)"}, {"timstamp": "2017-02-10 10:13", "user": "icebox", "body": "Get Angular 1 Features in Angular 2 -"}], "label": "other"}
{"id": "93d594fc", "body": "", "comments": [{"timstamp": "2016-09-22 18:37", "user": "xochilpili", "body": "im trying to make an uniq array from another array, but i just having this issue that last item is always repeated"}, {"timstamp": "2016-09-22 18:37", "user": "xochilpili", "body": "any help?"}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "im just tired of this, i cant see what am i doing wrong"}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "or ..."}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "wtf is going on"}, {"timstamp": "2016-09-22 18:39", "user": "mst", "body": "xochilpili: how can anybody help if you don't even show us the code or the output? :("}, {"timstamp": "2016-09-22 18:39", "user": "xochilpili", "body": ""}, {"timstamp": "2016-09-22 18:39", "user": "xochilpili", "body": "mst, i was finish the plnkr"}, {"timstamp": "2016-09-22 18:40", "user": "xochilpili", "body": "finishing*"}, {"timstamp": "2016-09-22 18:40", "user": "xochilpili", "body": "results in the console"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "this code is illegible"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "duplicated .push with identical arguments instead of a function"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "random mixture of forEach and for() for no apparent reason"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "it's no wonder you can't debug this"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "I can barely read it"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "refactor it until it's (a) decomposed into function (b) at least vaguely consistent"}, {"timstamp": "2016-09-22 18:43", "user": "mst", "body": "should be rather easier to debug at that point"}, {"timstamp": "2016-09-22 18:43", "user": "xochilpili", "body": "mst, what? i havent found a different way to loop into the array, im not making this json it came for some f** API"}, {"timstamp": "2016-09-22 18:43", "user": "mst", "body": "what's wrong with forEach"}, {"timstamp": "2016-09-22 18:44", "user": "xochilpili", "body": "mst, what?"}, {"timstamp": "2016-09-22 18:44", "user": "mst", "body": "for(var i=0;i<tmpRates.length;i++){"}, {"timstamp": "2016-09-22 18:44", "user": "mst", "body": "^^ why are you doing that the hard way?"}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "because i want an uniq array based on boardName of each rate in the room then the only differences on each, is the number of adults, etc"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "and?"}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "i need some better ideas"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "how is that relevant to my question \"why are you not using forEach to iterate that?\""}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "foreach in the tmpRates?"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "exactly"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "C-style for is generally a footgun"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "that's why angular provides a foreach"}, {"timstamp": "2016-09-22 18:48", "user": "xochilpili", "body": "no reason"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "so clean it up. and then factor out functions. and *then* try and debug it."}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "your logic is obscured by the messiness of the code"}, {"timstamp": "2016-09-22 18:48", "user": "xochilpili", "body": "well, the main issue is that i cant make this array unique"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "..."}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "i have no logic right now, i have spent almost a day in this, really, that's why im here, for help"}, {"timstamp": "2016-09-22 18:49", "user": "mst", "body": "yes, and now you're refusing the help."}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "mst, what you mean?"}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "let me change the c-style"}, {"timstamp": "2016-09-22 18:49", "user": "mst", "body": "clean up the code until the logic is clearer, *then* we can try and debug the logic"}, {"timstamp": "2016-09-22 18:50", "user": "xochilpili", "body": "that's the help \"im refusing\"?"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "yes. your code is currently shit. if we make it less shit, it will be easier to find and fix the problem."}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "no, it bounces back and forth between forEach and for with copypasta in the middle"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "I've written code like this too"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "and I couldn't debug mine without refactoring it to be sane first either"}, {"timstamp": "2016-09-22 18:51", "user": "xochilpili", "body": "mst, copypasta?"}, {"timstamp": "2016-09-22 18:51", "user": "mst", "body": "the duplicated push"}, {"timstamp": "2016-09-22 18:52", "user": "xochilpili", "body": "mst, i could not make this in other way, how can i push and item that isnt there?"}, {"timstamp": "2016-09-22 18:53", "user": "xochilpili", "body": "mst, how can i push an item that isnt there? that's why i had to push twice, once when newRates is empty, and the other when isnt"}, {"timstamp": "2016-09-22 18:54", "user": "mst", "body": "xochilpili: wha?"}, {"timstamp": "2016-09-22 18:55", "user": "mst", "body": "xochilpili: why not set an empty thing to [] and then push onto it normally?"}, {"timstamp": "2016-09-22 18:56", "user": "xochilpili", "body": "mst, newRates is empty = []"}, {"timstamp": "2016-09-22 18:56", "user": "xochilpili", "body": "i dont understand what you mean, (also english issues);"}, {"timstamp": "2016-09-22 18:57", "user": "mst", "body": "xochilpili: then I don't understand the problem"}, {"timstamp": "2016-09-22 18:57", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 18:58", "user": "mst", "body": "xochilpili: still has a duplicated push()"}, {"timstamp": "2016-09-22 18:59", "user": "mst", "body": "xochilpili: 24 and 42 are the same code, copypasted"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, i have even 5 \"rates\" per room, then, what i need is to create an unique array from those rates and add the values of each"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, that part i cant figure it out how to \"avoid\""}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "have you ever seen the output?"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, in the console?"}, {"timstamp": "2016-09-22 18:59", "user": "mst", "body": "xochilpili: what's wrong with turning it into a function like I suggested?"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "I'm not looking at the console until I can actually read the code"}, {"timstamp": "2016-09-22 19:00", "user": "xochilpili", "body": "mst, what function?"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "xochilpili: what?"}, {"timstamp": "2016-09-22 19:00", "user": "xochilpili", "body": "mst, maybe if you see the console, can get a better idea, i cant express myself in english as i wanted to"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "addRateTo(newRates, tmpRate, rate);"}, {"timstamp": "2016-09-22 19:01", "user": "xochilpili", "body": "mst, oks"}, {"timstamp": "2016-09-22 19:01", "user": "mst", "body": "make that function. call it twice."}, {"timstamp": "2016-09-22 19:01", "user": "mst", "body": "copypasta is not easy to debug. javascript has functions for a reason."}, {"timstamp": "2016-09-22 19:02", "user": "xochilpili", "body": "mst, im on it"}, {"timstamp": "2016-09-22 19:04", "user": "xochilpili", "body": "mst, updated :"}, {"timstamp": "2016-09-22 19:06", "user": "mst", "body": "xochilpili: ok. and the console only has one entry per 'code'"}, {"timstamp": "2016-09-22 19:06", "user": "xochilpili", "body": "mst, are u there?"}, {"timstamp": "2016-09-22 19:07", "user": "mst", "body": "xochilpili: dude, it took that long for the plunker to reload"}, {"timstamp": "2016-09-22 19:07", "user": "mst", "body": "so, what's the problem?"}, {"timstamp": "2016-09-22 19:07", "user": "xochilpili", "body": "mst, yes, then check open room tree, then in the first index, check the \"rates\" and \"newRates\", you will notice that the last item in \"newRates\" is repeated twice"}, {"timstamp": "2016-09-22 19:08", "user": "xochilpili", "body": "and all this stuff was (unsuccessfully created) to make an unique array of \"rates\" add the num of adults, children, net, dailyRates, and so on"}, {"timstamp": "2016-09-22 19:08", "user": "mst", "body": "xochilpili: you're testing rateKey with .indexOf"}, {"timstamp": "2016-09-22 19:08", "user": "mst", "body": "xochilpili: but rateKey is an array"}, {"timstamp": "2016-09-22 19:09", "user": "xochilpili", "body": "mst, everything i googling about \"find item in array\" returns indexOf <<"}, {"timstamp": "2016-09-22 19:09", "user": "mst", "body": "xochilpili: ah, javascript, there's an array version as well as a string version"}, {"timstamp": "2016-09-22 19:10", "user": "xochilpili", "body": "zomg, what you mean?"}, {"timstamp": "2016-09-22 19:11", "user": "xochilpili", "body": "i tried with foo.indexOf ==-1"}, {"timstamp": "2016-09-22 19:11", "user": "xochilpili", "body": "zomg, i have used == -1 and i got and never got anything"}, {"timstamp": "2016-09-22 19:12", "user": "zomg", "body": "xochilpili: then you probably wanted to have != -1"}, {"timstamp": "2016-09-22 19:12", "user": "zomg", "body": "indexOf returns -1 if the result is not found, so which one you want depends on whether you want to check if something exists or does not exist"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "zomg, no, sorry, typo here, i want that, not found"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": ""}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "zomg, ^"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "mst, any idea?"}, {"timstamp": "2016-09-22 19:14", "user": "mst", "body": "xochilpili: I think you should log the input you're iterating over, and try and match things up"}, {"timstamp": "2016-09-22 19:14", "user": "mst", "body": "I have a meeting to be in now"}, {"timstamp": "2016-09-22 19:15", "user": "xochilpili", "body": "mst, i tried that, but i cant believe is too complicated to make an unique array from other array!"}, {"timstamp": "2016-09-22 19:16", "user": "mst", "body": "xochilpili: it normally isn't."}, {"timstamp": "2016-09-22 19:16", "user": "mst", "body": "xochilpili: I'd've used lodash's uniqby"}, {"timstamp": "2016-09-22 19:16", "user": "xochilpili", "body": "mst, then i want that \"isn't\" im off ideas"}, {"timstamp": "2016-09-22 19:17", "user": "xochilpili", "body": "mst, lodash uniqby ?"}, {"timstamp": "2016-09-22 19:17", "user": "mst", "body": "xochilpili: yes."}, {"timstamp": "2016-09-22 19:17", "user": "xochilpili", "body": "googling"}, {"timstamp": "2016-09-22 19:18", "user": "xochilpili", "body": "mst, loadash can also add (rate.net+=tmpRate.net) ???"}, {"timstamp": "2016-09-22 19:19", "user": "mst", "body": "xochilpili: no, but that's not 'make a unique array'"}, {"timstamp": "2016-09-22 19:19", "user": "mst", "body": "xochilpili: if you're trying to do that as well, then you probably wanted groupBy and then a sum()"}, {"timstamp": "2016-09-22 19:19", "user": "xochilpili", "body": "mst, i think lodash wont work for this"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "xochilpili: ok, then good luck with your code"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "if you won't debug it, and you won't write it a simpler way"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "I can't help any further"}, {"timstamp": "2016-09-22 19:21", "user": "xochilpili", "body": "mst, i lost more time trying to make the \"code more readable\" in order to get any help"}, {"timstamp": "2016-09-22 19:21", "user": "mst", "body": "and still didn't finish making the readability changes we suggested"}, {"timstamp": "2016-09-22 19:21", "user": "mst", "body": "so I'm bored of wasting my time now."}, {"timstamp": "2016-09-22 19:22", "user": "xochilpili", "body": "mst, i did the changes, also i have changed what zomg said about indexOF"}, {"timstamp": "2016-09-22 19:22", "user": "xochilpili", "body": "maybe u didnt see the link"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "for(var k=0;k<newRates.length;k++){"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "xochilpili: is still in the code"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "actually, I think that's the bug"}, {"timstamp": "2016-09-22 19:25", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 19:26", "user": "xochilpili", "body": "mst, what's the bug?"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "I think you're adding the tmpRate to more than one element of newRates"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "which would explain everything"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "this would be much clearer written as groupBy with a final sum() step"}, {"timstamp": "2016-09-22 19:27", "user": "xochilpili", "body": "mst, let me make this json more clear to you, please wait"}, {"timstamp": "2016-09-22 19:27", "user": "mst", "body": "I'm in a meeting now. either try and fix the code. or rewrite it sensibly with lodash."}, {"timstamp": "2016-09-22 19:28", "user": "mst", "body": "I'm not looking at this further, it's obviously better suited to a functional approach with lodash"}, {"timstamp": "2016-09-22 19:32", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 19:33", "user": "xochilpili", "body": "mst, mm, i think loadsh wont work in this"}, {"timstamp": "2016-09-22 19:33", "user": "xochilpili", "body": "anyone else, please?"}, {"timstamp": "2016-09-22 19:36", "user": "mst", "body": "xochilpili: why won't it work?"}, {"timstamp": "2016-09-22 19:37", "user": "mst", "body": "groupBy to get basically a dictionary of rateKey -> array[rate]"}, {"timstamp": "2016-09-22 19:37", "user": "mst", "body": "then you can sum each one together"}, {"timstamp": "2016-09-22 19:41", "user": "xochilpili", "body": "mst, i dont know how lodash works"}, {"timstamp": "2016-09-22 19:42", "user": "mst", "body": "xochilpili: did you read tyhe documentation for groupBy ?"}, {"timstamp": "2016-09-22 19:42", "user": "xochilpili", "body": "mst, im on it"}, {"timstamp": "2016-09-22 19:43", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, tmpRate.boardName) ; console.log(ss); Object {undefined; array[5]};"}, {"timstamp": "2016-09-22 19:47", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, function(b){ console.log(b); }); >> output : Object {undefined: Array[5]}"}, {"timstamp": "2016-09-22 19:47", "user": "xochilpili", "body": "what the fuck supposed to mean that undefined!!"}, {"timstamp": "2016-09-22 19:48", "user": "mst", "body": "you'd have to check what's in tmpRates"}, {"timstamp": "2016-09-22 19:49", "user": "mst", "body": "looks to me like _.groupBy(whatever, 'rateKey') would be a start"}, {"timstamp": "2016-09-22 19:53", "user": "xochilpili", "body": "mst, is it possible to groupBy(whatever, 'rateKey','another') ???"}, {"timstamp": "2016-09-22 19:53", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, ['boardName','rateClass']); << no"}, {"timstamp": "2016-09-22 19:55", "user": "xochilpili", "body": "zomg, you're right, i know that, but really i went to far using this for and another for and another... and also, in this way, the last item appears twice"}, {"timstamp": "2016-09-22 19:56", "user": "xochilpili", "body": "zomg, any idea, what could be ?"}, {"timstamp": "2016-09-22 19:57", "user": "xochilpili", "body": "or you're saying \"no\" just because?"}], "label": "other"}
{"id": "93d59545", "body": "", "comments": [{"timstamp": "2017-03-28 15:31", "user": "asteele", "body": "oh. my. god."}, {"timstamp": "2017-03-28 15:31", "user": "Elarcis", "body": "asteele: yes? what do you want me?"}, {"timstamp": "2017-03-28 15:32", "user": "Pyrrhus666", "body": "asteele: @obey Elarcis"}, {"timstamp": "2017-03-28 15:32", "user": "asteele", "body": "i just spent a solid 3 hours debugging this dumb shit. i was putting a formGroup directive on a ng-container, it was trying to grab an actual element to put css classes on for valid/invalid, but ng content isnt a real element. the errors were SO MISLEADING"}, {"timstamp": "2017-03-28 15:32", "user": "Pyrrhus666", "body": "why doesnt that work ?"}, {"timstamp": "2017-03-28 15:33", "user": "asteele", "body": "ng container isnt an element*"}, {"timstamp": "2017-03-28 15:35", "user": "icebox", "body": "asteele: codelyzer is what you are looking for :)"}, {"timstamp": "2017-03-28 15:35", "user": "icebox", "body": "asteele:"}, {"timstamp": "2017-03-28 15:36", "user": "asteele", "body": "interesting icebox"}, {"timstamp": "2017-03-28 15:37", "user": "asteele", "body": "is there a rule there that would have saved me?"}, {"timstamp": "2017-03-28 15:37", "user": "asteele", "body": "i dont see which one it would be"}, {"timstamp": "2017-03-28 15:37", "user": "icebox", "body": "asteele: Minko Gechev is the same author of de facto angular seed -"}, {"timstamp": "2017-03-28 15:38", "user": "asteele", "body": "man im so relieved to have that figured out, even if it was the dumbest shit ever, haven't been stuck that long on one thing in quite a while lol"}, {"timstamp": "2017-03-28 15:39", "user": "icebox", "body": ":P"}], "label": "other"}
{"id": "93d59559", "body": "", "comments": [{"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "man the average problem here seems to simple"}, {"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "meanwhile I have to figure out how to take a centered element and animate moving it without messing with the centering..."}, {"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "and oh wait, it might be centered in a weird way in a parent, so the parent's dimensions must be known to calculate the correct animation"}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait, the elements might not even be in DOM, so actually in order to calculate it we need to figure out the dimensions without them in DOM..."}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait, some of the values might not be there because they're being calculated based on aspect ratio..."}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait fuck this shit"}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": ":D"}], "label": "other"}
{"id": "93d59482", "body": "", "comments": [{"timstamp": "2017-02-27 14:58", "user": "songi", "body": "hi iceboc"}, {"timstamp": "2017-02-27 14:58", "user": "songi", "body": "*icebox"}, {"timstamp": "2017-02-27 14:58", "user": "icebox", "body": "songi: hey"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: resolved?"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "nope unfortunately"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: repeat me, please, the question"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "when I change the url and the I run a urlrouter sync"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: ah ok"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "the following navigatio"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "starts"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "but not succede"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "I don't get any error neither exception"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "and I don't know where/what investigate"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "could you suggest something?"}, {"timstamp": "2017-02-27 15:01", "user": "icebox", "body": "songi: at the moment, no idea... what is your use case?"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "I manipulate the url"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "I replace it"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "and then I trigger the sync"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "to trigger a \"reload\""}, {"timstamp": "2017-02-27 15:02", "user": "Elarcis", "body": "songi: the sync?"}, {"timstamp": "2017-02-27 15:03", "user": "songi", "body": "urlrouter.sync"}, {"timstamp": "2017-02-27 15:03", "user": "songi", "body": "what's wrong?"}, {"timstamp": "2017-02-27 15:04", "user": "Elarcis", "body": "songi: what's urlrouter?"}, {"timstamp": "2017-02-27 15:04", "user": "songi", "body": "ng UrlRouterService"}, {"timstamp": "2017-02-27 15:04", "user": "icebox", "body": "songi: that is what you think you should code... but what is your goal? what do you are trying to achieve?"}, {"timstamp": "2017-02-27 15:05", "user": "songi", "body": "I need to remove some query parameters from the url"}, {"timstamp": "2017-02-27 15:05", "user": "songi", "body": "and replace it"}, {"timstamp": "2017-02-27 15:05", "user": "Elarcis", "body": "songi: can't you just do a $state.go?"}, {"timstamp": "2017-02-27 15:05", "user": "icebox", "body": "songi: I see"}, {"timstamp": "2017-02-27 15:06", "user": "icebox", "body": "songi: did you try $location? $location.search('key', null)"}, {"timstamp": "2017-02-27 15:07", "user": "songi", "body": "it's an idea :)"}, {"timstamp": "2017-02-27 15:07", "user": "icebox", "body": "songi: credits to"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "but I'm afraid that it will mess up the router state"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "and the following sync"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "break something"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "and finally navigation doesn't succede"}, {"timstamp": "2017-02-27 15:09", "user": "songi", "body": "in my scenario the navigation starts but I don't get why it doesn't succede"}, {"timstamp": "2017-02-27 15:09", "user": "songi", "body": "*succede"}, {"timstamp": "2017-02-27 15:10", "user": "icebox", "body": "songi: this is another one"}, {"timstamp": "2017-02-27 15:11", "user": "songi", "body": "I see"}, {"timstamp": "2017-02-27 15:11", "user": "songi", "body": "thanks"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "songi: add those nice graphs to debug ui router states"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "Pyrrhus666: ^"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "Pyrrhus666: please the link above that"}, {"timstamp": "2017-02-27 15:12", "user": "icebox", "body": "Pyrrhus666: a plunker with ui router setup"}, {"timstamp": "2017-02-27 15:12", "user": "songi", "body": "which ones?"}, {"timstamp": "2017-02-27 15:12", "user": "icebox", "body": "songi: just a moment... Pyrrhus666 knows it"}, {"timstamp": "2017-02-27 15:12", "user": "Pyrrhus666", "body": "icebox, ah, yes, the visualiser... hold on"}, {"timstamp": "2017-02-27 15:14", "user": "Pyrrhus666", "body": "icebox, songi this thing, right :"}, {"timstamp": "2017-02-27 15:15", "user": "Pyrrhus666", "body": "you can just add the four includes under <!-- visualizer and url --> to any plunk"}, {"timstamp": "2017-02-27 15:16", "user": "songi", "body": "thanks"}, {"timstamp": "2017-02-27 15:36", "user": "Elarcis", "body": "Pyrrhus666: what is this sorcery?!"}, {"timstamp": "2017-02-27 15:37", "user": "Pyrrhus666", "body": "Elarcis, voodoo. it cost me a goat and same black candles."}, {"timstamp": "2017-02-27 15:37", "user": "Pyrrhus666", "body": "*some"}, {"timstamp": "2017-02-27 15:38", "user": "Elarcis", "body": "Pyrrhus666: tips: you don't need a new goat each time when you got a goatee"}, {"timstamp": "2017-02-27 15:38", "user": "Pyrrhus666", "body": "also : its simply lifted from examples in the ui-router docs. couldve save me a goat and some candles if I knew that before..."}, {"timstamp": "2017-02-27 15:38", "user": "Pyrrhus666", "body": "Elarcis, that may be, but I cant stand goatees when not on actual goats."}, {"timstamp": "2017-02-27 15:59", "user": "Elarcis", "body": "Did I already state that I hate jqPlot?"}, {"timstamp": "2017-02-27 15:59", "user": "Elarcis", "body": "Because I hate it"}, {"timstamp": "2017-02-27 16:00", "user": "Pyrrhus666", "body": "Elarcis, why not chart.js then :P"}, {"timstamp": "2017-02-27 16:00", "user": "Elarcis", "body": "freaking 2000-ish jQuery intensive charting plugin that is a pain to configure, limited, slow and ugly."}, {"timstamp": "2017-02-27 16:00", "user": "Elarcis", "body": "Pyrrhus666: we're so going to use d3 when we have some time to ditch it"}, {"timstamp": "2017-02-27 16:00", "user": "Pyrrhus666", "body": "Elarcis, also good."}, {"timstamp": "2017-02-27 16:02", "user": "icebox", "body": "Elarcis: that is right choice, d3"}, {"timstamp": "2017-02-27 16:02", "user": "Elarcis", "body": "Pyrrhus666: only catch is that we have custom non-linear scales and need coloring between two series, but nothing that can't be handled, I believe"}], "label": "other"}
{"id": "0ec1e38a", "body": "", "comments": [{"timstamp": "12:54", "user": "Paradisee", "body": "how can i create a cookie in angular?"}, {"timstamp": "12:56", "user": "Paradisee", "body": "ngx-cookie-service"}, {"timstamp": "12:56", "user": "OnceMe", "body": "there is also CookieService"}, {"timstamp": "12:56", "user": "Paradisee", "body": "do i have to use this ?"}, {"timstamp": "12:56", "user": "OnceMe", "body": "you can"}, {"timstamp": "12:56", "user": "OnceMe", "body": "but I would use localStorage/sessionStorage"}, {"timstamp": "12:57", "user": "OnceMe", "body": "depending on what do you need it for"}, {"timstamp": "12:57", "user": "Paradisee", "body": "i used lcoalstorage, but i don't know why the server can't read the jwt"}, {"timstamp": "12:57", "user": "OnceMe", "body": "do not store jwt in cookie"}, {"timstamp": "12:57", "user": "Paradisee", "body": "why not"}, {"timstamp": "13:04", "user": "SargoDarya", "body": "Paradisee: Server has no access to localStorage. If you have to just set the authorization header with a bearer token"}, {"timstamp": "13:04", "user": "Paradisee", "body": "SargoDarya: that's why i want to use cookie"}, {"timstamp": "13:05", "user": "SargoDarya", "body": "Paradisee:"}, {"timstamp": "13:05", "user": "Paradisee", "body": "thanks"}, {"timstamp": "13:05", "user": "Paradisee", "body": "or even a header"}, {"timstamp": "13:05", "user": "Paradisee", "body": "but i need to find out how to use an interceptor on each http"}], "label": "other"}
{"id": "93d594c7", "body": "", "comments": [{"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "angular 6 already? things moves too fast"}, {"timstamp": "2018-04-10 11:53", "user": "Pyrrhus666", "body": "jlebrech, and rxjs 6. prepare for breakage."}, {"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "could have at least made a transition between 1.x and 2 ffs."}, {"timstamp": "2018-04-10 11:53", "user": "icebox", "body": "jlebrech: by design, every 6 months"}, {"timstamp": "2018-04-10 11:55", "user": "icebox", "body": "jlebrech:"}, {"timstamp": "2018-04-10 11:55", "user": "jlebrech", "body": "gonna split my app into 5 and rewrite individual bits in @ctrl.latest_angular"}, {"timstamp": "2018-04-10 11:56", "user": "jlebrech", "body": "they could have gave us 2, but also gave us a 1.9 that deprecated things that no longer exist. still would have to rewrite things"}, {"timstamp": "2018-04-10 11:57", "user": "icebox", "body": "jlebrech: totally agreed"}, {"timstamp": "2018-04-10 11:58", "user": "icebox", "body": "jlebrech: this is what we have"}, {"timstamp": "2018-04-10 11:58", "user": "jlebrech", "body": "i think splitting my app into multiple and rewriting the worse bits in latest ver is the best bet."}, {"timstamp": "2018-04-10 11:59", "user": "icebox", "body": "jlebrech: I updated my PoC to 5.2.9 and found an interesting stackblitz for the integration between AngularJS and Angular... see"}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: but maybe this is good for progressively rewriting."}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: i've made attempts, but I think I can just use the same session data for unconnected apps and put them on separate pages :)"}, {"timstamp": "2018-04-10 12:02", "user": "jlebrech", "body": "icebox: can use my 1 file login.js app as proof of concept"}, {"timstamp": "2018-04-10 13:26", "user": "icebox", "body": "back"}], "label": "other"}
{"id": "8addb26c", "body": "", "comments": [{"timstamp": "2018-02-25 01:17", "user": "Marble68", "body": "s2013: Do the filter as a function, I think."}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "Q: Is there something like ng-inspector for Angular?"}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "something to examine scope in debug?"}, {"timstamp": "2018-02-25 01:22", "user": "Marble68", "body": "Somethign anyone might recommend"}], "label": "feature"}
{"id": "93d59542", "body": "", "comments": [{"timstamp": "2016-08-03 15:05", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g. /msg NickServ identify <password>. ) Does Angular 2 use bluebird as the Promise library ?"}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g."}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "...as I don't know how to tell"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: wow, you /almost/ pasted sensitive data, good job :D"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: (also, I don't know)"}, {"timstamp": "2016-08-03 15:11", "user": "icebox", "body": "fiddo: no"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "i know im an idiot"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "...anyway, i want to use the same Promise library when i code in node as per the Promise library in Angular 2"}, {"timstamp": "2016-08-03 15:13", "user": "icebox", "body": "fiddo: perfect"}, {"timstamp": "2016-08-03 15:13", "user": "fiddo", "body": "when Angular 2 installss, there seems to be alot of Promise libraries in there - which one is it ?"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: no need to use a lib... Promise is native :)"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: AngularJS 2.0 Promise Design Doc"}, {"timstamp": "2016-08-03 15:15", "user": "fiddo", "body": "what do u mean by 'native' ? Do u mean the Angular 2 comes with it's 'own' Promise library? (i.e. written by Angular team?)"}, {"timstamp": "2016-08-03 15:15", "user": "icebox", "body": "fiddo: open devtools console and type: Promise"}, {"timstamp": "2016-08-03 15:16", "user": "fiddo", "body": "devtools?!? sorry Im developing on a windows box"}, {"timstamp": "2016-08-03 15:16", "user": "icebox", "body": "fiddo: devtools is in the browser :)"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "fiddo: f12 in your browser"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "(usually)"}, {"timstamp": "2016-08-03 15:18", "user": "celuidufond", "body": "icebox: looks nice. Just a question : as it's a memory db : means no storage for non connecter people without an adapter ?"}, {"timstamp": "2016-08-03 15:19", "user": "icebox", "body": "celuidufond: yep... but I suppose it is simple like localStorage.set(myDb); // or something like that"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: or start node (6.x) console and at the prompt type... Promise... and you have your Promises :) without require any lib :)"}, {"timstamp": "2016-08-03 15:20", "user": "fiddo", "body": "icebox: great thanks. yes i've read that. so it's an Angular2-specific library. If I want to use that Promise library, say in Node, then I can't. I'll use another one. Is that right?"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: without requiring any lib"}, {"timstamp": "2016-08-03 15:21", "user": "icebox", "body": "fiddo: about node, read above"}, {"timstamp": "2016-08-03 15:21", "user": "uru", "body": "fiddo: They are built in to JS, you don't need to do anything to start using them other than start using them"}, {"timstamp": "2016-08-03 15:22", "user": "icebox", "body": "fiddo: Promises are a defacto standard within JavaScript community and is part of the ECMAScript Standard."}, {"timstamp": "2016-08-03 15:25", "user": "fiddo", "body": "Yes I'm on Node >=6. I see. If wanting to use Promises using Typescript in Node, I'll need a library though, right?"}, {"timstamp": "2016-08-03 15:25", "user": "icebox", "body": "fiddo: no :)"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "oh dear im confused. theres no beginners guide for this for a newbie hehe. I can use Promises in Typescript in Angular 2 just fine. Now I want to use Promises in Typescript in Node. My understanding is that when Typescript transpiles to Javascript to run on Node, it needs a Promise library. Otherwise how would Typescript resolve the 'Promise' keywo"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "rd?"}, {"timstamp": "2016-08-03 15:32", "user": "icebox", "body": "fiddo: I am afraid you are confusing the lib with the type definitions"}, {"timstamp": "2016-08-03 15:33", "user": "icebox", "body": "fiddo:"}, {"timstamp": "2016-08-03 15:33", "user": "fiddo", "body": "ok will read :)"}, {"timstamp": "2016-08-03 15:34", "user": "icebox", "body": "fiddo: ignore \"Promises are not in Node yet\"... they are there"}, {"timstamp": "2016-08-03 15:35", "user": "icebox", "body": "fiddo: the last answers are relevant"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "So.... recent versions of Node has Promises built-in. If u code in Javascript, you have immediate access to Promises with no problem. If u code in Typescript, Typescript will need the Promise declaration file in order for the Transpiler to 'see' the 'Promise' keyword you have written in Typescript. Thus the emitted Javacript code will be able to th"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "en access the Promise features built-in to Node. Is that right ?"}, {"timstamp": "2016-08-03 15:52", "user": "icebox", "body": "fiddo: yes and no"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: your backend is Node.js (Javascript), your frontend is Typescript (compiled to Javascript)"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: unless you want to use Typescript also in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "yes. using Typescript in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "icebox", "body": "fiddo: so... your above statement is correct"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "my issue is with Node, NOT the browser"}, {"timstamp": "2016-08-03 15:56", "user": "fiddo", "body": "icebox: thanks. i think i get it"}, {"timstamp": "2016-08-03 15:56", "user": "icebox", "body": "fiddo: cool!"}, {"timstamp": "2016-08-03 15:59", "user": "icebox", "body": "fiddo: no... you need to add type definitions with \"typings\""}, {"timstamp": "2016-08-03 15:59", "user": "fiddo", "body": "As Node uses es6 Promises natively, I just need the es6-shim. That way Typescript will understand the Promise keyword"}, {"timstamp": "2016-08-03 16:00", "user": "icebox", "body": "fiddo: es6-shim is use to add Promise feature to enviroments without that feature"}, {"timstamp": "2016-08-03 16:08", "user": "fiddo", "body": "icebox: oh. the shim is for a browser that doesn't support Promises. is that right?"}, {"timstamp": "2016-08-03 16:09", "user": "icebox", "body": "fiddo: correct"}], "label": "other"}
{"id": "93d594fa", "body": "", "comments": [{"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "Hey guys. I have just ran into a flex bug with material css"}, {"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "in Safari of course <:/"}, {"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "has anyone got a solution for this or a hackable work around?"}, {"timstamp": "2016-08-12 11:07", "user": "Elarcis", "body": "DarkStar1: is not using Safari a viable option?"}, {"timstamp": "2016-08-12 11:08", "user": "DarkStar1", "body": "You know, The hipster movement is in force and they want safari"}, {"timstamp": "2016-08-12 11:08", "user": "DarkStar1", "body": "So no :)"}, {"timstamp": "2016-08-12 11:08", "user": "Elarcis", "body": "too bad hipster don't have to work with Safari"}, {"timstamp": "2016-08-12 11:08", "user": "Elarcis", "body": "they'd stop using it and would create a Xth hyped browser"}, {"timstamp": "2016-08-12 11:09", "user": "DarkStar1", "body": "Well we didn't want IE for years but created workarounds for that. So we can also tolerate Safari for all its quirks too"}, {"timstamp": "2016-08-12 11:10", "user": "ngWalrus", "body": "IE is still shit :("}, {"timstamp": "2016-08-12 11:11", "user": "DarkStar1", "body": "I take it the absence of answers means there is no solution/way-around this"}, {"timstamp": "2016-08-12 11:11", "user": "ngWalrus", "body": "even edge is pretty shit"}, {"timstamp": "2016-08-12 11:11", "user": "ngWalrus", "body": "but not as shit as IE 9 and downwards"}, {"timstamp": "2016-08-12 11:12", "user": "DarkStar1", "body": "Edge = IE. It's just a name change to fool the next generation of upcoming web devs who have not suffered the IE near monopoly"}, {"timstamp": "2016-08-12 11:15", "user": "ngWalrus", "body": "I like how at university microsoft shill lecture the guy was like \"IE 8(this was back in 2011 iirc) is going to be the best browser. It's so blazingly fast that sometimes it works faster than sites do\""}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "what he meant is that it ignores document.readys and shit like that and triees to run js and do dom shit before the dom is ready"}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "or was it ie 9"}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "I forget"}, {"timstamp": "2016-08-12 11:16", "user": "B3nd3r", "body": "I'm trying to apply conditionnal classes with ngClass, on angular 1.x, I made it like this :"}, {"timstamp": "2016-08-12 11:16", "user": "B3nd3r", "body": "`<span ng-class=\"{'OK': 'label label-success', 'NOK': 'label label-danger', 'Missing': 'label label-danger', 'OFF': 'label label-warning'}[event.status]\"`"}, {"timstamp": "2016-08-12 11:17", "user": "B3nd3r", "body": "now with angular 2, I have to do :"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "`<span [ngClass]=\"{'label': event.status, 'label-success': event.status === 'OK', 'label-danger': event.status === 'NOK', 'label-warning': event.status === 'Missing', 'label-info': event.status === 'OFF' }\">`"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "so the first 'label' thing (bootstrap 3) have to be outside"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "any way to shorten that?"}, {"timstamp": "2016-08-12 11:20", "user": "Elarcis", "body": "B3nd3r: didn't even know the {values}[variable] was valid"}, {"timstamp": "2016-08-12 11:20", "user": "B3nd3r", "body": "on ng 1?"}, {"timstamp": "2016-08-12 11:20", "user": "Elarcis", "body": "yes"}, {"timstamp": "2016-08-12 11:20", "user": "B3nd3r", "body": "had to search for days for that xD"}, {"timstamp": "2016-08-12 11:21", "user": "Elarcis", "body": "B3nd3r: I guess you might want to have a labelClasses getter in your component that makes the switch"}, {"timstamp": "2016-08-12 11:22", "user": "B3nd3r", "body": "that's the easy solution of course, think there isn't another way yet"}, {"timstamp": "2016-08-12 11:22", "user": "B3nd3r", "body": "and between 1 & 2, tests are inverted"}, {"timstamp": "2016-08-12 11:23", "user": "B3nd3r", "body": "in 1 it's test:class in 2 it's class:test"}, {"timstamp": "2016-08-12 11:23", "user": "B3nd3r", "body": "or maybe I'm using it badly :/"}, {"timstamp": "2016-08-12 11:23", "user": "Elarcis", "body": "B3nd3r: they're inverted because you're making a switch, but in 1.x I'm also used to class:test"}, {"timstamp": "2016-08-12 11:26", "user": "B3nd3r", "body": "ok"}], "label": "other"}
{"id": "93d594a7", "body": "", "comments": [{"timstamp": "2016-05-26 18:32", "user": "tristanp", "body": "how can it be that I am returning a promise from a mocha test and still getting the \"done() not called in 2000 ms\" error? here is what the test and output is:"}, {"timstamp": "2016-05-26 18:32", "user": "tristanp", "body": "is there some subtlety to the $httpBackend that I'm not understanding?"}], "label": "other"}
{"id": "93d59526", "body": "", "comments": [{"timstamp": "2016-09-21 21:12", "user": "ReScO", "body": "Can i use AngularJS to display realtime data?"}, {"timstamp": "2016-09-21 21:12", "user": "SaltyCatFish", "body": "ReScO: It won't be realtime"}, {"timstamp": "2016-09-21 21:12", "user": "SaltyCatFish", "body": "ReScO: Angular goes on a digest cycle"}, {"timstamp": "2016-09-21 21:13", "user": "SaltyCatFish", "body": "ReScO: id think it'd be accurate to a second or two"}, {"timstamp": "2016-09-21 21:13", "user": "ReScO", "body": "SaltyCatFish: i need realtime performance :("}, {"timstamp": "2016-09-21 21:14", "user": "jdummy", "body": "angular will not stop you from displaying realtime data"}, {"timstamp": "2016-09-21 21:15", "user": "jdummy", "body": "ReScO: where will the data come from?"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "angular wants to manage your view for you. If you're pushing data into your app without angular knowing, it will not update the view"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "the solution is simply to tell it to update the view"}, {"timstamp": "2016-09-21 21:16", "user": "ReScO", "body": "jdummy: a python script, it comes in randomly i guess."}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "but how will JavaScript get the data? polling http requests?"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "websockets?"}, {"timstamp": "2016-09-21 21:18", "user": "ReScO", "body": "websockets probably, if possible Redis?"}, {"timstamp": "2016-09-21 21:18", "user": "ReScO", "body": "could just pump WS data to AngularJS"}, {"timstamp": "2016-09-21 21:18", "user": "jdummy", "body": "yep, you just do it"}, {"timstamp": "2016-09-21 21:19", "user": "jdummy", "body": "if you're pushing new data onto a controller $scope *outside* of an angular event or async function, you'll just need to tell angular that something has changed. Usually $timeout works well for that purpose"}, {"timstamp": "2016-09-21 21:19", "user": "jdummy", "body": "in your controller: $timeout(function(){ // fetch some data and push it into a scope array })"}, {"timstamp": "2016-09-21 21:20", "user": "ReScO", "body": "I haven't ever worked with Angular yet, but i'm trying to decide what will give me a GUI for what i'm making"}, {"timstamp": "2016-09-21 21:20", "user": "ReScO", "body": "I saw React and Angular2 going head to head according to the internet, but i'm not even sure it's going to work for what i'm trying to do"}, {"timstamp": "2016-09-21 21:21", "user": "jdummy", "body": "my opinion is that angular experience will do well for you in the long run. but react is great engineering as well (I don't have experience with react though)"}, {"timstamp": "2016-09-21 21:21", "user": "ReScO", "body": "Basically, i'm trying to make a tradebot in python, but the GUI stuff from python is terrible, so i want to use something different, and \"real-time\" fast for when i push data from, i guess, the websocket"}], "label": "other"}
{"id": "93d59528", "body": "", "comments": [{"timstamp": "2016-05-26 17:22", "user": "Jeroen2", "body": "I've got an property with an array in it. But I only want 0-2 results."}, {"timstamp": "2016-05-26 17:22", "user": "Jeroen2", "body": "How can I do that?"}, {"timstamp": "2016-05-26 17:22", "user": "roadrunneratwast", "body": "you could split the array?"}, {"timstamp": "2016-05-26 17:23", "user": "sunimasuno", "body": "Jeroen2: slice"}, {"timstamp": "2016-05-26 17:23", "user": "sunimasuno", "body": "roadrunneratwast: you never actually instantiate a promise object in your code that I can see"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "you pass the return value of the .then"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "which is an array"}, {"timstamp": "2016-05-26 17:24", "user": "roadrunneratwast", "body": "but isn't the $http.get() a promise object?"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "You .then off it already"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "so you don't pass the promise any further"}, {"timstamp": "2016-05-26 17:25", "user": "sunimasuno", "body": "you could just wrap that array in a promise that immediately resolves"}, {"timstamp": "2016-05-26 17:25", "user": "roadrunneratwast", "body": "but that's what i do in the working example"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "Hmmm..."}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "this works fine when the code is not part of the submitGraphRequest()"}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "i commented out he top part that works"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "So the commented one, lines #5-30 is the good or bad one?"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "ah"}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "is the good one"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "thanks"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "sorry i should have made that clear in the pastern"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "it's when the promise is created in the event callback"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "that it doesn't work"}, {"timstamp": "2016-05-26 17:27", "user": "sunimasuno", "body": "^_^ is cool, this is kinda a fun problem"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "no"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "it isn"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "t"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "haha"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "i think maybe it has to do with the isolate scope?"}, {"timstamp": "2016-05-26 17:28", "user": "roadrunneratwast", "body": "maybe when the directive is created it has access to the initial state of the containing directive"}, {"timstamp": "2016-05-26 17:28", "user": "sunimasuno", "body": "I mean, I always use directive as syntax for a reason, $scope is tricky"}, {"timstamp": "2016-05-26 17:28", "user": "sunimasuno", "body": "directive as? controller as >.<"}, {"timstamp": "2016-05-26 17:28", "user": "roadrunneratwast", "body": "i could try that ..."}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "i don't have a lot of control over the am-charts directive"}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "only the external directive that is wrapping it"}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "it might be a lousy component for all i know"}, {"timstamp": "2016-05-26 17:29", "user": "sunimasuno", "body": "Yeah, I've never touched it myself"}, {"timstamp": "2016-05-26 17:30", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:30", "user": "roadrunneratwast", "body": "blah"}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "wait..."}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "roadrunneratwast: where do you return from your callback?"}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "you don't, right?"}, {"timstamp": "2016-05-26 17:31", "user": "roadrunneratwast", "body": "nope"}, {"timstamp": "2016-05-26 17:32", "user": "Jeroen2", "body": "sunimasuno: but what if it's a scope var?"}, {"timstamp": "2016-05-26 17:32", "user": "Jeroen2", "body": "ng-repeat=\"item in accordionData\" <-- I only want the first 2 results."}, {"timstamp": "2016-05-26 17:33", "user": "roadrunneratwast", "body": "let me see if i can hack the js fiddle provide by the designer of the component"}, {"timstamp": "2016-05-26 17:33", "user": "sunimasuno", "body": "if you want an array inside a repeat you usually want a filter Jeroen2 you want this one"}, {"timstamp": "2016-05-26 17:34", "user": "sunimasuno", "body": "Jeroen2: which just runs splice() under the hood"}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": "@sunimasuno -- let's just work with the jsfiddle"}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": ""}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": "how would you make this.dataFromPromise react to a button press?"}, {"timstamp": "2016-05-26 17:38", "user": "sunimasuno", "body": "so we basically want to change the options when a button is pushed?"}, {"timstamp": "2016-05-26 17:38", "user": "roadrunneratwast", "body": "yEAH"}, {"timstamp": "2016-05-26 17:38", "user": "roadrunneratwast", "body": "i am toddling with it ..."}, {"timstamp": "2016-05-26 17:38", "user": "sunimasuno", "body": "ok, I think I see the issue here"}, {"timstamp": "2016-05-26 17:39", "user": "sunimasuno", "body": "I think amchart is assuming the data in, and not reacting to it changing over time"}, {"timstamp": "2016-05-26 17:39", "user": "sunimasuno", "body": "not 100% on that, checking"}, {"timstamp": "2016-05-26 17:39", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:39", "user": "roadrunneratwast", "body": "i think that is the problem"}, {"timstamp": "2016-05-26 17:40", "user": "roadrunneratwast", "body": "so i need to abandon it maybe?"}, {"timstamp": "2016-05-26 17:40", "user": "sunimasuno", "body": "One sec, lemme look at something"}, {"timstamp": "2016-05-26 17:40", "user": "roadrunneratwast", "body": "or maybe wrap the button press in a promise?"}, {"timstamp": "2016-05-26 17:41", "user": "sunimasuno", "body": "roadrunneratwast: so the whole thing is apache liscense, so you can edit your own version, and it's tiny code,"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "that might be right"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:41", "user": "sunimasuno", "body": "So I'd build my own version, instead of a wrapper"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "what do you mean by build your own?"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "it's a jQuery library"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "and i could just ignore the custom directive"}, {"timstamp": "2016-05-26 17:43", "user": "sunimasuno", "body": "found something"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "o?"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "there's an update data event that it's watching for"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "line #256"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "yeah. i see that now"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "so how do you proc it?"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "so just hook into that"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "i don't"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "but i should sent that event?"}, {"timstamp": "2016-05-26 17:45", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "you are the man"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "or woman"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "not sure"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:45", "user": "sunimasuno", "body": "XD any time!"}, {"timstamp": "2016-05-26 17:46", "user": "sunimasuno", "body": "angularjs890: because you aren't including angularjs itself"}, {"timstamp": "2016-05-26 17:47", "user": "Jeroen2", "body": "Hmm sunimasuno one more thing? :)"}, {"timstamp": "2016-05-26 17:47", "user": "angularjs890", "body": "sunimasuno its build in jsfiddle"}, {"timstamp": "2016-05-26 17:47", "user": "angularjs890", "body": "sunimasuno built*"}, {"timstamp": "2016-05-26 17:47", "user": "Jeroen2", "body": "When I initiate this: ng-class=\"{open: $index==accordionActive, closed: $index!=accordionActive}\" it works, but when I click on a div that changes the accordionActive to another number it hides all dives instead of opening one."}, {"timstamp": "2016-05-26 17:47", "user": "sunimasuno", "body": "angularjs890: try it in this one"}, {"timstamp": "2016-05-26 17:49", "user": "sunimasuno", "body": "ok, Jeroen2 that's a little bit of an odd way, is that how accordion wants you do control it? Normally what we'd do is use ng-show or ng-if or a filter ont he repeat, prefereably the last one, to show things in a list"}, {"timstamp": "2016-05-26 17:49", "user": "angularjs890", "body": "sunimasuno I want to use the \"as\" syntax"}, {"timstamp": "2016-05-26 17:50", "user": "Jeroen2", "body": "sunimasuno: no I was just searching for a way I could make this."}, {"timstamp": "2016-05-26 17:50", "user": "Jeroen2", "body": "I'll look for it tomorrow. Thanks anyway."}, {"timstamp": "2016-05-26 17:51", "user": "angularjs890", "body": "sunimasuno I don't get why this example works in jsfiddle and not with my local browser"}, {"timstamp": "2016-05-26 17:52", "user": "sunimasuno", "body": "angularjs890: now try"}, {"timstamp": "2016-05-26 17:52", "user": "sunimasuno", "body": "the real trick here is look at the left for \"external sources\""}, {"timstamp": "2016-05-26 17:53", "user": "sunimasuno", "body": "you'll see I'm pulling in an old version of angular, you're not pulling in one"}, {"timstamp": "2016-05-26 17:53", "user": "angularjs890", "body": "sunimasuno so, the cdn link doesn't work?"}, {"timstamp": "2016-05-26 17:53", "user": "sunimasuno", "body": "just add a version of angular there and life should get better"}, {"timstamp": "2016-05-26 17:54", "user": "angularjs890", "body": "sunimasuno but in my local env?"}, {"timstamp": "2016-05-26 17:54", "user": "sunimasuno", "body": "I don't see it if it's there, and the console error is a lack of angularjs error"}, {"timstamp": "2016-05-26 17:55", "user": "angularjs890", "body": "sunimasuno Just try my code win your local machine and see"}, {"timstamp": "2016-05-26 17:55", "user": "angularjs890", "body": "sunimasuno I guess that I have to download the script itself instead using the cdn script link"}, {"timstamp": "2016-05-26 17:58", "user": "sunimasuno", "body": "angularjs890: where is your cdn script linnk?"}, {"timstamp": "2016-05-26 17:58", "user": "angularjs890", "body": "sunimasuno Iv'e tried it in two places. header and bottom of the body"}, {"timstamp": "2016-05-26 18:10", "user": "sunimasuno", "body": "yeah, angularjs890 no idea what's up with your fiddle"}, {"timstamp": "2016-05-26 18:11", "user": "angularjs890", "body": "sunimasuno synax error, wrote scr instead of src"}, {"timstamp": "2016-05-26 18:11", "user": "sunimasuno", "body": ">.<"}, {"timstamp": "2016-05-26 18:11", "user": "sunimasuno", "body": "Well... now we know"}, {"timstamp": "2016-05-26 18:12", "user": "sunimasuno", "body": "and I couldn't find it either, gonna have to live with that one"}], "label": "other"}
{"id": "93d5949a", "body": "", "comments": [{"timstamp": "2017-05-30 15:41", "user": "lorenx", "body": "how can i call a service that updates a controller scope from another controller?"}, {"timstamp": "2017-05-30 15:43", "user": "Elarcis", "body": "lorenx: you don't"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "lorenx: XD shall i?"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "Elarcis: shall i?*"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": ":P"}, {"timstamp": "2017-05-30 15:43", "user": "lorenx", "body": "how can i deal with this scenario then?"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "Services"}, {"timstamp": "2017-05-30 15:43", "user": "Elarcis", "body": "lorenx: see here"}, {"timstamp": "2017-05-30 15:44", "user": "Elarcis", "body": "lorenx: services provide data and components fetch it, calls only go from the controller to the service and not the opposite"}, {"timstamp": "2017-05-30 15:47", "user": "lorenx", "body": "Elarcis: so you mean that i have to keep myVar content within the service?"}, {"timstamp": "2017-05-30 15:50", "user": "Elarcis", "body": "lorenx: no"}, {"timstamp": "2017-05-30 15:50", "user": "lorenx", "body": "Elarcis: good ^_^"}, {"timstamp": "2017-05-30 15:52", "user": "lorenx", "body": "Elarcis: i saw your example, it seems that it keeps the increment variable within the service..."}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "lorenx:"}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "no, it uses the service to make the data shared"}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "lorenx: ideally, your service is a black box that's shared between controllers that inject it"}, {"timstamp": "2017-05-30 15:55", "user": "jlebrech", "body": "you can do stuff to that shared variable, but might aswell have helper functions in the service no?"}, {"timstamp": "2017-05-30 15:55", "user": "jlebrech", "body": "if it's a function that that be performed from more than one place?"}, {"timstamp": "2017-05-30 15:57", "user": "Elarcis", "body": "jlebrech: of course"}, {"timstamp": "2017-05-30 15:57", "user": "Elarcis", "body": "here it's a simple example, so the object is just shared"}, {"timstamp": "2017-05-30 16:17", "user": "lorenx", "body": "Elarcis: excuse me, why getData() must return an object and it cannot just return the value?"}, {"timstamp": "2017-05-30 16:21", "user": "Elarcis", "body": "lorenx: JS references"}, {"timstamp": "2017-05-30 16:21", "user": "Elarcis", "body": "lorenx: the template is analyzed constantly to see what changes"}, {"timstamp": "2017-05-30 16:22", "user": "lorenx", "body": "only objects are analyzed? not primitives?"}, {"timstamp": "2017-05-30 16:23", "user": "notsacho", "body": "lorenx, short answer no, long answer is really long and it involves how angular's watches work"}, {"timstamp": "2017-05-30 16:24", "user": "lorenx", "body": "short is ok ;)"}, {"timstamp": "2017-05-30 16:24", "user": "notsacho", "body": "it's a rule of thumb that whenever you're binding an expression it's a good idea to bind to a property of an object"}, {"timstamp": "2017-05-30 16:30", "user": "lorenx", "body": "Elarcis: and sorry, this might be stupid but... why sharedService.increment doesn't want any parenthesis? isn't it a service function just like sharedService.getData() is?"}, {"timstamp": "2017-05-30 16:32", "user": "lorenx", "body": "but i guess it's not a function call though, just a callback binding, right?"}, {"timstamp": "2017-05-30 16:40", "user": "Elarcis", "body": "lorenx: everything is object"}, {"timstamp": "2017-05-30 16:40", "user": "Elarcis", "body": "lorenx: hence functions are objects"}, {"timstamp": "2017-05-30 17:05", "user": "Elarcis", "body": "fucking Semantic-UI implements a dropdown, but has no 'lazy-load' option"}, {"timstamp": "2017-05-30 17:06", "user": "Elarcis", "body": "\"need one dropdown per repeated item? FUCK YOU, we'll instantiate your 87 dropdowns in one go on view load!\""}, {"timstamp": "2017-05-30 17:07", "user": "Elarcis", "body": "\"and god forbid we optimize the thing for the heaviest calculations done on first click, no no, let's do everything at once, so it's the slowest operation, for dropdowns you won't even use\""}], "label": "other"}
{"id": "93d5954b", "body": "", "comments": [{"timstamp": "2018-07-20 04:15", "user": "Techdeck", "body": "hey everyone! I'd like to build a standalone angular library. If I run ng new ... it creates a new project, to run 'ng generate library ...' I need an entire angular project. Is there a way to just create the library without the outside project? at some point I'd like to just post this library on the global npm repository (without the wrapping project)"}, {"timstamp": "2018-07-20 04:15", "user": "Techdeck", "body": "this is using angular 6 btw"}, {"timstamp": "2018-07-20 05:07", "user": "Techdeck", "body": "never mind, figured it out"}], "label": "other"}
{"id": "93d59508", "body": "", "comments": [{"timstamp": "2016-05-22 06:45", "user": "Narfinger", "body": "hiho, i have a md-autocomplete which has a new scope and fills a variable in its scope but I want to fill the variable in the root scope, how do i do this?"}, {"timstamp": "2016-05-22 06:54", "user": "Narfinger", "body": "ah i think i solved it"}], "label": "other"}
{"id": "0edea35e", "body": "", "comments": [{"timstamp": "17:40", "user": "anddam", "body": "howdy"}, {"timstamp": "17:41", "user": "anddam", "body": "in template-driven form can I a built-in validator that is only applied if there is data?"}, {"timstamp": "17:41", "user": "anddam", "body": "namely I have an optional birth-date field where I want the DD/MM/YYYY format"}, {"timstamp": "17:41", "user": "ray02", "body": "yep"}, {"timstamp": "17:42", "user": "ray02", "body": "anddam: with is required"}, {"timstamp": "17:42", "user": "anddam", "body": "with?"}, {"timstamp": "17:42", "user": "ray02", "body": "\"is required\""}, {"timstamp": "17:42", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:42", "user": "anddam", "body": "I figured Validators.pattern fits the bill but I want it to only be checked if there is actual data"}, {"timstamp": "17:43", "user": "anddam", "body": "but that would always return ValidationErrors if the field is empty"}, {"timstamp": "17:43", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:44", "user": "ray02", "body": "is not enough ?"}, {"timstamp": "17:52", "user": "anddam", "body": "well, that seems the opposite of what I wanted"}, {"timstamp": "17:52", "user": "anddam", "body": "it will mark as non-valid an empty field"}, {"timstamp": "17:55", "user": "anddam", "body": "I want the field to be optional, but _if_ filled then match a pattern"}, {"timstamp": "17:55", "user": "anddam", "body": "I figure I need a custom validator for that, is that right?"}, {"timstamp": "17:58", "user": "ray02", "body": "anddam: sorry it's not totally clear, with pattern you check if what is typed inside respect a pattern"}, {"timstamp": "17:58", "user": "ray02", "body": "is't this what you want?"}, {"timstamp": "17:59", "user": "ray02", "body": "*isn't"}, {"timstamp": "18:01", "user": "anddam", "body": "ok, but I'd like the field to be valid if a) it is empty or b) it has a content and this content is DD/MM/YYYY"}, {"timstamp": "18:02", "user": "anddam", "body": "the pattern can obviously be expressed in regex"}, {"timstamp": "18:02", "user": "anddam", "body": "but I'm asking if I can combine built-in validators with logical operators"}, {"timstamp": "18:05", "user": "ray02", "body": "ahh now i get it, umm i think yes you are right you need a custom validator where you can add some personal logic"}, {"timstamp": "18:07", "user": "anddam", "body": "I see, thanks"}, {"timstamp": "18:12", "user": "ray02", "body": "because as you can notice, the validator is an array so no logic inside"}, {"timstamp": "18:25", "user": "anddam", "body": "yep, and no function to act on those as operators"}, {"timstamp": "18:25", "user": "anddam", "body": "I'm having a bit of hard time understanding this (control: AbstractControl): { [key: string]: any } | null => { ... }"}, {"timstamp": "18:25", "user": "anddam", "body": "the ellipsis are mine, that's a fat-arrow function accepting one argument of type AbastractControl and returning... what?"}, {"timstamp": "18:25", "user": "anddam", "body": "either null or an object"}, {"timstamp": "18:26", "user": "anddam", "body": "but the object has [key: string] as property, that I do not get"}, {"timstamp": "18:26", "user": "anddam", "body": "why the array notation?"}, {"timstamp": "18:26", "user": "anddam", "body": "does it allow for multiple properties as long as their \"name\" is a string?"}, {"timstamp": "18:26", "user": "anddam", "body": "ng generate directives blahblablah"}, {"timstamp": "18:27", "user": "anddam", "body": "no sorry"}, {"timstamp": "18:27", "user": "anddam", "body": ""}], "label": "feature"}
{"id": "93d594af", "body": "", "comments": [{"timstamp": "2017-02-24 21:24", "user": "geoid_", "body": "How can I select the items by id here:"}, {"timstamp": "2017-02-24 21:24", "user": "geoid_", "body": "See the console.log"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "geoid_, think yer doing it wrong :)"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "geoid_, if you have a directive you apply to the element that's being repeated then the element passed to the link will be the one you want"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "what're you trying to do?"}, {"timstamp": "2017-02-24 21:40", "user": "wafflejock", "body": "geoid_, long story short the template will be loaded by the time the link function fires but the ng-repeat directive will update/change the markup anytime the model it points to changes which can happen after your link function here fires, but knowing the goal will help to know if there's an easier way"}, {"timstamp": "2017-02-24 21:40", "user": "wafflejock", "body": "also {{}} are creating watch functions that get fired anytime the model changes for those elements so all that async stuff can happen after the link functions have run"}, {"timstamp": "2017-02-24 21:42", "user": "geoid_", "body": "I'm actually trying to solve a bigger problem, which is using angular-scroll ("}, {"timstamp": "2017-02-24 21:42", "user": "geoid_", "body": "you wish to scroll. So I need to figure out how to get hold of that element. My plunker is a simplification of that scenario without bringing in the library."}, {"timstamp": "2017-02-24 21:44", "user": "wafflejock", "body": "gotcha... okay so you can have your directive be on the ng-repeated elements but this could cause some problems since like I said if the array or object the ng-repeat is iterating over changes then it's going to destroy that part of the DOM and rebuild it"}, {"timstamp": "2017-02-24 21:46", "user": "wafflejock", "body": "if you applied a directive to the thing being ng-repeated though you'd have the link function fired for each element of the repeat iteration I believe and could pass in the identifier for the one that should fire the scroll"}, {"timstamp": "2017-02-24 21:46", "user": "geoid_", "body": "maybe I could set up a plnkr using angular-scroll... not sure how to include the library though?"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "usually can search common ones in the book icon on the right in plnkr"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "if it's not there I usually look for a CDN or last ditch is rawgit"}, {"timstamp": "2017-02-24 21:47", "user": "geoid_", "body": "I found the cdn but not sure how to pull it into my plnkr"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "just add it to the index.html as a script and add the module dependency"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "should be all you need"}, {"timstamp": "2017-02-24 21:47", "user": "geoid_", "body": "oh"}, {"timstamp": "2017-02-24 21:53", "user": "geoid_", "body": "I'm trying to make this easier to read but the template has lost it's bindings somehow:"}, {"timstamp": "2017-02-24 21:53", "user": "geoid_", "body": "what am I missing?"}, {"timstamp": "2017-02-24 21:55", "user": "wafflejock", "body": ""}, {"timstamp": "2017-02-24 21:56", "user": "geoid_", "body": "wow ok thx"}, {"timstamp": "2017-02-24 21:56", "user": "geoid_", "body": "still getting used to plnkr"}, {"timstamp": "2017-02-24 21:58", "user": "wafflejock", "body": "geoid_, no prob yeah here check it out"}, {"timstamp": "2017-02-24 21:59", "user": "wafflejock", "body": "I added the console.log for a new directive that is just another attribute and logged out the attribtutes"}, {"timstamp": "2017-02-24 22:00", "user": "geoid_", "body": "ok I'm going to add css and try to get the scrolling thing plugged in so I can highlight the issue"}, {"timstamp": "2017-02-24 22:00", "user": "wafflejock", "body": "should be able to conditionally look at those and decide which one to scroll to"}, {"timstamp": "2017-02-24 22:00", "user": "wafflejock", "body": "yeah can add some junk before it to make some scrollable area"}, {"timstamp": "2017-02-24 22:11", "user": "geoid_", "body": "I've run into some problems:"}, {"timstamp": "2017-02-24 22:12", "user": "geoid_", "body": "This is the example I'm following:"}, {"timstamp": "2017-02-24 22:15", "user": "geoid_", "body": "The error message in the console is indeed what I'm getting in my real world example."}, {"timstamp": "2017-02-24 22:26", "user": "geoid_", "body": "Why does my whole layout disappear when I add in a controller to the directive?"}, {"timstamp": "2017-02-24 22:26", "user": "geoid_", "body": ""}, {"timstamp": "2017-02-24 22:34", "user": "wafflejock", "body": "geoid_, errors in the console when trying to compile part of the DOM cause angular to give up"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "geoid_,"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "timeout waiting for the ng-repeat to finish it's thing"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "doesn't need 1000ms no delay works fine I just had some other issues too namely the container needs to be the document itself"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "the thing with the scroll bar on it"}, {"timstamp": "2017-02-24 22:36", "user": "geoid_", "body": "wafflejock I am confused: what did you change?? I can't see anything different except the timeout."}, {"timstamp": "2017-02-24 22:36", "user": "wafflejock", "body": "to avoid using the timeout you could use the directive attribute I applied to the ng-repeating elements themselves but that has it's own issues too so no perfect solution I can think of"}, {"timstamp": "2017-02-24 22:37", "user": "wafflejock", "body": "see the container I changed out for the angular.element(document) and the section I took out the # don't need that before the id for getElementById"}, {"timstamp": "2017-02-24 22:38", "user": "geoid_", "body": "but for me the layout wasn't rendering at all... yours suddenly is magically"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "yeah the not rendering is cause it tried to process some directive in the compilation of the markup and it borked while doing that"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "if it dies while compiling i won't inject the new broken stuff into the view it just fails"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "it* won't"}, {"timstamp": "2017-02-24 22:40", "user": "wafflejock", "body": "basically anything after an error like that is going to be unexpected behavior because it couldn't complete processing all the functions needed to generate the view and do whatever else the directives are doing, adding listeners etc etc"}, {"timstamp": "2017-02-24 22:40", "user": "geoid_", "body": "is that a plnkr thing?"}, {"timstamp": "2017-02-24 22:40", "user": "wafflejock", "body": "no angular"}, {"timstamp": "2017-02-24 22:41", "user": "wafflejock", "body": "check out $compile and can see how it works under the hood for analyzing the html and running directives"}, {"timstamp": "2017-02-24 22:42", "user": "wafflejock", "body": "it has to create a combined link function that is all the link functions for all the directives in some part of the markup it is $compiling so if any part of that fails to run then it can't really generate the view properly"}, {"timstamp": "2017-02-24 22:44", "user": "wafflejock", "body": "geoid_, it can fail in some weird ways but you get used to debugging it eventually, with angular 2 if you use TSC you get some ahead of time/compile time errors that will probably reduce runtime errors with type checking and all, but just like any other framework you eventually learn to decipher the errors and behaviors"}, {"timstamp": "2017-02-24 22:46", "user": "geoid_", "body": "the example was supposed to be for a container scrollTo <unconvertable> which is what I'm using in my real world example, any reason why that won't work?"}, {"timstamp": "2017-02-24 22:46", "user": "wafflejock", "body": "geoid_, the container needs to be the thing with the scrollbar think they are assuming you have some container with a fixed height and some contents bigger than that height that are adding a scroll rect and all to that element"}, {"timstamp": "2017-02-24 22:47", "user": "geoid_", "body": "I see, so it might be CSS preventing that from working."}, {"timstamp": "2017-02-24 22:47", "user": "wafflejock", "body": "geoid_, yeah"}, {"timstamp": "2017-02-24 22:50", "user": "geoid_", "body": "I don't understand why the element isn't available in the link function though?"}, {"timstamp": "2017-02-24 22:56", "user": "wafflejock", "body": "geoid_, well couple of issues, you really don't want to be writing stuff in the controller that reads out of the DOM because the directives deal with the DOM exclusively and the controller just deals with getting services into the view model/scope so that bindings in the view can reference that data"}, {"timstamp": "2017-02-24 22:57", "user": "wafflejock", "body": "geoid_, beyond that the ng-repeat in the template is a directive as well and needs to be run through the $compile process so it's link function gets triggered with a scope and then based on the data in the scope for the ng-repeat it makes new elements and assigns the scope of each of the new elements to the thing you're iterating over"}, {"timstamp": "2017-02-24 22:57", "user": "wafflejock", "body": "after all that happens it has bindings in those elements that get filled in but all that stuff doesn't happen synchronously"}, {"timstamp": "2017-02-24 22:59", "user": "wafflejock", "body": "geoid_,"}, {"timstamp": "2017-02-24 22:59", "user": "wafflejock", "body": "geoid_, ultimately would need to get a good understanding of how ng-repeat works under the hood too though I think to fully understand what's happening there"}, {"timstamp": "2017-02-24 23:02", "user": "geoid_", "body": "hmm. Thanks wafflejock I'm not sure how that answers my question but I'll defs bookmark your plnkr"}, {"timstamp": "2017-02-24 23:10", "user": "wafflejock", "body": "geoid_, basically the post link for the ng-repeat will have run by the time your post link happens but the watch it registers won't be fired off and it won't have stamped out the template elements using translcude yet by the time you try to getElementById"}, {"timstamp": "2017-02-24 23:10", "user": "wafflejock", "body": ""}, {"timstamp": "2017-02-24 23:14", "user": "geoid_", "body": "Wow... how do you know that the post link will have run but the watch and the stamping won't have happened?"}, {"timstamp": "2017-02-24 23:14", "user": "wafflejock", "body": "well cause it didn't work :)"}, {"timstamp": "2017-02-24 23:15", "user": "wafflejock", "body": "hehe and my example shows the post link for the children happens before the parent I also read it on a blog"}, {"timstamp": "2017-02-24 23:15", "user": "wafflejock", "body": "the $timeout is just giving it \"long enough\" to do the actual stamping out of the elements so when we get the element by id after that timeout it's fine cause the watch must have completed it's work of making those elements"}, {"timstamp": "2017-02-24 23:16", "user": "wafflejock", "body": "to verify could add some breakpoints in the angular source"}, {"timstamp": "2017-02-24 23:21", "user": "geoid_", "body": "amazing thanks for your insights there"}, {"timstamp": "2017-02-24 23:21", "user": "geoid_", "body": "I'm trying to flesh out the example so that it's more like my real world implementation as I'm still having problems with that."}, {"timstamp": "2017-02-24 23:23", "user": "wafflejock", "body": "no prob, yeah just verified what I said it's actually true :P"}, {"timstamp": "2017-02-24 23:40", "user": "geoid_", "body": "weird.. I built up an example as close as possible in plnkr... and it works. But in my real world example it still doesn't work :("}, {"timstamp": "2017-02-24 23:41", "user": "geoid_", "body": "I'll have to try the other way around <unconvertable> build up a simple working example in my real world app and then gradually add to it till I figure out what's causing it to break."}, {"timstamp": "2017-02-24 23:41", "user": "geoid_", "body": "wafflejock tx again for your help. I'm done for the evening."}, {"timstamp": "2017-02-24 23:43", "user": "wafflejock", "body": "geoid_, ah no prob have a good one"}], "label": "other"}
{"id": "73af7d04", "body": "", "comments": [{"timstamp": "11:32", "user": "Pyrrhus666", "body": "more like a choking stranglehold"}], "label": "other"}
{"id": "93d594c4", "body": "", "comments": [{"timstamp": "2018-10-29 13:21", "user": "pupskuchen", "body": "let's not speak about a11y"}, {"timstamp": "2018-10-29 13:22", "user": "Pyrrhus666", "body": "not even thinking about accessibility, it just feels wrong to me :)"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "eh"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "it doesnt do anything at first klick"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "at second it works"}, {"timstamp": "2018-10-29 13:24", "user": "pupskuchen", "body": "Pyrrhus666: probably because it is"}, {"timstamp": "2018-10-29 13:26", "user": "Pyrrhus666", "body": "berz3rk, probably because the 2nd time the content is already there or smt. I think you cant really solve this cleanly."}, {"timstamp": "2018-10-29 13:32", "user": "berz3rk", "body": "what should I do then?"}, {"timstamp": "2018-10-29 13:34", "user": "Pyrrhus666", "body": "dunno. what are you trying to achieve ? cant you use a popover ? or display the content in some other fashion ?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "i have a collapsible area at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "think about a link or something"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you click on it, a text area expands"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you read stuff"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "now the issue is the thing is at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "so if you click the content that is revealing is under your current view position"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you have to scroll to the new content you know?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "or else you have to scroll then yourself afterwords"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "why not click on the collapse directly ? like its meant to be used ?"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "the user clicks on the collapse"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "yes."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "but angular doesnt jump to the revealing content"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "no need if the user clicks on the collapse itself."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "i want that the content reveals"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "and that the user sees it without scrolling"}, {"timstamp": "2018-10-29 13:39", "user": "Pyrrhus666", "body": "we just established that that is not going to work."}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "this is the way a collapse is normally used :"}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "you click on the thing, it expands _in_place_"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "yeah it does that in berz3rk's case too"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "you just don't see it because the toggle is at the end of the page"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "so the content is expanding beyond the visible part of the page"}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "ah ok. then dont use a collapse, imho."}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "or accept that the user must scroll."}, {"timstamp": "2018-10-29 13:44", "user": "Pyrrhus666", "body": "(I was under the impression the click was somewhere else, and the collapse was expanded programmatically)"}], "label": "other"}
{"id": "8addb260", "body": "", "comments": [{"timstamp": "2017-04-06 16:44", "user": "eGr00g", "body": "Hey guys, first time on here, I have a question about loading two version of angular into the same page. I have a Web Application that provides Web Forms, it's called Laserfiche Forms, it uses a very old version of angular, I am adding a module to it but i really would like to use the newer version but can't update the version that gets loaded into the Laserfiche Forms page. Is there a way that I can load the newer angular versio"}, {"timstamp": "2017-04-06 16:47", "user": "Elarcis", "body": "eGr00g: no"}, {"timstamp": "2017-04-06 16:49", "user": "eGr00g", "body": "Elarcis: ok thanks, i had read a couple articles about people doing this but it doesn't seem to want to work"}, {"timstamp": "2017-04-06 16:51", "user": "Elarcis", "body": "same"}], "label": "feature"}
