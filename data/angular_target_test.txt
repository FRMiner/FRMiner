{"id": "0ec1e2f1", "body": "", "comments": [{"timstamp": "16:49", "user": "ilhami", "body": "catch me when I jump from the bridge :P hehe"}, {"timstamp": "16:50", "user": "ilhami", "body": "first fix your backend response"}], "label": "other"}
{"id": "93d59540", "body": "", "comments": [{"timstamp": "2016-08-23 13:35", "user": "Elarcis", "body": "I piss on 42, Epitech and their so-called revolutionary learning techniques."}, {"timstamp": "2016-08-23 13:37", "user": "Elarcis", "body": "Every damn people I've met who came from these schools was just an asocial prick persuaded they were the best coders on Earth, and let's not talk about their 'adapt or drown' swimming pool system that's just a condensed version of their whole education cycle"}, {"timstamp": "2016-08-23 13:38", "user": "ngboy", "body": "is it bad that i never heard of 42?"}, {"timstamp": "2016-08-23 13:38", "user": "Elarcis", "body": "ngboy: french IT school, opened a few years ago"}, {"timstamp": "2016-08-23 13:38", "user": "Elarcis", "body": "ngboy: it is theoretically a free school, but every expense is at your own"}, {"timstamp": "2016-08-23 13:39", "user": "ngboy", "body": "Elarcis, so, it's like teaching your self at home, but in a public building?"}, {"timstamp": "2016-08-23 13:39", "user": "ngboy", "body": "or do you have teachers?"}, {"timstamp": "2016-08-23 13:39", "user": "Elarcis", "body": "ngboy: not really, it gives a diploma at the end, and it's been created by a french billionaire, so it has some reputation"}, {"timstamp": "2016-08-23 13:39", "user": "ngboy", "body": "42 has no teachers, books, curriculum or grades and is absolutely free of charge to attend"}, {"timstamp": "2016-08-23 13:39", "user": "ngboy", "body": "eh.. oke"}, {"timstamp": "2016-08-23 13:40", "user": "Elarcis", "body": "ngboy: but well, they're using a swimming pool system, which is one month of intense work at the beginning of the school, to see who can learn and work, and who just gives up"}, {"timstamp": "2016-08-23 13:41", "user": "ngboy", "body": "how's that without a curriculum"}, {"timstamp": "2016-08-23 13:41", "user": "ngboy", "body": "what's there to give up on?"}, {"timstamp": "2016-08-23 13:41", "user": "Elarcis", "body": "ngboy: and everything about that school just screams 'we make code-vomiting machines'"}, {"timstamp": "2016-08-23 13:41", "user": "Elarcis", "body": "ngboy: there are grades. they're just not your usual grades"}, {"timstamp": "2016-08-23 13:42", "user": "Elarcis", "body": "ngboy: it's the group that's rated. if one member of the group fucks up, the whole group does"}, {"timstamp": "2016-08-23 13:42", "user": "Elarcis", "body": "ngboy: I speak from memory, I don't like them, so I don't have a very precise knowledge of their whereabouts"}, {"timstamp": "2016-08-23 13:44", "user": "ngboy", "body": "Elarcis, interesting, but never heard of it tbh, my colleagues neither (located in the netherlands)"}, {"timstamp": "2016-08-23 13:44", "user": "Elarcis", "body": "ngboy: it's free, alright"}, {"timstamp": "2016-08-23 13:45", "user": "ngboy", "body": "and the statemet was 'you cant learn programming at a \"normal\" school', a normal school being a non-42 school.. ?"}, {"timstamp": "2016-08-23 13:45", "user": "ngboy", "body": "i beg to differ :p"}, {"timstamp": "2016-08-23 13:45", "user": "ngboy", "body": "i piss on them too! elitist bastards!"}, {"timstamp": "2016-08-23 13:45", "user": "Elarcis", "body": "ngboy: approximately, yes"}, {"timstamp": "2016-08-23 13:46", "user": "Elarcis", "body": "ngboy: 'we're the only school that really teaches to code!'"}, {"timstamp": "2016-08-23 13:46", "user": "ngboy", "body": "all the software in the world must suck then.."}, {"timstamp": "2016-08-23 13:46", "user": "ngboy", "body": "(not saying alot of it doesnt)"}, {"timstamp": "2016-08-23 13:47", "user": "Elarcis", "body": "ngboy: >yeah, and when we get a 42er in a job interview, they're a big sweating pile of mess that can't align two sentences without stammering"}], "label": "other"}
{"id": "73af7d20", "body": "", "comments": [{"timstamp": "21:22", "user": "wimpog", "body": "I'm new to Angular. I have this page:"}, {"timstamp": "21:33", "user": "wimpog", "body": "I'm new to Angular. I have this page:"}], "label": "other"}
{"id": "93d5947a", "body": "", "comments": [{"timstamp": "2016-08-29 13:35", "user": "cyberbrai", "body": ""}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "unable to get json data"}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "json data enclosed with double quotes"}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "any help guyz"}, {"timstamp": "2016-08-29 13:38", "user": "z3r0_", "body": "cyberbrai: var jsonObject = angular.formJson( swx);"}, {"timstamp": "2016-08-29 13:38", "user": "cyberbrai", "body": "ok let me try"}, {"timstamp": "2016-08-29 13:41", "user": "cyberbrai", "body": "<z3r0_> undefined is not a function (formJson)"}, {"timstamp": "2016-08-29 13:41", "user": "cyberbrai", "body": "any help"}, {"timstamp": "2016-08-29 13:42", "user": "senayar", "body": "undefined is not a function"}, {"timstamp": "2016-08-29 13:42", "user": "cyberbrai", "body": "yes"}, {"timstamp": "2016-08-29 13:43", "user": "senayar", "body": "yes because it's undefined"}, {"timstamp": "2016-08-29 13:43", "user": "cyberbrai", "body": "senayar json enclosed with double quotes"}, {"timstamp": "2016-08-29 13:43", "user": "z3r0_", "body": "cyberbrai: sorry, it's angular.fromJson();"}, {"timstamp": "2016-08-29 13:44", "user": "cyberbrai", "body": "after angular.fromJson(); Unexpected token '"}, {"timstamp": "2016-08-29 13:45", "user": "cyberbrai", "body": "tried with replace(/\\\"/g, \"\") but it's still not working"}, {"timstamp": "2016-08-29 13:45", "user": "senayar", "body": "it's because it's not json"}, {"timstamp": "2016-08-29 13:45", "user": "senayar", "body": "it's a string"}, {"timstamp": "2016-08-29 13:46", "user": "senayar", "body": "so ?"}, {"timstamp": "2016-08-29 13:46", "user": "cyberbrai", "body": "Api give string json and i want to make it json so i can acces json data"}, {"timstamp": "2016-08-29 13:48", "user": "cyberbrai", "body": ""}, {"timstamp": "2016-08-29 13:48", "user": "cyberbrai", "body": "nothing work"}, {"timstamp": "2016-08-29 13:50", "user": "z3r0_", "body": "cyberbrai: You designed the API ?"}, {"timstamp": "2016-08-29 13:50", "user": "cyberbrai", "body": "nope"}, {"timstamp": "2016-08-29 13:52", "user": "cyberbrai", "body": "any help z3r0_"}, {"timstamp": "2016-08-29 13:53", "user": "z3r0_", "body": "cyberbrai: And you're sure it return a JSON String ?"}, {"timstamp": "2016-08-29 13:53", "user": "cyberbrai", "body": "yes i am sure"}], "label": "other"}
{"id": "93d5949d", "body": "", "comments": [{"timstamp": "2016-12-17 19:22", "user": "mrk____", "body": "hi. i'm new to angular2 and I'm trying to wireup the dependency injection. i have all my services in the module providers array. later I wanted to use a ReflectiveInjector in order to instantiate stuff with get. Going to the Car => Wheel, doors example say doors has a dependency on DoorService which is declared in the module level. my injector is created with ReflectiveInjector.resolveAndCreate and knows nothing about the module"}, {"timstamp": "2016-12-17 19:22", "user": "mrk____", "body": "how can i make my injector aware of the module providers? I want the module providers but in the car fashion when i do \"get\" the cars should be new instances"}, {"timstamp": "2016-12-17 19:26", "user": "mrk____", "body": "here it the code:"}], "label": "other"}
{"id": "8addb274", "body": "", "comments": [{"timstamp": "2017-02-10 19:55", "user": "kas84", "body": "Id like to calculate a ng-style based on some dom of the page, but the ng-style fires some time before angular finished manipulating the dom"}, {"timstamp": "2017-02-10 19:56", "user": "kas84", "body": "is there a way to do a timeout or something like that to wait for changes?"}], "label": "feature"}
{"id": "93d594b5", "body": "", "comments": [{"timstamp": "2019-01-16 11:18", "user": "jlebrech", "body": "i'd tidy up a few bugs and maintain the old code base then rewrite it all in Vue, it depends on existing code size tho."}, {"timstamp": "2019-01-16 11:19", "user": "SargoDarya", "body": "jlebrech: Vue master race \\o/"}, {"timstamp": "2019-01-16 11:19", "user": "jlebrech", "body": "directives need to burn, switch those to components at the very least"}, {"timstamp": "2019-01-16 11:20", "user": "Elarcis", "body": "or MVW"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "MadnessVitriolCurses"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "Vue is just the"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "real angularjs 2"}, {"timstamp": "2019-01-16 11:21", "user": "jlebrech", "body": "Directives are like using hotglue in an electronics project"}, {"timstamp": "2019-01-16 11:24", "user": "Elarcis", "body": "jlebrech: directives are the basis for AngularJS's almost-everything, but it's like manually soldering dozens of transistors when a microprocessor is proposed to you"}, {"timstamp": "2019-01-16 11:25", "user": "jlebrech", "body": "Yep, jumpwires"}, {"timstamp": "2019-01-16 11:26", "user": "SuperTyp", "body": "ping"}, {"timstamp": "2019-01-16 11:26", "user": "jlebrech", "body": "when AngularJS fails as a framework you're then told, it's \"a framework to build frameworks dummy\""}, {"timstamp": "2019-01-16 11:28", "user": "pdobrogost", "body": "Elarcis: As I have '<main-dir my-attr=\"xxx\">` in html and scope: { myAttr: '=' } in the code I would suspect that scope.myAttr should be 'xxx'."}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost:"}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost: when you use =, it is expected that xxx is an expression, not a hardcoded string"}, {"timstamp": "2019-01-16 11:31", "user": "pdobrogost", "body": "Elarcis: ok, thanks"}, {"timstamp": "2019-01-16 11:41", "user": "Elarcis", "body": "pdobrogost: just in case, this is how you'd do what you tried to do in modern AngularJS (regardless of the organisation of your files, etc.)"}, {"timstamp": "2019-01-16 11:42", "user": "pdobrogost", "body": "Elarcis: Thanks a lot!"}, {"timstamp": "2019-01-16 11:48", "user": "pdobrogost", "body": "Elarcis: Although I'm not sure why you have \"my-input\" attribute declared also in <sub-dir> as in the original case it was defined only in <main-dir> and the task was just to get its value inside <sub-dir>?"}, {"timstamp": "2019-01-16 11:49", "user": "Elarcis", "body": "pdobrogost: because it is now considered good practice, if you want an input to \"flow down\" the children of a component, to declare it explicitely in the parent rather than have the children manually require it"}, {"timstamp": "2019-01-16 11:50", "user": "Elarcis", "body": "pdobrogost: the mindset is \"always have the container decide what the children get\", and not the opposite, this way the flow of data and logic is always down the DOM, and not two-ways"}, {"timstamp": "2019-01-16 11:50", "user": "pdobrogost", "body": "react style :)"}, {"timstamp": "2019-01-16 11:51", "user": "pdobrogost", "body": "By input you mean also \"configuration\"?"}, {"timstamp": "2019-01-16 11:52", "user": "Elarcis", "body": "pdobrogost: yes. see components as functions. they take parameters in, get events out. It is desirable to have as few side effects as possible, aka stuff that doesn't go through inputs and outputs"}, {"timstamp": "2019-01-16 11:55", "user": "Elarcis", "body": "pdobrogost: if you need \"side effects\" (caching data, making something available through the whole app, etc.) AngularJS services can be used to share data and logic without overloading inputs and outputs (or if it's even too complicated to synchronise data between parent and children via inputs/outputs)"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "pdobrogost: even if you know a bit of AngularJS, I recommend you check out the official tutorial, it evolved a lot these years and now fully explains how to get the better from components"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "*the best"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: how can this be so hard"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: this is realy hard programming rite"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "berz3rk: not sure the answer would make you feel better :P"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": ":-)"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": "i make a STACKBLITZ(krieg)"}, {"timstamp": "2019-01-16 11:58", "user": "Elarcis", "body": "berz3rk: can we see it? is it \"working\"?"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "Here guys"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "theres a textbox with ngmodel onto the value and a checkbox"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "its not working as intended (yet)"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "i cant use ngmodel because ngmodel uses true/false. I need 1/0 tho for my data model"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "if you modify bottom text you notice it doesnt check or uncheck properly, and initial state is not working as intented as well"}, {"timstamp": "2019-01-16 12:09", "user": "berz3rk", "body": "Elarcis: .: - T_T - :."}, {"timstamp": "2019-01-16 12:09", "user": "pdobrogost", "body": "Elarcis: Thanks for tips"}, {"timstamp": "2019-01-16 12:10", "user": "Pyrrhus666", "body": "berz3rk, you initialize MYVALUE as 1, so the initial state is wrong. also : wtf are you even trying to do ?"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "what do you mean the inital state is wrong"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "there can be a state with 1"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "All I want is ngmodel for MYVALUE"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "but ngmodel for checkbox is true/false, my values i need is 1/0 tho."}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "so it takes 1/0 converts it to true/false (caus javascript)"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "but writes back true and false instead of 0 and 1"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "isnt that obvious )"}, {"timstamp": "2019-01-16 12:12", "user": "Pyrrhus666", "body": "the (change) is not fired on initial render. so the checkbox is not checked. also, youre going about it wrong, imho"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "i thought [value] would be the thing for that"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "or is that [checked] ?"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "checked doesnt give me the right effect either"}, {"timstamp": "2019-01-16 12:15", "user": "Pyrrhus666", "body": "[checked] is an input binding, it doesnt work two-ways. reap the mat-checkbox api and use the properties and methods provided."}, {"timstamp": "2019-01-16 12:17", "user": "Pyrrhus666", "body": "*read, although reap is quite applicable too"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "hm"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "i dont even want it two ways because the format is wrong"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "I think i got it working now"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "forgot i had to send event after i change the value not before"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "wasnt in the example tho"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "If anyone is curios"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "theres a syntax tho to access the curent elemtn right?"}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "so i dont need #check ?"}], "label": "other"}
{"id": "93d594d0", "body": "", "comments": [{"timstamp": "2018-04-16 10:21", "user": "cart_man", "body": "Hi. Is there anyway to fix this issue that was not a while ago. When running ng serve -> Module build failed: Error: Node Sass does not yet support your current environement: Linux 64-bit with Unsupported runtime (57)"}, {"timstamp": "2018-04-16 10:22", "user": "icebox", "body": "cart_man: did you fill an issue in github repo?"}, {"timstamp": "2018-04-16 10:22", "user": "icebox", "body": "cart_man: sass repo :)"}, {"timstamp": "2018-04-16 10:22", "user": "cart_man", "body": "No cause I didnt have it a while ago .. I use to work on this OS all the time and I also dont really have the time to try and figure out where I should go for this."}, {"timstamp": "2018-04-16 10:27", "user": "cart_man", "body": "icebox : I didnt know that your OS needs to have some specific things for SASS to work? I thouhts it was just an interpretation of css ?"}, {"timstamp": "2018-04-16 10:28", "user": "icebox", "body": "cart_man: ask to sass folks :)"}, {"timstamp": "2018-04-16 10:28", "user": "Pyrrhus666", "body": "cart_man, node-sass needs to be compiled when its installed, so it depends on your runtime a lot..."}, {"timstamp": "2018-04-16 10:29", "user": "Pyrrhus666", "body": "cart_man, I see linux-x64-57 is supported in the newest version though."}, {"timstamp": "2018-04-16 10:29", "user": "icebox", "body": "cart_man: indeed sass is a \"compiler\", an executable program, you need to build... unlees you download the binaries compatible for your os"}, {"timstamp": "2018-04-16 10:29", "user": "Pyrrhus666", "body": "see"}, {"timstamp": "2018-04-16 10:30", "user": "cart_man", "body": "hahah all the sudden a simple css tinker became a full blown OS update ... OMG -.-"}, {"timstamp": "2018-04-16 10:30", "user": "cart_man", "body": "Thanks guys"}, {"timstamp": "2018-04-16 10:31", "user": "cart_man", "body": "Will report back"}, {"timstamp": "2018-04-16 10:31", "user": "icebox", "body": "cart_man: that because you are using sass :)"}, {"timstamp": "2018-04-16 10:32", "user": "icebox", "body": "cart_man: sass is not \"an interpretation of css\""}, {"timstamp": "2018-04-16 10:32", "user": "icebox", "body": "cart_man: it is a dsl producing css"}, {"timstamp": "2018-04-16 10:34", "user": "icebox", "body": "cart_man: basically you are adding a layer of abstraction (the DSL vs. the \"native\" CSS) at the price of adding a build step in the dev workflow and the compilation of the tool"}, {"timstamp": "2018-04-16 10:34", "user": "icebox", "body": "cart_man: it depends on your context if that is good move or not :)"}, {"timstamp": "2018-04-16 10:38", "user": "icebox", "body": "mandarinaduck site made with angularjs minified with closure and integrated with jquery :)"}, {"timstamp": "2018-04-16 10:38", "user": "icebox", "body": ""}, {"timstamp": "2018-04-16 10:38", "user": "ray02", "body": "OT: isn't sad a future like this?"}, {"timstamp": "2018-04-16 10:39", "user": "cart_man", "body": "icebox I would LOVE to just dodge it really"}, {"timstamp": "2018-04-16 10:40", "user": "Elarcis", "body": "ray02: just because you see it through a negative filter of FUD, I think this is cool!"}, {"timstamp": "2018-04-16 10:42", "user": "ray02", "body": "Elarcis i don't know i think that AR has much more sense, insted of VR"}, {"timstamp": "2018-04-16 10:43", "user": "Elarcis", "body": "ray02: one could argue that AR is much more insidious than VR, both are an awesome way of entertainment and creativity :)"}, {"timstamp": "2018-04-16 10:44", "user": "ray02", "body": "moving randomly in a real space it's to me looks wired"}, {"timstamp": "2018-04-16 10:44", "user": "Elarcis", "body": "ray02: well this tweets system isnt wired at all :P"}, {"timstamp": "2018-04-16 10:44", "user": "Pyrrhus666", "body": "ray02, its step 1 on the long road to the matrix ;)"}, {"timstamp": "2018-04-16 10:45", "user": "ray02", "body": "ahah yes i feel like this"}, {"timstamp": "2018-04-16 10:45", "user": "ray02", "body": "the firs step to the matrix :)"}, {"timstamp": "2018-04-16 10:46", "user": "icebox", "body": "in that site, in angularjs (1.5.6) code, I spotted no component approach, using \"var vm = this;\" approach, using .success.error pattern (vs. .catch.error one), using $defer object with $http call (instead of returing directly the $http object)"}, {"timstamp": "2018-04-16 10:47", "user": "icebox", "body": "and clicking on the products to show the details, it doesn't work with FF"}, {"timstamp": "2018-04-16 10:47", "user": "Elarcis", "body": "ray02, Pyrrhus666: beware of the slippery slope fallacy!"}, {"timstamp": "2018-04-16 10:47", "user": "icebox", "body": "sigh"}, {"timstamp": "2018-04-16 10:47", "user": "Pyrrhus666", "body": "icebox, that site is rife with mixed-content and csp errors"}, {"timstamp": "2018-04-16 10:47", "user": "Pyrrhus666", "body": "Elarcis, people are lazy pigs, theyll go for the matrix."}, {"timstamp": "2018-04-16 10:48", "user": "icebox", "body": "Pyrrhus666: terrible"}, {"timstamp": "2018-04-16 10:49", "user": "icebox", "body": "Pyrrhus666: I was wondering if it would be appreciated (intending paid) sending an assessment report highlighting the improvements... (I think it wouldn't)"}, {"timstamp": "2018-04-16 10:49", "user": "Elarcis", "body": "icebox: dont forget extensive mixing of jquery/external scope accesses :P"}, {"timstamp": "2018-04-16 10:50", "user": "Elarcis", "body": "icebox: \"But it WorksTM\""}, {"timstamp": "2018-04-16 10:50", "user": "icebox", "body": "Elarcis: I don't think so... with FF it doesn't work"}, {"timstamp": "2018-04-16 10:50", "user": "Pyrrhus666", "body": "itym <unconvertable> it works here <unconvertable> ;)"}, {"timstamp": "2018-04-16 10:50", "user": "icebox", "body": "but maybe they have 0.1% of users using FF"}, {"timstamp": "2018-04-16 10:51", "user": "icebox", "body": "apart about 9mb to load the site :)"}, {"timstamp": "2018-04-16 10:51", "user": "icebox", "body": "terrible"}, {"timstamp": "2018-04-16 10:52", "user": "Elarcis", "body": "icebox: even my app, which is a mountain of code, is thrice as light"}, {"timstamp": "2018-04-16 10:59", "user": "icebox", "body": "developers K-commerce inside by Keros Digital -"}, {"timstamp": "2018-04-16 10:59", "user": "icebox", "body": "\"The Challenge of Successful E-Commerce at Enterprise Level.\""}, {"timstamp": "2018-04-16 11:01", "user": "ray02", "body": "\"Enterprise Level\" doesn't mean nothing right?"}, {"timstamp": "2018-04-16 11:02", "user": "Pyrrhus666", "body": "double negatives are dangerous ray02"}, {"timstamp": "2018-04-16 11:03", "user": "icebox", "body": "ray02: mainly it means mainstream in that business sector"}, {"timstamp": "2018-04-16 11:04", "user": "ray02", "body": "yes i see, but is like when you read \"we are ninja dev\""}, {"timstamp": "2018-04-16 11:04", "user": "icebox", "body": "it would be interesting to create an indipendent (human) assessment study (or site) of commercial sites"}, {"timstamp": "2018-04-16 11:05", "user": "icebox", "body": "ray02: agree"}, {"timstamp": "2018-04-16 11:06", "user": "icebox", "body": "like a human version and app oriented of chrome lighthouse"}, {"timstamp": "2018-04-16 11:08", "user": "Pyrrhus666", "body": "I find the most commercial sites a drama. I try to get to the specs asap, and sometimes thats very hard to do..."}, {"timstamp": "2018-04-16 11:08", "user": "icebox", "body": "Pyrrhus666: agreed"}, {"timstamp": "2018-04-16 11:09", "user": "Pyrrhus666", "body": "often its even ridiculously hard to find the prices of stuff (esp. in the saas department)"}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "Pyrrhus666: that is a common sin in commercial departments... because every salesman wants \"their\" prices and discounts"}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "Pyrrhus666: here, in finance, it is the same for the fee plans"}, {"timstamp": "2018-04-16 11:11", "user": "Pyrrhus666", "body": "icebox, I kind of understand that, but from a prospective buyers perspective, its insane."}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "it should be insane also for the company"}, {"timstamp": "2018-04-16 11:12", "user": "icebox", "body": "Pyrrhus666: here we have thousands (sic!) of plans... and it doesn't make sense"}, {"timstamp": "2018-04-16 11:13", "user": "icebox", "body": "almost a plan per customer :)"}, {"timstamp": "2018-04-16 11:13", "user": "Pyrrhus666", "body": "icebox, well, in the cases Im talking about, there often _are_ prices to be found, theyre just ridiculously hidden :)"}, {"timstamp": "2018-04-16 11:13", "user": "Pyrrhus666", "body": "icebox, yeah, Ive heard similar stuff from corporate telco sales and corporate insurance sales..."}, {"timstamp": "2018-04-16 11:14", "user": "icebox", "body": "Pyrrhus666: yep... that is the other face of the same ill... \"no prices\" means you can write reports with the figures you like :)"}, {"timstamp": "2018-04-16 11:16", "user": "icebox", "body": "a few years ago I applied a clustering technique to review the fee plans... I reduced them for one factor... but anyway they are a \"beast\""}, {"timstamp": "2018-04-16 11:17", "user": "icebox", "body": "also because if you change the plan, there are a lot of legal details involved"}, {"timstamp": "2018-04-16 11:17", "user": "Pyrrhus666", "body": "icebox, I can imagine..."}, {"timstamp": "2018-04-16 11:27", "user": "icebox", "body": "the usual italians :)"}], "label": "other"}
{"id": "93d594cb", "body": "", "comments": [{"timstamp": "2017-02-10 10:55", "user": "heartburn", "body": "\"The real programmers will say <unconvertable> Yeah it works but youre leaking memory everywhere. Perhaps we should fix that. <unconvertable> Ill just restart Apache every 10 requests.\""}, {"timstamp": "2017-02-10 10:56", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 10:58", "user": "Pyrrhus666", "body": "heartburn, a really lazy person makes apache do that itself."}, {"timstamp": "2017-02-10 10:58", "user": "heartburn", "body": "C R O N S U P R E M A C Y"}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, nah, apache has it builtin."}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, its actually very useful, due to all the other programmers making leaky stuff."}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: well... that post proves the opposite :)"}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: what is the difference between Talent or Even Passion and Hard Work? :)"}, {"timstamp": "2017-02-10 11:02", "user": "heartburn", "body": "for hard work, you get paid."}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: in an interview the journalist said to a great violinist he had a great talent... the violinist replied for all the life he had been playing 12 hours per day"}, {"timstamp": "2017-02-10 11:04", "user": "heartburn", "body": "well, i don't see a contradiction. :o)"}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: exactly... so the title is false :)"}, {"timstamp": "2017-02-10 11:06", "user": "Pyrrhus666", "body": "talent does play into it though, because not everybody can play the violin, not even after doing it 30 years 12 hours a day..."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "well, i used to code 8 hours a day for a few years."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "was it a passionate experience? fuck no."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "but hey, i did pretty well anyway. they wanted to promote me, but i quit instead."}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "what i learned from that is, what one calls 'an elegant abstraction' another would call 'over-engineering'."}, {"timstamp": "2017-02-10 11:08", "user": "Pyrrhus666", "body": "heartburn, so, talented..."}, {"timstamp": "2017-02-10 11:08", "user": "icebox", "body": "heartburn: X Doesnt Require Talent or Even Passion... you can say it for anything... and that statement is false until we define Talend and Passion :)"}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "lol no."}, {"timstamp": "2017-02-10 11:09", "user": "Pyrrhus666", "body": "icebox, we can agree that theyre not the same, at least ?"}, {"timstamp": "2017-02-10 11:09", "user": "icebox", "body": "Pyrrhus666: agreed"}, {"timstamp": "2017-02-10 11:09", "user": "heartburn", "body": "don't go all philosophical on me m8."}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: :P"}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: sorry... I am too \"meta\" :)"}, {"timstamp": "2017-02-10 11:11", "user": "icebox", "body": "*too much"}, {"timstamp": "2017-02-10 11:13", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 11:16", "user": "heartburn", "body": "my loins are glowing with passion for programming."}, {"timstamp": "2017-02-10 11:18", "user": "heartburn", "body": "gonna put it in my cv."}], "label": "other"}
{"id": "93d594e5", "body": "", "comments": [{"timstamp": "2016-07-05 09:08", "user": "raskel", "body": "how many rcs will be there? any idea when is the release date? ( ~ )"}, {"timstamp": "2016-07-05 09:13", "user": "Elarcis", "body": "raskel: I have no idea, but it's been speculated that angular2 might be released on some angular circa the end of the year"}, {"timstamp": "2016-07-05 09:14", "user": "raskel", "body": "Elarcis, ohhh, we have an internal project for Q4, and i wish to be stable..."}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "raskel: what's Q4? I always get lost in these time slots :D"}, {"timstamp": "2016-07-05 09:15", "user": "Limarson", "body": "Elarcis: October-December :)"}, {"timstamp": "2016-07-05 09:15", "user": "raskel", "body": "Elarcis, yup. the fourth quarter of the year"}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "Limarson: should be released in these waters"}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "with a bit of luck"}, {"timstamp": "2016-07-05 09:16", "user": "Limarson", "body": "Elarcis: I have time until March next year which will be most likely possible :)"}, {"timstamp": "2016-07-05 09:16", "user": "Limarson", "body": "I have just problems with primeng - they are getting slower the faster Angular Development becomes - at least by personal feeling :)"}, {"timstamp": "2016-07-05 09:16", "user": "Elarcis", "body": "Limarson: We've started implementing it and the next release of our app is at th end of the month :D"}, {"timstamp": "2016-07-05 09:17", "user": "Limarson", "body": "Elarcis: I feel that the RC candidates are pretty stable already, only the routing changes like every week :D"}, {"timstamp": "2016-07-05 09:17", "user": "Limarson", "body": "(also personal feeling)"}, {"timstamp": "2016-07-05 09:17", "user": "raskel", "body": "how many rc's will be there?"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "Limarson: thank god we're still using 1.x router :D"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "raskel: I don't know... 4? 5?"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "raskel: according to this, there's already a RC5 planned"}, {"timstamp": "2016-07-05 09:18", "user": "Limarson", "body": "Elarcis: ui-router with upgrade-components? Does that work good?"}, {"timstamp": "2016-07-05 09:19", "user": "Elarcis", "body": "raskel: I guess it's safe to assume there are gonna be at least two more until release"}, {"timstamp": "2016-07-05 09:19", "user": "Elarcis", "body": "Limarson: we're currently only using Angular2 for services (which is a bit silly but that's the only priority we got)"}, {"timstamp": "2016-07-05 09:19", "user": "Limarson", "body": "Elarcis: Damn, the component approach is so nice"}, {"timstamp": "2016-07-05 09:20", "user": "Limarson", "body": "Elarcis: That's how I could convince my boss to give me extra time to migrate :)"}, {"timstamp": "2016-07-05 09:20", "user": "Elarcis", "body": "Limarson: yes, I'm afraid it will be hard to transition to it, there's a lot of scope inheritance I've got to get rid of first"}, {"timstamp": "2016-07-05 09:20", "user": "Limarson", "body": "Elarcis: I made it 2 steps: The first was to put *everything* in directives"}, {"timstamp": "2016-07-05 09:21", "user": "Limarson", "body": "Elarcis: If you made this transition, you basically have components and need to migrate only syntactically"}, {"timstamp": "2016-07-05 09:22", "user": "Limarson", "body": "Elarcis: But to switch from scopes and plain html partials and ng-include caused some headache^^"}, {"timstamp": "2016-07-05 09:23", "user": "uru", "body": "Limarson: Elarcis: We (my workplace) is about to push a deployment that will have ng2 stuff in it. Small homepage widgets to start with but we are currently building a full single page dashboard app with it too"}, {"timstamp": "2016-07-05 09:23", "user": "Limarson", "body": "Elarcis: I have the feeling, the whole program is more robust and predictable sine I migrated to ng2 though - just from a maintenance perspective. Not so much unforeseen side-effects from $parent.$parent. ..."}, {"timstamp": "2016-07-05 09:24", "user": "Limarson", "body": "uru: Nice :) At least you have *some* components to reuse later then"}, {"timstamp": "2016-07-05 09:26", "user": "uru", "body": "Limarson: Yea, the homepage is comprised of multiple small ng2 apps that can talk to each other through shared service layers"}, {"timstamp": "2016-07-05 09:26", "user": "Elarcis", "body": "uru: that's cool!"}, {"timstamp": "2016-07-05 09:27", "user": "uru", "body": "So we have a login overlay that's an NG2 app, that can be triggered by other ng2 apps by pushing a status change request to an observable."}, {"timstamp": "2016-07-05 09:27", "user": "uru", "body": "(That's one example)"}, {"timstamp": "2016-07-05 09:27", "user": "Elarcis", "body": "uru: how do you share services between apps though? is it a separate library that instantiate them, and you just inject them when bootstraping the apps?"}, {"timstamp": "2016-07-05 09:28", "user": "uru", "body": "Elarcis: The data that is shared (mostly eventemitters) are defined as static, so they have a single state in the browser, the services that access those are just injected in to multiple apps as needed"}, {"timstamp": "2016-07-05 09:28", "user": "Limarson", "body": "uru: So you have something like SPA-Silos? I tried to build something like that but horribly failed ;D"}, {"timstamp": "2016-07-05 09:29", "user": "uru", "body": "I don't know what SPA-Silos is :x But our homepage stuff is pretty simple, so there's not all that much communication going on."}, {"timstamp": "2016-07-05 09:30", "user": "Limarson", "body": "uru: I found that term in some speech from john papa or dan wahlin (idk anymore) - they described how to break down complexity on large SPA applications and made it in angular1 with \"SPA silo\", several small SPA applications that are bound together with one more or less static page"}, {"timstamp": "2016-07-05 09:31", "user": "Limarson", "body": "uru: I liked the term :)"}, {"timstamp": "2016-07-05 09:32", "user": "uru", "body": "Ah yea, well it seemed like the logical thing to do for a homepage, the dashboard will be an actual single page app"}, {"timstamp": "2016-07-05 09:34", "user": "Limarson", "body": "uru: We are developing something like...basically a ticketing system (there's much more to it). What I would've like to have was to have several logical \"modules\" like Ticketing, Knowledge Base,... that will be put together as an app. I failed at the communication between those \"modules\" because it was too complex after a while"}, {"timstamp": "2016-07-05 09:35", "user": "Limarson", "body": "I left this part for the future-limarson :)"}, {"timstamp": "2016-07-05 09:35", "user": "uru", "body": "Yea, can get tricky, I've been pushing various models and/or enums along the emitters to get things talking, at the moment the parts don't share data though, so that makes it a lot simpler."}, {"timstamp": "2016-07-05 09:38", "user": "Elarcis", "body": "future yourself is always stabed in the back by past and present yourselves"}, {"timstamp": "2016-07-05 09:39", "user": "Limarson", "body": "Elarcis: Shh, don't tell him or he'll know what's coming to him ;)"}, {"timstamp": "2016-07-05 10:07", "user": "Elarcis", "body": "only: create a new order? have you asked a jedi?"}, {"timstamp": "2016-07-05 10:07", "user": "only", "body": "Elarcis: yes, a new order"}, {"timstamp": "2016-07-05 10:07", "user": "Elarcis", "body": "only: more seriously, I guess we can help"}, {"timstamp": "2016-07-05 10:08", "user": "Elarcis", "body": "only: do you already have some code, or are you just requiring for assistance if needed?"}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": "so the api works"}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": "Elarcis: I don't know where to start"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "so have no code atm :)"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: aaah :)"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "is there an example somewhere perhaps"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "that shows how to POST data"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "from a form"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "to the API?"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: well these are different concerns"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "and not reveal the key and secret, obviously :)"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: I suggest you start by coding an angular service that does a $http.post with hardcoded values"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: so you ensure you can call the API right and get this working"}, {"timstamp": "2016-07-05 10:10", "user": "only", "body": "and then replace the hardcoded values with forms?"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: then, and only then, you can start coding a controller with form logic to send that data to the service"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: yes. forms and http calls should be separated, as they don't have the same responsibilities"}, {"timstamp": "2016-07-05 10:11", "user": "Elarcis", "body": "only: a form collects data, a ,say orderService formats it and POSTs it to the API."}, {"timstamp": "2016-07-05 10:11", "user": "only", "body": "ok, got it!"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: this way you can progress little bits by little bits and verify at each step that you're doing it right :)"}, {"timstamp": "2016-07-05 10:12", "user": "only", "body": "what are the prerequisites of being able to code an angular service that does a $http.post?"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: here is the doc for $http, it'll show you how to do POST requests"}, {"timstamp": "2016-07-05 10:12", "user": "only", "body": "I mean, should I install any libraries on my VPS"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: you only need angularjs"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "only: you mean you haven't done any angularjs yet?"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "only: (I mean never ever?)"}, {"timstamp": "2016-07-05 10:13", "user": "only", "body": "I'm about to :)"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "Angular 1.x or 2?"}, {"timstamp": "2016-07-05 10:14", "user": "only", "body": "well I wouldn't know, which one should I go for?"}, {"timstamp": "2016-07-05 10:15", "user": "Elarcis", "body": "only: it depends. 1.x is stable and has a lot of community support, but 2 is newer, more performant, will be released around the end of the year, but has less support and is more prone to change"}, {"timstamp": "2016-07-05 10:15", "user": "Elarcis", "body": "only: I suggest you start by learning 1.x"}, {"timstamp": "2016-07-05 10:16", "user": "Elarcis", "body": "only: you'll get help from more people (including me), and as long as you follow best practices, transitionning to angular2 later will be 'relatively' easy"}, {"timstamp": "2016-07-05 10:17", "user": "only", "body": "thanks for the advice"}, {"timstamp": "2016-07-05 10:18", "user": "only", "body": "so how would one hide the keys and secrets AND still send the API requests?"}, {"timstamp": "2016-07-05 10:18", "user": "only", "body": "with angularjs"}, {"timstamp": "2016-07-05 10:19", "user": "only", "body": "also, which one will work best from this list:"}, {"timstamp": "2016-07-05 10:19", "user": "only", "body": "cURL or Node.js"}, {"timstamp": "2016-07-05 10:19", "user": "Elarcis", "body": "only: cURL is a linux command line program, so I guess it's non-relevant"}, {"timstamp": "2016-07-05 10:20", "user": "Elarcis", "body": "only: angularjs already provides logic to make HTTP calls"}, {"timstamp": "2016-07-05 10:20", "user": "only", "body": "zomg: but I need the forms' contents from the \"client\""}, {"timstamp": "2016-07-05 10:20", "user": "only", "body": "Elarcis: so the two examples set out there are irrelevant?"}, {"timstamp": "2016-07-05 10:21", "user": "Elarcis", "body": "only: yes, I didn't get this was some wordpress plugin API"}, {"timstamp": "2016-07-05 10:21", "user": "only", "body": "zomg: what stops somebody to replicate a request to my own server?"}, {"timstamp": "2016-07-05 10:21", "user": "Elarcis", "body": "only: authentication"}, {"timstamp": "2016-07-05 10:22", "user": "Elarcis", "body": "only: basically, and this applies to any client-side application, everything that is delivered outside of your server can't be trusted anymore"}, {"timstamp": "2016-07-05 10:22", "user": "Elarcis", "body": "only: may it be secret keys, source code, passwords, etc."}, {"timstamp": "2016-07-05 10:23", "user": "Elarcis", "body": "only: it's particularly true for in-browser javascript since anybody can look at the source code with the dev tools, but it also applies to programs written in C++, python, C#... it's always possible to take a peek at the source"}, {"timstamp": "2016-07-05 10:24", "user": "Elarcis", "body": "only: so sensible data (such as secret keys, and authentication data) have to be securely stored on your server, because you're theoretically the only one who can access it"}, {"timstamp": "2016-07-05 10:26", "user": "Elarcis", "body": "only: My guess is that in your needs, angularjs should only manage the form part: collecting user input, and sending it to the server so that it can call the 'WooCommerce' API securely."}, {"timstamp": "2016-07-05 10:26", "user": "only", "body": "yes, exactly"}, {"timstamp": "2016-07-05 10:26", "user": "only", "body": "now trying to figure out a way to do it :)"}, {"timstamp": "2016-07-05 10:26", "user": "Elarcis", "body": "only: I could be wrong of course, but given the examples given (PHP, cURL, Node.js) that looks like something to be done server-side"}, {"timstamp": "2016-07-05 10:27", "user": "Elarcis", "body": "only: well the angularjs service part still holds true: you have to code one that does a $http.post to your server with the form data as a JSON object, then code a form that exploits it"}, {"timstamp": "2016-07-05 10:27", "user": "only", "body": "data-ng-class=\"{ pending: submitOrderPending }\" data-ng-click=\"submitOrder()\""}, {"timstamp": "2016-07-05 10:28", "user": "Elarcis", "body": "only: there will be some server-side method to expose to receive and format that data though"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "ugh, sorry, wrong window"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "well yeah"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "gutted they don't give real life examples"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "for collecting stuff from forms and POSTing it"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "(the WooCommerce REST API devs)"}, {"timstamp": "2016-07-05 10:28", "user": "Elarcis", "body": "only: sorry if you already know that, I don't have a clue about your level of knowledge x)"}, {"timstamp": "2016-07-05 10:29", "user": "Elarcis", "body": "only: well it's a pretty broad topic, because there are A LOT of frontend frameworks, form libraries; etc."}, {"timstamp": "2016-07-05 10:29", "user": "only", "body": "is there a way I can pay somebody to help me out with this?"}, {"timstamp": "2016-07-05 10:30", "user": "only", "body": "a chan on #freenode perhaps?"}, {"timstamp": "2016-07-05 10:30", "user": "Elarcis", "body": "only: I have no idea"}, {"timstamp": "2016-07-05 10:34", "user": "only", "body": "Elarcis: do you mind if I PM you?"}, {"timstamp": "2016-07-05 10:35", "user": "Elarcis", "body": "yes I do mind, sorry x)"}, {"timstamp": "2016-07-05 10:36", "user": "Elarcis", "body": "only: we're all here to help but we got jobs, I don't have the time to dedicate to only one person. if you PM me, you'll just have to wait for me to have time to answer instead of benefiting from the help of everybody here"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": "fair enough"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": "I wonder, this script"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "where does it submit the form?"}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "can't figure it out"}, {"timstamp": "2016-07-05 10:37", "user": "Elarcis", "body": "only: I'm unauthorized"}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "the submit button looks like this <a class=\"btn btn-success btn-fill pull-right order hidden-lg hidden-md hidden-sm\" data-ng-class=\"{ pending: submitOrderPending }\" data-ng-click=\"submitOrder()\">"}, {"timstamp": "2016-07-05 10:38", "user": "only", "body": "is there a pastebin for many lines of code?"}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: I suppose pastebin"}, {"timstamp": "2016-07-05 10:39", "user": "mrded", "body": "=)"}, {"timstamp": "2016-07-05 10:39", "user": "only", "body": "You have exceeded the maximum paste size of 512 kilobytes per paste."}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: indeed that's strange, usually the form tag has a ng-submit attribute with a function in it"}, {"timstamp": "2016-07-05 10:39", "user": "mrded", "body": "only: try"}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: in that case, try to narrow it down, I doubt all the code is mandatory"}, {"timstamp": "2016-07-05 10:40", "user": "only", "body": "mrded: it worked, thanks!"}, {"timstamp": "2016-07-05 10:41", "user": "only", "body": "so, where does it submit the form? ->"}, {"timstamp": "2016-07-05 10:41", "user": "only", "body": "I'm lost"}, {"timstamp": "2016-07-05 10:41", "user": "Elarcis", "body": "UH"}, {"timstamp": "2016-07-05 10:41", "user": "Elarcis", "body": "I'm not reading that"}, {"timstamp": "2016-07-05 10:42", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:42", "user": "Elarcis", "body": "only: that's still minified and bundled code"}, {"timstamp": "2016-07-05 10:42", "user": "Elarcis", "body": "only: where did you get it? on an actual site?"}, {"timstamp": "2016-07-05 10:42", "user": "only", "body": "yes"}, {"timstamp": "2016-07-05 10:43", "user": "only", "body": "trying to figure out how do they do it"}, {"timstamp": "2016-07-05 10:43", "user": "Elarcis", "body": "only: :)"}, {"timstamp": "2016-07-05 10:43", "user": "only", "body": "and where do they submit the form using angularjs"}, {"timstamp": "2016-07-05 10:43", "user": "Elarcis", "body": "only look at the example"}, {"timstamp": "2016-07-05 10:43", "user": "mrded", "body": "it looks uglified"}, {"timstamp": "2016-07-05 10:44", "user": "Elarcis", "body": "only: basically you bind a function to the standard onSubmit event, and that function will be called and process the form's data in anyway you want"}, {"timstamp": "2016-07-05 10:44", "user": "Elarcis", "body": "only: you still need to add a submit trigger, like an input type='submit' or a button"}, {"timstamp": "2016-07-05 10:45", "user": "only", "body": "funny thing is that I don't see the URL anywhere in that .js"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "so it's extremely unclear to me"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "where is that form getting submitted"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "only: don't give yourself a headache, this code has been automatically compressed by a program, it's not meant to be read"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "(by humans at least)"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "you can de-uglify it, can't you?"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "only: yes, you're staring at it deuglified"}, {"timstamp": "2016-07-05 10:47", "user": "Elarcis", "body": "only: uglified, there would be no whitespace nor line breaks"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "compressed or not compressed, there must be an URL"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "where the form is submitted"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "no?"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "that's the only .js they use"}, {"timstamp": "2016-07-05 10:47", "user": "Elarcis", "body": "only: not necessarily if the form isn't meant to be sent online"}, {"timstamp": "2016-07-05 10:48", "user": "Elarcis", "body": "only: also, the URL could be constructed from different function calls, in which case it'd be hard to find it"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: you should, imho, just see how angularjs services and $http calls are written and start from scratch, instead of looking at computer code :)"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "thing is, I want to use their field validation and all the UX effects"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: it will be much simpler and you'll have a better understanding of what you're doing"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "and just submit the form differently if it makes sense :)"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "is it possible to change just the last bit?"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: do you have access to the source of that site?"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "yes, the .js and .css"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "and everything works beautifully"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "until you click \"submit\""}, {"timstamp": "2016-07-05 10:50", "user": "Elarcis", "body": "only: ok then no it's not psosible unless you're a demi-god and you're not bothered to steal source code ;)"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "now, I want to put a woocommerce underneath it"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "and receive the forms and create an order out of it"}, {"timstamp": "2016-07-05 10:52", "user": "only", "body": "it's stealing to learn ;)"}, {"timstamp": "2016-07-05 10:52", "user": "only", "body": "not production"}, {"timstamp": "2016-07-05 10:54", "user": "Elarcis", "body": "only: yeah, I still advive against it, since you're a beginner in angularjs and that it's hard enough to reverse engineed minified code, don't think about it if you don't master the framework used :D"}, {"timstamp": "2016-07-05 10:55", "user": "Elarcis", "body": "only: it'd be like trying to create your own religion by reading a bible written in a foreign language you've never heard of, while seaking to replace every mention to bread by 'burger'"}, {"timstamp": "2016-07-05 10:56", "user": "only", "body": "hah"}, {"timstamp": "2016-07-05 11:11", "user": "Elarcis", "body": "only: how are you holding uo?"}, {"timstamp": "2016-07-05 11:11", "user": "Elarcis", "body": "*up"}, {"timstamp": "2016-07-05 11:12", "user": "only", "body": "bad :( I can't get angularjs to work with the REST API"}, {"timstamp": "2016-07-05 11:12", "user": "Elarcis", "body": "only: do you need some help? :)"}, {"timstamp": "2016-07-05 11:12", "user": "only", "body": "I would love some help :)"}, {"timstamp": "2016-07-05 11:13", "user": "Elarcis", "body": "only: what do you have so far?"}, {"timstamp": "2016-07-05 11:13", "user": "only", "body": "Elarcis: I was reading through this:"}, {"timstamp": "2016-07-05 11:13", "user": "Elarcis", "body": "only: don't you want to use angularjs forms?"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "yes I do"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "basically, if you can help me out with a submit button with just hardcoded variable"}, {"timstamp": "2016-07-05 11:15", "user": "Elarcis", "body": "only: you don't need nodejs for that then x)"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "that will talk to this API"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": ""}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "I will be out of the woods"}, {"timstamp": "2016-07-05 11:16", "user": "only", "body": "or better yet, with a <input type=\"text\">"}, {"timstamp": "2016-07-05 11:16", "user": "only", "body": "so a form with a singe <input type=\"text\"> and a submit button that would POST to the woo rest api"}, {"timstamp": "2016-07-05 11:17", "user": "Elarcis", "body": "only: if I may, look at the demo on this page: it shows you how you can have a html form, exploit the fields values in angularjs and have a submit function"}, {"timstamp": "2016-07-05 11:18", "user": "Elarcis", "body": "only: try to have just one text input and retrieve its value first"}, {"timstamp": "2016-07-05 11:18", "user": "Elarcis", "body": "only: we'll worry about the API later :)"}, {"timstamp": "2016-07-05 11:18", "user": "only", "body": "Elarcis: thank you, that's what I will do, be back soon :)"}, {"timstamp": "2016-07-05 11:19", "user": "Elarcis", "body": "np"}, {"timstamp": "2016-07-05 11:21", "user": "Elarcis", "body": "only: actually, you might want to read the whole article, it explains a lot :D"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "also, retrieve as in \"alert\" it?"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "does that count?"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "ha"}, {"timstamp": "2016-07-05 11:22", "user": "Elarcis", "body": "only: yes, that count x)"}, {"timstamp": "2016-07-05 11:22", "user": "Elarcis", "body": "only: since basically you'll later replace alert() with yourService.createOrder()"}], "label": "other"}
{"id": "93d594ce", "body": "", "comments": [{"timstamp": "2016-09-23 21:12", "user": "[1]David", "body": "anyone used ngMaterial?"}, {"timstamp": "2016-09-23 21:13", "user": "dopry", "body": "[1]David, da_wunder has a seed for that... maybe he knows."}, {"timstamp": "2016-09-23 21:13", "user": "[1]David", "body": "dopry: sorry to be a complete idiot, but what is a seed?"}, {"timstamp": "2016-09-23 21:14", "user": "dopry", "body": "[1]David,"}, {"timstamp": "2016-09-23 21:15", "user": "[1]David", "body": "so like a basic project to build on?"}, {"timstamp": "2016-09-23 21:17", "user": "grizzm0", "body": "[1]David, seed/skeleton"}, {"timstamp": "2016-09-23 21:18", "user": "grizzm0", "body": "Something to start upon. So yeah."}, {"timstamp": "2016-09-23 21:18", "user": "[1]David", "body": "cool thanks"}, {"timstamp": "2016-09-23 21:20", "user": "[1]David", "body": "ok next dumb question, how do i know if i am able to use ES6 or not? as far as i know i am using javascript and angularjs"}, {"timstamp": "2016-09-23 21:21", "user": "da_wunder", "body": "[1]David: first question are you using any build tools?"}, {"timstamp": "2016-09-23 21:22", "user": "[1]David", "body": "da_wunder: i am using webstorm IDE and i dont think i have installed any build tools"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "da_wunder: I am a mathematician/financier who was fascinated by webdevelopment so am trying to learn"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "I can code java/C# and a few others"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "[1]David: and for that i would read john papa's guide"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": "but this is a whole different world"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "and see some projects that are public"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": ""}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "yep"}, {"timstamp": "2016-09-23 21:25", "user": "[1]David", "body": "ok will do thanks"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "da_wunder, I think there should be a channel bot that responds to all \"how do I\" questions with,"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "have you read"}, {"timstamp": "2016-09-23 21:27", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-09-23 21:28", "user": "[1]David", "body": "really thank you all for your help. I appreciate it!#"}, {"timstamp": "2016-09-23 21:34", "user": "da_wunder", "body": "[1]David: np"}], "label": "other"}
{"id": "93d594e3", "body": "", "comments": [{"timstamp": "2018-03-07 15:50", "user": "ray02", "body": "this is my situation :i have a service with two obeservable this are used for two filter , i have create two of them because they andle different type of data so in the UI compoent i call the function with the data to pass and in the component i refresh my chart recalling the function. The problem is that i call two time the same function inside de single component,is it possible to make a multy subscrition ?"}, {"timstamp": "2018-03-07 15:50", "user": "ray02", "body": "here some code of wha i have"}, {"timstamp": "2018-03-07 15:50", "user": "icebox", "body": "ray02: I think so"}, {"timstamp": "2018-03-07 15:51", "user": "ray02", "body": "icebox , does make sense the code i have posted ?"}, {"timstamp": "2018-03-07 15:52", "user": "icebox", "body": "ray02: for me, no... sorry"}, {"timstamp": "2018-03-07 15:53", "user": "icebox", "body": "ray02: what is the method called twice?"}, {"timstamp": "2018-03-07 15:53", "user": "ray02", "body": "this.getGaugeData()"}, {"timstamp": "2018-03-07 15:53", "user": "icebox", "body": "ray02: ok... trying to read again that snippet :)"}, {"timstamp": "2018-03-07 15:54", "user": "yrc", "body": "icebox: s/controller's parameter/controller's constructor/ (sorry)"}, {"timstamp": "2018-03-07 15:55", "user": "yrc", "body": "And I agree that this dev workflow is hell to work with, when you discover the whole frontend stack at once!"}, {"timstamp": "2018-03-07 15:57", "user": "icebox", "body": "ray02: anyway I don't understand because you need to call a filter from the service"}, {"timstamp": "2018-03-07 15:57", "user": "icebox", "body": "ray02: please, tell me the ux causing your issue"}, {"timstamp": "2018-03-07 15:58", "user": "ray02", "body": "because the value i set in the UI filter has to be spread to all the component in the page"}, {"timstamp": "2018-03-07 15:58", "user": "icebox", "body": "ray02: ok... and?"}, {"timstamp": "2018-03-07 15:58", "user": "ray02", "body": "and after that i have to refresh the chart"}, {"timstamp": "2018-03-07 15:59", "user": "ray02", "body": "so the error happen inside the component"}, {"timstamp": "2018-03-07 15:59", "user": "icebox", "body": "ray02: ok... why do you call getGaugeData twice?"}, {"timstamp": "2018-03-07 15:59", "user": "icebox", "body": "ray02: it seems that call is wrong in the filter"}, {"timstamp": "2018-03-07 16:00", "user": "icebox", "body": "ray02: (my point is there is a design problem)"}, {"timstamp": "2018-03-07 16:00", "user": "ray02", "body": "because i have two filter, and i have made an observable for each filter"}, {"timstamp": "2018-03-07 16:00", "user": "ray02", "body": "yes i know"}, {"timstamp": "2018-03-07 16:00", "user": "ray02", "body": "i should have only one observable"}, {"timstamp": "2018-03-07 16:00", "user": "ray02", "body": "that handle the two filter"}, {"timstamp": "2018-03-07 16:00", "user": "icebox", "body": "ray02: forget for a while the observables... why do you need to get data in the filter and not in the service?"}, {"timstamp": "2018-03-07 16:01", "user": "ray02", "body": "but i don't know how to do that"}, {"timstamp": "2018-03-07 16:01", "user": "yrc", "body": "icebox: angular.dynamicLocale is a namespace that contains 2 things: the `tmhDynamicLocaleService` interface that must be implemented by my `localeService` must be; and the tmhDynamicLocaleProvider, that apparently AngularJS is needing to actually build my `localeService`. Surely there is a logical way to use the second to obtain the first, no?"}, {"timstamp": "2018-03-07 16:01", "user": "icebox", "body": "ray02: usually I get the data when I render the view and finally I filter some data"}, {"timstamp": "2018-03-07 16:01", "user": "ray02", "body": "yes is like this"}, {"timstamp": "2018-03-07 16:02", "user": "icebox", "body": "yrc: things are very simple when you know what you are doing... :)"}, {"timstamp": "2018-03-07 16:04", "user": "ray02", "body": "icebox in the filter i onply apply the filter"}, {"timstamp": "2018-03-07 16:04", "user": "yrc", "body": "icebox: So, forgetting Typescript, forgetting modules/namespaces..., what would you suggest, for me to have an object (of type `any` if necessary) on which I can call: obj.set(\"fr\")?"}, {"timstamp": "2018-03-07 16:04", "user": "yrc", "body": "In my controller."}, {"timstamp": "2018-03-07 16:05", "user": "icebox", "body": "yrc: no... you should start from javascript to understand better what you are doing in ts and webpack... this is the reason I advice you to load globally that lib and go ahead :) as I said a few hours ago :)"}, {"timstamp": "2018-03-07 16:05", "user": "icebox", "body": "ray02: so when is that method called twice?"}, {"timstamp": "2018-03-07 16:05", "user": "ray02", "body": "inside the component that has the chart"}, {"timstamp": "2018-03-07 16:06", "user": "icebox", "body": "ray02: no... always from ux point of view"}, {"timstamp": "2018-03-07 16:06", "user": "ray02", "body": "why?"}, {"timstamp": "2018-03-07 16:06", "user": "yrc", "body": "icebox: I cannot: company rules :-("}, {"timstamp": "2018-03-07 16:07", "user": "icebox", "body": "ray02: because I don't understand when it is called twice"}, {"timstamp": "2018-03-07 16:07", "user": "icebox", "body": "ray02: when is that method triggered?"}, {"timstamp": "2018-03-07 16:07", "user": "yrc", "body": "I must use typescript (although `any` is fine if necessary); I must use AngularJS 1.6. I must use webpack. I must use the right files layout..."}, {"timstamp": "2018-03-07 16:08", "user": "ray02", "body": "the snipped of code i have send you is a mix of the part : the first part is the serivice ,the second is the uIcomponent and the third is the single component"}, {"timstamp": "2018-03-07 16:08", "user": "icebox", "body": "yrc: sure... but if don't know the basics, you will have an hard time to fulfill your homeworks"}, {"timstamp": "2018-03-07 16:08", "user": "icebox", "body": "ray02: sigh..."}, {"timstamp": "2018-03-07 16:09", "user": "yrc", "body": "homeworks?? lol, thanksfully I leave all this junk at work, and have better things to do at home :-D"}, {"timstamp": "2018-03-07 16:10", "user": "icebox", "body": "ray02: I am trying to help you to improve that design... (because I don't understand why you are using observables to spread data in the components...) and I don't understand when that method is called twice..."}, {"timstamp": "2018-03-07 16:10", "user": "icebox", "body": "yrc: cool"}, {"timstamp": "2018-03-07 16:10", "user": "ray02", "body": "in the signle component on ngOnInit() subscribe to the fucntion"}, {"timstamp": "2018-03-07 16:11", "user": "Elarcis", "body": "yrc: if it is company rules that you use this tech, you can ask teammates for help, no need to struggle going alone in the dark"}, {"timstamp": "2018-03-07 16:11", "user": "icebox", "body": "yrc: angularjs and typescript is not a common setup... you need to be proficient with angularjs and es2015 to understand better how angularjs works with typescript"}, {"timstamp": "2018-03-07 16:11", "user": "Elarcis", "body": "yrc: they are more familiar with the setup/how to do stuff than us..."}, {"timstamp": "2018-03-07 16:12", "user": "ray02", "body": "icebox i see that you are trying to help me, i'm trying to be clear so you can help me better :)"}, {"timstamp": "2018-03-07 16:12", "user": "icebox", "body": "ray02: I see"}, {"timstamp": "2018-03-07 16:12", "user": "yrc", "body": "Elarcis: I did so, but so far no one had to stray from the familiar paths, and no one is really expert at this stuff: just do the same as before... And now we have this app, that need to do dynamic i18n (with a language menu on top), and I feel all alone..."}, {"timstamp": "2018-03-07 16:13", "user": "icebox", "body": "ray02: in ngOnInit... getGaugeData should be in the \"resolve\" feature of the view... not in the init of the component... anyway I don't understand the flow"}, {"timstamp": "2018-03-07 16:13", "user": "icebox", "body": "ray02: I don't understand you call again getGaugeData when the filter is triggered"}, {"timstamp": "2018-03-07 16:14", "user": "ray02", "body": "yes for update the value inside the chart"}, {"timstamp": "2018-03-07 16:14", "user": "yrc", "body": "icebox: Yes, I realize that: AngularJS 1.6 is probably the only version with support for TS, and all the folks actually using TS actually use Angular; and they are right..."}, {"timstamp": "2018-03-07 16:15", "user": "yrc", "body": "And I know nothing of all this (well, more than I did this morning, thanks to you guys). And it's real hard..."}, {"timstamp": "2018-03-07 16:15", "user": "ray02", "body": ",the filtered value came from the back because need to be recaluculated"}, {"timstamp": "2018-03-07 16:15", "user": "icebox", "body": "yrc: I know those feelings... but how shall we help you, please?"}, {"timstamp": "2018-03-07 16:17", "user": "icebox", "body": "ray02: so... the filtered values are provided by the backend... every time you need the filter, you call getDaugeData"}, {"timstamp": "2018-03-07 16:17", "user": "ray02", "body": "yes"}, {"timstamp": "2018-03-07 16:19", "user": "yrc", "body": "icebox: You already did help a lot! I am just so new to all this; I will need time to connect the dots, I guess. For a start, I would really like to understand the syntax of"}, {"timstamp": "2018-03-07 16:19", "user": "yrc", "body": "module declaration, the name of which happens to be none other than \"angular\"."}, {"timstamp": "2018-03-07 16:22", "user": "icebox", "body": "ray02: \"in the component i refresh my chart recalling the function. The problem is that i call two time the same function inside de single component\"... I understand you call the filter when you refresh the chart"}, {"timstamp": "2018-03-07 16:22", "user": "Elarcis", "body": "yrc: the Internet was too broad, maybe just the Web would have been enough"}, {"timstamp": "2018-03-07 16:23", "user": "icebox", "body": "ray02: so the sequence I understand is the following one... change the filter / refresh the chart / undesidered change of the filter... is it correct?"}, {"timstamp": "2018-03-07 16:23", "user": "yrc", "body": "Elarcis: I have already read that. This does not cover the fact that the namespace is inside a module declaration. What I understand, though, is that the namespace gets somehow included inside angular, as can be seen in the screenshot I posted earlier."}, {"timstamp": "2018-03-07 16:24", "user": "ray02", "body": "icebox yes"}, {"timstamp": "2018-03-07 16:25", "user": "icebox", "body": "yrc: I am afraid you are not able to connect the dots, because the knowledge gap is too much... the evil is in the details"}, {"timstamp": "2018-03-07 16:25", "user": "icebox", "body": "ray02: nice"}, {"timstamp": "2018-03-07 16:25", "user": "ray02", "body": "thanks for undestand me :p"}, {"timstamp": "2018-03-07 16:25", "user": "icebox", "body": "ray02: why do you apply the filter when you refresh the chart?"}, {"timstamp": "2018-03-07 16:26", "user": "ray02", "body": "no is the contrary ,i apply the filter and than i refesh the chart"}, {"timstamp": "2018-03-07 16:26", "user": "yrc", "body": "icebox: As things are now, you are absolutely right, unfortunately. I will have to fill the gap, though. It's my job... Thanks a lot Elarcis, icebox, for your patience. I have a meeting I must attend to, now. 'later!"}, {"timstamp": "2018-03-07 16:28", "user": "icebox", "body": "ray02: it is what I said :) but why refreshing the chart is there an undesidered call of getGaugeData?"}, {"timstamp": "2018-03-07 16:28", "user": "icebox", "body": "yrc: bye"}, {"timstamp": "2018-03-07 16:28", "user": "icebox", "body": "yrc: you are welcome"}, {"timstamp": "2018-03-07 16:31", "user": "icebox", "body": "ray02: apart my bad english... :) I wrote \"change the filter / refresh the chart / undesidered change of the filter\" and you said it is correct"}, {"timstamp": "2018-03-07 16:32", "user": "ray02", "body": "i confirm that is right what you understand :)"}, {"timstamp": "2018-03-07 16:33", "user": "ray02", "body": ""}, {"timstamp": "2018-03-07 16:33", "user": "ray02", "body": "the component of the chart start like this"}, {"timstamp": "2018-03-07 16:33", "user": "icebox", "body": "ok... is that chart component?"}, {"timstamp": "2018-03-07 16:33", "user": "icebox", "body": "ah ok"}, {"timstamp": "2018-03-07 16:33", "user": "ray02", "body": "yes"}, {"timstamp": "2018-03-07 16:34", "user": "ray02", "body": "i have two subscribe because i'm not able to make a single function that handle the two parameter of the filter"}, {"timstamp": "2018-03-07 16:35", "user": "ray02", "body": "so for start making work the thing i have create two function indipendent"}, {"timstamp": "2018-03-07 16:35", "user": "icebox", "body": "ray02: I understand why you need two filters... but..."}, {"timstamp": "2018-03-07 16:35", "user": "icebox", "body": "ray02: thinking on it"}, {"timstamp": "2018-03-07 16:36", "user": "ray02", "body": "the getGaugeData() function is called twice only onInit of course"}, {"timstamp": "2018-03-07 16:36", "user": "ray02", "body": "not all the time"}, {"timstamp": "2018-03-07 16:40", "user": "ray02", "body": "icebox do you think i can use fork?"}, {"timstamp": "2018-03-07 16:40", "user": "ray02", "body": "forkJoin sorry"}, {"timstamp": "2018-03-07 16:41", "user": "icebox", "body": "ray02: interesting scenario... no idea.. I am thinking on the design"}, {"timstamp": "2018-03-07 16:42", "user": "icebox", "body": "ray02: I would say those subscribes should be in ngOnInit of the \"container component\", containg the filters and the chart"}, {"timstamp": "2018-03-07 16:42", "user": "icebox", "body": "*containing"}, {"timstamp": "2018-03-07 16:42", "user": "icebox", "body": "*subscribers"}, {"timstamp": "2018-03-07 16:43", "user": "icebox", "body": "ray02: I imaging you have a chart component and then a sort of dialog component containing the filters"}, {"timstamp": "2018-03-07 16:43", "user": "icebox", "body": "*imagine"}, {"timstamp": "2018-03-07 16:44", "user": "icebox", "body": "ray02: moving the subscribers into \"dialog\" component? is it feasible?"}, {"timstamp": "2018-03-07 16:44", "user": "ray02", "body": "my big scenario is like this my page contain : UI coponent + 10 component for the chart"}, {"timstamp": "2018-03-07 16:44", "user": "icebox", "body": "ray02: I mean that code is filter code, not chart code"}, {"timstamp": "2018-03-07 16:44", "user": "ray02", "body": "(eache component contain a chart)"}, {"timstamp": "2018-03-07 16:45", "user": "ray02", "body": "*each component contain a chart"}, {"timstamp": "2018-03-07 16:45", "user": "icebox", "body": "ray02: ok... so the filters are shared"}, {"timstamp": "2018-03-07 16:45", "user": "ray02", "body": "yes this is why i'm in this situation"}, {"timstamp": "2018-03-07 16:45", "user": "icebox", "body": "ray02: yes and no :)"}, {"timstamp": "2018-03-07 16:46", "user": "ray02", "body": "ahah ok maybe for the my knowledge"}, {"timstamp": "2018-03-07 16:46", "user": "ray02", "body": ":p"}, {"timstamp": "2018-03-07 16:46", "user": "icebox", "body": "ray02: :P"}, {"timstamp": "2018-03-07 16:46", "user": "icebox", "body": "10 mins to resolve it :)"}, {"timstamp": "2018-03-07 16:46", "user": "ray02", "body": "for me is the first time i found my selfe in this situation"}, {"timstamp": "2018-03-07 16:46", "user": "ray02", "body": "ahah"}, {"timstamp": "2018-03-07 16:46", "user": "ray02", "body": "yes exatly i see you get my work shenario"}, {"timstamp": "2018-03-07 16:47", "user": "icebox", "body": "ray02: it is all in the design... I don't think an observable feature can help here... apart an hack :)"}, {"timstamp": "2018-03-07 16:48", "user": "icebox", "body": "ray02: \"I mean that code is filter code, not chart code\" do you mean that ngOnInt with two subscribers?"}, {"timstamp": "2018-03-07 16:49", "user": "ray02", "body": "no"}, {"timstamp": "2018-03-07 16:49", "user": "icebox", "body": "which code?"}, {"timstamp": "2018-03-07 16:50", "user": "ray02", "body": ""}, {"timstamp": "2018-03-07 16:50", "user": "ray02", "body": "here"}, {"timstamp": "2018-03-07 16:50", "user": "icebox", "body": "ray02: ok"}, {"timstamp": "2018-03-07 16:50", "user": "ray02", "body": "the part under ///////// UI FILTER ////////"}, {"timstamp": "2018-03-07 16:50", "user": "ray02", "body": "is inside the component of the filter"}, {"timstamp": "2018-03-07 16:51", "user": "ray02", "body": "this ///////// SERVICE//////// is in the serivice file"}, {"timstamp": "2018-03-07 16:51", "user": "icebox", "body": "and the component is one of the charts"}, {"timstamp": "2018-03-07 16:51", "user": "ray02", "body": "exatly"}, {"timstamp": "2018-03-07 16:52", "user": "icebox", "body": "but why in the ngOnInit of the chart component?"}, {"timstamp": "2018-03-07 16:53", "user": "ray02", "body": "to start to recieve the value as soon the component is ready no?"}, {"timstamp": "2018-03-07 16:53", "user": "ray02", "body": ",in my head is like this :p,"}, {"timstamp": "2018-03-07 16:53", "user": "icebox", "body": "it seems you need something to refresh the charts when you change the filter... and you are using the changes in the filter, but this is wrong"}, {"timstamp": "2018-03-07 16:54", "user": "icebox", "body": "ray02: I think your idea is correct, but not the execution :)"}, {"timstamp": "2018-03-07 16:55", "user": "icebox", "body": "ray02: you could move getGaugeData() in the service and using only a reference of that data in the subscribers"}, {"timstamp": "2018-03-07 16:57", "user": "icebox", "body": "ray02: need to go me too... I think that is worthy to investigate... something like this._cromxService.sharedFilter.subscribe(newPeriod => {this._cromxService.getSharedDataFilter();})"}, {"timstamp": "2018-03-07 16:57", "user": "icebox", "body": "off... bye"}, {"timstamp": "2018-03-07 16:57", "user": "ray02", "body": "ok"}, {"timstamp": "2018-03-07 16:58", "user": "ray02", "body": "thanks for the time :)"}, {"timstamp": "2018-03-07 16:58", "user": "icebox", "body": "ray02: no problem... you are welcome.. and we are here also tomorrow"}, {"timstamp": "2018-03-07 16:58", "user": "ray02", "body": "yes"}, {"timstamp": "2018-03-07 16:58", "user": "ray02", "body": "let's see"}, {"timstamp": "2018-03-07 16:59", "user": "icebox", "body": "bye"}, {"timstamp": "2018-03-07 16:59", "user": "ray02", "body": "bye"}], "label": "other"}
{"id": "73af7d2f", "body": "", "comments": [{"timstamp": "12:21", "user": "jlebrech", "body": "what's buckbot?"}, {"timstamp": "12:27", "user": "trampi", "body": "jlebrech: join #buckbot"}, {"timstamp": "12:41", "user": "jlebrech", "body": "ok, that's fun"}], "label": "other"}
{"id": "0edea28b", "body": "", "comments": [{"timstamp": "03:45", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "03:45", "user": "CssNoob", "body": ""}, {"timstamp": "03:45", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}, {"timstamp": "06:02", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "06:02", "user": "CssNoob", "body": ""}, {"timstamp": "06:02", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}], "label": "other"}
{"id": "0ec1e202", "body": "", "comments": [{"timstamp": "16:01", "user": "Booster2ooo", "body": "Is there any way to inject a variable via command line at runtime? For instance to increase the version number of an app ?"}, {"timstamp": "16:02", "user": "stennowork", "body": "Booster2ooo, that sounds really bizarre"}, {"timstamp": "16:03", "user": "stennowork", "body": "do you want to do code hotloading?"}, {"timstamp": "16:03", "user": "Booster2ooo", "body": "why's that ?"}, {"timstamp": "16:03", "user": "stennowork", "body": "is your goal basically to update your code without causing any downtime?"}, {"timstamp": "16:04", "user": "stennowork", "body": "oh wait frontend"}, {"timstamp": "16:04", "user": "ray02", "body": "stennowork: no i think he would just change the name of the project"}, {"timstamp": "16:05", "user": "ray02", "body": "to have project1.0 project.1.1 etc.."}, {"timstamp": "16:05", "user": "ray02", "body": "right ?"}, {"timstamp": "16:05", "user": "Booster2ooo", "body": "My goal is simply to inject the \"build version\" from the CI"}, {"timstamp": "16:11", "user": "ray02", "body": "Booster2ooo: i don't think is possible"}, {"timstamp": "16:11", "user": "stennowork", "body": "for what?"}, {"timstamp": "16:11", "user": "stennowork", "body": "or #buckbot :P"}, {"timstamp": "16:12", "user": "Pyrrhus666", "body": "more likely :)"}, {"timstamp": "16:40", "user": "Booster2ooo", "body": "[16:11:10] <ray02> Booster2ooo: i don't think is possible // thanks, that's my assumption as well"}, {"timstamp": "16:45", "user": "ray02", "body": "Booster2ooo: but if you look the build files they have their custom name all the time"}, {"timstamp": "16:46", "user": "ray02", "body": "Booster2ooo: here we have some script, out of angular cli, that use/ modify that name"}, {"timstamp": "16:46", "user": "Booster2ooo", "body": "ray02: yea but i can't easily link the file name to my build #"}, {"timstamp": "16:47", "user": "Booster2ooo", "body": "the easier would be to create a .js file in the CI process and import this file in the angular project so it get compiled"}], "label": "other"}
{"id": "93d594ed", "body": "", "comments": [{"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "i just want to know the current system date and it should prompt on window based on client system"}, {"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "is there any way sir"}, {"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "if it is like 01/12/2017 on client system we should see same on window too"}, {"timstamp": "2017-07-01 07:54", "user": "praveen", "body": "please guys do respond"}, {"timstamp": "2017-07-01 07:54", "user": "praveen", "body": "it is urgent"}, {"timstamp": "2017-07-01 08:05", "user": "praveen", "body": "no one is there to help me out"}], "label": "other"}
{"id": "93d5952d", "body": "", "comments": [{"timstamp": "2017-02-10 10:20", "user": "Pyrrhus666", "body": "I have a small war inside vscode. the formatter and linter cannot agree how my code should look :("}, {"timstamp": "2017-02-10 10:24", "user": "icebox", "body": "Pyrrhus666: snippet?"}, {"timstamp": "2017-02-10 10:26", "user": "Pyrrhus666", "body": "an example is : code format does <unconvertable> f() {}, linter wants <unconvertable> f () {}. the linter is correct, but I cant seem to convince the formatter of this :)"}, {"timstamp": "2017-02-10 10:27", "user": "Miaow", "body": "icebox: ahah ^^"}, {"timstamp": "2017-02-10 10:27", "user": "Pyrrhus666", "body": "ah. seems I should install a plugin for that. quelle surprise."}, {"timstamp": "2017-02-10 10:29", "user": "icebox", "body": "Pyrrhus666: I see... usually I follow strictly the original eslint-config and I don't use any formatter"}, {"timstamp": "2017-02-10 10:30", "user": "graingert", "body": "Pyrrhus666: what's your code formater"}, {"timstamp": "2017-02-10 10:30", "user": "Pyrrhus666", "body": "icebox, I dont use the formatter often, but as Im a bit sloppy it would be nice if they both do the same thing ;)"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "graingert, vscode internal, now experimenting with the beautify plugin"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "I want a formatter that I can point at my .eslintrc :("}, {"timstamp": "2017-02-10 10:31", "user": "graingert", "body": "Pyrrhus666: just use eslint --fix"}, {"timstamp": "2017-02-10 10:31", "user": "icebox", "body": "Pyrrhus666: yep... but I abandoned that unicorn a few years ago :)"}, {"timstamp": "2017-02-10 10:34", "user": "icebox", "body": "Pyrrhus666: I would give a try to graingert's suggestion"}, {"timstamp": "2017-02-10 10:35", "user": "icebox", "body": "Pyrrhus666: but, as I said, it doesn't exist that kind of unicorn... for instance, what about blank lines? of course \"--fix\" cannot add them following your tastes"}], "label": "other"}
{"id": "93d594d5", "body": "", "comments": [{"timstamp": "2018-02-23 10:23", "user": "Elarcis", "body": "OT: Zeldas Breath of the Wild OST is really great for a relaxing work session :D"}, {"timstamp": "2018-02-23 10:33", "user": "ray02", "body": "Elarcis: i love to use this"}, {"timstamp": "2018-02-23 12:56", "user": "Elarcis", "body": "ray02: I listened to some of the tracks you sent this morning, I cant say Im a fan, sorry :P"}, {"timstamp": "2018-02-23 14:33", "user": "ray02", "body": "Elarcis no problem :) it's just a quetion of taste :)"}, {"timstamp": "2018-02-23 14:50", "user": "icebox", "body": "OT:"}, {"timstamp": "2018-02-23 14:51", "user": "Pyrrhus666", "body": "icebox, Ill believe it when we see the first OS whatsapp-compatible client."}, {"timstamp": "2018-02-23 14:58", "user": "icebox", "body": "Pyrrhus666: yep... really hard"}, {"timstamp": "2018-02-23 14:59", "user": "icebox", "body": "Pyrrhus666: I would change immediately, but the rest of the world is using whatsapp"}, {"timstamp": "2018-02-23 15:01", "user": "Pyrrhus666", "body": "icebox, and whatsapp uses signal (the protocol), so it should be possible."}, {"timstamp": "2018-02-23 15:01", "user": "Pyrrhus666", "body": "unless of course they dont use signal, since nobody can verify the source anyway."}, {"timstamp": "2018-02-23 15:01", "user": "Pyrrhus666", "body": "(and yes, I do believe they dont use signal, or at least a back-doored version)"}, {"timstamp": "2018-02-23 15:50", "user": "icebox", "body": "Pyrrhus666: yesterday not a nice experience when your laptop is blocked after bios post with a cursor blinking at top-left... :) hard shutdown, crossing fingers, reboot... it was ok :) maybe a glitch with the ssd"}, {"timstamp": "2018-02-23 15:52", "user": "Elarcis", "body": "outch"}, {"timstamp": "2018-02-23 15:52", "user": "Pyrrhus666", "body": "icebox, ha, recognizable... I have that too sometimes :) my desktop has this all the time nowadays, so I rarely reboot it. new pc is ordered though :)"}, {"timstamp": "2018-02-23 15:53", "user": "icebox", "body": ":P yeah"}, {"timstamp": "2018-02-23 15:53", "user": "Pyrrhus666", "body": "(went with intel again, since linux support for ryzen G is, well, severely lacking)"}, {"timstamp": "2018-02-23 15:53", "user": "icebox", "body": "sigh"}, {"timstamp": "2018-02-23 15:53", "user": "icebox", "body": "(anyway it is a relief doing daily backups) :)"}, {"timstamp": "2018-02-23 15:54", "user": "Pyrrhus666", "body": "icebox, well, theyre trying, at least, but as for now, its too new to be reliable"}, {"timstamp": "2018-02-23 15:54", "user": "Pyrrhus666", "body": "icebox, a good backup regime is always nice ;)"}, {"timstamp": "2018-02-23 15:55", "user": "icebox", "body": "a classical rsync on two different sdhc cards :)"}, {"timstamp": "2018-02-23 15:55", "user": "Pyrrhus666", "body": "haha, thats oldskool :)"}, {"timstamp": "2018-02-23 15:56", "user": "Pyrrhus666", "body": "work-pc uses rsnapshot (built on rsync), home-pc uses deltacopy (windows rsync to obsd box)"}, {"timstamp": "2018-02-23 15:56", "user": "Pyrrhus666", "body": "laptop isnt backed up, but thats not needed"}, {"timstamp": "2018-02-23 16:04", "user": "icebox", "body": "ok :P"}, {"timstamp": "2018-02-23 16:21", "user": "Pyrrhus666", "body": "30 minutes and counting..."}, {"timstamp": "2018-02-23 16:26", "user": "icebox", "body": "less :)"}, {"timstamp": "2018-02-23 16:28", "user": "Pyrrhus666", "body": "^^"}, {"timstamp": "2018-02-23 16:29", "user": "Pyrrhus666", "body": "except no css per component, of course :P"}], "label": "other"}
{"id": "93d5951a", "body": "", "comments": [{"timstamp": "2016-08-04 22:16", "user": "RomulusDaniel", "body": "icfantv can you please check where I am doing wrong injecting the http service"}, {"timstamp": "2016-08-04 22:17", "user": "RomulusDaniel", "body": "it is about the same project as before"}, {"timstamp": "2016-08-04 22:18", "user": "RomulusDaniel", "body": ""}, {"timstamp": "2016-08-04 22:19", "user": "RomulusDaniel", "body": "or anybody else?"}, {"timstamp": "2016-08-04 22:20", "user": "RomulusDaniel", "body": "I am getting Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: lemme look"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: are you minifiying your code?"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "nope"}, {"timstamp": "2016-08-04 22:22", "user": "icfantv", "body": "that service looks fine"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "you should still pull that CORS stuff out of the service"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "it should be done once and only once"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "making it a service is overkill"}, {"timstamp": "2016-08-04 22:24", "user": "RomulusDaniel", "body": "I will just call it once in the future"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "i suppose one other thing to check would be to use array syntax for those DI args to see if that changes anything"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "are you familiar with that syntax?"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "angular.module.service('MyService', ['$scope', function($scope) { ... }]);"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "I am"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "just something to try and eliminate stuff"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "will do that"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "i would be surprised if it did change anything"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "nope the same"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:28", "user": "RomulusDaniel", "body": "it doesn't say from where the error is coming the service or the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "oh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "duh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "you can't inject scope to service"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services have no scope"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "remember that scope is the \"glue\" between the view and the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services are agnostic"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "(they're supposed to be)"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "RomulusDaniel: ^^"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "services shouldn't care how they're used or who uses them"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "I remember from what I once learned yes you are right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "this means I can't use $scope at all in the service"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "?"}, {"timstamp": "2016-08-04 22:33", "user": "icfantv", "body": "exactly"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "I will modify my code"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:35", "user": "icfantv", "body": "yep"}], "label": "other"}
{"id": "0ec1e30a", "body": "", "comments": [{"timstamp": "12:36", "user": "anddam", "body": "how can I set the width of a material select dropdown menu?"}, {"timstamp": "12:37", "user": "stennowork", "body": ""}, {"timstamp": "12:39", "user": "anddam", "body": "ohh"}, {"timstamp": "12:40", "user": "anddam", "body": "I just realized I was looking at an autocomplete panel, it has @Input() panelWidth"}, {"timstamp": "12:40", "user": "anddam", "body": "\"Specify the width of the autocomplete panel. Can be any CSS sizing value, otherwise it will match the width of its host.\""}, {"timstamp": "12:41", "user": "anddam", "body": "the mat-select answer is a bit ugly though, there should be a way to override look via CSS, not by hardcoding style in the template"}, {"timstamp": "12:41", "user": "anddam", "body": "or by passing it as component parameters"}], "label": "other"}
{"id": "93d59477", "body": "", "comments": [{"timstamp": "2018-06-11 08:50", "user": "SargoDarya", "body": "Morning fellas o/"}, {"timstamp": "2018-06-11 08:52", "user": "icebox", "body": "SargoDarya: hey"}, {"timstamp": "2018-06-11 08:52", "user": "SargoDarya", "body": "How's it going?"}, {"timstamp": "2018-06-11 08:53", "user": "Elarcis", "body": "Today, I get to debug an infinite loop! Yay!"}, {"timstamp": "2018-06-11 08:53", "user": "icebox", "body": "Elarcis: in a finite time? :)"}, {"timstamp": "2018-06-11 08:53", "user": "Elarcis", "body": "icebox: Im afraid so, yes."}, {"timstamp": "2018-06-11 08:54", "user": "Elarcis", "body": "icebox: an infinite _recursive_ loop, at that."}, {"timstamp": "2018-06-11 08:54", "user": "icebox", "body": "Elarcis: tail one?"}, {"timstamp": "2018-06-11 09:00", "user": "Elarcis", "body": "icebox: oof, I dont expect it to be one"}, {"timstamp": "2018-06-11 09:00", "user": "Elarcis", "body": "icebox: thatd be highly surprising, given who wrote the code"}, {"timstamp": "2018-06-11 09:16", "user": "Elarcis", "body": "icebox: (not a pro dev)"}, {"timstamp": "2018-06-11 09:16", "user": "icebox", "body": "well... I asked it because tail recursion is a bit more easy to debug"}, {"timstamp": "2018-06-11 09:17", "user": "Elarcis", "body": "icebox: hehehe"}, {"timstamp": "2018-06-11 09:51", "user": "Elarcis", "body": "icebox: found it. specific model asking for very broad data that depend on this very model to compute first, etc."}, {"timstamp": "2018-06-11 09:52", "user": "icebox_", "body": "Elarcis: nice catch :)"}, {"timstamp": "2018-06-11 09:53", "user": "Elarcis", "body": "icebox_: I was afraid itd be harder to find, but smartly placed breakpoints and clear callstack made it easier"}], "label": "other"}
{"id": "93d59541", "body": "", "comments": [{"timstamp": "2016-05-06 10:03", "user": "deebo", "body": "i still havent found a sample project for angular2.0 that uses typescript without a node backend"}, {"timstamp": "2016-05-06 10:03", "user": "deebo", "body": "setting up a modern javascript project is not trivial"}, {"timstamp": "2016-05-06 10:03", "user": "deebo", "body": "it makes me want to stab people"}, {"timstamp": "2016-05-06 10:04", "user": "godo____", "body": "@deebo have you heard about meteor?"}, {"timstamp": "2016-05-06 10:04", "user": "zomg", "body": "deebo: what's wrong with node?"}, {"timstamp": "2016-05-06 10:04", "user": "godo____", "body": "it's really nice for smaller/medium projects"}, {"timstamp": "2016-05-06 10:05", "user": "deebo", "body": "node is fine for the build environment, we have a java backend and we want to build strictly frontend javascript, i literally have no idea how to setup that project with angular2"}, {"timstamp": "2016-05-06 10:06", "user": "deebo", "body": "i just setup a angular1.x project with gulp, bower and node, but adding typescript seems weird, especially since angular2 is only available as a node module"}, {"timstamp": "2016-05-06 10:07", "user": "Spot__", "body": "deebo: So you would like to have a build setup that you would bundle JS into one file and put one <script ...> and stuff to the Java backends HTML?"}, {"timstamp": "2016-05-06 10:07", "user": "deebo", "body": "im so used to the very specific project models in the java world that javascript is super annoying in that regard"}, {"timstamp": "2016-05-06 10:08", "user": "deebo", "body": "Spot__: yup, without e.g. maintaining a list of typescript source files in a buildfile or something, and there has to be proper IDE support (e.g. plain tsc usage would be best, no gulp/grunt)"}, {"timstamp": "2016-05-06 10:08", "user": "zomg", "body": "deebo: with any other backend you'd just set up your backend to respond to requests and serve JSON"}, {"timstamp": "2016-05-06 10:08", "user": "Spot__", "body": "deebo: You would be most happy imho with Webpack"}, {"timstamp": "2016-05-06 10:08", "user": "zomg", "body": "nothing else to it"}, {"timstamp": "2016-05-06 10:09", "user": "deebo", "body": "for javascript we just concat and uglify and then we're done"}, {"timstamp": "2016-05-06 10:09", "user": "icebox", "body": "deebo: I second zomg... angular is backend agnostic... it depends on your architecture how to separate frontend and backend... for instance,"}, {"timstamp": "2016-05-06 10:09", "user": "Spot__", "body": "deebo: Concat and uglify is not enough for modern JS/TS, but with Webpack you can automate doing ultimately the same"}, {"timstamp": "2016-05-06 10:10", "user": "deebo", "body": "i'd rather not use modules at all before ES6, there's absolutely no need for frontend stuff"}, {"timstamp": "2016-05-06 10:11", "user": "icebox", "body": "deebo: \"angular2 is only available as a node module\"... don't confuse package management in terms of build and deploy workflow"}, {"timstamp": "2016-05-06 10:11", "user": "icebox", "body": "deebo: with angular2 you can use ES5, ES2015, Typescript or Dart"}, {"timstamp": "2016-05-06 10:12", "user": "icebox", "body": "deebo: (ES6 doesn't exist anymore since june 2015, when ES2015 has been finalized) :P"}, {"timstamp": "2016-05-06 10:12", "user": "deebo", "body": "icebox: my problem with the node part is that in the example projects e.g. they have tsc configuration that ignores node_modules"}, {"timstamp": "2016-05-06 10:12", "user": "deebo", "body": "but like magic they can import angular typescript classes etc :)"}, {"timstamp": "2016-05-06 10:13", "user": "icebox", "body": "deebo: again don't confuse build phase with runtime :)"}, {"timstamp": "2016-05-06 10:13", "user": "icebox", "body": "deebo: no magic there"}, {"timstamp": "2016-05-06 10:14", "user": "deebo", "body": "probably not, the lack of a standard build process/layout for these projects just confuses the hell out of me"}, {"timstamp": "2016-05-06 10:14", "user": "deebo", "body": "and if you google for something and its >7 days old, its probably obsolete"}, {"timstamp": "2016-05-06 10:14", "user": "icebox", "body": "deebo: in the build workflow Typescipt is transpiled to ES*, during the runtime the (almost) standar module ES2015 feature is used"}, {"timstamp": "2016-05-06 10:15", "user": "icebox", "body": "deebo: agreed... complexity is confusing"}, {"timstamp": "2016-05-06 10:16", "user": "icebox", "body": "deebo: it is called nowadays js fatigue"}, {"timstamp": "2016-05-06 10:17", "user": "icebox", "body": "deebo: too many parts rolling... tools, paradigms and so on.... the choice is overhelming"}, {"timstamp": "2016-05-06 10:17", "user": "bee", "body": "icebox, when referencing service variables in view do you use serviceName.varname"}, {"timstamp": "2016-05-06 10:18", "user": "bee", "body": "and in views controller you have $scope.serviceName = serviceName;?"}, {"timstamp": "2016-05-06 10:18", "user": "icebox", "body": "bee: no... because you are coupling template and service... you need to use variables in the scope to slice the model"}, {"timstamp": "2016-05-06 10:18", "user": "bee", "body": ":\\"}, {"timstamp": "2016-05-06 10:18", "user": "bee", "body": "don't understand"}, {"timstamp": "2016-05-06 10:19", "user": "icebox", "body": "bee: $scope.myData = myService.getData(); ... otherwise... $scope.foo = myService.getFoo();"}, {"timstamp": "2016-05-06 10:20", "user": "icebox", "body": "bee: in the template <p>{{ vm.myData.baz }}</p> or <p>{{ vm.foo }}</p>"}, {"timstamp": "2016-05-06 10:20", "user": "bee", "body": "icebox this is what my service looks like"}, {"timstamp": "2016-05-06 10:21", "user": "bee", "body": ""}, {"timstamp": "2016-05-06 10:21", "user": "icebox", "body": "bee: so you can refactor the controller, replacing that service, without changing (maybe) the template"}, {"timstamp": "2016-05-06 10:21", "user": "bee", "body": "I can't do it without changing the template I think"}, {"timstamp": "2016-05-06 10:22", "user": "bee", "body": "this.comments_loaded - used to be $scope.comments_loaded"}, {"timstamp": "2016-05-06 10:22", "user": "bee", "body": "because it's used in the view"}, {"timstamp": "2016-05-06 10:22", "user": "icebox", "body": "bee: well... almost correct... this breaks the reference this.comments = result.data.results"}, {"timstamp": "2016-05-06 10:23", "user": "icebox", "body": "bee: be aware... don't break the references :P"}, {"timstamp": "2016-05-06 10:23", "user": "bee", "body": ":("}, {"timstamp": "2016-05-06 10:23", "user": "bee", "body": "how do I not break it"}, {"timstamp": "2016-05-06 10:24", "user": "icebox", "body": "bee: otherwise the changes are not automagically propagated because the automatic watchers listen on old reference"}, {"timstamp": "2016-05-06 10:24", "user": "bee", "body": "yeah I understand"}, {"timstamp": "2016-05-06 10:24", "user": "bee", "body": "but how do I have a loadComments() function in service which does not break reference"}, {"timstamp": "2016-05-06 10:25", "user": "icebox", "body": "bee: use angular.extend or angular.merge... and always use objects and not primitives... on primitives angular doesn't add automatically the watcher"}, {"timstamp": "2016-05-06 10:25", "user": "bee", "body": "I am unfamiliar with angular.extend and merge"}, {"timstamp": "2016-05-06 10:25", "user": "bee", "body": "do you mean use objects when referencing"}, {"timstamp": "2016-05-06 10:25", "user": "bee", "body": "eg. in my controller like this:"}, {"timstamp": "2016-05-06 10:26", "user": "bee", "body": "$scope.commentService = commentService;"}, {"timstamp": "2016-05-06 10:26", "user": "icebox", "body": "bee:"}, {"timstamp": "2016-05-06 10:26", "user": "icebox", "body": "bee: experiment yourself... the journey is very worthy"}, {"timstamp": "2016-05-06 10:26", "user": "bee", "body": "I don't like angular docs"}, {"timstamp": "2016-05-06 10:26", "user": "bee", "body": "I find them hard to understand"}, {"timstamp": "2016-05-06 10:27", "user": "bee", "body": "icebox, do you have an example service to look at"}, {"timstamp": "2016-05-06 10:27", "user": "bee", "body": "also can you explain how this.comments = result.data.results"}, {"timstamp": "2016-05-06 10:27", "user": "bee", "body": "breaks the reference"}, {"timstamp": "2016-05-06 10:28", "user": "bee", "body": "and how to not make it break"}, {"timstamp": "2016-05-06 10:28", "user": "icebox", "body": "bee: I think I explained a lot of times here... and with plunkers too... :)"}, {"timstamp": "2016-05-06 10:30", "user": "bee", "body": "angular.extend(this.comments, result.data.results);"}, {"timstamp": "2016-05-06 10:30", "user": "bee", "body": "instead of this.comments = result.data.results;"}, {"timstamp": "2016-05-06 10:30", "user": "bee", "body": "good :D?"}, {"timstamp": "2016-05-06 10:31", "user": "icebox", "body": "bee: yep... that is better"}, {"timstamp": "2016-05-06 10:31", "user": "bee", "body": "ok I will fix my template and give it a test"}, {"timstamp": "2016-05-06 10:32", "user": "bee", "body": "imo it's ugly to have commentService.comments_collapsed"}, {"timstamp": "2016-05-06 10:32", "user": "bee", "body": "in my template"}, {"timstamp": "2016-05-06 10:33", "user": "bee", "body": "when you do var newObject = oldObject is it a reference? I think so"}, {"timstamp": "2016-05-06 10:33", "user": "bee", "body": "I think angular copy might make it a new object instead of referencing the original oldObject"}, {"timstamp": "2016-05-06 10:34", "user": "bee", "body": "but I am not sure"}, {"timstamp": "2016-05-06 10:34", "user": "calamity", "body": "right, so if I changed 'oldObject', it'd change newObject?"}, {"timstamp": "2016-05-06 10:35", "user": "bee", "body": "you should set up a test with console.log and do some changes to the obj, see if the original/reference changes"}, {"timstamp": "2016-05-06 10:35", "user": "bee", "body": "then experiment with angular.copy"}, {"timstamp": "2016-05-06 10:35", "user": "calamity", "body": "good idea"}, {"timstamp": "2016-05-06 10:38", "user": "calamity", "body": "Atom is pretty nice"}, {"timstamp": "2016-05-06 10:39", "user": "bee", "body": "I use pycharm"}, {"timstamp": "2016-05-06 10:39", "user": "bee", "body": "but you might not want to use it unless you use python as well"}], "label": "other"}
{"id": "93d59527", "body": "", "comments": [{"timstamp": "2017-06-13 23:34", "user": "j4f-shredder", "body": "Hello, I'm doing an angular 4 app and I need to know when I check for the authenticated state of the user with the backend, what shoudl I do on my auth service?? cause I have some componentes that I need to hide based on user auth status"}, {"timstamp": "2017-06-13 23:34", "user": "j4f-shredder", "body": "I don't want to go to the backend everytime to check if the user is logged in"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "I would like to cache the auth state of the user"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "and make it expire or something"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "which is the best way to accomplish that?"}, {"timstamp": "2017-06-13 23:45", "user": "j4f-shredder", "body": "but I need to hide a sidebar"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "only viewable on a dashboard"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "if the user is logged in"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: so if you already sent the app, they have access to everything... your backend should not allow them to touch any end points until they login"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: use an auth-guard then"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "I am"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "and it's working fine"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "but I want to avoid going to the backend"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: but it doesnt stop them using your whole app"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "for every request"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "it's a one page app"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "I don't generate content on the server"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "I mean, the navbars and that kind of visual components"}, {"timstamp": "2017-06-13 23:47", "user": "jccn", "body": "I think you misunderstand how the request/response cycle works"}, {"timstamp": "2017-06-13 23:47", "user": "Snugglebash", "body": "j4f-shredder: on your back end you can send a login form if they arent authorised and then they authenticate you can send app"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "that's not the problem"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "that has already been covered"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "with the auth guard"}, {"timstamp": "2017-06-13 23:48", "user": "Snugglebash", "body": "no it hasnt"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "I just want to know if the user is logged in and show him the login or logout button"}, {"timstamp": "2017-06-13 23:48", "user": "Snugglebash", "body": "auth-guard doesnt do much other than hide stuff for a dumb user"}, {"timstamp": "2017-06-13 23:48", "user": "jccn", "body": "every request to the backend is sent with a token, the backend should only respond with data that user has access to"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "and I already did that"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "I just want a good way of caching the auth state of the user"}, {"timstamp": "2017-06-13 23:48", "user": "jccn", "body": "how the frontend caches it doesn't matter because the data it has access to is authorized"}, {"timstamp": "2017-06-13 23:49", "user": "j4f-shredder", "body": "look, I already have blocked the user if he's not logged in"}, {"timstamp": "2017-06-13 23:49", "user": "jccn", "body": "backend needs to authorize _every_ request"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "yes"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "it is"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "i'm doing exaclty that"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "just try to understand what i'm asking"}, {"timstamp": "2017-06-13 23:50", "user": "Snugglebash", "body": "j4f-shredder: so what is your problem? you know if the user is logged in"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "yes"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "I want to avoid going to the backend for each request"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "I have a route"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "that checks if the user is logged in"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "it returns a 200 if it's logged in"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "I want to avoid going to the backend for each request"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "no"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I don't want to make that request each time"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I mean, when the app loads"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "any backend request needs to be authed individually"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I need to show the navbar with the login or logout button"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "depending on the user auth state"}, {"timstamp": "2017-06-13 23:52", "user": "jccn", "body": "a route that only responds 200 if the user is logged in is useless"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "I see"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "so, what is the best approach in this case"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "a variable on the auth service that holds the user info"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "auth info"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "true or false"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "and then if a request is made and rejected then I update that status??"}, {"timstamp": "2017-06-13 23:53", "user": "Snugglebash", "body": "j4f-shredder: sure, check whether the user is authenticated, you have this info in your app"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "I mean"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "lets imagine I have a variable called isAuthenticated which is a Subscriber"}, {"timstamp": "2017-06-13 23:53", "user": "jccn", "body": "my frontend guys ask for a number of routes, and one of them gives the user session info, username etc"}, {"timstamp": "2017-06-13 23:54", "user": "jccn", "body": "all of them are authed"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "then I do a request to get a list of things, if I get the forbidden code then I update that variable??"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "on the catch method?"}, {"timstamp": "2017-06-13 23:54", "user": "Snugglebash", "body": "jccn: he just wants to know how he should cache this info on the front end i think"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "of the get request?"}, {"timstamp": "2017-06-13 23:54", "user": "jccn", "body": "Snugglebash ok, I'll leave it to you then"}, {"timstamp": "2017-06-13 23:54", "user": "Snugglebash", "body": "jccn: im not really sure though"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "maybe I'm not explaining myself correctly"}, {"timstamp": "2017-06-13 23:55", "user": "Snugglebash", "body": "j4f-shredder, you can store the auth info in a service"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "I am doing that"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "read what I put there"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "the thing is that the first page of my app is the landing page"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "and it has a navbar"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "how do I do to know when the app starts if the user is logged in or not??"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "which is the correct way"}, {"timstamp": "2017-06-13 23:56", "user": "Snugglebash", "body": "j4f-shredder: just inject the service into the navbar"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "I was doing a request to a route and if the server responded code 200 then I put logged in"}, {"timstamp": "2017-06-13 23:56", "user": "Snugglebash", "body": "then ask the service"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "I know how to do that"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "and I'm doing it"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "but which is the source of information if the user is logged in or not??"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "are you getting my question?"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "I need to make a request to a route"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "to see the state of the user"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "how do I get the navbar to display login or logout"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "??"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "depending on the user status"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "should that string come from the server?"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "or I should receive the 200 code and then putting it myself there?"}, {"timstamp": "2017-06-13 23:58", "user": "Snugglebash", "body": "j4f-shredder: your service knows if your user is logged in... if it has made a request to login and it was accepted then it receives the response..."}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "you can use ngif"}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "if you really want add a boolean to your service"}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "that will make it easier for you"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "I already did that"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "my problem is"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "what happens"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "if the session dies"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "on the backend"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "and I still have that set to true"}], "label": "other"}
{"id": "93d5947c", "body": "", "comments": [{"timstamp": "2017-02-21 19:55", "user": "loZio", "body": "Hello everyone...I have a qestion...I want to disable every input or button during http call...How can do it? I see that I can do it with fieldset but it's not supported explorer 9 to up...do you have advice? thanks!"}, {"timstamp": "2017-02-21 19:56", "user": "andrcmdr", "body": "You can use ng-disabled"}, {"timstamp": "2017-02-21 19:58", "user": "loZio", "body": "andrcmdr: yes I can't use ng-disable on fieldset"}, {"timstamp": "2017-02-21 19:58", "user": "loZio", "body": "I can't use ng-disable on every input or buttons in my view"}, {"timstamp": "2017-02-21 19:58", "user": "andrcmdr", "body": ""}, {"timstamp": "2017-02-21 19:58", "user": "andrcmdr", "body": "does that work?"}, {"timstamp": "2017-02-21 19:59", "user": "loZio", "body": "andrcmdr: yes, it works but don't support all browser"}, {"timstamp": "2017-02-21 19:59", "user": "loZio", "body": "It's a good tip, though unfortunately the disabled attribute on a fieldset is not supported in IE or Safari"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "What about `disabled`"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "fieldset has that attr by default but it's HTML5"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "so..."}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "idk about those browsers"}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "but it's baseling HTML"}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "baseline*"}, {"timstamp": "2017-02-21 20:05", "user": "andrcmdr", "body": ""}, {"timstamp": "2017-02-21 20:06", "user": "andrcmdr", "body": "also fieldset seems to imply that it will disable all descendants"}, {"timstamp": "2017-02-21 20:07", "user": "andrcmdr", "body": "(not sure if that's desired)"}, {"timstamp": "2017-02-21 20:19", "user": "loZio", "body": "andrcmdr: yes..I want to disable all discendants"}, {"timstamp": "2017-02-21 20:20", "user": "andrcmdr", "body": "Does `disabled` work?"}, {"timstamp": "2017-02-21 20:20", "user": "andrcmdr", "body": "As opposed to `ng-disabled`"}, {"timstamp": "2017-02-21 20:24", "user": "loZio", "body": "andrcmdr: tomorrow I can do it...now thanks man"}, {"timstamp": "2017-02-21 20:25", "user": "andrcmdr", "body": "word"}], "label": "other"}
{"id": "0edea35e", "body": "", "comments": [{"timstamp": "17:40", "user": "anddam", "body": "howdy"}, {"timstamp": "17:41", "user": "anddam", "body": "in template-driven form can I a built-in validator that is only applied if there is data?"}, {"timstamp": "17:41", "user": "anddam", "body": "namely I have an optional birth-date field where I want the DD/MM/YYYY format"}, {"timstamp": "17:41", "user": "ray02", "body": "yep"}, {"timstamp": "17:42", "user": "ray02", "body": "anddam: with is required"}, {"timstamp": "17:42", "user": "anddam", "body": "with?"}, {"timstamp": "17:42", "user": "ray02", "body": "\"is required\""}, {"timstamp": "17:42", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:42", "user": "anddam", "body": "I figured Validators.pattern fits the bill but I want it to only be checked if there is actual data"}, {"timstamp": "17:43", "user": "anddam", "body": "but that would always return ValidationErrors if the field is empty"}, {"timstamp": "17:43", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:44", "user": "ray02", "body": "is not enough ?"}, {"timstamp": "17:52", "user": "anddam", "body": "well, that seems the opposite of what I wanted"}, {"timstamp": "17:52", "user": "anddam", "body": "it will mark as non-valid an empty field"}, {"timstamp": "17:55", "user": "anddam", "body": "I want the field to be optional, but _if_ filled then match a pattern"}, {"timstamp": "17:55", "user": "anddam", "body": "I figure I need a custom validator for that, is that right?"}, {"timstamp": "17:58", "user": "ray02", "body": "anddam: sorry it's not totally clear, with pattern you check if what is typed inside respect a pattern"}, {"timstamp": "17:58", "user": "ray02", "body": "is't this what you want?"}, {"timstamp": "17:59", "user": "ray02", "body": "*isn't"}, {"timstamp": "18:01", "user": "anddam", "body": "ok, but I'd like the field to be valid if a) it is empty or b) it has a content and this content is DD/MM/YYYY"}, {"timstamp": "18:02", "user": "anddam", "body": "the pattern can obviously be expressed in regex"}, {"timstamp": "18:02", "user": "anddam", "body": "but I'm asking if I can combine built-in validators with logical operators"}, {"timstamp": "18:05", "user": "ray02", "body": "ahh now i get it, umm i think yes you are right you need a custom validator where you can add some personal logic"}, {"timstamp": "18:07", "user": "anddam", "body": "I see, thanks"}, {"timstamp": "18:12", "user": "ray02", "body": "because as you can notice, the validator is an array so no logic inside"}, {"timstamp": "18:25", "user": "anddam", "body": "yep, and no function to act on those as operators"}, {"timstamp": "18:25", "user": "anddam", "body": "I'm having a bit of hard time understanding this (control: AbstractControl): { [key: string]: any } | null => { ... }"}, {"timstamp": "18:25", "user": "anddam", "body": "the ellipsis are mine, that's a fat-arrow function accepting one argument of type AbastractControl and returning... what?"}, {"timstamp": "18:25", "user": "anddam", "body": "either null or an object"}, {"timstamp": "18:26", "user": "anddam", "body": "but the object has [key: string] as property, that I do not get"}, {"timstamp": "18:26", "user": "anddam", "body": "why the array notation?"}, {"timstamp": "18:26", "user": "anddam", "body": "does it allow for multiple properties as long as their \"name\" is a string?"}, {"timstamp": "18:26", "user": "anddam", "body": "ng generate directives blahblablah"}, {"timstamp": "18:27", "user": "anddam", "body": "no sorry"}, {"timstamp": "18:27", "user": "anddam", "body": ""}], "label": "feature"}
{"id": "93d59542", "body": "", "comments": [{"timstamp": "2016-08-03 15:05", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g. /msg NickServ identify <password>. ) Does Angular 2 use bluebird as the Promise library ?"}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g."}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "...as I don't know how to tell"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: wow, you /almost/ pasted sensitive data, good job :D"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: (also, I don't know)"}, {"timstamp": "2016-08-03 15:11", "user": "icebox", "body": "fiddo: no"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "i know im an idiot"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "...anyway, i want to use the same Promise library when i code in node as per the Promise library in Angular 2"}, {"timstamp": "2016-08-03 15:13", "user": "icebox", "body": "fiddo: perfect"}, {"timstamp": "2016-08-03 15:13", "user": "fiddo", "body": "when Angular 2 installss, there seems to be alot of Promise libraries in there - which one is it ?"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: no need to use a lib... Promise is native :)"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: AngularJS 2.0 Promise Design Doc"}, {"timstamp": "2016-08-03 15:15", "user": "fiddo", "body": "what do u mean by 'native' ? Do u mean the Angular 2 comes with it's 'own' Promise library? (i.e. written by Angular team?)"}, {"timstamp": "2016-08-03 15:15", "user": "icebox", "body": "fiddo: open devtools console and type: Promise"}, {"timstamp": "2016-08-03 15:16", "user": "fiddo", "body": "devtools?!? sorry Im developing on a windows box"}, {"timstamp": "2016-08-03 15:16", "user": "icebox", "body": "fiddo: devtools is in the browser :)"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "fiddo: f12 in your browser"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "(usually)"}, {"timstamp": "2016-08-03 15:18", "user": "celuidufond", "body": "icebox: looks nice. Just a question : as it's a memory db : means no storage for non connecter people without an adapter ?"}, {"timstamp": "2016-08-03 15:19", "user": "icebox", "body": "celuidufond: yep... but I suppose it is simple like localStorage.set(myDb); // or something like that"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: or start node (6.x) console and at the prompt type... Promise... and you have your Promises :) without require any lib :)"}, {"timstamp": "2016-08-03 15:20", "user": "fiddo", "body": "icebox: great thanks. yes i've read that. so it's an Angular2-specific library. If I want to use that Promise library, say in Node, then I can't. I'll use another one. Is that right?"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: without requiring any lib"}, {"timstamp": "2016-08-03 15:21", "user": "icebox", "body": "fiddo: about node, read above"}, {"timstamp": "2016-08-03 15:21", "user": "uru", "body": "fiddo: They are built in to JS, you don't need to do anything to start using them other than start using them"}, {"timstamp": "2016-08-03 15:22", "user": "icebox", "body": "fiddo: Promises are a defacto standard within JavaScript community and is part of the ECMAScript Standard."}, {"timstamp": "2016-08-03 15:25", "user": "fiddo", "body": "Yes I'm on Node >=6. I see. If wanting to use Promises using Typescript in Node, I'll need a library though, right?"}, {"timstamp": "2016-08-03 15:25", "user": "icebox", "body": "fiddo: no :)"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "oh dear im confused. theres no beginners guide for this for a newbie hehe. I can use Promises in Typescript in Angular 2 just fine. Now I want to use Promises in Typescript in Node. My understanding is that when Typescript transpiles to Javascript to run on Node, it needs a Promise library. Otherwise how would Typescript resolve the 'Promise' keywo"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "rd?"}, {"timstamp": "2016-08-03 15:32", "user": "icebox", "body": "fiddo: I am afraid you are confusing the lib with the type definitions"}, {"timstamp": "2016-08-03 15:33", "user": "icebox", "body": "fiddo:"}, {"timstamp": "2016-08-03 15:33", "user": "fiddo", "body": "ok will read :)"}, {"timstamp": "2016-08-03 15:34", "user": "icebox", "body": "fiddo: ignore \"Promises are not in Node yet\"... they are there"}, {"timstamp": "2016-08-03 15:35", "user": "icebox", "body": "fiddo: the last answers are relevant"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "So.... recent versions of Node has Promises built-in. If u code in Javascript, you have immediate access to Promises with no problem. If u code in Typescript, Typescript will need the Promise declaration file in order for the Transpiler to 'see' the 'Promise' keyword you have written in Typescript. Thus the emitted Javacript code will be able to th"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "en access the Promise features built-in to Node. Is that right ?"}, {"timstamp": "2016-08-03 15:52", "user": "icebox", "body": "fiddo: yes and no"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: your backend is Node.js (Javascript), your frontend is Typescript (compiled to Javascript)"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: unless you want to use Typescript also in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "yes. using Typescript in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "icebox", "body": "fiddo: so... your above statement is correct"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "my issue is with Node, NOT the browser"}, {"timstamp": "2016-08-03 15:56", "user": "fiddo", "body": "icebox: thanks. i think i get it"}, {"timstamp": "2016-08-03 15:56", "user": "icebox", "body": "fiddo: cool!"}, {"timstamp": "2016-08-03 15:59", "user": "icebox", "body": "fiddo: no... you need to add type definitions with \"typings\""}, {"timstamp": "2016-08-03 15:59", "user": "fiddo", "body": "As Node uses es6 Promises natively, I just need the es6-shim. That way Typescript will understand the Promise keyword"}, {"timstamp": "2016-08-03 16:00", "user": "icebox", "body": "fiddo: es6-shim is use to add Promise feature to enviroments without that feature"}, {"timstamp": "2016-08-03 16:08", "user": "fiddo", "body": "icebox: oh. the shim is for a browser that doesn't support Promises. is that right?"}, {"timstamp": "2016-08-03 16:09", "user": "icebox", "body": "fiddo: correct"}], "label": "other"}
{"id": "8addb26f", "body": "", "comments": [{"timstamp": "2017-05-30 14:25", "user": "Eduard_Munteanu", "body": "I have a login screen. Should I use Location instead of Router to redirect people to it, assuming my app already uses a router outlet?"}, {"timstamp": "2017-05-30 15:15", "user": "Eduard_Munteanu", "body": "This is annoying. I have my app structured as /login and / { /foo, /bar, /baz }, where '/' contains a navbar and a router outlet for those tabs."}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Well, web dev kinds sucks all around, really. :("}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Is there some way I can avoid using secondary routes for login and those tabs?"}], "label": "feature"}
{"id": "93d594d8", "body": "", "comments": [{"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "tfw you wanna get home, but sammich."}, {"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "seriously, what kind of a moron thought that'd be a good idea to call a sandwich chain subway."}, {"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "but something tells its on purpose."}, {"timstamp": "2018-07-18 13:59", "user": "Elarcis", "body": "Peppa_Sw1ne: the first Subway was created in 1965, I doubt it was to confuse people using Google Maps :P"}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "guess it was even worse back in the 60s then."}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "hey how do i get to the subway?"}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "oh, right this way sir."}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "*gets to a sandwich place*"}, {"timstamp": "2018-07-18 14:01", "user": "Peppa_Sw1ne", "body": "i dislike it a lot tho."}], "label": "other"}
{"id": "73af7d3a", "body": "", "comments": [{"timstamp": "16:32", "user": "bisch", "body": "We're having problems with the translation expressions not getting evaluated. See"}, {"timstamp": "16:40", "user": "bisch", "body": "The problem seems to be when the {{...}} expressions get split up across lines."}], "label": "other"}
{"id": "73af7d14", "body": "", "comments": [{"timstamp": "12:04", "user": "murii", "body": "Do you guys know a place/places where I can see sites made with angular?"}, {"timstamp": "12:04", "user": "ray02", "body": "google :D"}, {"timstamp": "12:04", "user": "murii", "body": "I'm trying to see if my design decisions are the best"}, {"timstamp": "12:04", "user": "murii", "body": ":D"}, {"timstamp": "12:05", "user": "jlebrech", "body": "they are not"}, {"timstamp": "12:05", "user": "jlebrech", "body": "best is subjective"}, {"timstamp": "12:06", "user": "ray02", "body": "jlebrech: the training website is depressing me"}, {"timstamp": "12:06", "user": "ray02", "body": "make me feell old and slow"}, {"timstamp": "12:07", "user": "jlebrech", "body": "\"you are way below average\" fuuuuuuuuu"}, {"timstamp": "12:08", "user": "jlebrech", "body": "i know, i downloaded one on steam. kept telling me i was a noob"}, {"timstamp": "12:10", "user": "ray02", "body": "ahah"}, {"timstamp": "12:11", "user": "stennowork", "body": ":/"}, {"timstamp": "12:11", "user": "ray02", "body": "fortunately i'm not trying to make a carrier as video game player"}, {"timstamp": "12:13", "user": "ray02", "body": "murii: if you are using material design they have a portfolio with stuff make with their style and and also google make a competition each year to reward the best product that use material design"}, {"timstamp": "12:14", "user": "jlebrech", "body": "if it help me win more at apex legends, i'd be happy"}, {"timstamp": "12:14", "user": "ray02", "body": "if you are not using material design you can have a look at any website that you like :D because the fact that a website is made with angular or react should not change in better or in worst how look like"}, {"timstamp": "12:18", "user": "jlebrech", "body": "i was thinking yesterday, what if you were trying to describe living in a simulation to friends and they didn't know what you were talking about and then you say \"like in the matrix\" and then you search altavista.com and the movie \"the matrix\" was never made."}, {"timstamp": "12:20", "user": "SargoDarya", "body": "jlebrech: Working on games again?"}, {"timstamp": "12:20", "user": "jlebrech", "body": "not yet, just thoughts."}, {"timstamp": "12:20", "user": "jlebrech", "body": "i have my gaming laptop back, might start again"}, {"timstamp": "12:40", "user": "SargoDarya", "body": "jlebrech: Keep me updated :)"}, {"timstamp": "12:41", "user": "jlebrech", "body": "did you finish the unreal c++ course?"}, {"timstamp": "12:42", "user": "SargoDarya", "body": "jlebrech: Nope, I'm somehow lacking time at the moment"}, {"timstamp": "12:42", "user": "jlebrech", "body": "yeaah same. think it's just motivation to do anything productive outside of work"}, {"timstamp": "12:45", "user": "murii", "body": "ray02: I'm using material, where can I see that portofolio website you mentioned?"}], "label": "feature"}
{"id": "8addb263", "body": "", "comments": [{"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "does anyone perchance knows how can i make empty datepicker with angular material"}, {"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "it stubbornly tries to set it to \"today\" by default"}, {"timstamp": "2016-05-27 11:19", "user": "icebox", "body": "arlekin: what else?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: err... please ?"}, {"timstamp": "2016-05-27 11:20", "user": "icebox", "body": "arlekin: do you mean to set another default date?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: no, i'd like to have it empty by default, maybe some placeholder"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "angular material is awesome and great, but also frustrating and sucks at the same time (im not even mad)"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: well... I see... did you try emoty model and md-placeholder?"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: *empty"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "icebox: i did empty model"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "checking md-placeholder now"}, {"timstamp": "2016-05-27 11:23", "user": "arlekin", "body": "icebox: md-placeholder doesn't have any discernible effect"}, {"timstamp": "2016-05-27 11:24", "user": "icebox", "body": "arlekin:"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: been there, seen that"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "it links to another issue"}, {"timstamp": "2016-05-27 11:25", "user": "icebox", "body": "arlekin: I am afraid you need to give a look at the sources to understand better the behind the scenes about default date when model is empty"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: it seems so, i hate to modify source though"}, {"timstamp": "2016-05-27 11:26", "user": "arlekin", "body": "icebox: i need to remember then that i have this custom change"}, {"timstamp": "2016-05-27 11:26", "user": "icebox", "body": "arlekin: I didn't say that... I suggested to give a look to understand if it is feasible a PR or there is another way :)"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: there is always another way and it has to be feasible pr - since i don't imagine that having empty input field on datepicker is such an exotic usecase"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: but i get your point"}, {"timstamp": "2016-05-27 11:28", "user": "icebox", "body": "arlekin: no idea... if I would have your requirement and the lib doesn't behaviour how I wish.. firstly I would give a look at the sources :)"}, {"timstamp": "2016-05-27 11:29", "user": "arlekin", "body": "icebox: agreede"}], "label": "feature"}
{"id": "93d594c7", "body": "", "comments": [{"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "angular 6 already? things moves too fast"}, {"timstamp": "2018-04-10 11:53", "user": "Pyrrhus666", "body": "jlebrech, and rxjs 6. prepare for breakage."}, {"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "could have at least made a transition between 1.x and 2 ffs."}, {"timstamp": "2018-04-10 11:53", "user": "icebox", "body": "jlebrech: by design, every 6 months"}, {"timstamp": "2018-04-10 11:55", "user": "icebox", "body": "jlebrech:"}, {"timstamp": "2018-04-10 11:55", "user": "jlebrech", "body": "gonna split my app into 5 and rewrite individual bits in @ctrl.latest_angular"}, {"timstamp": "2018-04-10 11:56", "user": "jlebrech", "body": "they could have gave us 2, but also gave us a 1.9 that deprecated things that no longer exist. still would have to rewrite things"}, {"timstamp": "2018-04-10 11:57", "user": "icebox", "body": "jlebrech: totally agreed"}, {"timstamp": "2018-04-10 11:58", "user": "icebox", "body": "jlebrech: this is what we have"}, {"timstamp": "2018-04-10 11:58", "user": "jlebrech", "body": "i think splitting my app into multiple and rewriting the worse bits in latest ver is the best bet."}, {"timstamp": "2018-04-10 11:59", "user": "icebox", "body": "jlebrech: I updated my PoC to 5.2.9 and found an interesting stackblitz for the integration between AngularJS and Angular... see"}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: but maybe this is good for progressively rewriting."}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: i've made attempts, but I think I can just use the same session data for unconnected apps and put them on separate pages :)"}, {"timstamp": "2018-04-10 12:02", "user": "jlebrech", "body": "icebox: can use my 1 file login.js app as proof of concept"}, {"timstamp": "2018-04-10 13:26", "user": "icebox", "body": "back"}], "label": "other"}
{"id": "73af7d32", "body": "", "comments": [{"timstamp": "13:28", "user": "trampi", "body": "I'll be off for today. Wish everyone a short friday and a nice weekend!"}, {"timstamp": "13:30", "user": "SargoDarya", "body": "trampi: Have fun, enjoy bodensee"}, {"timstamp": "13:35", "user": "jlebrech", "body": "have fun trampi"}], "label": "other"}
{"id": "93d594c8", "body": "", "comments": [{"timstamp": "2019-02-08 13:47", "user": "Pyrrhus666", "body": "read the link ?"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "yes Pyrrhus666"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "let me google it"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "the article assumes you know what walrus operator is"}, {"timstamp": "2019-02-08 13:49", "user": "Mylee", "body": "oops, my bad"}, {"timstamp": "2019-02-08 13:49", "user": "Mylee", "body": "I just do not get it"}, {"timstamp": "2019-02-08 13:50", "user": "Mylee", "body": "Walrus-operator is another name for assignment expressions. I think the official PEP does an excellent job of explaining the semantics. <--- he would be wrong"}, {"timstamp": "2019-02-08 13:51", "user": "Pyrrhus666", "body": "Mylee, the examples are pretty clear :"}, {"timstamp": "2019-02-08 13:54", "user": "Mylee", "body": "thanks Pyrrhus666, that was a good example, reading two definitions helped, i learned something today, I teach a python class, so I gotta let my students know about this"}, {"timstamp": "2019-02-08 13:55", "user": "Pyrrhus666", "body": "Mylee, it's only in the newest alpha though ;)"}, {"timstamp": "2019-02-08 13:56", "user": "Mylee", "body": "ah, this is the students first class in python, we have a fun book,"}, {"timstamp": "2019-02-08 13:56", "user": "Mylee", "body": "first computer class that is"}, {"timstamp": "2019-02-08 13:57", "user": "Mylee", "body": "I lecture for 30 minutes and have them code the next 30 minutes with me walking over their shoulders, answering questions"}, {"timstamp": "2019-02-08 13:57", "user": "Mylee", "body": "gotta go now, have a good day all"}, {"timstamp": "2019-02-08 14:05", "user": "Pyrrhus666", "body": "it is, when your imports are incorrect/incomplete"}, {"timstamp": "2019-02-08 14:09", "user": "berz3rk", "body": ":P"}, {"timstamp": "2019-02-08 14:09", "user": "berz3rk", "body": "thank you grandmaster"}, {"timstamp": "2019-02-08 14:10", "user": "berz3rk", "body": "is there no combobox in angular material?"}, {"timstamp": "2019-02-08 14:11", "user": "Pyrrhus666", "body": "dunno, if it is, it's in the list of components in the docs :P"}, {"timstamp": "2019-02-08 14:11", "user": "berz3rk", "body": "you mean the select element?"}, {"timstamp": "2019-02-08 14:12", "user": "berz3rk", "body": "i mean a textbox with a select list"}, {"timstamp": "2019-02-08 14:12", "user": "berz3rk", "body": "not a checkbox"}, {"timstamp": "2019-02-08 14:12", "user": "Pyrrhus666", "body": "again, if it's not in the list, it's not in angular material ;)"}, {"timstamp": "2019-02-08 14:14", "user": "berz3rk", "body": "T_T"}], "label": "other"}
{"id": "93d594ab", "body": "", "comments": [{"timstamp": "2016-08-07 13:48", "user": "zomg", "body": "so what makes you think that spamming the channel is going to make people more inclined to help you?"}, {"timstamp": "2016-08-07 13:51", "user": "ng-dirty", "body": "zomg you always pop-up like an silly amazon advertisement"}, {"timstamp": "2016-08-07 13:53", "user": "ng-dirty", "body": "what is the use of ng-dirty?"}, {"timstamp": "2016-08-07 13:54", "user": "MarkTheMark", "body": "its the dirt you apply on your dirty little face ng-dirty"}, {"timstamp": "2016-08-07 13:54", "user": "drej", "body": "The ng-dirty class tells you that the form has been modified by the user"}, {"timstamp": "2016-08-07 13:55", "user": "ng-dirty", "body": "drej ya i read the same on docs but even after modifying the form the suggested color of the form is not changing"}, {"timstamp": "2016-08-07 14:00", "user": "ng-dirty", "body": "MarktheMark are u P.A of zomg"}, {"timstamp": "2016-08-07 14:01", "user": "Velocity", "body": "ng-dirty they both are stupid ,never mind"}, {"timstamp": "2016-08-07 14:02", "user": "MarkTheMark", "body": "you are even dummer"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "Cool, another person to add to my list of people that I won't bother helping :p"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "aka /ignore"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "lol"}, {"timstamp": "2016-08-07 14:05", "user": "zomg", "body": "And it's the first time I've seen you here, so... :P"}], "label": "other"}
{"id": "93d594b3", "body": "", "comments": [{"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Is this really the best way to create my dto with the date?"}, {"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Looks a bit \"inconvenient\""}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "so hard :/"}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "i don't understand these observable things."}, {"timstamp": "2019-01-22 14:23", "user": "Paradisee", "body": "they said to make an Interface, but how can i make an interface? i mean, based on what? i just wanna see the xml i gets from the url. (for the moment)"}, {"timstamp": "2019-01-22 14:23", "user": "pupskuchen", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:26", "user": "Elarcis", "body": "Paradisee: you don't need an interface per se, it's just a helpful element to help the compiler to know the structure of what you got (should just be a string anyway since it's XML)"}, {"timstamp": "2019-01-22 14:26", "user": "Paradisee", "body": "ok, but it wants an observable anyway."}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": "that's my service"}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "i have to use this service from my main app."}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "to show the output somehow"}, {"timstamp": "2019-01-22 14:29", "user": "exonity01", "body": "myService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i don't have RssFeedService in my app."}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i just included it"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "import { RssFeedService } from './rss-feed.service';"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "but the instance it's not present yet."}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": "that'is the app.component"}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": "^"}, {"timstamp": "2019-01-22 14:35", "user": "exonity01", "body": "this.rssFeedService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:42", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:47", "user": "SuperTyp", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": "SuperTyp: please format your flippin code"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": ":P"}, {"timstamp": "2019-01-22 14:48", "user": "SuperTyp", "body": ":D"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "I pressed tab and the textarea lost focus"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: also don't show the use of 'any' to newcomers, please"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "right"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: it's enough of a bad practice without people using it in examples"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: you can however use 'unknown'"}, {"timstamp": "2019-01-22 14:50", "user": "SuperTyp", "body": "nice didn't know that"}, {"timstamp": "2019-01-22 14:52", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:55", "user": "Elarcis", "body": "Paradisee: congrats, your server is blocking requests coming from web pages outside of its domain whitelist"}, {"timstamp": "2019-01-22 14:55", "user": "Paradisee", "body": "mmm"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's a server issue though, nothing much you can do from Angular"}, {"timstamp": "2019-01-22 14:56", "user": "Paradisee", "body": "but im able to see the xml if i go to the page"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's because you're making a \"root\" GET request, but requests made from JS are identified through some domain (in your case localhost), and the server blocks that"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: when you do a \"root\" GET request, it gets the domain of the URL you're calling (feed.com)"}, {"timstamp": "2019-01-22 14:57", "user": "Elarcis", "body": "Paradisee: if you were making the request from a web page located on feed.com, it would work"}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "how do i solve the problem?"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "Changing the server rules ;-)"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "On server side."}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "its not mine."}, {"timstamp": "2019-01-22 14:58", "user": "Elarcis", "body": "Paradisee: that eiter means that you must configure the RSS server to accept requests from other domains, or if you can't configure it (e.g. it's not yours), you need a back-end app to do the request for you and act as a proxy so you can call it from Angular"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "So you can do nothing."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: they can"}, {"timstamp": "2019-01-22 14:59", "user": "pupskuchen", "body": "Elarcis: not feed.com, url.com"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Who can?"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "pupskuchen: sorry"}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "url.com is a dummy one."}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "i can't say the url here in chat."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: see my answer. CORS only applies to JS scripts located on web pages, not on regular apps like back-end"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Yes, but you post the cors error in your log"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "Paradisee: I had figured that out"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "me too :D"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Elarcis: I know his problem"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Thats why I said, it's a server side \"problem\""}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "Paradisee: you could try using the angular CLI proxy"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "with changeOrigin"}, {"timstamp": "2019-01-22 15:00", "user": "Paradisee", "body": "isnt there a way to see if this is the actual problem?"}, {"timstamp": "2019-01-22 15:00", "user": "Elarcis", "body": "exonity01: yes, if the server isn't theirs they have to proxy through a server-app of their own, ergo they can do something about it"}, {"timstamp": "2019-01-22 15:01", "user": "exonity01", "body": "Ah okay"}, {"timstamp": "2019-01-22 15:02", "user": "Paradisee", "body": "i just saw the xml, and it has an empty line as first line. and the xml isn't valid that way. could be that the problem?"}, {"timstamp": "2019-01-22 15:04", "user": "exonity01", "body": ""}, {"timstamp": "2019-01-22 15:11", "user": "Elarcis", "body": "Paradisee: no, your problem resides in the request, you're not even up to the point where your client can read the response"}, {"timstamp": "2019-01-22 15:22", "user": "Paradisee", "body": "Elarcis: so its my problem?"}, {"timstamp": "2019-01-22 15:24", "user": "Elarcis", "body": "Paradisee: CORS is your problem, yes"}, {"timstamp": "2019-01-22 15:25", "user": "Elarcis", "body": "Paradisee: but don't worry, it's bitten almost every beginner, even though it's a fondamental security aspect of webdev"}, {"timstamp": "2019-01-22 15:25", "user": "Paradisee", "body": "Elarcis: id like to know how to solve it too"}, {"timstamp": "2019-01-22 15:27", "user": "Elarcis", "body": "Paradisee: since you don't own the target server: you need a back-end, an app that runs on the same server that will be delivering your app. That back-end will act as a proxy to get that RSS. Regular out-of-browser apps aren't subject to CORS policies, so that will work. Your Angular app would then request that RSS through your back-end"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: yes, that might be quite an overhead. Is there another solution than a back-end proxy? I'm very afraid there isn'tc"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: mind you, that's not specific to AngularJS. You could try in VanillaJS and would run into the same issue"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "*ANgular, not AngularJS"}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "can't i just ask to the server's owner about this problem?"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: oh well if you have a mean of contact, you can indeed ask"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: but it'd be their decision that matters in the end"}, {"timstamp": "2019-01-22 15:29", "user": "SargoDarya", "body": "Paradisee: If you don't have access to the application running on the server you will have a problem with CORS unless running a local proxy."}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "yes i can, but i don't really know what to ask :D"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: ask them if it's possible to tweak their RSS's CORS settings so that other domains can request it"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: it should be done on the web server providing the RSS endpoint"}], "label": "other"}
{"id": "93d59558", "body": "", "comments": [{"timstamp": "2016-07-07 10:46", "user": "LoZio", "body": "Hello, I have an important question...I'm developing a web site with angularjs and I'm using a token...Now if I save the token in variable and refresh the page i lost the data; if save the token in localstorege is not secure...How can manage the token? I want to it persistent. THANKS!"}, {"timstamp": "2016-07-07 10:47", "user": "Pyrrhus", "body": "LoZio: localstorage, cookie or get-parameter, choose your poison ;)"}, {"timstamp": "2016-07-07 10:52", "user": "LoZio", "body": "Pyrrhus: Sorry, where should save in persistent mode the token? localstorage is not secure..where do you save it?"}, {"timstamp": "2016-07-07 10:54", "user": "Pyrrhus", "body": "LoZio: clientside persistence has only two options : cookie or localstorage. you choose..."}, {"timstamp": "2016-07-07 10:55", "user": "LoZio", "body": "Pyrrhus: Where is secure? thanks"}, {"timstamp": "2016-07-07 10:56", "user": "Elarcis", "body": "LoZio: anything that leaves the server isn't safe"}, {"timstamp": "2016-07-07 10:56", "user": "Pyrrhus", "body": "LoZio: the security is in the (handling of) the token, not in clientside persistence. clientside means zero security anyway."}, {"timstamp": "2016-07-07 10:57", "user": "LoZio", "body": "is true but I don't want to reinvent the wheele...I want to receive advices"}, {"timstamp": "2016-07-07 10:57", "user": "Pyrrhus", "body": "LoZio: I use localstorage _and_ cookie."}, {"timstamp": "2016-07-07 10:58", "user": "LoZio", "body": "Pyrrhus: Thank you!"}], "label": "other"}
{"id": "93d5951f", "body": "", "comments": [{"timstamp": "2017-05-23 19:00", "user": "htd", "body": "right now I have the header of my aircon component visible, so a quick hack would be removing the h1 tags ;)"}, {"timstamp": "2017-05-23 19:00", "user": "htd", "body": "I am writing a little gui to remote control my and my dads house. his house has airconditions (extra component in angular code) and mine doesn't. the backend is the same in both buildings"}, {"timstamp": "2017-05-23 19:00", "user": "htd", "body": "what is the angular way to only show the aircondition component when run in my dads house (backend sends a list of aircons, list in my house is empty)"}, {"timstamp": "2017-05-23 19:03", "user": "htd", "body": "should I wrap the whole template for the component in a big (pseudocode) ng-if=\"aircon.length()\" tag?"}], "label": "other"}
{"id": "93d594c6", "body": "", "comments": [{"timstamp": "2016-05-15 13:07", "user": "CoderAbsolute", "body": "Hi all, I have a question to ask.... Am developing a mobile app using Ionic2 which is based on Angular2"}, {"timstamp": "2016-05-15 13:08", "user": "CoderAbsolute", "body": "When the user taps on a list item, I have a click event fired (i could see the object data being displayed in the console log)."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "But, how do I store this data globally which means if the user navigates to other page, the data should still be available..."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "This is more like a shopping cart"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStore?"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStorage?"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "Right after posting the question, I did manage to google and wrote something like this and it works for me.. I think"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "dishTapped(event, dish) { var dataToStore = JSON.stringify(dish); localStorage.setItem(\"basket\", dataToStore); console.log(dish); }"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "and move it to a service"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Thanks Ashe! =)"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Exactly. I was thinking about Service."}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Sorry, I can paste the code nicely if you prefer?"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "nah it's fine as it is"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "it's just that you'll likely want to split that logic from the component"}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "So, that this service should be accessible from other Pages as well."}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "Let me google the Service explanation and an example..."}, {"timstamp": "2016-05-15 13:19", "user": "CoderAbsolute", "body": "Maybe, another question... Where does the services should reside? In a separate folder?"}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": "I think this link should answer my question.."}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": ""}, {"timstamp": "2016-05-15 13:21", "user": "Ashe", "body": "personally I use something close to method 2 in that page"}, {"timstamp": "2016-05-15 13:22", "user": "Ashe", "body": "or more like a mix of 2 and 3 I suppose"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "I thought to have a dedicated folder as \"shared\" and have \"services\" underneath... which is close to 3"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "If i need to do something about services anywhere in the app I would go to just one folder and should be able to find things easily.. Hopefully in future... Just a thought."}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "dunno, I'd just call it \"shoppingcart\" rather than \"shared\", and components related to the shopping cart in there as well"}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "but these things are often a mix of rationale/taste/project size/etc"}, {"timstamp": "2016-05-15 13:24", "user": "CoderAbsolute", "body": "Right."}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "You know am loving Angular2"}, {"timstamp": "2016-05-15 13:25", "user": "Lecht", "body": "CoderAbsolute: Me as well"}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "This is my first mobile app and JS development and"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "But the local storage method should work in the real app as well right? I mean when my users download the app on their Android or iOS?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "not doing typescript?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "yeah localstorage will work"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "Thanks for answering about the local storage, Ashe!"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "I come from the C# background, I appreciate the concept of typescript."}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "But the tutorial of Ionic2 is in ES6 I think."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "then you can probably even stick to Visual Studio"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Yeah I can do that but am using sublime now...."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "although when getting started it's nicer to avoid letting the IDE do everything for you, at least that way you know what's going on"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Right..."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "So, I have downloaded the ES6 template and started to enhance it."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "Not sure why Ionic documentation is using ES6 but not typescript.."}, {"timstamp": "2016-05-15 13:29", "user": "Ashe", "body": "the syntax would likely be the same"}, {"timstamp": "2016-05-15 13:30", "user": "CoderAbsolute", "body": "Okies.."}], "label": "other"}
{"id": "93d5953b", "body": "", "comments": [{"timstamp": "2017-02-16 17:21", "user": "bpinto", "body": "does anyone know if it's possible to access bound parameters (using binding) inside the `template` function on angular 1.5+?"}, {"timstamp": "2017-02-16 17:22", "user": "bpinto", "body": "if I access theme via $attrs.attributeName they have not been compiled yet"}, {"timstamp": "2017-02-16 17:22", "user": "cerebraldad", "body": "bpinto: are you using $observe?"}, {"timstamp": "2017-02-16 17:22", "user": "bpinto", "body": "I'm not, haven't heard of this before"}, {"timstamp": "2017-02-16 17:24", "user": "cerebraldad", "body": "bpinto: attrs.$observe(\"file\",function(v){}); will init once detected"}, {"timstamp": "2017-02-16 17:24", "user": "cerebraldad", "body": "inside this function you can manipulate the template"}, {"timstamp": "2017-02-16 17:25", "user": "cerebraldad", "body": "bpinto:"}, {"timstamp": "2017-02-16 17:26", "user": "bpinto", "body": "cerebraldad: that means the component would have to start with an empty template"}, {"timstamp": "2017-02-16 17:27", "user": "cerebraldad", "body": "bpinto: no it would be referenced as an attribute \"file\""}, {"timstamp": "2017-02-16 17:29", "user": "cerebraldad", "body": "bpinto:"}, {"timstamp": "2017-02-16 17:33", "user": "cerebraldad", "body": "bpinto: so the directive would be called <something file=\"templateHTML\"></something> then the directive \"something\" would look for the file \"templateHTML.html\" in the \"templates/directives\" directory"}, {"timstamp": "2017-02-16 17:33", "user": "cerebraldad", "body": "bpinto: and replace it with the contentURL var"}, {"timstamp": "2017-02-16 17:34", "user": "bpinto", "body": "cerebraldad: I could go with directive I was hoping I was going to continue using component"}, {"timstamp": "2017-02-16 17:35", "user": "cerebraldad", "body": "bpinto: components have link functions"}, {"timstamp": "2017-02-16 17:37", "user": "cerebraldad", "body": "im sorry i ment to say dont"}, {"timstamp": "2017-02-16 17:37", "user": "bpinto", "body": "cerebraldad: I guess I will need to use directive, might not be able to do what I want with components"}, {"timstamp": "2017-02-16 17:38", "user": "bpinto", "body": "I'm using webpack features, so it's not that simple:"}, {"timstamp": "2017-02-16 17:39", "user": "cerebraldad", "body": "bpinto: you can use the same sort of template logic - but its injectable"}, {"timstamp": "2017-02-16 17:40", "user": "cerebraldad", "body": "what are you trying to template?"}, {"timstamp": "2017-02-16 17:40", "user": "cerebraldad", "body": "the icon"}, {"timstamp": "2017-02-16 17:40", "user": "bpinto", "body": "yes"}, {"timstamp": "2017-02-16 17:41", "user": "cerebraldad", "body": "what about it?"}, {"timstamp": "2017-02-16 17:41", "user": "bpinto", "body": "there is no ng-include support or templateCache"}, {"timstamp": "2017-02-16 17:41", "user": "cerebraldad", "body": "you would use ng-bind-html"}, {"timstamp": "2017-02-16 17:42", "user": "cerebraldad", "body": "what about this icon component isnt working...looks ok"}, {"timstamp": "2017-02-16 17:42", "user": "bpinto", "body": "it doesnt work when the attribute is sent as {{flash.icon}} for instance"}, {"timstamp": "2017-02-16 17:43", "user": "cerebraldad", "body": "might just be your syntax"}, {"timstamp": "2017-02-16 17:43", "user": "cerebraldad", "body": "{{}}"}, {"timstamp": "2017-02-16 17:44", "user": "cerebraldad", "body": "a type error?"}, {"timstamp": "2017-02-16 17:44", "user": "bpinto", "body": "we use that for a separate reason"}, {"timstamp": "2017-02-16 17:44", "user": "bpinto", "body": "it doesnt work because by the time the template function is executed the parameters have not been compiled yet"}, {"timstamp": "2017-02-16 17:45", "user": "bpinto", "body": "I think we use double { for a conflict with anothe rlibrary, can't remember now"}, {"timstamp": "2017-02-16 17:45", "user": "cerebraldad", "body": "might need to bind a promise"}, {"timstamp": "2017-02-16 17:46", "user": "bpinto", "body": "promise?"}, {"timstamp": "2017-02-16 17:47", "user": "cerebraldad", "body": "yup either that or a broadcast event - but i would suggest using a service that returns a promise when the parameters have been compiled"}, {"timstamp": "2017-02-16 17:51", "user": "cerebraldad", "body": "bpinto: .map(params => {something}).toPromise();"}, {"timstamp": "2017-02-16 17:51", "user": "bpinto", "body": "I'm really confused with the promise coming into this"}, {"timstamp": "2017-02-16 17:51", "user": "bpinto", "body": "there is no request involved"}, {"timstamp": "2017-02-16 17:52", "user": "cerebraldad", "body": "you need a way to wait for the parameters before init your component or map the template to the params result"}, {"timstamp": "2017-02-16 17:55", "user": "cerebraldad", "body": "bpinto: or use the handlebars package"}, {"timstamp": "2017-02-16 17:57", "user": "cerebraldad", "body": "bpinto: or Mustache"}, {"timstamp": "2017-02-16 17:57", "user": "bpinto", "body": "right"}, {"timstamp": "2017-02-16 17:58", "user": "cerebraldad", "body": "bpinto: or configure your webpack.config.js to look for it"}, {"timstamp": "2017-02-16 17:58", "user": "cerebraldad", "body": "bpinto:"}, {"timstamp": "2017-02-16 17:59", "user": "bpinto", "body": "cerebraldad: thanks, I'll try those things here"}, {"timstamp": "2017-02-16 17:59", "user": "cerebraldad", "body": "bpinto: hope i helped"}, {"timstamp": "2017-02-16 18:01", "user": "bpinto", "body": "for sure!"}, {"timstamp": "2017-02-16 18:10", "user": "bpinto", "body": "cerebraldad: I have fixed it, thanks"}], "label": "other"}
{"id": "93d5948c", "body": "", "comments": [{"timstamp": "2016-09-21 21:29", "user": "ReScO", "body": "So why do you guys love Angular anyways?"}, {"timstamp": "2016-09-21 21:30", "user": "ReScO", "body": "Where lies it's power, and why Angular?"}, {"timstamp": "2016-09-21 21:30", "user": "SaltyCatFish", "body": "ReScO: Did you ever try making a single page application from scratch?"}, {"timstamp": "2016-09-21 21:30", "user": "ReScO", "body": "SaltyCatFish: nope"}, {"timstamp": "2016-09-21 21:30", "user": "ReScO", "body": "Always been a PHP guy"}, {"timstamp": "2016-09-21 21:31", "user": "SaltyCatFish", "body": "ReScO: Its hard... angular makes it easy. Brings really nice separation of concerns and modularity to the project."}, {"timstamp": "2016-09-21 21:31", "user": "SaltyCatFish", "body": "Just stay away from require.js =)"}, {"timstamp": "2016-09-21 21:32", "user": "SaltyCatFish", "body": "ReScO: Honestly, I'm just finishing up my 1st project in Angular now..."}, {"timstamp": "2016-09-21 21:32", "user": "SaltyCatFish", "body": "ReScO: Once you get everything wired up, which there isnt that much, it make everything much easier"}, {"timstamp": "2016-09-21 21:33", "user": "SaltyCatFish", "body": "zomg: I was trying to find something like that, the same way _controller_ is done, thanks man!"}, {"timstamp": "2016-09-21 21:33", "user": "ReScO", "body": "So it's entirely possible to display a live graph in Angular as long as i implement the right code?"}, {"timstamp": "2016-09-21 21:33", "user": "SaltyCatFish", "body": "ReScO: Of coruse"}, {"timstamp": "2016-09-21 21:33", "user": "SaltyCatFish", "body": "course*"}, {"timstamp": "2016-09-21 21:34", "user": "ReScO", "body": "Streaming graph, rather, but eh"}, {"timstamp": "2016-09-21 21:34", "user": "zomg", "body": "SaltyCatFish: yep :) I really should dig into this more and write about it as it seems a lot of people are asking about this (both here and via email to me personally)"}, {"timstamp": "2016-09-21 21:34", "user": "ReScO", "body": "basically all i want to do is send datapoints over, and other messages to update in the UI"}, {"timstamp": "2016-09-21 21:35", "user": "ReScO", "body": "completely seperately, and they'll arrive at random intervals, it's crucial i get the data as soon as it comes in"}, {"timstamp": "2016-09-21 21:35", "user": "ReScO", "body": "s/get the data/get the data on the screen/"}, {"timstamp": "2016-09-21 21:37", "user": "ReScO", "body": "But is it easy to learn? i'm used to frameworks like Symfony3/PHP, i tried using Python to serve webpages but that was a no-go too"}, {"timstamp": "2016-09-21 21:45", "user": "zomg", "body": "ReScO: if you've never used javascript, or just a little, I would avoid angular until you're more comfortable with JS"}, {"timstamp": "2016-09-21 21:45", "user": "zomg", "body": "if you like the concept of binding data into your html via JS, KnockoutJS is similar but a lot easier to understand library"}, {"timstamp": "2016-09-21 21:45", "user": "ReScO", "body": "zomg: i can find my way around JS pretty well"}, {"timstamp": "2016-09-21 21:46", "user": "zomg", "body": "okay, in that case it should be fairly easy to learn the basics. There's some things like custom directives which may be tricky at first, but they're not something you need to worry about when you're getting started"}, {"timstamp": "2016-09-21 21:47", "user": "ReScO", "body": "i don't really care for \"too much\", anything can be learned"}, {"timstamp": "2016-09-21 21:52", "user": "SaltyCatFish", "body": "ReScO: You said this is for the stock market though right?"}, {"timstamp": "2016-09-21 21:54", "user": "ReScO", "body": "SaltyCatFish: cryptocurrency yeah"}, {"timstamp": "2016-09-21 21:55", "user": "ReScO", "body": "trying to make an \"app\"-like webpanel that shows me all i need to know about my system"}, {"timstamp": "2016-09-21 21:55", "user": "SaltyCatFish", "body": "ReScO: Thats a lot of data changing rapidly."}, {"timstamp": "2016-09-21 21:56", "user": "SaltyCatFish", "body": "ReScO: Thinking out loud(typing), i'm sure you figured that already. =D"}, {"timstamp": "2016-09-21 21:57", "user": "ReScO", "body": "SaltyCatFish: yeah, it's not just one currency pair"}, {"timstamp": "2016-09-21 21:57", "user": "ReScO", "body": "it's -all- the market data"}, {"timstamp": "2016-09-21 21:58", "user": "SaltyCatFish", "body": "ambitious!"}, {"timstamp": "2016-09-21 22:00", "user": "SaltyCatFish", "body": "zomg: Hly sht that worked..."}, {"timstamp": "2016-09-21 22:01", "user": "zomg", "body": "oh cool :)"}, {"timstamp": "2016-09-21 22:02", "user": "SaltyCatFish", "body": "thanks! really needed that link!"}, {"timstamp": "2016-09-21 22:03", "user": "zomg", "body": "Did I tell you to download this yet? :P"}, {"timstamp": "2016-09-21 22:03", "user": "zomg", "body": "I seem to remember telling someone to download that recently"}, {"timstamp": "2016-09-21 22:03", "user": "zomg", "body": ":D"}, {"timstamp": "2016-09-21 22:04", "user": "SaltyCatFish", "body": "nope never heard of sinon.js"}, {"timstamp": "2016-09-21 22:04", "user": "zomg", "body": "ah, you'll want to learn about that then :)"}, {"timstamp": "2016-09-21 22:05", "user": "zomg", "body": "basically the best stubbing/mocking lib out there"}, {"timstamp": "2016-09-21 22:05", "user": "SaltyCatFish", "body": "sweet thanks!"}, {"timstamp": "2016-09-21 22:05", "user": "SaltyCatFish", "body": "dl'ing now"}, {"timstamp": "2016-09-21 22:08", "user": "ReScO", "body": "SaltyCatFish: per chance, what's the best way to pass data to Angular?"}, {"timstamp": "2016-09-21 22:09", "user": "SaltyCatFish", "body": "And def start looking into promises if you havent already"}, {"timstamp": "2016-09-21 22:09", "user": "SaltyCatFish", "body": "ReScO: Check with zomg, he's much more well versed. I'm sending everything via JSON through PHP scripts."}, {"timstamp": "2016-09-21 22:09", "user": "SaltyCatFish", "body": "Angular has a built in $http for ajax requests."}, {"timstamp": "2016-09-21 22:11", "user": "SaltyCatFish", "body": "what doesnt work?"}, {"timstamp": "2016-09-21 22:12", "user": "SaltyCatFish", "body": "you dont have $http on line 18"}, {"timstamp": "2016-09-21 22:13", "user": "SaltyCatFish", "body": "You're using $http in your controller, but you have to declare it alongside '$scope'"}, {"timstamp": "2016-09-21 22:13", "user": "ReScO", "body": "zomg, mind if i PM you?"}], "label": "other"}
{"id": "93d59496", "body": "", "comments": [{"timstamp": "2016-10-27 17:56", "user": "dman777_alter", "body": "what generator/scaffoling tool do people use now for angular 1?"}, {"timstamp": "2016-10-27 17:58", "user": "cuebix", "body": "<--- none"}, {"timstamp": "2016-10-27 17:59", "user": "dman777_alter", "body": "having issues with fountainjs"}, {"timstamp": "2016-10-27 17:59", "user": "dman777_alter", "body": "and sourcemaps"}, {"timstamp": "2016-10-27 18:43", "user": "dman777_alter", "body": "man, I need a gulp angular geneerator really bad right now if anyone knows of one besides fountain js"}, {"timstamp": "2016-10-27 18:49", "user": "ngbot", "body": "[angular.js] petebacondarwin pushed 1 new commit to master:"}, {"timstamp": "2016-10-27 18:49", "user": "ngbot", "body": "angular.js/master 74c19f0 Peter Bacon Darwin: chore(version-info): fix `getTaggedVersion`..."}, {"timstamp": "2016-10-27 19:02", "user": "falk0n", "body": "dman777_alter: you can check \"angular seed\", if anyone here can give a better answer I'm all \"eyes\""}, {"timstamp": "2016-10-27 19:54", "user": "dman777_alter", "body": "falk0n: does anglur-seed have a build chain for produciton deployment?"}, {"timstamp": "2016-10-27 20:07", "user": "falk0n", "body": "dman777_alter: I don't think so"}, {"timstamp": "2016-10-27 20:44", "user": "dman777_alter", "body": "does fox still come around on here?"}], "label": "other"}
{"id": "93d594a2", "body": "", "comments": [{"timstamp": "2016-06-21 21:45", "user": "Chuckles1313", "body": "Here's my issue. I want to create a service that holds reference tables to be used in dropdowns and lookups. I have a REST service that returns all the different [id, value]. Right now, my service just moves and doesn't wait for the data to complete. Ideas?"}, {"timstamp": "2016-06-21 21:46", "user": "juro", "body": "Chuckles1313, where does your service \"move\" to?"}, {"timstamp": "2016-06-21 21:46", "user": "juro", "body": "... the Outback? ... (sorry, couldn't resist)"}, {"timstamp": "2016-06-21 21:47", "user": "Chuckles1313", "body": "Moves on..."}, {"timstamp": "2016-06-21 21:47", "user": "Chuckles1313", "body": "hehe."}, {"timstamp": "2016-06-21 21:47", "user": "juro", "body": "Chuckles1313, any code you can share?"}, {"timstamp": "2016-06-21 21:47", "user": "Chuckles1313", "body": "'use strict'; angular.module('refPayApp.constants.constantsService',[]); angular.module('refPayApp.constants.constantsService').service('constants', ['$http', '$q', constants]); //var AllVals= new Array(); function constants($http,$q){ var self = this; var sports; self.sports=sports; $http.get('services/getAllConstants') .success(function(data){ self.sports = data; }) .error(function(){ console.log('There was an err"}, {"timstamp": "2016-06-21 21:49", "user": "Chuckles1313", "body": "If I do a console.log on the data it's fine."}, {"timstamp": "2016-06-21 21:51", "user": "Chuckles1313", "body": "function RefViewController(RefService, constants, $mdMedia, $mdDialog, $log, $scope, $http, $q, document) {var sports = {}; sports = constants.sports;}"}, {"timstamp": "2016-06-21 21:52", "user": "Chuckles1313", "body": "will produce a result if I put a static value in the service for sports, but not from the $http call."}, {"timstamp": "2016-06-21 21:54", "user": "juro", "body": "Chuckles1313, please use an online editor."}, {"timstamp": "2016-06-21 21:55", "user": "Chuckles1313", "body": "Ij,"}, {"timstamp": "2016-06-21 21:55", "user": "Chuckles1313", "body": "ok"}, {"timstamp": "2016-06-21 22:10", "user": "Chuckles1313", "body": ""}], "label": "other"}
{"id": "73af7d06", "body": "", "comments": [{"timstamp": "13:21", "user": "berz3rk", "body": ""}, {"timstamp": "13:21", "user": "berz3rk", "body": "nothing works"}, {"timstamp": "13:21", "user": "berz3rk", "body": "is angular broken by design or why do APIs change all the time and nothing works and is terribly slow"}], "label": "other"}
{"id": "93d5953f", "body": "", "comments": [{"timstamp": "2016-11-04 11:41", "user": "hemangpatel", "body": "I want to crawl angularjs site and create sitemap"}, {"timstamp": "2016-11-04 11:41", "user": "hemangpatel", "body": "How can i achieve that ?"}, {"timstamp": "2016-11-04 11:41", "user": "icebox", "body": "hemangpatel: creating a crawler?"}, {"timstamp": "2016-11-04 11:42", "user": "hemangpatel", "body": "icebox, I want to build sitemap from any angularjs application. so yes i need crawler i think"}, {"timstamp": "2016-11-04 11:43", "user": "icebox", "body": "hemangpatel: perfect... a crawler is a server side app :)"}, {"timstamp": "2016-11-04 11:43", "user": "icebox", "body": "Elarcis: hey!"}, {"timstamp": "2016-11-04 11:44", "user": "Elarcis", "body": "hi icebox"}, {"timstamp": "2016-11-04 11:48", "user": "hemangpatel", "body": "icebox, I was thinking about phantomjs"}, {"timstamp": "2016-11-04 11:48", "user": "hemangpatel", "body": "and i found"}, {"timstamp": "2016-11-04 11:49", "user": "icebox", "body": "hemangpatel: always backend matter :)"}, {"timstamp": "2016-11-04 11:49", "user": "hemangpatel", "body": "icebox, Sorry i don't understand"}, {"timstamp": "2016-11-04 11:49", "user": "hemangpatel", "body": "backend of angular ?"}, {"timstamp": "2016-11-04 11:50", "user": "icebox", "body": "hemangpatel: your question is off topic..."}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "angular is only frontend"}, {"timstamp": "2016-11-04 11:50", "user": "hemangpatel", "body": "okay"}, {"timstamp": "2016-11-04 11:50", "user": "icebox", "body": "hemangpatel: a crawler or that app you pointed out are backend apps"}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "but if you want a sitemap you'd want your server to generate it"}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "ie express/spring/.net core or whatever else you're using for your backend"}], "label": "other"}
{"id": "0ec1e28a", "body": "", "comments": [{"timstamp": "13:09", "user": "Paradisee", "body": "how does a push notification work?"}, {"timstamp": "13:10", "user": "Paradisee", "body": "i basically have a json on my server, where there are a list of notifications i would like to send to the user"}, {"timstamp": "13:11", "user": "Paradisee", "body": "the list is complitely generated as a standalone project"}, {"timstamp": "13:13", "user": "Paradisee", "body": "i'm reading this:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "it says: What we know as Web Push Notifications are actually based on two separate browser standards:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Push API - this is an API that allows messages to be pushed from a server to a browser (even when the site isn't focused or the browser is closed)"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Notifications API: displays native system notifications to the user"}], "label": "other"}
{"id": "8addb262", "body": "", "comments": [{"timstamp": "2017-04-07 11:37", "user": "phx", "body": "is there a way to tell \"ng serve\" what files to ignore? something like adding stuff to .gitignore"}, {"timstamp": "2017-04-07 11:37", "user": "icebox", "body": "phx: no idea about \"moving out\" action... I am not behind your shoulders and I don't know anything of your box"}, {"timstamp": "2017-04-07 11:38", "user": "phx", "body": "icebox, mv app ~/tmp/, \"moving out\""}, {"timstamp": "2017-04-07 11:39", "user": "icebox", "body": "phx: about ng serve, I don't think so..."}, {"timstamp": "2017-04-07 11:39", "user": "icebox", "body": "phx:"}, {"timstamp": "2017-04-07 11:40", "user": "icebox", "body": "phx: if you need to ignore something, that is done in the build phase"}, {"timstamp": "2017-04-07 11:43", "user": "icebox", "body": "phx: I insist with my suggestion... no idea because you are spending so many time with angular cli... if you need to develop an app, you should focus on app details :)"}, {"timstamp": "2017-04-07 11:43", "user": "icebox", "body": "phx: it is not mandatory using angular cli to develop angular apps :)"}, {"timstamp": "2017-04-07 11:44", "user": "phx", "body": ""}, {"timstamp": "2017-04-07 11:44", "user": "phx", "body": "most probably"}, {"timstamp": "2017-04-07 11:44", "user": "icebox", "body": "phx: yep"}, {"timstamp": "2017-04-07 11:46", "user": "icebox", "body": "phx: but that depends on your setup"}, {"timstamp": "2017-04-07 11:46", "user": "icebox", "body": "phx: using webpack as bundler is only an option... there are different bundlers"}, {"timstamp": "2017-04-07 11:56", "user": "icebox", "body": "phx: if you think it is a mess, you are right, but it is not matter of angular... :)"}, {"timstamp": "2017-04-07 12:00", "user": "phx", "body": "icebox, in my opinion, in IT, everything is an utter crap, until proven otherwise, so no surprise here :)"}, {"timstamp": "2017-04-07 12:03", "user": "phx", "body": "those are the \"enterprise\" applocations, usually"}, {"timstamp": "2017-04-07 12:03", "user": "phx", "body": "and that proving never gets past the sales guy"}], "label": "feature"}
{"id": "93d5954d", "body": "", "comments": [{"timstamp": "2017-06-29 16:12", "user": "SargoDarya", "body": "I could need a designer for my game xD"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: I have to warn you: I use Comic Sans everywhere"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: So we have a deal?"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: damn, my repellant failed"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: Jokes on you, I'm a firm believer in dogecoin. Comic sans is my favorite font!"}, {"timstamp": "2017-06-29 16:16", "user": "Elarcis", "body": "zomg: sounds like our computation api"}], "label": "other"}
{"id": "93d594b4", "body": "", "comments": [{"timstamp": "2016-11-04 11:03", "user": "smiche", "body": "my angular app is melting this tablet"}, {"timstamp": "2016-11-04 11:06", "user": "tobias", "body": "smiche: nice :D"}, {"timstamp": "2016-11-04 11:35", "user": "smiche", "body": "uh"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": "yep"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": "this one"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": ""}, {"timstamp": "2016-11-04 11:37", "user": "loZio", "body": "I want to custom infowindow"}, {"timstamp": "2016-11-04 11:38", "user": "icebox", "body": "loZio: nice"}, {"timstamp": "2016-11-04 11:39", "user": "icebox", "body": "loZio: it seems there is an example there:"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "XD"}, {"timstamp": "2016-11-04 11:40", "user": "icebox", "body": "loZio: and?"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": ""}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "I think that with this one I can inject my template in the popup"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "but I want to custom the form of my popup"}, {"timstamp": "2016-11-04 11:41", "user": "icebox", "body": "loZio: perfect :)"}, {"timstamp": "2016-11-04 11:41", "user": "loZio", "body": "do you have example for custom infowindow?"}, {"timstamp": "2016-11-04 11:42", "user": "icebox", "body": "loZio: \"out of scope. infowindow is set by Google, not by ng-map. ng-map is just a wrapper of google maps api\""}, {"timstamp": "2016-11-04 11:42", "user": "icebox", "body": "loZio: here it is #angularjs... it is not google api channel or ngmap one :)"}], "label": "other"}
{"id": "8addb270", "body": "", "comments": [{"timstamp": "2016-10-25 17:53", "user": "anotheryou", "body": "Hi, I want to do an ng-if for if a filtered list is empty. Now how do i build the equivalent to something like \"| filter: {property:true}\" in the ng-repeat to something like \"contains\" for the ng-if?"}, {"timstamp": "2016-10-25 17:54", "user": "anotheryou", "body": "I simply want to show a pretty empty state if there is nothing to show"}, {"timstamp": "2016-10-25 17:58", "user": "anotheryou", "body": "(ng 1.5.x)"}], "label": "feature"}
{"id": "0edea3b2", "body": "", "comments": [{"timstamp": "14:15", "user": "stennowork", "body": "it doesn't have to be html"}, {"timstamp": "14:15", "user": "stennowork", "body": "btw"}, {"timstamp": "14:15", "user": "stennowork", "body": "or does it?"}, {"timstamp": "14:15", "user": "Pyrrhus666", "body": "I think it is"}, {"timstamp": "14:15", "user": "stennowork", "body": "i mean i could render arbitrary data"}, {"timstamp": "14:15", "user": "Pyrrhus666", "body": "ah yes, true"}, {"timstamp": "14:15", "user": "Pyrrhus666", "body": "but looking at UI, it's html"}, {"timstamp": "14:15", "user": "stennowork", "body": "its usually used to render html :D"}], "label": "other"}
{"id": "93d594bc", "body": "", "comments": [{"timstamp": "2016-05-28 11:05", "user": "SET001", "body": "or ; )"}, {"timstamp": "2016-05-28 11:05", "user": "SET001", "body": "try || maybe?"}], "label": "other"}
{"id": "93d5948d", "body": "", "comments": [{"timstamp": "2017-04-18 12:14", "user": "anotheryou", "body": "Is there a nice way to trigger some script when no input in to some text fields has been made for 1 second? I can only think of a counter that resets on every keystroke, but that seems a bit hacky"}, {"timstamp": "2017-04-18 12:15", "user": "anotheryou", "body": "or should I ask in #js?"}], "label": "other"}
{"id": "93d59491", "body": "", "comments": [{"timstamp": "2018-12-12 14:36", "user": "Aquazi", "body": "got a question"}, {"timstamp": "2018-12-12 14:37", "user": "Aquazi", "body": "is there a way to use the angular cli in stackblitz?"}, {"timstamp": "2018-12-12 14:47", "user": "SuperTyp", "body": "Aquazi: what do you mean?"}, {"timstamp": "2018-12-12 14:47", "user": "SuperTyp", "body": "Aquazi: what is your goal?"}, {"timstamp": "2018-12-12 15:16", "user": "SuperTyp", "body": "Aquazi: answer meeeeeeeeee"}, {"timstamp": "2018-12-12 15:16", "user": "Aquazi", "body": "that was a straightforward question, how to use the CLI in stackblitz: I found the answer googling: I can't"}, {"timstamp": "2018-12-12 15:17", "user": "Aquazi", "body": "but I can use the generators by right clicking"}, {"timstamp": "2018-12-12 15:17", "user": "Aquazi", "body": "I have another question tho. I see many styles of handling routes and components and I don't really understand the various pros and cons."}, {"timstamp": "2018-12-12 15:17", "user": "SuperTyp", "body": "Aquazi: if you want to generate components etc you can right click a folder and then under Angular Generator you can find some options"}, {"timstamp": "2018-12-12 15:18", "user": "Aquazi", "body": "yes I know that I wrote it :P"}, {"timstamp": "2018-12-12 15:18", "user": "Aquazi", "body": "I have another question tho"}, {"timstamp": "2018-12-12 15:18", "user": "Aquazi", "body": ""}, {"timstamp": "2018-12-12 15:18", "user": "SuperTyp", "body": "ah sorry"}, {"timstamp": "2018-12-12 15:18", "user": "Aquazi", "body": "is that a good style of handling routes?"}, {"timstamp": "2018-12-12 15:18", "user": "Aquazi", "body": "I don't really understand the pros and cons"}, {"timstamp": "2018-12-12 15:18", "user": "SuperTyp", "body": "yes"}, {"timstamp": "2018-12-12 15:18", "user": "SuperTyp", "body": "what other variants did you see?"}, {"timstamp": "2018-12-12 15:19", "user": "Aquazi", "body": "generally I see the components declared in app.module.ts"}, {"timstamp": "2018-12-12 15:19", "user": "Pyrrhus666", "body": "Aquazi, most routing is feature(module) based."}, {"timstamp": "2018-12-12 15:19", "user": "Aquazi", "body": "yes but here there are no modules"}, {"timstamp": "2018-12-12 15:19", "user": "Aquazi", "body": "what if I wanted to use modules"}, {"timstamp": "2018-12-12 15:19", "user": "Aquazi", "body": "is having a routing module still the way to go?"}, {"timstamp": "2018-12-12 15:19", "user": "Pyrrhus666", "body": "Aquazi,"}, {"timstamp": "2018-12-12 15:19", "user": "SuperTyp", "body": "Aquazi: yes"}, {"timstamp": "2018-12-12 15:19", "user": "Pyrrhus666", "body": "Aquazi, yes"}, {"timstamp": "2018-12-12 15:20", "user": "Aquazi", "body": "what does it mean?"}, {"timstamp": "2018-12-12 15:20", "user": "Pyrrhus666", "body": "Aquazi, read the link"}, {"timstamp": "2018-12-12 15:20", "user": "Aquazi", "body": "I know what feature modules are"}, {"timstamp": "2018-12-12 15:20", "user": "Aquazi", "body": "I'm asking about their routing management"}, {"timstamp": "2018-12-12 15:21", "user": "Pyrrhus666", "body": "routes within a module are handled in the module. parent knows nothing of that"}, {"timstamp": "2018-12-12 15:21", "user": "Pyrrhus666", "body": "also enables lazy loading"}, {"timstamp": "2018-12-12 15:21", "user": "Aquazi", "body": "but how do I route across modules, I'm rather confused"}, {"timstamp": "2018-12-12 15:21", "user": "Aquazi", "body": "I write my own feature module that bootstraps, e.g., login"}, {"timstamp": "2018-12-12 15:22", "user": "SuperTyp", "body": "Aquazi: simple"}, {"timstamp": "2018-12-12 15:22", "user": "Aquazi", "body": "now what do I import and where in my router module?"}, {"timstamp": "2018-12-12 15:22", "user": "Pyrrhus666", "body": "Aquazi, generally, you a) dont or b) do that in app.module or c) route to nested child modules"}, {"timstamp": "2018-12-12 15:22", "user": "Aquazi", "body": "because router expects module"}, {"timstamp": "2018-12-12 15:22", "user": "SuperTyp", "body": "Aquazi: your feature module holds its own routing file (routes)"}, {"timstamp": "2018-12-12 15:23", "user": "SuperTyp", "body": "and imports them using RouterModule.forChild(featureModuleRoutes); in the imports"}, {"timstamp": "2018-12-12 15:23", "user": "SuperTyp", "body": "simple as that"}, {"timstamp": "2018-12-12 15:23", "user": "Aquazi", "body": "got any gh example?"}, {"timstamp": "2018-12-12 15:23", "user": "SuperTyp", "body": "sure 1 sec"}, {"timstamp": "2018-12-12 15:24", "user": "SuperTyp", "body": "Aquazi:"}, {"timstamp": "2018-12-12 15:25", "user": "Aquazi", "body": "the example doesn't run in stackblitz tho"}, {"timstamp": "2018-12-12 15:25", "user": "SuperTyp", "body": "there you go, quick description: in app-routing.module (which is imported by app.module) the routes trigger lazy load of the feature modules"}, {"timstamp": "2018-12-12 15:25", "user": "SuperTyp", "body": "doesnt matter"}, {"timstamp": "2018-12-12 15:25", "user": "SuperTyp", "body": "just look at the structure"}], "label": "other"}
{"id": "93d59535", "body": "", "comments": [{"timstamp": "2017-04-25 13:06", "user": "E1arcis", "body": "back"}, {"timstamp": "2017-04-25 13:07", "user": "SargoDarya", "body": "wb E1arcis"}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "I really hate atlassian today..."}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "Still can't access Jira."}, {"timstamp": "2017-04-25 13:32", "user": "uru", "body": "SargoDarya:"}, {"timstamp": "2017-04-25 13:33", "user": "uru", "body": "Main problem is they are having issues with their account servers it seems, I can use JIRA fine as I had an existing session from yesterday, co-worker can't log in though"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "uru: Yeah, figured that already. They're also saying that on their status page"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "Honestly though, that issues seems to be open for 13 hours already."}, {"timstamp": "2017-04-25 13:37", "user": "uru", "body": "Yea< I can't even load their offical status page, it's just times out. It's all rather annoying :)"}, {"timstamp": "2017-04-25 13:38", "user": "SargoDarya", "body": "That one works for me though. Are you using status.atlassian.com?"}, {"timstamp": "2017-04-25 13:46", "user": "uru", "body": "Nope, I can't actually access that"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh, seems to be working now"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh well"}, {"timstamp": "2017-04-25 13:47", "user": "SargoDarya", "body": "You mean the status page or what"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "because I'm still receiving freaking cloudflare errors"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "front, not flare"}, {"timstamp": "2017-04-25 14:11", "user": "uru", "body": "The status page, I can't access the log in page but I'm already logged in so it's not a problem for me."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I'm not."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I miss my tickets :<"}, {"timstamp": "2017-04-25 14:14", "user": "uru", "body": "The ones of us that have access still are sending screenshots of issues to people who don't"}, {"timstamp": "2017-04-25 14:19", "user": "uru", "body": "I am actually, getting to build lots of fun stuff at the moment"}, {"timstamp": "2017-04-25 14:21", "user": "Elarcis", "body": "uru: I might have to look at C# again someday, so I'm hopeful :P"}, {"timstamp": "2017-04-25 14:30", "user": "uru", "body": "Elarcis: Neat, I've been doing a bit of Go recently (the language, not the game)"}, {"timstamp": "2017-04-25 14:30", "user": "SargoDarya", "body": "uru: Rare to see someone who even knows go (the game)"}, {"timstamp": "2017-04-25 14:30", "user": "Elarcis", "body": "uru: I've been told to learn Haskell for fun. I don't know if I'll ever be masochist enough"}, {"timstamp": "2017-04-25 14:31", "user": "Elarcis", "body": "SargoDarya: Come on, it made the headlines a few years ago"}, {"timstamp": "2017-04-25 14:31", "user": "SargoDarya", "body": "Elarcis: Well, sure but I'd say still not much people know about it."}, {"timstamp": "2017-04-25 14:32", "user": "Elarcis", "body": "SargoDarya: right"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Still have a large go-ban in the basement"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Loved playing it back then, think I actually got to 17kyu"}, {"timstamp": "2017-04-25 14:34", "user": "Elarcis", "body": "SargoDarya: I don't know the rules of Go, though"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "location[varname]"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Easy to learn, hard to master. It's really about recognising patterns and knowing when to attack or safe"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: sounds a lot like Overwatch"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: *hides in a corner*"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Except that in overwatch 95% of the time your team mates are at fault for losing :P"}, {"timstamp": "2017-04-25 14:36", "user": "Elarcis", "body": "SargoDarya: well obviously, I play way too well to be at fault"}, {"timstamp": "2017-04-25 14:36", "user": "SargoDarya", "body": "And god damn Hanzo. OP when on the other team, non existent when on your team"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: best I saw was a Junkrat who would take long pauses to hide behind a wall between each. grenade."}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "Elarcis: lol, I was subjected to it at uni"}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "SargoDarya: Co-worker plays it ;)"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: or a Winston that would take the flag, then go back to the spawn and decide to clean it (and die) before rushing to the flagpole."}, {"timstamp": "2017-04-25 14:37", "user": "SargoDarya", "body": "lol Elarcis, I actually haven't played in ages."}, {"timstamp": "2017-04-25 14:38", "user": "Elarcis", "body": "\"ages\", the game has been out for less than a year :D"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "Elarcis: {{location[field]}} seems not to work while {{location.fieldname}} does"}, {"timstamp": "2017-04-25 14:38", "user": "SargoDarya", "body": "Was a regular at goproblems.com. That site still looks ages old and is Java driven if I remember correctly"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "in FE"}, {"timstamp": "2017-04-25 14:39", "user": "Elarcis", "body": "justelex: what's FE?"}, {"timstamp": "2017-04-25 14:41", "user": "justelex", "body": "Frontend.. The html template.. sorry"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: well if it works"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: problem solved"}, {"timstamp": "2017-04-25 14:45", "user": "justelex", "body": "Elarcis: I need a variable in this. Like location.$SomeVariableIDontknowInAdvance. With one of the fieldsnames in loctation it works, if I hardcode the name."}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: location[fieldName], I stand my grounds"}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: it's how you access dynamically named variables in an object"}, {"timstamp": "2017-04-25 14:47", "user": "Elarcis", "body": "justelex: if it doesn't work, either fieldName is wrong or location doesn't have any key going by that name"}, {"timstamp": "2017-04-25 14:47", "user": "justelex", "body": "Gnaahh... Sorry, my fault. Had an dumb spelling error in this."}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "Sorry for wasting your time ;)"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "np"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "I'll fax you my hourly rates"}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "hmm... Do this. will be back later, need to search my fax..."}, {"timstamp": "2017-04-25 14:51", "user": "SargoDarya", "body": "Elarcis: Heh, fax."}, {"timstamp": "2017-04-25 14:52", "user": "Elarcis", "body": "SargoDarya: should have said they're on my Minitel."}, {"timstamp": "2017-04-25 14:53", "user": "SargoDarya", "body": "I'm only 28 and I feel freaking old. Somethings wrong."}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: 24 and feel the same"}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: what should I say."}, {"timstamp": "2017-04-25 14:56", "user": "SargoDarya", "body": "Back to work mate"}, {"timstamp": "2017-04-25 14:56", "user": "Pyrrhus666", "body": "SargoDarya, yeeeeaaaahhhh thatd be greeaat."}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": "Pyrrhus666: ?"}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": ""}, {"timstamp": "2017-04-25 14:59", "user": "Pyrrhus666", "body": "SargoDarya,"}, {"timstamp": "2017-04-25 15:00", "user": "Pyrrhus666", "body": "also"}, {"timstamp": "2017-04-25 15:27", "user": "SargoDarya", "body": "Honestly though it's getting to the point where it's laughable with Atlassian"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "yeah :|"}, {"timstamp": "2017-04-25 15:28", "user": "Elarcis", "body": "SargoDarya: reminds me of GitLab a few weeks ago"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "and they got quite a bit of money"}, {"timstamp": "2017-04-25 15:28", "user": "SargoDarya", "body": "I especially love this sentence in the past incidents from yesterdays unavailable login: \"Our teams have completed an extensive health check and are confident Atlassian Account services will remain healthy.\""}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "SargoDarya, they've revamped the UI at least :)"}, {"timstamp": "2017-04-25 15:29", "user": "SargoDarya", "body": "Confidence of a 3 year old"}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: don't mess with Murphy's law"}, {"timstamp": "2017-04-25 15:30", "user": "SargoDarya", "body": "Probably some technician who was like: \"HAHAHAAAAAAAAAAAA nope.\""}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: making a statement like that, it was begging for an incident to happen"}], "label": "other"}
{"id": "93d594f9", "body": "", "comments": [{"timstamp": "2017-10-04 14:09", "user": "jlebrech", "body": "how can I send and recieve events in angular 1 without using rootscope?"}, {"timstamp": "2017-10-04 14:09", "user": "icebox", "body": "jlebrech: you don't need events :)"}, {"timstamp": "2017-10-04 14:10", "user": "jlebrech", "body": "icebox: rootScope is it then :D"}, {"timstamp": "2017-10-04 14:10", "user": "icebox", "body": "jlebrech: no"}, {"timstamp": "2017-10-04 14:10", "user": "jlebrech", "body": "icebox: my reference weren't updating and emitting and event fixed my issue"}, {"timstamp": "2017-10-04 14:10", "user": "icebox", "body": "jlebrech: nah :P"}, {"timstamp": "2017-10-04 14:11", "user": "icebox", "body": "jlebrech: because you are copying and spreading data everywhere :)"}, {"timstamp": "2017-10-04 14:11", "user": "icebox", "body": "jlebrech: use correctly the reference and call the day"}, {"timstamp": "2017-10-04 14:11", "user": "icebox", "body": "jlebrech: Two way data binding pitfalls -"}, {"timstamp": "2017-10-04 14:11", "user": "jlebrech", "body": "im just doing. $ctrl.my_data = Myservice.my_data; Myservice.getData()"}, {"timstamp": "2017-10-04 14:11", "user": "jlebrech", "body": "my data doesn't update"}, {"timstamp": "2017-10-04 14:12", "user": "jlebrech", "body": "stays as undefined"}, {"timstamp": "2017-10-04 14:12", "user": "icebox", "body": "jlebrech: the problem is when you update data"}, {"timstamp": "2017-10-04 14:12", "user": "icebox", "body": "jlebrech: anyway... if you provide a minimal working plunker reproducing your use case, we may fix it"}, {"timstamp": "2017-10-04 14:13", "user": "jlebrech", "body": "ok"}, {"timstamp": "2017-10-04 14:25", "user": "Pyrrhus666", "body": "jlebrech, number is a primitive. only objects support references."}, {"timstamp": "2017-10-04 14:25", "user": "jlebrech", "body": "ok, just trying to keep the plunkr simple"}, {"timstamp": "2017-10-04 14:27", "user": "jlebrech", "body": "Pyrrhus666: ok it's an object now"}, {"timstamp": "2017-10-04 14:28", "user": "Pyrrhus666", "body": "jlebrech, find the difference"}, {"timstamp": "2017-10-04 14:28", "user": "jlebrech", "body": "so, angular extend?"}, {"timstamp": "2017-10-04 14:29", "user": "jlebrech", "body": "shoulda told me about this 2 hours ago :D"}, {"timstamp": "2017-10-04 14:29", "user": "Pyrrhus666", "body": "jlebrech, ?"}, {"timstamp": "2017-10-04 14:30", "user": "jlebrech", "body": "so extend is the same as =, but without that derefereincing thingy"}, {"timstamp": "2017-10-04 14:30", "user": "Pyrrhus666", "body": "jlebrech, I dont use angular.extend."}, {"timstamp": "2017-10-04 14:33", "user": "jlebrech", "body": "oh, it's in that example"}, {"timstamp": "2017-10-04 14:33", "user": "jlebrech", "body": "Pyrrhus666: I made number undefined because in the real example i'm using a promise"}, {"timstamp": "2017-10-04 14:33", "user": "jlebrech", "body": "xhr call*"}], "label": "other"}
{"id": "93d59503", "body": "", "comments": [{"timstamp": "2016-05-12 10:30", "user": "steven10172", "body": "What's the proper way to have multiple nested directives sharing the same scope, but having the shared scope isolated?"}, {"timstamp": "2016-05-12 10:31", "user": "arlekin", "body": "steven10172: well you could have top level directive with isolated scope, and pass its controller to lower level directives"}, {"timstamp": "2016-05-12 10:32", "user": "arlekin", "body": "steven10172: or if its only 'two-layer' then you don't even have to pass controller, since directive without isolated scope will use parent scope by default"}, {"timstamp": "2016-05-12 10:33", "user": "steven10172", "body": "arlekin: The problem I have is the isolated scope directive works properly, but the nested directives create a new one and all share that"}, {"timstamp": "2016-05-12 10:33", "user": "arlekin", "body": "steven10172: could you shortly describe me how many directives you have, in what relation to eachother and what is desired result ?"}, {"timstamp": "2016-05-12 10:35", "user": "steven10172", "body": "arlekin:"}, {"timstamp": "2016-05-12 10:37", "user": "arlekin", "body": "steven10172: and you want your container directive to have isolated scope, no ?"}, {"timstamp": "2016-05-12 10:37", "user": "steven10172", "body": "arlekin: Yes. The rest are free to inherit, but they keep trying to being siblings not children"}, {"timstamp": "2016-05-12 10:37", "user": "arlekin", "body": "being siblings with eachother or container ?"}, {"timstamp": "2016-05-12 10:38", "user": "steven10172", "body": "arlekin: The container makes an isolated scope as it's supposed to, but all the nested need to share or be a child scope"}, {"timstamp": "2016-05-12 10:38", "user": "steven10172", "body": "but they keep making sibling scopes"}, {"timstamp": "2016-05-12 10:39", "user": "arlekin", "body": "steven10172: and transclusion works properly html-wise ?"}, {"timstamp": "2016-05-12 10:40", "user": "steven10172", "body": "Yep"}, {"timstamp": "2016-05-12 10:40", "user": "steven10172", "body": "arlekin: I removed the transclude: true statement and everything still renders find"}, {"timstamp": "2016-05-12 10:40", "user": "steven10172", "body": "fine*"}, {"timstamp": "2016-05-12 10:41", "user": "arlekin", "body": "steven10172: two things - first remove controller property in your child directive -it may resolve issue"}, {"timstamp": "2016-05-12 10:41", "user": "steven10172", "body": "arlekin: How can I make sure they're nested properly? require only looks for controller"}, {"timstamp": "2016-05-12 10:41", "user": "arlekin", "body": "steven10172: second which _should_ resolve issue is to add second '^' in require"}, {"timstamp": "2016-05-12 10:42", "user": "arlekin", "body": "steven10172: with only one '^' directive looks for controller on its own element or parent (hence i advise to remove controller to remove possible clash)"}, {"timstamp": "2016-05-12 10:43", "user": "arlekin", "body": "but with '^^' directive looks for controller on its parents"}, {"timstamp": "2016-05-12 10:43", "user": "arlekin", "body": "ideally combining both changes should resolve your issue"}, {"timstamp": "2016-05-12 10:43", "user": "arlekin", "body": "as per docs:"}, {"timstamp": "2016-05-12 10:45", "user": "steven10172", "body": "arlekin: Thanks. Let me test it"}, {"timstamp": "2016-05-12 10:49", "user": "steven10172", "body": "arlekin: I don't think it worked. Let me make a plnkr"}, {"timstamp": "2016-05-12 10:51", "user": "arlekin", "body": "steven10172: well i think i know why"}, {"timstamp": "2016-05-12 10:52", "user": "arlekin", "body": "in your parent directive set bindToController : true - that way your options object will bind to controller function"}, {"timstamp": "2016-05-12 10:53", "user": "arlekin", "body": "then in link function of your child directive you can assign options object to your scope like scope.options = ctrl.options"}, {"timstamp": "2016-05-12 10:53", "user": "arlekin", "body": "it won't be two-way binding tho im afraid"}, {"timstamp": "2016-05-12 10:54", "user": "steven10172", "body": "arlekin: options doesn't have to be 2-way binding. Only the stuff from the provider"}, {"timstamp": "2016-05-12 10:54", "user": "arlekin", "body": "steven10172: then that should work"}, {"timstamp": "2016-05-12 10:55", "user": "arlekin", "body": "steven10172: although if you would make semi-working fiddle or plnkr, i would be able to tinker with stuff and make sure my proposals are viable"}, {"timstamp": "2016-05-12 10:55", "user": "steven10172", "body": "arlekin:"}, {"timstamp": "2016-05-12 10:55", "user": "steven10172", "body": "There are no styles. So inspect and console are friends here"}, {"timstamp": "2016-05-12 10:55", "user": "arlekin", "body": "steven10172: sure thing"}, {"timstamp": "2016-05-12 10:59", "user": "steven10172", "body": "arlekin: I've thought about it a little more and if everything could inherit scope in the way the html is structure it would be best. So container is isolated, canvas and controls are siblings and inherit from container, and the pen-color is sibling to pen-size and inherit from controls"}, {"timstamp": "2016-05-12 11:00", "user": "steven10172", "body": "And when I removed the controllers ^^drawingControls was causing a problem as it couldn't find it"}, {"timstamp": "2016-05-12 11:03", "user": "arlekin", "body": "steven10172:"}, {"timstamp": "2016-05-12 11:04", "user": "arlekin", "body": "alrighty, so in console you'll see that controller is logged"}, {"timstamp": "2016-05-12 11:04", "user": "arlekin", "body": "and its controller of your parent directive"}, {"timstamp": "2016-05-12 11:04", "user": "arlekin", "body": "take notice that this logging takes place in child directive link function"}, {"timstamp": "2016-05-12 11:04", "user": "arlekin", "body": "so i'd say mission accomplished"}, {"timstamp": "2016-05-12 11:05", "user": "arlekin", "body": "the essential changes are made in container directive"}, {"timstamp": "2016-05-12 11:05", "user": "arlekin", "body": "in the rest i just mainly commented out other console.log's"}, {"timstamp": "2016-05-12 11:06", "user": "arlekin", "body": "steven10172: if you have questions: shoto"}, {"timstamp": "2016-05-12 11:06", "user": "arlekin", "body": "*shoot"}, {"timstamp": "2016-05-12 11:06", "user": "steven10172", "body": "arlekin: That gets options passed down, but what about scope.config that gets set in the container?"}, {"timstamp": "2016-05-12 11:07", "user": "arlekin", "body": "steven10172: set config object on ctrl instead of scope"}, {"timstamp": "2016-05-12 11:08", "user": "steven10172", "body": "arlekin: Ahhh. Thanks! :D"}, {"timstamp": "2016-05-12 11:08", "user": "arlekin", "body": "the solution is exactly what i mentioned before (the link to docs)"}, {"timstamp": "2016-05-12 11:08", "user": "arlekin", "body": "so basically the job is done by require: '^^controller'"}, {"timstamp": "2016-05-12 11:09", "user": "arlekin", "body": "and then in each link function you can have controller object to bind to your directive scope"}, {"timstamp": "2016-05-12 11:10", "user": "arlekin", "body": "and to enable parent directive scope to be \"shared\" we simply setup dummy controller function, set controllerAs to mitigate error related to identification of controller (dont know whats going on with that)"}, {"timstamp": "2016-05-12 11:10", "user": "steven10172", "body": "Ok. Makes sense"}, {"timstamp": "2016-05-12 11:11", "user": "arlekin", "body": "and then with bindToController: true (introduced in angular 1.4) angular takes all things from scope and binds them to controller which is mostly convenience thing"}, {"timstamp": "2016-05-12 11:11", "user": "arlekin", "body": "that way controller of your parent directive (which is required by child directives and put in their link functions) gets all the scope of your parent directive"}, {"timstamp": "2016-05-12 11:12", "user": "arlekin", "body": "boom! done"}, {"timstamp": "2016-05-12 11:12", "user": "arlekin", "body": ";)"}, {"timstamp": "2016-05-12 11:13", "user": "steven10172", "body": "arlekin: One more question. What exactly does transclude do? My initial thought was that it was required if you have innerhtml on the directive. But that doesn't seem to be the case. Is it only required when you want to put it in a specific spot?"}, {"timstamp": "2016-05-12 11:14", "user": "steven10172", "body": "specific spot in the template*"}, {"timstamp": "2016-05-12 11:14", "user": "arlekin", "body": "steven10172: yeah well it basically allows to put your innerhtml somewhere specific in your template"}, {"timstamp": "2016-05-12 11:15", "user": "arlekin", "body": "frankly i didn't know that it isn't absolutely required approach"}, {"timstamp": "2016-05-12 11:15", "user": "arlekin", "body": "although i guess that depends on case"}, {"timstamp": "2016-05-12 11:15", "user": "arlekin", "body": "i think the cleaner, and maybe safer approach would be to use transclude as God intended it to be used"}, {"timstamp": "2016-05-12 11:16", "user": "arlekin", "body": "just in case, you know"}, {"timstamp": "2016-05-12 11:16", "user": "steven10172", "body": "arlekin: Yea. I'll look into it further"}, {"timstamp": "2016-05-12 11:16", "user": "arlekin", "body": "because i think you could run in weird things down the road"}, {"timstamp": "2016-05-12 11:16", "user": "arlekin", "body": "either way im glad we figured it out"}, {"timstamp": "2016-05-12 11:17", "user": "steven10172", "body": "arlekin: Yea. Glad we figure it out. One of the first time I'm writing a directive that isn't super simple"}, {"timstamp": "2016-05-12 11:18", "user": "arlekin", "body": "steven10172: heh, i actually have funny story with that"}, {"timstamp": "2016-05-12 11:19", "user": "arlekin", "body": "one of the first directives i ever made, was this bitchin lookup thing - basically you are specifing input fields, bind them with fields, and then it displays elegant widget allowing to search by this fields on the server"}, {"timstamp": "2016-05-12 11:19", "user": "arlekin", "body": "lots of weird things and bending myself backwards (my first directive mind you)"}, {"timstamp": "2016-05-12 11:20", "user": "steven10172", "body": "Tough first directive"}, {"timstamp": "2016-05-12 11:20", "user": "arlekin", "body": "im stubborn mind"}, {"timstamp": "2016-05-12 11:20", "user": "arlekin", "body": "and - funnily enough - totally absurd"}, {"timstamp": "2016-05-12 11:20", "user": "steven10172", "body": "I've been using angular for ~6-7mo, but everything was basically pull data from api and display"}, {"timstamp": "2016-05-12 11:21", "user": "arlekin", "body": "recently i came to conclusion that, both implementation-wise and user experience, would be to do lookup by a fulltext search based on single input field"}, {"timstamp": "2016-05-12 11:21", "user": "arlekin", "body": "and all my hard work with templating, binding, chaining django filters on backend and so on"}, {"timstamp": "2016-05-12 11:21", "user": "arlekin", "body": "having custom dropdowns"}, {"timstamp": "2016-05-12 11:21", "user": "arlekin", "body": "and so on"}, {"timstamp": "2016-05-12 11:22", "user": "arlekin", "body": "i'll have to throw it away and redo"}, {"timstamp": "2016-05-12 11:22", "user": "arlekin", "body": ":D"}, {"timstamp": "2016-05-12 11:22", "user": "steven10172", "body": "fulltext using angular's filter?"}, {"timstamp": "2016-05-12 11:22", "user": "steven10172", "body": "or something better"}, {"timstamp": "2016-05-12 11:22", "user": "arlekin", "body": "(i mean i don't _have_ to, but i want)"}, {"timstamp": "2016-05-12 11:23", "user": "arlekin", "body": "steven10172: well, i guess i would just send the input string to server, with assumption that spaces delimits fields, and then try to figure out which part goes into which field"}, {"timstamp": "2016-05-12 11:23", "user": "arlekin", "body": "at least till i come up with better approach"}, {"timstamp": "2016-05-12 11:23", "user": "steven10172", "body": "arlekin: I do have one more design style question. As you can probably tell this is going to be a canvas application that allows you to draw on the page. I want the provider to do most of the heavy lifting and be a library to handle the socket connections and handle what needs to be done. The directives for the UI will 2-way bind specific settings you can change on the fly. And the canvas directive will have basic"}, {"timstamp": "2016-05-12 11:23", "user": "steven10172", "body": "controller to handle drawing logic"}, {"timstamp": "2016-05-12 11:24", "user": "arlekin", "body": "steven10172: err... i just realised i should mention this earlier"}, {"timstamp": "2016-05-12 11:24", "user": "arlekin", "body": "if you wanna to have some object (say this conf) shared between your directives"}, {"timstamp": "2016-05-12 11:25", "user": "arlekin", "body": "then you really should put it in some service"}, {"timstamp": "2016-05-12 11:25", "user": "arlekin", "body": "and don't bother with neck-breaking, fire-circle hooping with scopes"}, {"timstamp": "2016-05-12 11:26", "user": "steven10172", "body": "And I guess the main question I have is should the provider do memory canvas or would a simple emit be ok? Is there a lot of overhead of emiting 100's of times a second?"}, {"timstamp": "2016-05-12 11:27", "user": "arlekin", "body": "steven10172: i have no idea frankly, maybe icebox would know - he is like one of the most knowledgable guys here i guess"}, {"timstamp": "2016-05-12 11:27", "user": "steven10172", "body": "arlekin: From my understanding is the Factory, Service, and Provider are basically the same thing. Went with provider so config can access it and set a few things."}, {"timstamp": "2016-05-12 11:27", "user": "icebox", "body": "arlekin: thanks... but sorry folks... a bit busy... maybe later"}, {"timstamp": "2016-05-12 11:27", "user": "arlekin", "body": "with my daily work i really am dumb when it comes to performance and test (i have no need for it)"}, {"timstamp": "2016-05-12 11:28", "user": "arlekin", "body": "icebox: sorry"}, {"timstamp": "2016-05-12 11:28", "user": "steven10172", "body": "icebox: it's all good"}, {"timstamp": "2016-05-12 11:28", "user": "arlekin", "body": "steven10172: they are exactly the same thing"}, {"timstamp": "2016-05-12 11:28", "user": "steven10172", "body": "arlekin: And the reason I didn't have each directive access the provider is that I wanted the parent directive to be able to do a few things as necessary (if it applied)"}, {"timstamp": "2016-05-12 11:28", "user": "arlekin", "body": "steven10172: its just one thing, and two wrappers hiding some things which aren't always relevant"}, {"timstamp": "2016-05-12 11:29", "user": "arlekin", "body": "steven10172: inheritance and modularization brah"}, {"timstamp": "2016-05-12 11:30", "user": "steven10172", "body": "arlekin: Was most recently at a job interview and they asked the difference between them and I stated basically the same and the guy was confused slightly. He swore there some small differences between factory and service, but service just calls factory for you in the backend."}, {"timstamp": "2016-05-12 11:31", "user": "steven10172", "body": "Then he started talking about how one used 'this'. But just semantics"}, {"timstamp": "2016-05-12 11:32", "user": "arlekin", "body": "steven10172: im pretty sure that they are like wrappers for each other even implementation-wise, but i'd have to check before i'd argue"}], "label": "other"}
{"id": "93d594dd", "body": "", "comments": [{"timstamp": "2017-02-17 12:34", "user": "rand0m", "body": "I hope lenovo mobile division fails badly"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "ThinkPad X1 Carbon is nice"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "but it is not mobile :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "I mean mobile mobile"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "aka Motorola"}, {"timstamp": "2017-02-17 12:36", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "since they bought the brand, the sales weren't that good. The company ceo said theyre rebuilding the team so next year they're expecting to break even"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "really I see only two smartphones: by apple or by google"}, {"timstamp": "2017-02-17 12:37", "user": "rand0m", "body": "but theyre software manufacturers :o"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "iphone or pixel :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "I still use Xperia Z3"}, {"timstamp": "2017-02-17 12:38", "user": "icebox", "body": "if you choose another option, good luck :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "still kicks iphone7s ass today"}, {"timstamp": "2017-02-17 12:39", "user": "Pyrrhus666", "body": "icebox, nah, my $150 chinaphone with lineageOS does fine ;)"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "Pyrrhus666: ok... you are lucky :)"}, {"timstamp": "2017-02-17 12:39", "user": "rand0m", "body": "check this icebox:"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "rand0m: nowadays a smartphone is not only \"specs\""}, {"timstamp": "2017-02-17 12:40", "user": "Pyrrhus666", "body": "icebox, nah, just pick a phone that has a stable lineageOS build and buy it. its all good :)"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "durability? software? support?"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "what is it"}, {"timstamp": "2017-02-17 12:40", "user": "icebox", "body": "it doesn't make sense comparing (only) those details"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "idk"}, {"timstamp": "2017-02-17 12:41", "user": "icebox", "body": "off for a break... see you later"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "make sense to me, I need faster processor, more ram, good screen size and display (dpi), longer battery and connectivity"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "my os of choice would be android everytime"}, {"timstamp": "2017-02-17 12:41", "user": "Pyrrhus666", "body": "support from vendors generally always sucks. hence lineageOS :)"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "Pyrrhus666, I can't use lineage :("}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "well I could, but only older versions"}, {"timstamp": "2017-02-17 12:42", "user": "Pyrrhus666", "body": "rand0m, buy a supported phone then ;)"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "rand0m: use case? imagine the difference of user experience between monster-in-law of mine and myself? :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "monster in law???"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "do you mean mother in law?"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "lolol"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "can't afford to atm Pyrrhus666"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "nougat comes with vulkan support baked in and my phones doesnt support that"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "and i've heard that there would be issues"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "I have a question; not offtopic I swear"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "you'll see a loading page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "I've used to see that on facebook and some other sites"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "I see a login page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "is that react specific?"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "oh you must be logged in Pyrrhus666"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "rand0m, ah, cant help you there, dont do all that shite."}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "basically before content is loaded onto the page, the page has placeholder divs"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "where the content gets loaded"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "and the placeholder shimmers like loading effect"}, {"timstamp": "2017-02-17 12:46", "user": "rand0m", "body": "linked in is not shite. is it?"}, {"timstamp": "2017-02-17 12:46", "user": "Pyrrhus666", "body": "its all shite to me, that social crap"}, {"timstamp": "2017-02-17 12:47", "user": "Pyrrhus666", "body": "rand0m, btw there seem to be unofficial lineage 14.1 builds around for your z3"}, {"timstamp": "2017-02-17 12:47", "user": "rand0m", "body": ":/"}, {"timstamp": "2017-02-17 12:48", "user": "rand0m", "body": "dont want to use unofficial builds"}, {"timstamp": "2017-02-17 12:48", "user": "Pyrrhus666", "body": "rand0m, I used unofficial cyanogenmods for years, most are fine, but read the reviews on xda ;)"}, {"timstamp": "2017-02-17 12:49", "user": "Pyrrhus666", "body": "most had better support than from vendors."}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "I used to use XDA 24/7 when I bought my first gti9000"}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "galaxy s"}, {"timstamp": "2017-02-17 12:50", "user": "Pyrrhus666", "body": "I started there when I bought an xperia sola. sony sucked so hard with android 5 I took to cyanogen. when I gave the phone away, it was happily running android 6 :)"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "sony did improve a lot since xperia z series"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "they have their own dev team in sweden for sony asop project"}, {"timstamp": "2017-02-17 12:55", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "rand0m, I have trust issues after being let down by vendors. also, I hate vendor roms with all their crap."}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "sony themselves will never release a lineage mod"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "your source should be"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "(but its not there, yet)"}, {"timstamp": "2017-02-17 12:56", "user": "rand0m", "body": ":( yeah"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "you know the feeing you have when you start a new job"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and you're the only guy who specialises in the tech the project is using"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and everyone around you sees you like you're come kind of freak coding god"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "thats me now :D"}, {"timstamp": "2017-02-17 12:57", "user": "Pyrrhus666", "body": "never had that, there were always other coders around ;)"}, {"timstamp": "2017-02-17 12:58", "user": "rand0m", "body": ":("}, {"timstamp": "2017-02-17 13:00", "user": "Pyrrhus666", "body": "rand0m, btw this seems stable and supported (but old)"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "Version: 5.1.x"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "LOL"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "I run 6.0.1"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I know :) but then again, as long as it works and is stable, I wouldnt really mind. seems the 14.1 build is very much a work in progress"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I run 7.1.1 :P"}, {"timstamp": "2017-02-17 13:02", "user": "rand0m", "body": "I still havent come across a device which I think would be nice for me"}, {"timstamp": "2017-02-17 13:03", "user": "Pyrrhus666", "body": "rand0m, I dont really care. I just need lineage, an sd card of 64GB or more, and enough mem and cpu to run candycrush. the rest is bonus."}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": ":|"}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": "you kidding?"}, {"timstamp": "2017-02-17 13:04", "user": "Pyrrhus666", "body": "currently on a xiaomi redmi note 3 special edition, picked up for $150, 3GB mem, 32GB flash, 64GB sd, 4g."}, {"timstamp": "2017-02-17 13:05", "user": "Elarcis", "body": "Pyrrhus666: \"CyenogenMod\""}, {"timstamp": "2017-02-17 13:05", "user": "Pyrrhus666", "body": "rand0m, not kidding. why would I want more as long as it does what I want ?"}, {"timstamp": "2017-02-17 13:05", "user": "rand0m", "body": "didn't think you as someone who plays cc"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "rand0m, everybody plays cc."}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "else theyre liars."}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: Got a OnePlus One for 2.5 years now. Still kickin', real pleasure to use, very solid and reliable, battery's still very good"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I never played CC :D"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, those where nice :)"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, liar !"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "me either"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "more liars !"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I avoid King's games as much as possible"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "rand0m: *neither"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "also, why trust chinese companies?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "I play them all. I just give them no permission to do anything :)"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: why trust any company?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "rand0m, all phones are chinese"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "yeah"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "but"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: for all I know, american phonemaker are even less reliable than chinese ones :D"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "buy them there just means its cheaper for me :)"}, {"timstamp": "2017-02-17 13:08", "user": "Elarcis", "body": "Pyrrhus666: it just means I wanted a good first smartphone :D"}, {"timstamp": "2017-02-17 13:08", "user": "Pyrrhus666", "body": "Elarcis, the newer ones are also nice. and run lineage :)"}, {"timstamp": "2017-02-17 13:09", "user": "Pyrrhus666", "body": "Elarcis, been on xiaomi for3 or 4 years now. no ragrets."}, {"timstamp": "2017-02-17 13:10", "user": "Elarcis", "body": "Pyrrhus666: what is lineage?"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "its the fork of cynaogenmod"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "cmod split into 2 companies"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaah"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "lineage and some other name"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "and cyno is dead"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "lineageOS is a continuation of the original cyanogenMOD (not cyanogenOS)"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "by the original guy, even."}, {"timstamp": "2017-02-17 13:14", "user": "Elarcis", "body": "CyanogenOS is dead?"}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "Elarcis, al but, yes."}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "*all"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: dammit, this explains why I haven't had any update in a while"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: will switch to LineageOS then"}, {"timstamp": "2017-02-17 13:16", "user": "Elarcis", "body": "Pyrrhus666: as long as it has adaptative light coloration, I'm game!"}, {"timstamp": "2017-02-17 13:16", "user": "Pyrrhus666", "body": "Elarcis, ah, you were on cyanogen ?"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "Pyrrhus666: yiss"}, {"timstamp": "2017-02-17 13:17", "user": "Pyrrhus666", "body": "Elarcis, 14.1 has that for all models, I think. mine too."}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "CyanogenMod, then Oxygen, then CyanogenOS"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "OxygenOS sucks as hell, it's like almost barebone Android"}, {"timstamp": "2017-02-17 13:18", "user": "rand0m", "body": "you should try this:"}, {"timstamp": "2017-02-17 13:19", "user": "Pyrrhus666", "body": "Elarcis,"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "honestly I don't care much about free software on my phone, since I'm using Google services extensively"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "Pyrrhus666: Yes, I've seen that :)"}, {"timstamp": "2017-02-17 13:21", "user": "Pyrrhus666", "body": "Elarcis, I dont really care either, I just dont want vendor bloat. and lineage has better app privacy management"}, {"timstamp": "2017-02-17 13:21", "user": "Elarcis", "body": "^"}], "label": "other"}
{"id": "73af7d22", "body": "", "comments": [{"timstamp": "02:59", "user": "yakiza", "body": "A good angular7-8 for begginer from youtube to doc anything you guys have to suggest?"}], "label": "other"}
{"id": "93d594dc", "body": "", "comments": [{"timstamp": "2017-03-16 21:49", "user": "illug", "body": "This is maybe more of a typescript question, but I'm creating an Angular 2 project and I'm writing an interface. One element in is 'languages':. I would like interfaces to be able to add as many key value types as it wants into it, i.e. 'languages': {'en': 'en.json', 'uk': 'uk.json'....}. What datatype should I declare 'language' as in the interface?"}, {"timstamp": "2017-03-16 21:58", "user": "da_wunder", "body": "illug: i would use languages: Array<Language>, where Language would be { code: string, json: string }"}, {"timstamp": "2017-03-16 21:59", "user": "da_wunder", "body": "illug: but if your languages are static"}, {"timstamp": "2017-03-16 21:59", "user": "illug", "body": "Not 'language': string[]; ?"}, {"timstamp": "2017-03-16 22:00", "user": "illug", "body": "da_wunder, yup - seems more right what you are doing, but it forces me to create a Language class"}, {"timstamp": "2017-03-16 22:00", "user": "da_wunder", "body": "then languages: Language, and then interface Language { en: string, uk: string, ... }"}, {"timstamp": "2017-03-16 22:00", "user": "da_wunder", "body": "illug: nope just interface"}, {"timstamp": "2017-03-16 22:01", "user": "da_wunder", "body": "illug: eg."}, {"timstamp": "2017-03-16 22:01", "user": "da_wunder", "body": "and look those other interfaces on that same folder"}, {"timstamp": "2017-03-16 22:02", "user": "illug", "body": "da_wunder: Ahh ok, thanks. Looks neat :) Something I would do in Java - but I'm getting into TypeScript now"}, {"timstamp": "2017-03-16 22:03", "user": "da_wunder", "body": "illug: np"}, {"timstamp": "2017-03-16 22:17", "user": "illug", "body": "Is there any good documentation libraries such as jsdoc or ng-doc for angular 2?"}, {"timstamp": "2017-03-16 22:17", "user": "da_wunder", "body": "you want to generate some docs ?"}, {"timstamp": "2017-03-16 22:18", "user": "da_wunder", "body": "if so really why, devs can easily just look that code and navigate there to where ever they want"}, {"timstamp": "2017-03-16 22:18", "user": "illug", "body": "TypeDoc might do the trick"}, {"timstamp": "2017-03-16 22:27", "user": "da_wunder", "body": "olleh"}, {"timstamp": "2017-03-16 22:30", "user": "essalprod", "body": "join #angularjs"}, {"timstamp": "2017-03-16 22:30", "user": "essalprod", "body": "#join #angularjs"}, {"timstamp": "2017-03-16 22:30", "user": "da_wunder", "body": "essalprod: in irc commands use / at first"}, {"timstamp": "2017-03-16 22:30", "user": "da_wunder", "body": "essalprod: although you are already joined on this channel :D"}, {"timstamp": "2017-03-16 22:46", "user": "illug", "body": "da_wunder, when I actually implement the language variable, how would I do so? I've created an interface IDeploymentLanguage which is key=string, jsonFile=string. Then in the deployment interface I did language: Array<IdeploymentLanguage>. Now I have an actual implementation file, I thoght I would be able to do -> language: [{'en', 'en.json'}] but it's not working"}, {"timstamp": "2017-03-16 22:46", "user": "illug", "body": "or hmm.. maybe that would be possible if it was a class or something, but not for an interface"}, {"timstamp": "2017-03-16 22:47", "user": "illug", "body": "oh actually it worked"}, {"timstamp": "2017-03-16 22:48", "user": "illug", "body": "language: [{key: 'en', jsonFile:'en.json'}]"}], "label": "other"}
{"id": "73af7ce7", "body": "", "comments": [{"timstamp": "10:24", "user": "storkme", "body": "services are good for this"}, {"timstamp": "10:24", "user": "murii", "body": "^"}], "label": "other"}
{"id": "8addb264", "body": "", "comments": [{"timstamp": "2016-08-31 22:42", "user": "dman777_alter", "body": "does anyone use angular-material? I am trying to find the documentation for class=\"md-toolbar-tools\" but I am not seeing it"}, {"timstamp": "2016-08-31 22:46", "user": "da_wunder", "body": "dman777_alter: angular material webpages are good resource"}, {"timstamp": "2016-08-31 22:47", "user": "da_wunder", "body": "dman777_alter:"}, {"timstamp": "2016-08-31 22:47", "user": "dman777_alter", "body": "da_wunder: is md-toolbar-tools listed on"}, {"timstamp": "2016-08-31 22:48", "user": "dman777_alter", "body": "da_wunder: there is no documentation for md-toolbar-tools and no litsing for it ether."}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "and then"}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "examples"}, {"timstamp": "2016-08-31 22:49", "user": "dman777_alter", "body": "da_wunder: yes, that is how I found out about it. But there should be documentation on it. It makes wonder what else I might be missing if it's not included in code examples. Also, a explanation is always nice."}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "see that <md-toolbar> should have div element with that class"}, {"timstamp": "2016-08-31 22:49", "user": "swag", "body": "copy and past the example and modify it. Also use some plugin snnipet for your favorite editor :p that's what I did"}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "as the docs points you"}, {"timstamp": "2016-08-31 22:50", "user": "swag", "body": "yeah I think the same dman77_alter"}, {"timstamp": "2016-08-31 22:50", "user": "dman777_alter", "body": "da_wunder: Polymer's material design elements give full documentation and list all attributes, in addition to code examples. This would be the normal standard."}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "dman777_alter: then create an issue to the repo"}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "i haven't seen any problems with that"}, {"timstamp": "2016-08-31 22:52", "user": "da_wunder", "body": "all that code is in github, so you could easily make an issue, adds some +1 for existing PR or make new PR to cover that issue"}, {"timstamp": "2016-08-31 22:58", "user": "dman777_alter", "body": "da_wunder: I'm a developer that was told to use angular and angular metarial. I'm not coming into this wanting to develop for angular material, I have my hands full already."}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "dman777_alter: welcome to OS world"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "if you want to improve something, do it"}, {"timstamp": "2016-08-31 23:00", "user": "da_wunder", "body": "if not, just stay calm"}, {"timstamp": "2016-08-31 23:00", "user": "dman777_alter", "body": "lol...cool"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: personally i don't see any problems in that"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: what is your problem ?"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "if it's time, then just make an issue and wait IF someone answers that"}, {"timstamp": "2016-08-31 23:02", "user": "da_wunder", "body": "if not, study that yourself and when you know how it works - ask yourself the question would i make a PR to provide all my information to others too OR should i just be quiet"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "and if you choose to be quiet, so can also many others who are contributing these projects"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "which _you_ use without any charge"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "tl;dr be active in os community, if you see a problem create issue, try to study it, if you know what is \"wrong\" create a PR"}, {"timstamp": "2016-08-31 23:04", "user": "dman777_alter", "body": "da_wunder: what is your problem? I didn't mean that offensively.... when I said 'lol...cool' I meant that in good nature and I was in agreemnet. Back off"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "i just said some facts"}, {"timstamp": "2016-08-31 23:05", "user": "da_wunder", "body": "and when i was pointing that _you_ was the problem ?"}, {"timstamp": "2016-08-31 23:09", "user": "davidw", "body": "dman777_alter, similar situation; stuck with Angular"}, {"timstamp": "2016-08-31 23:12", "user": "dman777_alter", "body": "davidw: I love Angular 1.*, just not happy with incomplete documentation for angular-material. Although, my first choice is polymer personally for material design."}, {"timstamp": "2016-08-31 23:15", "user": "davidw", "body": "how can I test whether an element gets a certain class added to it in tests?"}], "label": "feature"}
{"id": "93d59522", "body": "", "comments": [{"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "f.email or user.email?"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "Hi, I am looking for some suggestions about angular best practice here. I was creating a form using FormsModule. I used #f = \"ngForm directive for the form, and something like [(ngModel)] = \"user.email\" If I want to check for validation, which"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "state should I go for?"}, {"timstamp": "2017-10-21 17:53", "user": "TRer", "body": "Or should I avoid two-way binding altogether?"}], "label": "other"}
{"id": "73af7cd4", "body": "", "comments": [{"timstamp": "09:48", "user": "Pyrrhus666", "body": "doing some more serious doctrine stuff for the first time, and struggling a bit. but hey, vacation starts tomorrow afternoon :)"}], "label": "other"}
{"id": "0ec1e3a6", "body": "", "comments": [{"timstamp": "08:42", "user": "Pyrrhus666", "body": "morning #angularjs"}, {"timstamp": "08:54", "user": "icebox", "body": "Pyrrhus666: traces of blood in sneezing... today we go to the vet, but it should be a quite common case when you get a kitten from a shelter... aniway it eats and plays ;)"}, {"timstamp": "08:55", "user": "icebox", "body": "*anyway"}, {"timstamp": "08:56", "user": "Pyrrhus666", "body": "icebox, some of the mist important properties of kittens :)"}], "label": "other"}
{"id": "93d59495", "body": "", "comments": [{"timstamp": "2017-07-28 22:11", "user": "damian__", "body": "hi"}, {"timstamp": "2017-07-28 22:11", "user": "damian__", "body": "please can anyone answer me this scope question: does a function create a closed scope \"only\" if you pass it a value in form of arg ?"}, {"timstamp": "2017-07-28 22:11", "user": "zomg_", "body": "can you actually cancel an http request when it's done using an observable?"}, {"timstamp": "2017-07-28 22:12", "user": "zomg_", "body": "if I just stop observing that doesn't seem to be a guarantee of it getting canceled"}, {"timstamp": "2017-07-28 22:13", "user": "zomg_", "body": "damian__: that kind of depends on the engine level implementation"}, {"timstamp": "2017-07-28 22:13", "user": "sadme", "body": "in ng2+ if you unsubscribe to an observable for which the source was an Http method, the underlying request is cancelled"}, {"timstamp": "2017-07-28 22:13", "user": "zomg_", "body": "damian__: if the function could access values outside of it, then it seems that it would generate a closure"}, {"timstamp": "2017-07-28 22:14", "user": "zomg_", "body": "sadme: but I assume only if every single subscriber is unsubscribed?"}, {"timstamp": "2017-07-28 22:14", "user": "sadme", "body": "that's right"}, {"timstamp": "2017-07-28 22:14", "user": "zomg_", "body": "yes so technically it doesn't actually offer you a way to cancel the request"}, {"timstamp": "2017-07-28 22:15", "user": "zomg_", "body": "it simply happens to cancel it when it sees that it's not needed to finish it"}, {"timstamp": "2017-07-28 22:15", "user": "sadme", "body": "that's an odd way of looking at it given that the subscription is completely under your control"}, {"timstamp": "2017-07-28 22:16", "user": "damian__", "body": "zomg in a browser: x = 1; function change (x) { x = 2; }; <-- this change the value of x only \"in\" the function"}, {"timstamp": "2017-07-28 22:16", "user": "damian__", "body": "x = 1; function change () { x = 2; }; <-- but this changes the value of x \"out\" the function too"}, {"timstamp": "2017-07-28 22:16", "user": "damian__", "body": "is it correct ?"}, {"timstamp": "2017-07-28 22:18", "user": "zomg_", "body": "sadme: not necessarily if you were to pass the observable out of a function"}, {"timstamp": "2017-07-28 22:19", "user": "sadme", "body": "you've lost me"}, {"timstamp": "2017-07-28 22:19", "user": "damian__", "body": "this is to say: if you doesn't pass \"x\" as an arg, the function doesn't create any own scope ??"}, {"timstamp": "2017-07-28 22:20", "user": "zomg_", "body": "sadme: well similar to how you would return a promise from a function and you don't know what happens to it after that"}, {"timstamp": "2017-07-28 22:20", "user": "zomg_", "body": "(well obviously you do if you wrote the whole app, but your other functions shouldn't necessarily be aware of the fact that this promise was infact generated from an http request)"}, {"timstamp": "2017-07-28 22:20", "user": "sadme", "body": "not so with an observable, because observables can have disposers"}, {"timstamp": "2017-07-28 22:21", "user": "sadme", "body": "(a disposer is just something that cleans up when there are no subscribes to the observable)"}, {"timstamp": "2017-07-28 22:21", "user": "zomg_", "body": "damian__: correct"}, {"timstamp": "2017-07-28 22:22", "user": "zomg_", "body": "damian__: in your second example the function has a closure which refers to the variable outside of it, it doesn't have a variable x in its own scope"}, {"timstamp": "2017-07-28 22:22", "user": "zomg_", "body": "sadme: that makes a bit more sense then, but I'm still not convinced that observables are the right solution to things which return a single value =)"}, {"timstamp": "2017-07-28 22:23", "user": "sadme", "body": "i just think of them as promises but better"}, {"timstamp": "2017-07-28 22:23", "user": "zomg_", "body": "sadme: kinda thinking about how Haskell deals with things like this, where you can easily make certain judgements about functions purely based on their types"}, {"timstamp": "2017-07-28 22:23", "user": "zomg_", "body": "if I have a TChan I know it'll give me values over time but if I have a TVar I know it won't etc."}, {"timstamp": "2017-07-28 22:24", "user": "sadme", "body": "i see what you mean, it might be nice to have an ObservableSingle or some such"}, {"timstamp": "2017-07-28 22:24", "user": "zomg_", "body": "yeah"}, {"timstamp": "2017-07-28 22:25", "user": "zomg_", "body": "Haskell's just very good at this style of high level abstraction so it makes sense to do stuff like this with types in it"}, {"timstamp": "2017-07-28 22:25", "user": "zomg_", "body": "I can see it being a bit more annoying to deal with in JS due to how everything has its own way of doing things"}, {"timstamp": "2017-07-28 22:26", "user": "damian__", "body": "zomg_ one last question then, please: if I'd declare \"var x =2\" (instead of \"x=2) whithin the function, had it the same effect than passing \"x\" as an arg ?? (create a variable x in its own scope)"}, {"timstamp": "2017-07-28 22:26", "user": "zomg_", "body": "damian__: yes"}, {"timstamp": "2017-07-28 22:26", "user": "zomg_", "body": "it's then said that the local variable `x` \"shadows\" the outer variable `x`"}, {"timstamp": "2017-07-28 22:27", "user": "zomg_", "body": "kinda like you can't \"see\" the outer variable because it's in the shadow of the local one :)"}, {"timstamp": "2017-07-28 22:27", "user": "damian__", "body": "zomg_ you've clarified me a lot of things with that, thanks a lot :)"}, {"timstamp": "2017-07-28 22:28", "user": "zomg_", "body": "np"}], "label": "other"}
{"id": "93d594d3", "body": "", "comments": [{"timstamp": "2017-06-08 10:23", "user": "AndrewIsh", "body": "Hey guys, Angular 1.x question. I've a directive (D2) that calls a service method. However, depending on where it is being used, it may or may not need to include a property from an ancestor directive's (D1) controller. I'm using 'require' to access D1's controller, however, that will obviously crash and burn if D2 isn't being used as an descendant D1. Does anyone know if it's possible to determine if D1 exists before trying to require it?"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "> an ancestor directive's (D1) controller"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "that's your problem right there"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "use services for shared data"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "~ isolate all the scopes ~"}, {"timstamp": "2017-06-08 10:27", "user": "AndrewIsh", "body": "heartburn: Wow, excellent point. I'm actually needing to access a service property, I was just going to go via the ancestor directive (which injects the service) to get it, man, what an idiot. Thanks for that!"}, {"timstamp": "2017-06-08 10:27", "user": "heartburn", "body": "the scopes should never talk to each other by $parent or any similar means."}, {"timstamp": "2017-06-08 10:28", "user": "heartburn", "body": "they can have inputs via scope bindings but that still doesn't always cut it/is possible"}, {"timstamp": "2017-06-08 10:29", "user": "AndrewIsh", "body": "Indeed, my directive has isolated scope and is only being passed a single object, but the additional property I need is way above that scope. But it's in a service, so I just need to inject that. I can't believe I was overcomplicating it so much!"}, {"timstamp": "2017-06-08 10:30", "user": "heartburn", "body": "AndrewIsh: for further reading:"}, {"timstamp": "2017-06-08 10:31", "user": "AndrewIsh", "body": "heartburn: Heh heh, thanks, I've been working with Angular for a couple of years, it was just one of those brain fart moments, glad you brought some sanity to the rabbit hole I was disappearing down... ;-)"}, {"timstamp": "2017-06-08 10:35", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective?'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "sorry, typo"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "heartburn: true that with components, this should ideally not be used"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Yes, but that will fail if the directive is not being used as a descendant of ancestordirective"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: no, see the question mark"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Ahhhh!"}, {"timstamp": "2017-06-08 10:37", "user": "Elarcis", "body": "heartburn: however, with directives without scope, this can be debated, as directives often are DOM-related, so it makes sense that some directive just requires a parent directive to exist for a systematic behavior, rather than having the dev always passing parameters by hand."}], "label": "other"}
{"id": "93d59554", "body": "", "comments": [{"timstamp": "2016-08-09 09:42", "user": "ZaraBeep", "body": "hi guys, i have a big ol' combined file with all my ng source files / libraries / etc. and my own scripts, bundle.js"}, {"timstamp": "2016-08-09 09:42", "user": "ZaraBeep", "body": "i include this at the end of the body tag"}, {"timstamp": "2016-08-09 09:43", "user": "ZaraBeep", "body": "someone told me i should seperate libraries and my own scripts, and load the libraries at the top, and my own scripts at the bottom"}, {"timstamp": "2016-08-09 09:43", "user": "ZaraBeep", "body": "is this true? what's your take?"}, {"timstamp": "2016-08-09 09:44", "user": "uru", "body": "ZaraBeep: Personally I use both depending on the project. If it's likely that the 3rd party stuff will be shared across applications or something like that then I'll bundle them seperatly, otherwise one big bundle"}, {"timstamp": "2016-08-09 09:46", "user": "ZaraBeep", "body": "thanks uru!"}, {"timstamp": "2016-08-09 09:52", "user": "ZaraBeep", "body": "uru: what about multiple apps in 1 project? I have a Laravel project in which I have multiple AngularJS modules. should I bundle my dependencies/scripts per ng module, or just one big file ?"}, {"timstamp": "2016-08-09 09:53", "user": "uru", "body": "For that I would personally try having 1 bundle for dependencies, then 1 for each ng app"}, {"timstamp": "2016-08-09 09:54", "user": "ZaraBeep", "body": "gotcha"}, {"timstamp": "2016-08-09 09:55", "user": "Elarcis", "body": "ZaraBeep: depends on the use case, having two or three JS allows the browser to load them concurrently, but the execution order is preserved iirc"}, {"timstamp": "2016-08-09 09:55", "user": "Elarcis", "body": "ZaraBeep: also, when in dev mode, depending on your bundler, it may be interesting to only rebuild the app module and not a giant one with vendor libs that rarely change"}, {"timstamp": "2016-08-09 09:57", "user": "ZaraBeep", "body": "ive just started using gulp for bundling, and for now i do bundle everything every single time i run gulp"}, {"timstamp": "2016-08-09 09:58", "user": "uru", "body": "Yea, there's lots of different ways to approach this. For dev I use systemjs to dynamically include everything"}, {"timstamp": "2016-08-09 09:58", "user": "ZaraBeep", "body": "bundling only the app module will save me some time, ill see how i can optimize it"}], "label": "other"}
{"id": "93d59557", "body": "", "comments": [{"timstamp": "2017-02-13 09:17", "user": "Elarcis", "body": "Hi. I hate you."}, {"timstamp": "2017-02-13 09:22", "user": "uru", "body": "Hate you too, Elarcis <3"}, {"timstamp": "2017-02-13 09:22", "user": "Elarcis", "body": ">:C"}, {"timstamp": "2017-02-13 09:23", "user": "uru", "body": ":D"}, {"timstamp": "2017-02-13 09:27", "user": "icebox", "body": "Elarcis: hey"}, {"timstamp": "2017-02-13 09:27", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2017-02-13 09:28", "user": "Elarcis", "body": "icebox: hey"}, {"timstamp": "2017-02-13 09:28", "user": "Elarcis", "body": "Pyrrhus666: hey"}, {"timstamp": "2017-02-13 09:28", "user": "Elarcis", "body": "Elarcis: hey"}, {"timstamp": "2017-02-13 09:28", "user": "Pyrrhus666", "body": "morning icebox Elarcis"}, {"timstamp": "2017-02-13 09:28", "user": "Pyrrhus666", "body": "icebox, watched arrival saturday, very nice ;)"}, {"timstamp": "2017-02-13 09:29", "user": "icebox", "body": "Pyrrhus666: nice... in the meantime I read the novel... in the novel there is not any trace of military presence and there is more physics"}, {"timstamp": "2017-02-13 09:29", "user": "Pyrrhus666", "body": "icebox, hehe, just what you might expect from hollywood"}, {"timstamp": "2017-02-13 09:30", "user": "icebox", "body": "Pyrrhus666: so... there is not the time paradox created in the movie... but the movie creates more suspense"}, {"timstamp": "2017-02-13 09:30", "user": "Pyrrhus666", "body": "icebox, also, fits with the old <unconvertable> the book was better <unconvertable> ;)"}, {"timstamp": "2017-02-13 09:31", "user": "icebox", "body": "Pyrrhus666: well... Ted Chiang said the movie is very good"}, {"timstamp": "2017-02-13 09:31", "user": "Elarcis", "body": "you're speaking of time paradoxes"}, {"timstamp": "2017-02-13 09:31", "user": "Elarcis", "body": "this seems fun"}, {"timstamp": "2017-02-13 09:31", "user": "Pyrrhus666", "body": "icebox, oh, it was, esp. the looming paradox started from the intro of the movie :)"}, {"timstamp": "2017-02-13 09:32", "user": "icebox", "body": "Pyrrhus666: yep"}, {"timstamp": "2017-02-13 09:32", "user": "Pyrrhus666", "body": "pity well have to wait 3000 years to see where it all goes ;)"}, {"timstamp": "2017-02-13 09:33", "user": "icebox", "body": "Pyrrhus666: :P"}, {"timstamp": "2017-02-13 09:33", "user": "icebox", "body": "I spent the weekend giving a look at fuse-box, new bundler-loader on the block :)"}, {"timstamp": "2017-02-13 09:34", "user": "icebox", "body": "no way... it is very fast, but webpack covers more use cases"}, {"timstamp": "2017-02-13 09:34", "user": "Pyrrhus666", "body": "not another one..."}, {"timstamp": "2017-02-13 09:35", "user": "icebox", "body": "migration on the way... 50%... I think I complete the transition to webpack in these days... next jump angular 4 and material 2 :)"}, {"timstamp": "2017-02-13 09:36", "user": "icebox", "body": "WebPack is not the only way -"}, {"timstamp": "2017-02-13 09:37", "user": "Pyrrhus666", "body": "reads like its a case of NIH. and sure, theres _always_ another way."}, {"timstamp": "2017-02-13 09:39", "user": "icebox", "body": "in the last weeks I played a lot with ES2015, porting the code from ES5... I think it would be better for all js programmers starting to code in ES2015, otherwise in a few iterations ES2015+ may be alien..."}, {"timstamp": "2017-02-13 09:40", "user": "Elarcis", "body": "Pyrrhus666: nature... finds a way."}, {"timstamp": "2017-02-13 09:40", "user": "Pyrrhus666", "body": "Im already there, still stuck in js 1.4 land, so es is as alien as it gets :P"}, {"timstamp": "2017-02-13 09:41", "user": "icebox", "body": "at the moment a sort of new kind of mess is the chaintool expecting transpiled code..."}, {"timstamp": "2017-02-13 09:42", "user": "icebox", "body": "really it seems the developer is compelled to use \"babel\" everywhere..."}, {"timstamp": "2017-02-13 09:42", "user": "Pyrrhus666", "body": "icebox, that will not change I guess. when browsers catch up to es2015, youll be doing es2017 and still use babel."}, {"timstamp": "2017-02-13 09:42", "user": "icebox", "body": "but ES2015 has been finalized at June 2015... almost two years ago"}, {"timstamp": "2017-02-13 09:43", "user": "icebox", "body": "Pyrrhus666: browsers support ES2015... only \"import\" features is not supported"}, {"timstamp": "2017-02-13 09:43", "user": "icebox", "body": "*feature"}, {"timstamp": "2017-02-13 09:43", "user": "Pyrrhus666", "body": "and in a year it will be <unconvertable> only feature xy is not supported <unconvertable> :)"}, {"timstamp": "2017-02-13 09:44", "user": "icebox", "body": ":P"}, {"timstamp": "2017-02-13 09:44", "user": "Elarcis", "body": "icebox: It feels like babel and bundlers just slowed down the browsers' incentive to implement new JS standards"}, {"timstamp": "2017-02-13 09:44", "user": "icebox", "body": "Elarcis: exactly!"}, {"timstamp": "2017-02-13 09:44", "user": "Elarcis", "body": "\"what for? devs just transpile into existing JS\""}, {"timstamp": "2017-02-13 09:44", "user": "Pyrrhus666", "body": "maybe Im a cynic (wait, theres no maybe). I hope well get where youll expect us to be someday."}, {"timstamp": "2017-02-13 09:45", "user": "icebox", "body": "and those layers (transpilers and bundlers) add a lot of complexity to the porject"}, {"timstamp": "2017-02-13 09:45", "user": "Elarcis", "body": "Pyrrhus666: we get that JS is constantly evolving, but you gotta admit it's been a very long time since we've been told that browsers should 'soon' support ES6"}, {"timstamp": "2017-02-13 09:45", "user": "Elarcis", "body": "Pyrrhus666: same with CSS3, etc."}, {"timstamp": "2017-02-13 09:45", "user": "Elarcis", "body": "Pyrrhus666: at least we (most of us) don't have to worry about IE anymore"}, {"timstamp": "2017-02-13 09:45", "user": "Pyrrhus666", "body": "Elarcis, yup. thats why well probaby always work with transpilers and polyfills."}, {"timstamp": "2017-02-13 09:46", "user": "Pyrrhus666", "body": "Elarcis, btw, thats also our own fault for always wanting to use the latest and greatest in software."}, {"timstamp": "2017-02-13 09:47", "user": "Elarcis", "body": "Pyrrhus666: I've been enlightened two weeks ago, realizing that foxandxss's starter isn't using webpack 2.2.0 nor AoT: we're wayy too much on the edge of new tech"}, {"timstamp": "2017-02-13 09:47", "user": "icebox", "body": "Pyrrhus666: ok... sh what is the point of standards (meaning ES+)?"}, {"timstamp": "2017-02-13 09:47", "user": "Elarcis", "body": "Pyrrhus666: always expecting the latest version, day 0"}, {"timstamp": "2017-02-13 09:47", "user": "icebox", "body": "*so what"}, {"timstamp": "2017-02-13 09:47", "user": "Pyrrhus666", "body": "Elarcis, yup."}, {"timstamp": "2017-02-13 09:48", "user": "icebox", "body": "if we finalize a standard and then we don't use it... it is a bit dummy"}, {"timstamp": "2017-02-13 09:48", "user": "Pyrrhus666", "body": "icebox, those standards are the promised future, not the present reality. so stick with whatss reality, and thats es5 (I guess ?)"}, {"timstamp": "2017-02-13 09:48", "user": "Pyrrhus666", "body": "_or_ accept that you need tools like babel ;)"}, {"timstamp": "2017-02-13 09:48", "user": "icebox", "body": "I repeat... ES2015 - June 2015 :)"}, {"timstamp": "2017-02-13 09:49", "user": "Pyrrhus666", "body": "icebox, thats not important. whats in the field ? not es2015."}, {"timstamp": "2017-02-13 09:49", "user": "icebox", "body": "all the browsers support ES2015 unless \"import\"... ok... I got your point, but I think \"babel\" created a parallel reality :)"}, {"timstamp": "2017-02-13 09:50", "user": "Pyrrhus666", "body": "icebox, oh, I agree with you there ;) but thats partly our own doing for wanting the cake and eat it too..."}, {"timstamp": "2017-02-13 09:53", "user": "Elarcis", "body": "I'd like to travel between parallel realities"}, {"timstamp": "2017-02-13 09:53", "user": "Elarcis", "body": "too bad ours is such one, I guess"}, {"timstamp": "2017-02-13 09:54", "user": "icebox", "body": "at the moment the main problem is the coherence... tools and libs are not orthogonal to the standards (ES5, ES2015+) and modules (CJS, UMD, etc.)... and this is a mess to create a coherent chaintool"}, {"timstamp": "2017-02-13 09:54", "user": "Pyrrhus666", "body": "if the parallel worlds thing holds it at least suggests theres some good ones out there ;)"}, {"timstamp": "2017-02-13 09:55", "user": "icebox", "body": "and I am saying, more \"babel\" approach is used, more that problem is highlighted"}, {"timstamp": "2017-02-13 09:56", "user": "Pyrrhus666", "body": "icebox, so do vanilla es2015 minus imports and ditch babel ;)"}, {"timstamp": "2017-02-13 09:56", "user": "Pyrrhus666", "body": "oh, and ditch ts of course, it exists by the grace of the transpiler ;)"}, {"timstamp": "2017-02-13 09:56", "user": "icebox", "body": "Pyrrhus666: well... that was my position until 2016 :)"}, {"timstamp": "2017-02-13 09:57", "user": "icebox", "body": "Pyrrhus666: but if you want to use angular (not angularjs) that is not a great option, feasible, but not optimal"}, {"timstamp": "2017-02-13 09:57", "user": "Pyrrhus666", "body": "icebox, I know. being devils advocate and all ;)"}, {"timstamp": "2017-02-13 09:57", "user": "icebox", "body": "Pyrrhus666: :P"}, {"timstamp": "2017-02-13 09:58", "user": "icebox", "body": "and angular did a great work... indeed it works with ES5, ES2015+, umd, cjs and so on..."}, {"timstamp": "2017-02-13 09:58", "user": "icebox", "body": "*great job"}, {"timstamp": "2017-02-13 09:59", "user": "Pyrrhus666", "body": "thing is, Ive become very practical over the years, probably because of the ns4/ie5 days Ive lived through. so I use what works and let other people be bothered by future standards"}, {"timstamp": "2017-02-13 09:59", "user": "icebox", "body": "and it offers a very good alternate to \"babel\" issue... typescript chaintool"}, {"timstamp": "2017-02-13 09:59", "user": "Pyrrhus666", "body": "and for now, that means a black box named webpack contained another black box called babel."}, {"timstamp": "2017-02-13 10:00", "user": "Pyrrhus666", "body": "icebox, how is transpiling ts -> es5 different from es2015 -> es5 ?"}, {"timstamp": "2017-02-13 10:00", "user": "icebox", "body": "Pyrrhus666: agreed... but at the moment my app weights 1.5Mb (angularjs + material + d3 + something else)..."}, {"timstamp": "2017-02-13 10:01", "user": "Pyrrhus666", "body": "icebox, are you sure that would be much less without babel ?"}, {"timstamp": "2017-02-13 10:01", "user": "icebox", "body": "Pyrrhus666: ts is better than babel... because it gives a coherent chaintool (you don't need babel\""}, {"timstamp": "2017-02-13 10:02", "user": "icebox", "body": "Pyrrhus666: yep... because you import only what you are using (not with angularjs, but with angular)"}, {"timstamp": "2017-02-13 10:02", "user": "Pyrrhus666", "body": "potato/potato (that doesnt really work in text, does it ?). its still transpiling."}, {"timstamp": "2017-02-13 10:02", "user": "icebox", "body": "Pyrrhus666: I see a lot of difference between babel and ts transpilation :)"}, {"timstamp": "2017-02-13 10:03", "user": "icebox", "body": "Pyrrhus666: the result is the same... how not"}, {"timstamp": "2017-02-13 10:03", "user": "Pyrrhus666", "body": "icebox, how do you feel ts vs. babel are fundamentally different ? (aside from the fact that ts is nice and all)"}, {"timstamp": "2017-02-13 10:04", "user": "icebox", "body": "Pyrrhus666: because with ts I use only ts, while with babel I need to use babel and plugins... the complexity is very different"}, {"timstamp": "2017-02-13 10:06", "user": "icebox", "body": "maybe Elarcis may tell us if they considered babel in the chaintool... :)"}, {"timstamp": "2017-02-13 10:06", "user": "Pyrrhus666", "body": "icebox, so it boils down to the fact that tsc is an easier to use transpiler than babel. I can see that. but thats just a flaw of babel, not a fundamental difference."}, {"timstamp": "2017-02-13 10:07", "user": "icebox", "body": "Pyrrhus666: (an interesting project is lebab... from ES5 to ES2015+)"}, {"timstamp": "2017-02-13 10:08", "user": "Pyrrhus666", "body": "that does sound like a better option yes :)"}, {"timstamp": "2017-02-13 10:09", "user": "icebox", "body": "Pyrrhus666: the starting point is different... I would say that babel doesn't add anything, while ts adds types and annotations"}, {"timstamp": "2017-02-13 10:10", "user": "icebox", "body": "Pyrrhus666: I mean, babel is a pure transpiler, while ts is a language"}, {"timstamp": "2017-02-13 10:10", "user": "Pyrrhus666", "body": "icebox, agreed. but that also is not a fundamental difference. youre still using features not natively supported, and thus transpiling ;)"}, {"timstamp": "2017-02-13 10:11", "user": "Pyrrhus666", "body": "icebox, well, its es2015+++."}, {"timstamp": "2017-02-13 10:11", "user": "icebox", "body": "Pyrrhus666: indeed my point is transpiling is useless :)"}, {"timstamp": "2017-02-13 10:11", "user": "icebox", "body": "we should use ES2015 (apart import features)"}, {"timstamp": "2017-02-13 10:11", "user": "Pyrrhus666", "body": "aaaaaaand were back were we started ;)"}, {"timstamp": "2017-02-13 10:11", "user": "icebox", "body": ":P"}, {"timstamp": "2017-02-13 10:12", "user": "icebox", "body": "not my fault :) neither yours :)"}, {"timstamp": "2017-02-13 10:13", "user": "Pyrrhus666", "body": "I know. I too wish it were simpler, but we have to make do ;)"}, {"timstamp": "2017-02-13 10:13", "user": "icebox", "body": ":P"}, {"timstamp": "2017-02-13 10:13", "user": "Pyrrhus666", "body": "meanwhile, vue is still nice ;)"}, {"timstamp": "2017-02-13 10:14", "user": "Elarcis", "body": "icebox: not a single time. typescript was directly the choice, so we didn't even consider Babel"}, {"timstamp": "2017-02-13 10:15", "user": "Elarcis", "body": "also I was really bummed that async/await in TS pre 2.1 required you to use Babel as well, glad they fixed that"}, {"timstamp": "2017-02-13 10:15", "user": "Elarcis", "body": "even if I'm not using async/await, but good to know for the future"}, {"timstamp": "2017-02-13 10:16", "user": "icebox", "body": "Pyrrhus666: after porting the app to angular 4... maybe I will port it to vue :)"}, {"timstamp": "2017-02-13 10:17", "user": "icebox", "body": "Pyrrhus666: (I don't think so) :P"}, {"timstamp": "2017-02-13 10:17", "user": "Pyrrhus666", "body": "icebox, still waiting for better starter options for angular ;)"}], "label": "other"}
{"id": "93d594ac", "body": "", "comments": [{"timstamp": "2019-01-07 15:49", "user": "jlebrech", "body": "httpclient is yuck, use typhoeus"}, {"timstamp": "2019-01-07 15:50", "user": "jlebrech", "body": "i've had reverse issues where it didn't work on postman but from ruby it did, it's user-agents checks etc from the server you're connecting to"}, {"timstamp": "2019-01-07 15:51", "user": "Pyrrhus666", "body": "jlebrech, why would you want to use a ruby version of curl in an angular app ?"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": "crap"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": "wrong channel"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": ":P"}, {"timstamp": "2019-01-07 15:51", "user": "Pyrrhus666", "body": ":P"}, {"timstamp": "2019-01-07 15:51", "user": "dor", "body": "haha :P"}, {"timstamp": "2019-01-07 15:52", "user": "dor", "body": "Maybe the way i'm trying to add the file is wrong ?"}, {"timstamp": "2019-01-07 15:52", "user": "jlebrech", "body": "if the topic is js, then i say params might have to be json encoded"}, {"timstamp": "2019-01-07 15:53", "user": "SargoDarya", "body": "dor: Sharing code helps ;)"}, {"timstamp": "2019-01-07 15:53", "user": "dor", "body": "SargoDarya: here is the code ==>"}, {"timstamp": "2019-01-07 15:53", "user": "dor", "body": "(file is a File object)"}, {"timstamp": "2019-01-07 15:54", "user": "SargoDarya", "body": "dor: Headers are set correctly?"}, {"timstamp": "2019-01-07 15:54", "user": "trampi", "body": "dor: can you examine your request size in the network tab? 413 is \"payload too large\""}, {"timstamp": "2019-01-07 15:54", "user": "SargoDarya", "body": "Like, it's multipart/form-data?"}, {"timstamp": "2019-01-07 15:55", "user": "dor", "body": "SargoDarya: I didn't set any header in the request"}, {"timstamp": "2019-01-07 15:55", "user": "SargoDarya", "body": "Check the request"}, {"timstamp": "2019-01-07 15:57", "user": "dor", "body": "trampi: you're talking about this ? ==> content-length: 185"}, {"timstamp": "2019-01-07 15:57", "user": "dor", "body": "SargoDarya: here is the contentType: Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHU6Kt79obshihAmg"}, {"timstamp": "2019-01-07 15:59", "user": "trampi", "body": "your requests must be differing if it works with postman. 185 does not seem very large for a client request..."}, {"timstamp": "2019-01-07 15:59", "user": "dor", "body": "trampi: sorry i'm wrong, 185 was the size of response"}, {"timstamp": "2019-01-07 15:59", "user": "dor", "body": "I don't see any size for request in the network tab :|"}, {"timstamp": "2019-01-07 16:00", "user": "trampi", "body": "which browser? in chrome you can click on the request and look on the right under \"Request Headers\" -> \"content-length\""}, {"timstamp": "2019-01-07 16:02", "user": "dor", "body": "trampi: this is what I have in my browser"}, {"timstamp": "2019-01-07 16:02", "user": "dor", "body": "no content-length"}, {"timstamp": "2019-01-07 16:02", "user": "trampi", "body": "mhmm. except the missing content length it looks good to me ..."}, {"timstamp": "2019-01-07 16:03", "user": "trampi", "body": "any chance to get the server logs? especially why it returns 413 - payload too large?"}, {"timstamp": "2019-01-07 16:03", "user": "dor", "body": "I guess so"}, {"timstamp": "2019-01-07 16:03", "user": "dor", "body": "I'll see if I can check server logs"}, {"timstamp": "2019-01-07 16:04", "user": "dor", "body": "the strange part is that it works with postman :|"}, {"timstamp": "2019-01-07 16:04", "user": "trampi", "body": "yeah, thats really strange!"}, {"timstamp": "2019-01-07 16:05", "user": "trampi", "body": "there must be a difference in the requests if it works with postman..."}, {"timstamp": "2019-01-07 16:05", "user": "dor", "body": "I'm sending the same file btw"}, {"timstamp": "2019-01-07 16:06", "user": "dor", "body": "just maybe there is a problem with request headers or with the way i'm attaching the file with FormData"}, {"timstamp": "2019-01-07 16:07", "user": "trampi", "body": "if you are really desperate you could export the request in curl format and diff them manually."}, {"timstamp": "2019-01-07 16:08", "user": "Pyrrhus666", "body": "dor, the angular code looks fine to me. I do it like that too ( f = new FormData(); f.append(file,file); ) and then POST"}, {"timstamp": "2019-01-07 16:09", "user": "Pyrrhus666", "body": "dor, only diff : I use http.request(new HttpRequest(POST, url, f, { reportProgress: true } ); because I want progress events"}, {"timstamp": "2019-01-07 16:09", "user": "dor", "body": "trampi: ok, i'll try exporting request and comparing, thx"}, {"timstamp": "2019-01-07 16:10", "user": "dor", "body": "Pyrrhus666: great, so my code is a clean way"}, {"timstamp": "2019-01-07 16:11", "user": "dor", "body": "Pyrrhus666: do you add any headers?"}, {"timstamp": "2019-01-07 16:11", "user": "Pyrrhus666", "body": "dor, no"}, {"timstamp": "2019-01-07 16:13", "user": "Pyrrhus666", "body": "dor, just noticed : why do you not have a subscribe() call on your post ?"}, {"timstamp": "2019-01-07 16:39", "user": "dor", "body": "Pyrrhus666: which subscribe?"}, {"timstamp": "2019-01-07 16:39", "user": "dor", "body": "(sorry i was away)"}, {"timstamp": "2019-01-07 16:40", "user": "dor", "body": "I'm doing a map to get the exact param I need, thats all"}, {"timstamp": "2019-01-07 16:40", "user": "Pyrrhus666", "body": "dor, the .subscribe() call that actually makes the POST request ? or are you on an ancient ng version ?"}, {"timstamp": "2019-01-07 16:40", "user": "dor", "body": "Proditor: I'm on angular 7"}, {"timstamp": "2019-01-07 16:41", "user": "dor", "body": "Pyrrhus666: * sorry"}, {"timstamp": "2019-01-07 16:41", "user": "dor", "body": "Pyrrhus666: no subscribe, httpClient.post(... )"}, {"timstamp": "2019-01-07 16:41", "user": "Pyrrhus666", "body": "dor, but thats a cold observable ?"}, {"timstamp": "2019-01-07 16:44", "user": "dor", "body": "Pyrrhus666: yes whats wrong with that? could you correct me if i'm wrong? (i'm still beginning with angular)"}, {"timstamp": "2019-01-07 16:45", "user": "dor", "body": "I'm doing just to get updated from the WS"}, {"timstamp": "2019-01-07 16:45", "user": "Pyrrhus666", "body": "dor, a cold observable does not _do_ an actual request until you subscribe() to it. unless you use an async pipe."}, {"timstamp": "2019-01-07 16:46", "user": "dor", "body": "Pyrrhus666: what do u suggest instead ?"}, {"timstamp": "2019-01-07 16:46", "user": "Pyrrhus666", "body": "dor, from"}, {"timstamp": "2019-01-07 16:47", "user": "Pyrrhus666", "body": "dor, just subscribe() to it ?"}, {"timstamp": "2019-01-07 16:48", "user": "dor", "body": "Pyrrhus666: sorry, i didn't get the idea.. I have to replace the httpClient.post ?"}, {"timstamp": "2019-01-07 16:48", "user": "dor", "body": "or you're talking about the map"}, {"timstamp": "2019-01-07 16:49", "user": "Pyrrhus666", "body": "dor, read"}, {"timstamp": "2019-01-07 16:50", "user": "Pyrrhus666", "body": "see that the http.post() returns an observable that does nothing until later in the code they call .subscribe() on it"}, {"timstamp": "2019-01-07 16:51", "user": "dor", "body": "Pyrrhus666: yes in fact i'm calling .subscirbe in the componenet where i use it"}, {"timstamp": "2019-01-07 16:51", "user": "Pyrrhus666", "body": "dor, ok, that was all I wanted to know ;)"}, {"timstamp": "2019-01-07 16:51", "user": "dor", "body": "Pyrrhus666: thats ok! thanks for the clarifications ~"}, {"timstamp": "2019-01-07 16:52", "user": "Pyrrhus666", "body": "off in a bit. later folks !"}], "label": "other"}
{"id": "93d594bf", "body": "", "comments": [{"timstamp": "2018-12-18 11:30", "user": "anli", "body": "When I have changed a scope variable of a directive, which is declared as scope: { idModel: \"=ngIdModel\"} and the directive has been instanced using <foobar ng-id-model=\"x\">, should I be able to read the change in $scope.x? (I am setting the variable in a function in the directive where scope.apply() would generate an error about the scope already being in progress)"}, {"timstamp": "2018-12-18 11:31", "user": "anli", "body": "Ah, I had =? before"}, {"timstamp": "2018-12-18 11:32", "user": "anli", "body": "When I use =, the parent scope actually gets updated despite the one-way binding, but afterwards"}, {"timstamp": "2018-12-18 11:32", "user": "anli", "body": "So in the moment I am reading $scope in the parent, it is having its old value"}, {"timstamp": "2018-12-18 11:34", "user": "anli", "body": "Its apparent that I am reading the value while the scope still is in apply"}, {"timstamp": "2018-12-18 11:35", "user": "anli", "body": "Should I call an event handler in a deferred way instead of directly maybe"}, {"timstamp": "2018-12-18 11:36", "user": "anli", "body": "Is that because I am not using the ng prefix of the event handler?"}, {"timstamp": "2018-12-18 11:37", "user": "anli", "body": "it made a difference"}, {"timstamp": "2018-12-18 11:37", "user": "anli", "body": "cool"}, {"timstamp": "2018-12-18 11:40", "user": "anli", "body": "nope..."}], "label": "other"}
{"id": "93d59481", "body": "", "comments": [{"timstamp": "2018-11-14 18:54", "user": "rc96", "body": "Is there a way to stub out a new component on the command line?"}], "label": "other"}
{"id": "93d594fb", "body": "", "comments": [{"timstamp": "2016-05-26 15:44", "user": "anbujs", "body": "how to start angular js"}, {"timstamp": "2016-05-26 15:44", "user": "anbujs", "body": "pls give some adice"}, {"timstamp": "2016-05-26 15:44", "user": "arlekin", "body": "well, there should be plenty of tutorials"}, {"timstamp": "2016-05-26 15:45", "user": "arlekin", "body": "the guide on angularjs page isn't bad"}, {"timstamp": "2016-05-26 15:45", "user": "arlekin", "body": "anbujs: personally i adore \"understanding angularjs\" on udemy by anthony alicea"}, {"timstamp": "2016-05-26 15:46", "user": "arlekin", "body": "also this course first 3 or 4 hours are on YT for free"}], "label": "other"}
{"id": "93d59511", "body": "", "comments": [{"timstamp": "2018-05-14 11:22", "user": "SuperTyp", "body": "I've read \"doggo\""}, {"timstamp": "2018-05-14 11:22", "user": "SuperTyp", "body": "I want a doggo in my office"}, {"timstamp": "2018-05-14 11:22", "user": "Pyrrhus666", "body": "SuperTyp, I want six cats."}, {"timstamp": "2018-05-14 11:23", "user": "SuperTyp", "body": "I'd be happy with one"}], "label": "other"}
{"id": "8addb26b", "body": "", "comments": [{"timstamp": "2018-10-29 13:13", "user": "berz3rk", "body": "hello guys, im wondering how to realize a collapsible area at the end of my angular app and when I open it angular should jump to the content you know?"}, {"timstamp": "2018-10-29 13:13", "user": "berz3rk", "body": "actual scrolling"}, {"timstamp": "2018-10-29 13:15", "user": "berz3rk", "body": "I tried to do this with viewport scroller , but it didnt realy work out :("}, {"timstamp": "2018-10-29 13:15", "user": "berz3rk", "body": "I tried to place an element in the html after the collapsible area and used viewportScroller.scrollToAnchor to that element, it works the second time, but the first time it doesnt do anything"}, {"timstamp": "2018-10-29 13:16", "user": "berz3rk", "body": "maybe its because angular first has to build the DOM content of that collapsible area? no idea"}, {"timstamp": "2018-10-29 13:18", "user": "Pyrrhus666", "body": "berz3rk, make sure the anchor exists, at least, even if the collapsible is still collapsed ?"}, {"timstamp": "2018-10-29 13:19", "user": "berz3rk", "body": "the anchor is always there, its behind the collapsible div"}, {"timstamp": "2018-10-29 13:19", "user": "berz3rk", "body": "not inside"}, {"timstamp": "2018-10-29 13:19", "user": "Pyrrhus666", "body": "so it does scroll, but not far enough ?"}, {"timstamp": "2018-10-29 13:20", "user": "Pyrrhus666", "body": "personally, I feel this is bad ux, and I wouldnt even try to do it, but ok..."}, {"timstamp": "2018-10-29 13:21", "user": "pupskuchen", "body": "let's not speak about a11y"}, {"timstamp": "2018-10-29 13:22", "user": "Pyrrhus666", "body": "not even thinking about accessibility, it just feels wrong to me :)"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "eh"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "it doesnt do anything at first klick"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "at second it works"}, {"timstamp": "2018-10-29 13:24", "user": "pupskuchen", "body": "Pyrrhus666: probably because it is"}, {"timstamp": "2018-10-29 13:26", "user": "Pyrrhus666", "body": "berz3rk, probably because the 2nd time the content is already there or smt. I think you cant really solve this cleanly."}, {"timstamp": "2018-10-29 13:32", "user": "berz3rk", "body": "what should I do then?"}, {"timstamp": "2018-10-29 13:34", "user": "Pyrrhus666", "body": "dunno. what are you trying to achieve ? cant you use a popover ? or display the content in some other fashion ?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "i have a collapsible area at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "think about a link or something"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you click on it, a text area expands"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you read stuff"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "now the issue is the thing is at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "so if you click the content that is revealing is under your current view position"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you have to scroll to the new content you know?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "or else you have to scroll then yourself afterwords"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "why not click on the collapse directly ? like its meant to be used ?"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "the user clicks on the collapse"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "yes."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "but angular doesnt jump to the revealing content"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "no need if the user clicks on the collapse itself."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "i want that the content reveals"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "and that the user sees it without scrolling"}, {"timstamp": "2018-10-29 13:39", "user": "Pyrrhus666", "body": "we just established that that is not going to work."}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "this is the way a collapse is normally used :"}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "you click on the thing, it expands _in_place_"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "yeah it does that in berz3rk's case too"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "you just don't see it because the toggle is at the end of the page"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "so the content is expanding beyond the visible part of the page"}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "ah ok. then dont use a collapse, imho."}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "or accept that the user must scroll."}, {"timstamp": "2018-10-29 13:44", "user": "Pyrrhus666", "body": "(I was under the impression the click was somewhere else, and the collapse was expanded programmatically)"}], "label": "feature"}
{"id": "93d5953e", "body": "", "comments": [{"timstamp": "2016-11-17 02:05", "user": "ruurd", "body": "get a username"}, {"timstamp": "2016-11-17 02:05", "user": "ruurd", "body": "maybe people are sleeping?"}], "label": "other"}
{"id": "0ec1e4a8", "body": "", "comments": [{"timstamp": "20:08", "user": "Ben_1", "body": "is it possible to use the service of an application in all of its sub projects?"}], "label": "feature"}
{"id": "93d59476", "body": "", "comments": [{"timstamp": "2018-11-16 11:45", "user": "zomg", "body": "hey hey hey Pyrrhus666"}, {"timstamp": "2018-11-16 11:47", "user": "Pyrrhus666", "body": "c-c-c-c-c-combo breaker :P"}, {"timstamp": "2018-11-16 11:48", "user": "ray02", "body": "ahah"}, {"timstamp": "2018-11-16 11:48", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2018-11-16 11:49", "user": "Pyrrhus666", "body": "ray02, how was that long interview yesterday ? I saw you mentioning it, but missed the rest."}, {"timstamp": "2018-11-16 11:51", "user": "ray02", "body": "it was nice the environment of work look very nice"}, {"timstamp": "2018-11-16 11:52", "user": "ray02", "body": "they try to make partecipate all the person of the team to the decision"}, {"timstamp": "2018-11-16 11:52", "user": "ray02", "body": "and to propose new solution"}, {"timstamp": "2018-11-16 11:53", "user": "Pyrrhus666", "body": "sounds cool... so when will you hear if youre hired ?"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "and in general to the activity , like for example there was aslso frontend guy partecipating to this interview"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "in one week"}, {"timstamp": "2018-11-16 11:54", "user": "Pyrrhus666", "body": "ray02, exciting :)"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "now i'm going to make the role play game to another company"}, {"timstamp": "2018-11-16 11:55", "user": "berz3rk", "body": "ray02: what?"}, {"timstamp": "2018-11-16 11:56", "user": "Pyrrhus666", "body": "ray02, you did bring the dice and your phb, no ?"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "as a proces of hiring they love to make a role play game"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "ahah"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "no also i'm little bit drunked from yesterday"}, {"timstamp": "2018-11-16 11:56", "user": "Pyrrhus666", "body": "more coffee, stat ! ;)"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "i hope they don't ask me to do strange things"}, {"timstamp": "2018-11-16 11:57", "user": "ray02", "body": ":d"}, {"timstamp": "2018-11-16 11:57", "user": "ray02", "body": "i go, i will let you know later how has been"}, {"timstamp": "2018-11-16 11:57", "user": "Pyrrhus666", "body": "Im off early for a long weekend (in about an hour), so Ill ask you on tuesday when Im back ;)"}, {"timstamp": "2018-11-16 13:06", "user": "pupskuchen", "body": "Pyrrhus666: I'm convinced it's a router-related issue now and you may be right with your concern about the window object"}, {"timstamp": "2018-11-16 13:07", "user": "pupskuchen", "body": "I provided MockLocationStrategy to avoid the URL changing, but I suspect the BrowserPlatformLocation class still messes with the window object anyway"}, {"timstamp": "2018-11-16 14:08", "user": "Pyrrhus666", "body": "off in a bit. see yall tuesday, have a good weekend"}], "label": "other"}
{"id": "73af7d3d", "body": "", "comments": [{"timstamp": "18:04", "user": "ray02", "body": "for those that still there :P"}, {"timstamp": "18:04", "user": "ray02", "body": "have a good weekend folks"}], "label": "other"}
{"id": "93d59532", "body": "", "comments": [{"timstamp": "2016-09-28 16:19", "user": "Snugglebash", "body": "anyone have a good way to exclude node_modules from tsc? I tried exclude: [node_modules] in tsconfig but it doesnt work."}, {"timstamp": "2016-09-28 16:20", "user": "Elarcis", "body": "Snugglebash: provided that you wrote the quotes, it should work, strange"}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "elarcis: \"exclude\": ["}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "\"node_modules\""}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "]"}, {"timstamp": "2016-09-28 16:20", "user": "Elarcis", "body": "Snugglebash: are you just using bare tsc?"}, {"timstamp": "2016-09-28 16:21", "user": "Elarcis", "body": "Snugglebash: looks about right"}, {"timstamp": "2016-09-28 16:21", "user": "Snugglebash", "body": "Elarcis: i think so. I dont use gulp or something like that"}], "label": "other"}
{"id": "93d5947b", "body": "", "comments": [{"timstamp": "2016-07-07 15:12", "user": "verwilst", "body": "i've reverted, and even adding my app.settings.ts stuff isnt working anymore"}, {"timstamp": "2016-07-07 15:14", "user": "Elarcis", "body": "verwilst: justo ne question: what do you like in webstorm? (not a troll, I never used it but I heard it's quite nice)"}, {"timstamp": "2016-07-07 15:14", "user": "verwilst", "body": "Elarcis: i've been using phpstorm and pycharm for ages, and i love those, so i started using webstorm for angular.."}, {"timstamp": "2016-07-07 15:15", "user": "Pyrrhus", "body": "Elarcis: as an aside, my colleague (who does react <unconvertable> n stuff) also uses webstorm, and is perfectly happy"}, {"timstamp": "2016-07-07 15:16", "user": "verwilst", "body": "phpstorm and pycharm have very nice debugging possibilities, and it's the first IDE set that i don't get annoyed by :-)"}, {"timstamp": "2016-07-07 15:16", "user": "verwilst", "body": "angular2 support comes along quite nicely as well"}, {"timstamp": "2016-07-07 15:17", "user": "Elarcis", "body": "verwilst: oh okay"}, {"timstamp": "2016-07-07 15:17", "user": "verwilst", "body": "despite being java, it seems pretty ok on responsiveness, and memory usage etc.."}, {"timstamp": "2016-07-07 15:17", "user": "prometh", "body": "verwilst: waht's so bad about using a text editor, console and browser?"}, {"timstamp": "2016-07-07 15:18", "user": "verwilst", "body": "word completion, autocomplete of functions/classes, adding import statements automatically, ..."}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": "text editors haev those"}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": ""}, {"timstamp": "2016-07-07 15:18", "user": "verwilst", "body": "and the debugging possibilites"}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": "browsers haev debuggers"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "prometh: not talking about js"}, {"timstamp": "2016-07-07 15:19", "user": "prometh", "body": "ah"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "and good luck debugging python or php in your browser :-D"}, {"timstamp": "2016-07-07 15:19", "user": "prometh", "body": "obviously"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "can't live without them anymore :-)"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "prometh: that looks like more of a code editor than a text one"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "and for webstorm, every ts file groups its matching .js and .map.js"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "so you only see the .ts"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": ".js.map*"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "nice things like that :-)"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "verwilst: this I like, Visual Studio does it but not VSCode /c"}, {"timstamp": "2016-07-07 15:20", "user": "Pyrrhus", "body": "verwilst: it doesnt really seem to help you with setting up your API_ENDPOINT though :P"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "Pyrrhus: OH BUUUUURN"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "hehe"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "even my app.settings doesn't work anymore :-p"}, {"timstamp": "2016-07-07 15:21", "user": "Elarcis", "body": "verwilst: well VSCode has its own debugger with an PI for Python and such, which is nice :D"}, {"timstamp": "2016-07-07 15:21", "user": "Elarcis", "body": "*API"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "might of well have stayed in bed, would'be been equally productive"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "vscode? is that win?"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "i'm even further off than this morning.."}, {"timstamp": "2016-07-07 15:22", "user": "Elarcis", "body": "verwilst: it's free, open source and cross-platform"}, {"timstamp": "2016-07-07 15:22", "user": "verwilst", "body": "phpstorm uses xdebug and pycharm pydbg"}, {"timstamp": "2016-07-07 15:22", "user": "Elarcis", "body": "verwilst: and Microsoft, which is the oddest thing"}, {"timstamp": "2016-07-07 15:22", "user": "prometh", "body": "Elarcis: indeed.. it's espresso"}, {"timstamp": "2016-07-07 15:22", "user": "verwilst", "body": "visualstudio, isnt that by ms?"}, {"timstamp": "2016-07-07 15:23", "user": "prometh", "body": "i use both espresso and sublime text"}, {"timstamp": "2016-07-07 15:23", "user": "prometh", "body": "beginning to phase out espresso now"}, {"timstamp": "2016-07-07 15:23", "user": "Elarcis", "body": "verwilst: it's like if Winchester started advocating for world peace."}, {"timstamp": "2016-07-07 15:23", "user": "Pyrrhus", "body": "there are far to much pieces of software called after coffee or derivatives."}, {"timstamp": "2016-07-07 15:23", "user": "Pyrrhus", "body": "I blame java."}, {"timstamp": "2016-07-07 15:24", "user": "Pyrrhus", "body": "Im waiting for the first project called ventimachiato"}, {"timstamp": "2016-07-07 15:24", "user": "Elarcis", "body": "Pyrrhus: I need some tea right now"}, {"timstamp": "2016-07-07 15:24", "user": "Pyrrhus", "body": "Elarcis: jasmine, perchance ? ;)"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "Pyrrhus: what do you call coffeescript that's not working?"}, {"timstamp": "2016-07-07 15:25", "user": "prometh", "body": "Elarcis: decaf"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "Pyrrhus: a kaputccino"}, {"timstamp": "2016-07-07 15:25", "user": "Pyrrhus", "body": "haha, both good :)"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "*badum tss*"}, {"timstamp": "2016-07-07 15:28", "user": "Elarcis", "body": "Pyrrhus: well it's better than Java which, when not working, explodes into a mud volcano"}, {"timstamp": "2016-07-07 15:28", "user": "Pyrrhus", "body": "Elarcis: at least the stacktraces are so long that the original exception _must_ be in there somewhere ;)"}, {"timstamp": "2016-07-07 15:29", "user": "Elarcis", "body": "Pyrrhus: haha: from GasDrillException"}], "label": "other"}
{"id": "93d59507", "body": "", "comments": [{"timstamp": "2018-07-19 12:47", "user": "anddam", "body": "not IT but is there a channel for material design? I wasn't able to find one querying Alis and I'd like to switch a material icon I'm using to the \"outlined\" style"}, {"timstamp": "2018-07-19 13:13", "user": "SargoDarya", "body": "anddam: There is a gitter if I'm not mistaken which is semi-active"}, {"timstamp": "2018-07-19 13:13", "user": "SargoDarya", "body": "anddam:"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "SargoDarya: thanks, I dislike nowadays spread of communications for software project, gitter/slacks/whatelse"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "I ended registering to all, but it kinda sucks"}, {"timstamp": "2018-07-19 14:34", "user": "Limarson1", "body": "anddam: +1"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "I figured I could just assign color: attribute to the material icon and have the desired effect"}, {"timstamp": "2018-07-19 14:35", "user": "Limarson1", "body": "Mailing lists are the worst in my opinion"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "but I figure there has to be a \"proper\" way of doing that, I've seen suggestions about appending -outline _outline using material-icons--outline class and the like"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "none of those did work"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "Limarson1: ml have their own merit, but it's not for real-time communication"}, {"timstamp": "2018-07-19 14:36", "user": "SargoDarya", "body": "anddam: Funny you're coming to IRC then :P"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "SargoDarya: not really, IRC is my go-to chat platform"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "and has been for a long time, I mean I wished every project used just IRC"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "not even on separate networks"}, {"timstamp": "2018-07-19 14:43", "user": "anddam", "body": "but it's just the \"Old Grumpy's attitude\""}, {"timstamp": "2018-07-19 14:43", "user": "Limarson1", "body": "anddam: :D"}, {"timstamp": "2018-07-19 14:45", "user": "Limarson1", "body": "anddam: I swallowed down some communist comment, where everyone drives one car, everyone uses one chat platform,... :D Diversity is not bad per se^^"}, {"timstamp": "2018-07-19 14:46", "user": "anddam", "body": "Limarson1: that's the dream"}, {"timstamp": "2018-07-19 14:47", "user": "anddam", "body": "I figure diversity is only bad when it's \"different from me\", as general rule"}, {"timstamp": "2018-07-19 14:47", "user": "Limarson1", "body": "anddam: I know that feeling xD"}, {"timstamp": "2018-07-19 14:47", "user": "Limarson1", "body": "anddam: If everyone was like me, the world would be a better place and so on ;-)"}, {"timstamp": "2018-07-19 14:55", "user": "anddam", "body": "even worse, it's on Google+"}], "label": "other"}
{"id": "93d594a1", "body": "", "comments": [{"timstamp": "2016-08-23 20:14", "user": "rohit", "body": "hello"}, {"timstamp": "2016-08-23 20:15", "user": "rohit", "body": "please help me"}, {"timstamp": "2016-08-23 20:15", "user": "rohit", "body": "i want to run anjular js code"}, {"timstamp": "2016-08-23 20:15", "user": "rohit", "body": "please tell me the tool name"}, {"timstamp": "2016-08-23 20:16", "user": "rohit", "body": "hello"}, {"timstamp": "2016-08-23 20:21", "user": "aniasis", "body": "rohit, try this."}, {"timstamp": "2016-08-23 20:21", "user": "aniasis", "body": "rohit."}, {"timstamp": "2016-08-23 20:24", "user": "rohit", "body": "thanks"}, {"timstamp": "2016-08-23 20:27", "user": "rohit", "body": "how to i get the toolbox of anjular js"}, {"timstamp": "2016-08-23 20:30", "user": "myghty", "body": "rohit: angularjs 1 or 2"}, {"timstamp": "2016-08-23 20:30", "user": "myghty", "body": "?"}, {"timstamp": "2016-08-23 20:30", "user": "rohit", "body": "anjular js 1"}, {"timstamp": "2016-08-23 20:30", "user": "myghty", "body": "run it in your browser"}, {"timstamp": "2016-08-23 20:30", "user": "myghty", "body": "as the name states: it is javascript"}, {"timstamp": "2016-08-23 20:31", "user": "myghty", "body": "just open the corresponding html..."}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "yes"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "i have that broswe"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "any other tools"}, {"timstamp": "2016-08-23 20:31", "user": "myghty", "body": "no"}, {"timstamp": "2016-08-23 20:31", "user": "myghty", "body": "editor+browser"}, {"timstamp": "2016-08-23 20:31", "user": "myghty", "body": "nothing else"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "es"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "yes"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "But i need editor"}, {"timstamp": "2016-08-23 20:31", "user": "rohit", "body": "for download"}, {"timstamp": "2016-08-23 20:32", "user": "aniasis", "body": "try webstorm"}, {"timstamp": "2016-08-23 20:32", "user": "aniasis", "body": "rohit"}, {"timstamp": "2016-08-23 20:33", "user": "rohit", "body": "ok"}, {"timstamp": "2016-08-23 20:34", "user": "rohit", "body": "ok"}, {"timstamp": "2016-08-23 20:36", "user": "rohit", "body": "this is try version for 30 days"}, {"timstamp": "2016-08-23 20:36", "user": "myghty", "body": "rohit: you are on windows?"}, {"timstamp": "2016-08-23 20:36", "user": "myghty", "body": "use notepad, editor, atom..."}, {"timstamp": "2016-08-23 20:36", "user": "myghty", "body": "mostly every editor which is capable editing textfiles will work"}, {"timstamp": "2016-08-23 20:37", "user": "rohit", "body": "ok"}, {"timstamp": "2016-08-23 20:37", "user": "aniasis", "body": "rohit, use WebStorm it has more features than any random text editor"}, {"timstamp": "2016-08-23 20:37", "user": "myghty", "body": "aniasis: vi!"}, {"timstamp": "2016-08-23 20:38", "user": "myghty", "body": ";)"}, {"timstamp": "2016-08-23 20:38", "user": "rohit", "body": "ok"}, {"timstamp": "2016-08-23 20:38", "user": "rohit", "body": "but this trial version 30 Days"}, {"timstamp": "2016-08-23 20:39", "user": "myghty", "body": "yes, good software costs some euros"}, {"timstamp": "2016-08-23 20:39", "user": "myghty", "body": "so buy it then"}, {"timstamp": "2016-08-23 20:39", "user": "myghty", "body": "otherwise use something with less features"}, {"timstamp": "2016-08-23 20:40", "user": "rohit", "body": "ok"}, {"timstamp": "2016-08-23 21:20", "user": "aniasis", "body": "rohit, Eclipse is free."}, {"timstamp": "2016-08-23 21:21", "user": "aniasis", "body": "Eclipse has some of the basic javascript tools"}], "label": "other"}
{"id": "93d59501", "body": "", "comments": [{"timstamp": "2019-02-07 12:18", "user": "stennowork", "body": "F#!"}, {"timstamp": "2019-02-07 12:18", "user": "mursu", "body": "ocaml is better"}, {"timstamp": "2019-02-07 12:18", "user": "mursu", "body": ":^)"}, {"timstamp": "2019-02-07 12:44", "user": "Elarcis", "body": "mursu: Rust is better :^)"}, {"timstamp": "2019-02-07 12:45", "user": "mursu", "body": "Elarcis: yeah if you like bad languages then I can see how you would say that"}, {"timstamp": "2019-02-07 12:45", "user": "mursu", "body": ":^)"}, {"timstamp": "2019-02-07 12:45", "user": "Elarcis", "body": "mursu: tonight I will bath in your blood."}, {"timstamp": "2019-02-07 12:46", "user": "stennowork", "body": "slaanesh approves"}, {"timstamp": "2019-02-07 12:59", "user": "Mylee", "body": "Elarcis, what is this fascination with Rust?"}, {"timstamp": "2019-02-07 13:00", "user": "Elarcis", "body": "Mylee: I like it"}, {"timstamp": "2019-02-07 13:00", "user": "Mylee", "body": "I see that"}, {"timstamp": "2019-02-07 13:00", "user": "Elarcis", "body": "And I like to jokingly put it everywhere"}, {"timstamp": "2019-02-07 13:00", "user": "Mylee", "body": "you told a joke?"}, {"timstamp": "2019-02-07 13:02", "user": "mursu", "body": "a programming language"}, {"timstamp": "2019-02-07 13:02", "user": "Mylee", "body": "let me google"}, {"timstamp": "2019-02-07 13:02", "user": "Mylee", "body": "like C#?"}, {"timstamp": "2019-02-07 13:03", "user": "mursu", "body": "they are both by microsoft and can use .net but they are totally different languages"}, {"timstamp": "2019-02-07 13:03", "user": "Mylee", "body": "ahhh"}, {"timstamp": "2019-02-07 13:05", "user": "anddam", "body": "Mylee: yes, that's \"the\" docs, and the page I was referring to"}], "label": "other"}
{"id": "93d59479", "body": "", "comments": [{"timstamp": "2019-02-07 13:07", "user": "d[10]", "body": "how i use jquery-ui in angular 7?"}, {"timstamp": "2019-02-07 13:07", "user": "d[10]", "body": "i installed it via npm install jquery-ui"}, {"timstamp": "2019-02-07 13:08", "user": "Elarcis", "body": "d[10]: don't mix jquery and angular, period."}, {"timstamp": "2019-02-07 13:08", "user": "d[10]", "body": "Elarcis i need a datepicker"}, {"timstamp": "2019-02-07 13:09", "user": "Elarcis", "body": "d[10]: they're both doing the same thing in different philosophies, it will only end up in troubles for you, and almost no one with experience in this channel will be able to help you with that"}, {"timstamp": "2019-02-07 13:09", "user": "d[10]", "body": "Elarcis ok"}, {"timstamp": "2019-02-07 13:11", "user": "Elarcis", "body": "d[10]: bold suggestion, but isn't the browser-provided date picker for input type=\"date\" enough?"}, {"timstamp": "2019-02-07 13:15", "user": "d[10]", "body": "Elarcis i now want html5 datepicker"}, {"timstamp": "2019-02-07 13:17", "user": "Elarcis", "body": "d[10]: that's what I'm saying, nowadays browsers provide native pickers for HTML5 date and time inputs"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": ";s"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "i'm using this"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": ""}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "but have no value property"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "only ngModel"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "i want not*"}, {"timstamp": "2019-02-07 13:19", "user": "d[10]", "body": "in my case i need value property"}, {"timstamp": "2019-02-07 13:26", "user": "Elarcis", "body": "\\me sadly throws his now-useless certiicate in the bin."}], "label": "other"}
{"id": "93d59473", "body": "", "comments": [{"timstamp": "2016-10-15 20:47", "user": "supperman2k", "body": "is there an angular2 channel?"}, {"timstamp": "2016-10-15 20:47", "user": "rand0m", "body": "there is supperman2k but I don't know sorry :("}, {"timstamp": "2016-10-15 20:47", "user": "rand0m", "body": "i mean the link"}], "label": "other"}
{"id": "93d594ee", "body": "", "comments": [{"timstamp": "2016-11-22 09:32", "user": "k200", "body": "how can I change a variable on model change, in controller?"}, {"timstamp": "2016-11-22 09:33", "user": "zomg", "body": "use ng-change"}, {"timstamp": "2016-11-22 09:33", "user": "k200", "body": "in controller."}, {"timstamp": "2016-11-22 09:33", "user": "zomg", "body": "yes, use ng-change"}, {"timstamp": "2016-11-22 09:34", "user": "k200", "body": "ok. checking."}, {"timstamp": "2016-11-22 09:34", "user": "zomg", "body": "(assuming you want to do something when the data changes because of a user changed it)"}, {"timstamp": "2016-11-22 09:34", "user": "k200", "body": "zomg: user is changing the data. but i want to change another variable which is not part of this creation flow."}, {"timstamp": "2016-11-22 09:36", "user": "zomg", "body": "yeah you can use ng-change to trigger some function in the controller as a result of user changing some value"}, {"timstamp": "2016-11-22 09:36", "user": "k200", "body": "zomg: i dont want to add ng-change on my view on create button of that another flow!"}, {"timstamp": "2016-11-22 09:37", "user": "icebox", "body": "k200: do you mean to show a part of template due to a constraint?"}, {"timstamp": "2016-11-22 09:38", "user": "k200", "body": "nvm."}, {"timstamp": "2016-11-22 09:38", "user": "k200", "body": "i will change edit that another flow only."}, {"timstamp": "2016-11-22 09:38", "user": "k200", "body": "icebox: no."}, {"timstamp": "2016-11-22 09:38", "user": "icebox", "body": "k200: do you mean to \"inject\" a new partial?"}, {"timstamp": "2016-11-22 09:41", "user": "k200", "body": "icebox: no. it just concers one scope variable. i thought that variable is not part of my control flow."}, {"timstamp": "2016-11-22 09:41", "user": "icebox", "body": "ok"}, {"timstamp": "2016-11-22 09:41", "user": "k200", "body": "can I do += in js / Angular?"}, {"timstamp": "2016-11-22 09:44", "user": "icebox", "body": "yes"}, {"timstamp": "2016-11-22 09:45", "user": "k200", "body": "icebox: zomg i have two different controllers in module and its submodel. i want to change $scope.var of submodule on a function call of module. how can I do that?"}, {"timstamp": "2016-11-22 09:45", "user": "k200", "body": "ok"}, {"timstamp": "2016-11-22 09:45", "user": "icebox", "body": "k200: use service to share info"}, {"timstamp": "2016-11-22 09:45", "user": "k200", "body": "just for this one variable?"}, {"timstamp": "2016-11-22 09:48", "user": "icebox", "body": "k200: that is the approach... we don't know how you designed your models :)"}, {"timstamp": "2016-11-22 09:49", "user": "k200", "body": "ok"}, {"timstamp": "2016-11-22 09:54", "user": "Elarcis", "body": "k200: also a service isn't just for one variable... but you gotta start somewhere"}, {"timstamp": "2016-11-22 09:54", "user": "Elarcis", "body": "k200: not creating a service 'just for one variable' is a good way to end up with too few services and lots of 'just one variable' :P"}, {"timstamp": "2016-11-22 09:55", "user": "k200", "body": "ok."}, {"timstamp": "2016-11-22 10:12", "user": "Elarcis", "body": "27 'replace: true' left in the code"}], "label": "other"}
{"id": "93d5954a", "body": "", "comments": [{"timstamp": "2016-05-15 00:00", "user": "arlekin", "body": "neredsenvy: could you paste code for the tagsInput directive ?"}, {"timstamp": "2016-05-15 00:01", "user": "arlekin", "body": "neredsenvy: it really is simple issue, its just a matter of having place to inject soultion"}, {"timstamp": "2016-05-15 00:01", "user": "neredsenvy", "body": ""}, {"timstamp": "2016-05-15 00:02", "user": "arlekin", "body": "neredsenvy: nah bro, thats the part of the template"}, {"timstamp": "2016-05-15 00:02", "user": "arlekin", "body": "i mean the code"}, {"timstamp": "2016-05-15 00:02", "user": "neredsenvy", "body": "Not my implementation"}, {"timstamp": "2016-05-15 00:03", "user": "arlekin", "body": "oh i see"}, {"timstamp": "2016-05-15 00:03", "user": "arlekin", "body": "which function does your posting ?"}, {"timstamp": "2016-05-15 00:04", "user": "arlekin", "body": "i mean where it is in the controller that you are making your POST to backend ?"}, {"timstamp": "2016-05-15 00:04", "user": "neredsenvy", "body": "I call FilmService.Create()"}, {"timstamp": "2016-05-15 00:04", "user": "arlekin", "body": "ok"}, {"timstamp": "2016-05-15 00:05", "user": "arlekin", "body": "so in the template, in the tags-input tag you have ng-model attribute, right ?"}, {"timstamp": "2016-05-15 00:05", "user": "neredsenvy", "body": "yes"}, {"timstamp": "2016-05-15 00:06", "user": "arlekin", "body": "so the content - in this case film.genre - points to the variable on $scope object thats going to get the value from that tag"}, {"timstamp": "2016-05-15 00:07", "user": "arlekin", "body": "so as it seems that we have no sane way of moidfying the directive itself"}, {"timstamp": "2016-05-15 00:07", "user": "arlekin", "body": "we should change content of the ng-model attribute to some other var - name it as you will - but for the purpose of the discussion say its named genreTags"}, {"timstamp": "2016-05-15 00:08", "user": "arlekin", "body": "so you have ng-model=\"genreTags\", which automagically ensures you do have it on the $scope object"}, {"timstamp": "2016-05-15 00:09", "user": "arlekin", "body": "for the purpose of being explicit you could have it declared in the controller (put somewhere near the top $scope.genreTags = [];)"}, {"timstamp": "2016-05-15 00:10", "user": "arlekin", "body": "then, before you post your film object anywhere, ie before calling FilmService.Create()"}, {"timstamp": "2016-05-15 00:10", "user": "arlekin", "body": "you should do the remap, namely: `$scope.film.genre = $scope.genreTags.map( tag => tag.id );` w"}, {"timstamp": "2016-05-15 00:11", "user": "arlekin", "body": "(or you can be more explicit and conservative and use normal notation for function"}, {"timstamp": "2016-05-15 00:12", "user": "neredsenvy", "body": "hm"}, {"timstamp": "2016-05-15 00:12", "user": "neredsenvy", "body": "lets try it : ))"}, {"timstamp": "2016-05-15 00:12", "user": "arlekin", "body": "that way the variable which is bind with your ui by the holy matrimony of two-way data-binding will keep its shape even after sending request"}, {"timstamp": "2016-05-15 00:13", "user": "arlekin", "body": "but the backend will get fed with the array in form of [(int)] and not [(object)]"}, {"timstamp": "2016-05-15 00:14", "user": "arlekin", "body": "the only real downside i can think of here is that you have to explicitely put the value from genreTags in your film object"}, {"timstamp": "2016-05-15 00:14", "user": "arlekin", "body": "but seeing that you don't have access to the original directive there is no other way really"}, {"timstamp": "2016-05-15 00:15", "user": "arlekin", "body": "well ofcourse if its on github then its open source so one could remedy that issue from within directive, but i assume you'd rather just use what is given"}, {"timstamp": "2016-05-15 00:16", "user": "arlekin", "body": "so, disclaimer that i think it would be best to have directive returning correct format itself, but other that that i think the solution i presented is good enough"}, {"timstamp": "2016-05-15 00:18", "user": "neredsenvy", "body": "Ok so it works as expected but it also appends genreTags to the $scope.film but this is not a problem I think the backend will just ignore it or I can remove it."}, {"timstamp": "2016-05-15 00:19", "user": "neredsenvy", "body": "Fuck yea problem solved"}, {"timstamp": "2016-05-15 00:19", "user": "neredsenvy", "body": "finally"}, {"timstamp": "2016-05-15 00:19", "user": "neredsenvy", "body": "now i can go to bed"}, {"timstamp": "2016-05-15 00:19", "user": "arlekin", "body": "neredsenvy: well if it appends it then you are doing something wrong"}, {"timstamp": "2016-05-15 00:20", "user": "arlekin", "body": "neredsenvy: probably you messed a naming somewhere, if you paste it (both template and controller) i can take a look"}, {"timstamp": "2016-05-15 00:21", "user": "neredsenvy", "body": "Ahh nevermind I know why it appends it"}, {"timstamp": "2016-05-15 00:21", "user": "arlekin", "body": "neredsenvy: good then"}], "label": "other"}
{"id": "93d5949f", "body": "", "comments": [{"timstamp": "2016-10-18 14:44", "user": "LIERO", "body": ""}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "is there any reason the code in the <unconvertable> else if <unconvertable> or even the else doesnt ever execute?"}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "basically, the api either returns a string (the condition of the if statement..) or an empty object -> {}"}, {"timstamp": "2016-10-18 14:49", "user": "Elarcis", "body": "LIERO: if first condition doesn't crash, then the else if will never be true"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "if the object is empty, its still truthy?"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "oh, wait"}, {"timstamp": "2016-10-18 14:50", "user": "Elarcis", "body": "LIERO: your if() assumes that res already has keys, if results is undefined or is not an array, you JS code will throw an exception"}, {"timstamp": "2016-10-18 14:51", "user": "Elarcis", "body": "LIERO: if it throws an exception, the code stops there. if it doesn't, that means res.results is a non-empty array, etc."}, {"timstamp": "2016-10-18 14:51", "user": "Pyrrhus666", "body": "Elarcis: that sounds highly plausible in this case."}, {"timstamp": "2016-10-18 14:52", "user": "icebox", "body": "LIERO: empty object is true... :) you should \"guard\" that \"if\"..."}, {"timstamp": "2016-10-18 14:52", "user": "Elarcis", "body": "LIERO: I recommend to sanitize your res object. check that it has a non-empty result array that has a non-empty alternatives array"}, {"timstamp": "2016-10-18 14:53", "user": "Elarcis", "body": "icebox: didn't know it was called like that :D"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "empty object is true but it's not testing against empty object, so it's not that"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "i'll be doing if(undefined)"}, {"timstamp": "2016-10-18 14:54", "user": "icebox", "body": "bd-: agreed... the point was... check that \"if\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: that's why I'd love to, but won't for this project, start using TS's --strictNullChecks"}, {"timstamp": "2016-10-18 14:55", "user": "bd-", "body": "maybe just reorder it and swap the if and the elseif"}, {"timstamp": "2016-10-18 14:55", "user": "icebox", "body": "Elarcis: sorry... \"I know\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: YOU."}, {"timstamp": "2016-10-18 14:56", "user": "LIERO", "body": "if I put <unconvertable> Object.keys(res).length > 0 <unconvertable> as the initial if condition, still nothing executes after that"}, {"timstamp": "2016-10-18 14:56", "user": "icebox", "body": "bd-: maybe using intermediate variables :)"}, {"timstamp": "2016-10-18 14:57", "user": "icebox", "body": "LIERO: if you debug that code, you get the answer in seconds"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "^"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "LIERO you can trust JS, it means that Object.keys(res).length is always more than 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "Elarcis, its not, it says its 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "also, works the same with if(typeof res.results[0].alternatives[0].transcript === \"string\"), which cant be true if res is an empty object"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "also, on invalid input it doesnt execute the code in the initial if as well"}, {"timstamp": "2016-10-18 15:08", "user": "Elarcis", "body": "LIERO: there's definitely an issue with your code, Object.keys() is native and cannot lie"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "but then doesnt do anything if I only have an else (no else if)"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "if Im getting an empty object that means the promise is returned for sure, right?"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO: you're in a promise chain?"}, {"timstamp": "2016-10-18 15:09", "user": "LIERO", "body": "the callback*"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO... if you're using promise and not using any catch() block, your if just throws an exception that is swallowed by the promise chain"}, {"timstamp": "2016-10-18 15:10", "user": "LIERO", "body": "Im not in a promise chain, my mistake"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: guard your object's content, not with typeof"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: this way you can debug more easily, and will have an easier time figuring out what's wrong"}], "label": "other"}
{"id": "93d59500", "body": "", "comments": [{"timstamp": "2018-08-09 15:10", "user": "CssNoob", "body": "any example code for this problem?"}, {"timstamp": "2018-08-09 16:11", "user": "Elarcis", "body": "CssNoob: the goal of that exercice is you figuring it out by yourselves"}, {"timstamp": "2018-08-09 16:24", "user": "SargoDarya", "body": "Elarcis: also Math.floor"}, {"timstamp": "2018-08-09 16:25", "user": "Elarcis", "body": "SargoDarya: Math.floor?"}, {"timstamp": "2018-08-09 16:25", "user": "SargoDarya", "body": "Elarcis: Never heard of Math.floor()?"}, {"timstamp": "2018-08-09 16:26", "user": "Elarcis", "body": "SargoDarya: I did, I just dont get how its relevant here :P"}, {"timstamp": "2018-08-09 16:29", "user": "Elarcis", "body": "CssNoob: if that might comfort you, I solved it. Show you made some efforts, and well share advices"}, {"timstamp": "2018-08-09 16:34", "user": "Elarcis", "body": "CssNoob: break it into small pieces. First, how to count how many of a bill is there in a given amount? then how much is left? then how to pass whats left to the next bill? then start again, while keeping the previous quantities? then showing the result? then showing an error if there is money left? then... oh wait, youre done."}, {"timstamp": "2018-08-09 16:53", "user": "CssNoob", "body": "Elarcis"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: well you have a nice start, dont give up!"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: I hope you didnt spend the whole hour on it, though :P"}, {"timstamp": "2018-08-09 17:21", "user": "CssNoob", "body": "I'm stuck"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: what, youre stuck?"}, {"timstamp": "2018-08-09 17:22", "user": "CssNoob", "body": "inputting a value"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: you have your amount of money, you have checked that its a number, it works"}, {"timstamp": "2018-08-09 17:24", "user": "Elarcis", "body": "CssNoob: what is wrong with your input?"}, {"timstamp": "2018-08-09 17:25", "user": "CssNoob", "body": "I don't know how to input by the type of bills"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "should I input like 2,500 Righ away? or like 1,000, and 500"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "for 1,500"}, {"timstamp": "2018-08-09 17:26", "user": "Elarcis", "body": "CssNoob: reread the exercice. What is asked is to convert a single amount into a list of bills and their quantities."}, {"timstamp": "2018-08-09 17:27", "user": "CssNoob", "body": "1,550 right?"}, {"timstamp": "2018-08-09 17:28", "user": "CssNoob", "body": "or I need to input a new integer?"}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its even written in the example. You give your code 1550, it spits you back a result, no matter the format. What matters is that the results logical."}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its an example... whatever is fine, it could be 3 for all you know"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: if your teacher/website checks your work itll pass a list of random values to test it"}, {"timstamp": "2018-08-09 17:29", "user": "CssNoob", "body": "Elarcis What do you mean ' 3 ' ?"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: well how to breakdown $3 into bills of $1000, $500, $100 and $50?"}, {"timstamp": "2018-08-09 17:30", "user": "CssNoob", "body": "so the program is breakdown the given total number ?"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "CssNoob: What's the result of 0.1 + 0.2?"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob: yes... if you input 1550, it spits out 1000 - 1 500 - 1 50 - 1"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "SargoDarya: that is not how you test for humanity."}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "and if it's not given from the type of bills show error"}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "hmm"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "Elarcis: :("}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob:"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "If the amount cant be breakdown into the available bills show an error message."}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "available bills = type of bills"}, {"timstamp": "2018-08-09 17:32", "user": "Elarcis", "body": "CssNoob: I suppose so, yes"}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "so my sample number is 1550"}, {"timstamp": "2018-08-09 17:33", "user": "Elarcis", "body": "CssNoob: what language are you mainly speaking?"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "Denomination of bills. There are 1000$ bills, 500$, 100$ and 50$."}, {"timstamp": "2018-08-09 17:33", "user": "CssNoob", "body": "I'm from philippines. My bad for my grammar"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "What is the least amount of bills you need for 2000$"}, {"timstamp": "2018-08-09 17:34", "user": "CssNoob", "body": "SargoDarya Depends?"}, {"timstamp": "2018-08-09 17:34", "user": "SargoDarya", "body": ":|"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: depending on the bills given in the exercice"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: there is only one solution."}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: _least_ amount of bills"}, {"timstamp": "2018-08-09 17:35", "user": "SargoDarya", "body": "Elarcis: Depends on the definition of least I guess xD"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "so for 2000$ . I can I put a const value like 1,000 and 1,000 ,500, 500"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "can I*"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "I Mean"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "1,000 , 500 , 500"}, {"timstamp": "2018-08-09 17:37", "user": "Elarcis", "body": "CssNoob: that would be a wrong answer... 2 bills of $1,000 is the least amount of bills needed."}, {"timstamp": "2018-08-09 17:37", "user": "CssNoob", "body": "dammit"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "CssNoob: How often does 10 fit into 45?"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "10, 10, 10 and 5?"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "..."}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh boy"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh man"}, {"timstamp": "2018-08-09 17:39", "user": "SargoDarya", "body": "Yupp, I'm out for today. Gotta leave before the storm."}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "SargoDarya thanks"}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "take care :)"}, {"timstamp": "2018-08-09 17:41", "user": "SargoDarya", "body": "The answer to the question of how often 10 fits in 45 is 4 times, because 4 * 10 = 40 but 5 * 10 would be 50 so that's too much. It leaves you with the rest 5."}, {"timstamp": "2018-08-09 17:41", "user": "CssNoob", "body": ":)"}, {"timstamp": "2018-08-09 18:00", "user": "Elarcis", "body": "CssNoob: I was bored so I rewrote the exercice in a (I hope) clearer way"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "ELarcis"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "oh man, you went out?"}], "label": "other"}
{"id": "93d5948a", "body": "", "comments": [{"timstamp": "2018-01-30 13:11", "user": "Pyrrhus666", "body": "deadlines schmeadlines"}, {"timstamp": "2018-01-30 13:13", "user": "Pyrrhus666", "body": "it works for me with firefox on ubuntu, d&d from gnome filebrowser. I mean, if it works on linux, it should work everywhere ;)"}, {"timstamp": "2018-01-30 13:15", "user": "SargoDarya", "body": "Pyrrhus666: Tell that to IE"}, {"timstamp": "2018-01-30 13:15", "user": "Pyrrhus666", "body": "SargoDarya, whats an IE ?"}, {"timstamp": "2018-01-30 13:16", "user": "SargoDarya", "body": "Pyrrhus666: Internet Exploder"}], "label": "other"}
{"id": "93d59530", "body": "", "comments": [{"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "??"}, {"timstamp": "2016-12-15 08:06", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:18", "user": "zomg", "body": "DD2_: what does that have to do with angular?"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "i mean"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "there is a machine and card to scan rfid"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "but how i will get that rfid code from scanner and i have to send http request to server"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "is it the way to send request??"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "and which plugin we need to use"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg_>"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg> r u there..??"}, {"timstamp": "2016-12-15 08:24", "user": "zomg", "body": "DD2_: so is this like a USB rfid scanner?"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "nope there is a machine like ATM screen"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "or we can say punch machine"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "and rfid card"}, {"timstamp": "2016-12-15 08:25", "user": "zomg", "body": "so do you know how to read the rfid card?"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "no i dont have any information about it"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "i just want to use one listener which will just watch on it"}, {"timstamp": "2016-12-15 08:28", "user": "zomg", "body": "right, and is this program you're writing going to run in a browser on that computer?"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "yeah"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "actuly we r just developing some angular phase which is going to implement into that machine"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "which windows base machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "okay"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we r just developing front end side"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we have to complete this step"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "so what you would need to do is have some kind of a way to query the device on the machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "browsers don't have direct access to devices like this"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "I know some USB-based barcode scanners basically are keyboards, as in they produce keyboard events when you scan a barcode"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "if your rfid scanner worked like this, that would be the easiest way to set it up"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "but I'm guessing that isn't the case here, so what you would need to do is have some program running on the computer, which can access the device driver directly"}, {"timstamp": "2016-12-15 08:33", "user": "zomg", "body": "then, you set up the program to run a simple web server, and your angular application can just do an ajax request to it"}, {"timstamp": "2016-12-15 08:34", "user": "zomg", "body": "(or alternatively you could possibly embed webkit into a windows application, where you could provide a custom API for the device)"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "yeah u right ill write one api to call ajax but my question is"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "how it will continuously watch on it"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "there is rfid listener"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "plugin"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "i saw but m not getting how it will work and how to setup"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "well if you were to build an embedded webkit thing, then you could implement a custom API for it which can call a JS callback when the rfid listener sends data"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "but if you can't / don't want to do that, then you'd probably use either polling on the web server, or a websocket"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "polling on the web server means what??"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "can u plz explain"}, {"timstamp": "2016-12-15 08:37", "user": "zomg", "body": "repeatedly sending an ajax request at specific intervals"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": "i was talking abt this one"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "<zomg>"}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "but i dont know what exactly he's doing]"}, {"timstamp": "2016-12-15 08:40", "user": "zomg", "body": "hard to say, none of the links in that seem to work so I can't look at the source :)"}, {"timstamp": "2016-12-15 08:41", "user": "zomg", "body": "you could try installing it I guess and seeing if you can make use of it"}, {"timstamp": "2016-12-15 08:41", "user": "wafflejock", "body": "DD2_, will always be specific to the hardware basically"}, {"timstamp": "2016-12-15 08:42", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "yeah, that's entirely possible unless there's some standard for it"}, {"timstamp": "2016-12-15 08:42", "user": "wafflejock", "body": "DD2_, there are various protocols used for two wire or serial communication but with stuff like this it varies a lot"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "you might end up having to write a program in C# or such to deal with it tbh"}, {"timstamp": "2016-12-15 08:43", "user": "zomg", "body": "once upon a time I worked on some embedded JS stuff on phones, but thankfully we had another team which dealt with the device-specifics so we could just build to their api :P"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, on the making a web server side there are lots of built in node things to make that part simple"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, the hard part will be reading the data out of the device"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "well potentially hard"}, {"timstamp": "2016-12-15 08:44", "user": "wafflejock", "body": "sometimes it's cake just depends on the device and target audience"}, {"timstamp": "2016-12-15 08:45", "user": "DD2_", "body": "so that means its depend on hardware which we are using of we got details abt it then we can think about it right??"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "I've been messing around with at home PCB making lately, fun making your own hardware"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "DD2_, yeah or can make your hardware choices in part based on the software already there and how easy it'll be to integrate with"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "depends on how big of a deal that is vs user experience and other features"}, {"timstamp": "2016-12-15 08:46", "user": "DD2_", "body": "ohk"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "so finally m going to send a mail to one of my frnd"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "first we need to fixed all this hardware solution"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "then we can think abt it"}, {"timstamp": "2016-12-15 08:48", "user": "wafflejock", "body": "yeah and while choosing hardware good to reach out to their support to see if they respond and can help answer questions since you may have to work with them to get answers if documentation isn't great on their site"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "yeah sure"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "thnk u soooooooooooooooooo muchhhhhhhhhh"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "(y)"}], "label": "other"}
{"id": "93d5952a", "body": "", "comments": [{"timstamp": "2016-10-19 17:55", "user": "LIERO_", "body": "I have a checkbox that I want to keep a persistent option for the user - i.e. it remembers the option between application runs - so obviously the only way is to write to a json"}, {"timstamp": "2016-10-19 17:56", "user": "LIERO_", "body": "or can I only read once on application start and store that in a global variable"}, {"timstamp": "2016-10-19 17:56", "user": "LIERO_", "body": "and then only write to the json if there is a change"}, {"timstamp": "2016-10-19 17:56", "user": "LIERO_", "body": "so the right way to handle this would be to have a factory that checks for the state and writes a change if necessary, and then call that factory from every controller that has the checkbox (basically every controller..) ?"}], "label": "other"}
{"id": "93d59529", "body": "", "comments": [{"timstamp": "2016-05-26 19:40", "user": "scssquatch", "body": "Hey all, is there a way to determind if an attribute is provided to a directive? Like if the attribute is present on the element?"}, {"timstamp": "2016-05-26 19:40", "user": "scssquatch", "body": "without ruining the binding*"}, {"timstamp": "2016-05-26 19:40", "user": "scssquatch", "body": "basically I want to have a different behavior if the attribute is present. Accessing it through attrs during the link function seems to destroy the 2-way binding"}, {"timstamp": "2016-05-26 19:42", "user": "gho5t", "body": "scssquatch: wouldn't you just check if the binding is undefined?"}, {"timstamp": "2016-05-26 19:42", "user": "gho5t", "body": "maybe I'm wrong. also seems odd that simply checking attrs would invalidate any bidning"}, {"timstamp": "2016-05-26 19:43", "user": "scssquatch", "body": "gho5t: Nah I can't do that because the boundn value might be undefined until it's set"}, {"timstamp": "2016-05-26 19:43", "user": "gho5t", "body": "ok"}, {"timstamp": "2016-05-26 19:43", "user": "gho5t", "body": "scssquatch: and you're saying that simply checking .attrs effects the binding?"}, {"timstamp": "2016-05-26 19:43", "user": "scssquatch", "body": "I could have sample-attr='ctrl.foo' which would be undefined until it's set. I want to know if sample-attr is on the element at all"}, {"timstamp": "2016-05-26 19:44", "user": "scssquatch", "body": "hmm, that seems like a strange hack, but I suppose?"}, {"timstamp": "2016-05-26 19:45", "user": "scssquatch", "body": "But yeah basically if I do element.attr(sampl-attr') != undefined it destroys the binding"}, {"timstamp": "2016-05-26 19:45", "user": "gho5t", "body": "I would doulbe check that"}, {"timstamp": "2016-05-26 19:45", "user": "scssquatch", "body": "okay"}, {"timstamp": "2016-05-26 19:45", "user": "gho5t", "body": "maybe you're causing an error - check the console"}, {"timstamp": "2016-05-26 19:45", "user": "sunimasuno", "body": "scssquatch: yeah, that's news to me, i do some similar things fairly often"}, {"timstamp": "2016-05-26 19:49", "user": "scssquatch", "body": "sunimasuno: confirmed, binding is destroyed"}, {"timstamp": "2016-05-26 19:49", "user": "sunimasuno", "body": "0.o madness"}, {"timstamp": "2016-05-26 19:50", "user": "scssquatch", "body": "not even bound to the directive scope anymore"}, {"timstamp": "2016-05-26 19:50", "user": "sunimasuno", "body": "wait, are you binding over a primitive? Rule of angular, if you ng-anything=\"\" you can't put in a primitive. So it needs \"something.anything\""}, {"timstamp": "2016-05-26 19:51", "user": "scssquatch", "body": "I have `end-date='ctrl.campaign.endDate'` and `scope: { datepickerEnd: '=endDate' }`"}, {"timstamp": "2016-05-26 19:53", "user": "sunimasuno", "body": "man, why's everyone got trubs with passing things into scope, it's the thing I always screw up"}, {"timstamp": "2016-05-26 19:56", "user": "scssquatch", "body": "okay I got rid of it, still not updating bindings now. Yeesh somethings wrong..."}, {"timstamp": "2016-05-26 19:57", "user": "sunimasuno", "body": "is printLink on the scope?"}], "label": "other"}
