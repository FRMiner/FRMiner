{"id": "8addb25a", "body": "", "comments": [{"timstamp": "2017-06-29 00:08", "user": "ferretzzz", "body": "Is there a way to tell the angular cli to put all my services into a services folder?"}, {"timstamp": "2017-06-29 00:20", "user": "helloNL", "body": "ferretzzz: the cli is expecting you to do it from root everytime"}, {"timstamp": "2017-06-29 00:21", "user": "helloNL", "body": "ng generate c s services/servicename is what you have to do"}, {"timstamp": "2017-06-29 00:22", "user": "helloNL", "body": "But this is sort of fixable by aliases in your terminal"}, {"timstamp": "2017-06-29 00:26", "user": "ferretzzz", "body": "helloNL: Yeah that's too much work for aliases. spelling out the directory works fine I suppose. thanks!"}, {"timstamp": "2017-06-29 00:27", "user": "ferretzzz", "body": "I feel like it would be a useful cli feature to just specify that I want all services in a services folder"}, {"timstamp": "2017-06-29 00:27", "user": "helloNL", "body": "ferretzzz: I have that issue with more systems :P"}], "label": "feature"}
{"id": "8addb25b", "body": "", "comments": [{"timstamp": "2016-08-24 11:32", "user": "Mo0O", "body": "the question is quite simple, is there a way to tell a directive in which transclude slot I want to put transcluded content?"}, {"timstamp": "2016-08-24 11:32", "user": "Mo0O", "body": "Elarcis: I don't ash for design expertise, I ash for feature"}, {"timstamp": "2016-08-24 11:33", "user": "Pyrrhus666", "body": "Mo0O: I dont think its possible."}, {"timstamp": "2016-08-24 11:34", "user": "ngWalrus", "body": "Mo0O"}, {"timstamp": "2016-08-24 11:34", "user": "ngWalrus", "body": "read the docs"}, {"timstamp": "2016-08-24 11:34", "user": "Elarcis", "body": "Mo0O: THERE IS, AS YET, INSUFFICIENT DATA FOR A MEANINGFUL ANSWER"}, {"timstamp": "2016-08-24 11:34", "user": "Elarcis", "body": "(not shouting, just adding formatting style)"}, {"timstamp": "2016-08-24 11:36", "user": "ngWalrus", "body": "but to answer your question(it's also in the docs), you can have named transclusion slots"}], "label": "feature"}
{"id": "8addb25c", "body": "", "comments": [{"timstamp": "2017-02-24 18:05", "user": "merpnderp", "body": "Is there a way for a service to call a method in a controller when a value is updated?"}, {"timstamp": "2017-02-24 18:05", "user": "merpnderp", "body": "I'm trying ot move all my business logic into services and finding it incredibly complicated."}, {"timstamp": "2017-02-24 18:06", "user": "uru", "body": "merpnderp: angular or angularjs?"}, {"timstamp": "2017-02-24 18:06", "user": "merpnderp", "body": "angar 1.5"}, {"timstamp": "2017-02-24 18:06", "user": "merpnderp", "body": "angular"}, {"timstamp": "2017-02-24 18:06", "user": "merpnderp", "body": "uru"}, {"timstamp": "2017-02-24 18:07", "user": "uru", "body": "merpnderp: So angularjs then? ;) \"Angular\" is v2+ In that case I've no clue. I guess you could pass a callback to the service from the controller that the service can call on update"}, {"timstamp": "2017-02-24 18:07", "user": "merpnderp", "body": "uru: yes either a callback which will have to be cleaned up when it exits or a $watch which will have to be cleaned up when it exits."}, {"timstamp": "2017-02-24 18:08", "user": "merpnderp", "body": "This is a mess."}, {"timstamp": "2017-02-24 18:08", "user": "uru", "body": "merpnderp: Alternatly you could look at using rxjs if you are that worried about the code"}, {"timstamp": "2017-02-24 18:08", "user": "merpnderp", "body": "rxjs?"}, {"timstamp": "2017-02-24 18:08", "user": "uru", "body": "Google it"}, {"timstamp": "2017-02-24 18:09", "user": "merpnderp", "body": "uru: just did. No way in the world this would be allowed by management."}, {"timstamp": "2017-02-24 18:09", "user": "merpnderp", "body": "oh well, back to writing shitty code."}], "label": "feature"}
{"id": "8addb25d", "body": "", "comments": [{"timstamp": "2017-03-08 16:20", "user": "m0ltar", "body": "So I want to write some tests with Karma. But my entry index.html file loading a lot of stuff from CDN. And for karma I need to manually specify all deps in files: [] array. How do I go about that? Is there a way to just load my entry html file or something? This seems like a weird thing to ask to copy paste all deps into karma config."}, {"timstamp": "2017-03-08 16:20", "user": "m0ltar", "body": "lulz"}, {"timstamp": "2017-03-08 16:21", "user": "Elarcis", "body": "m0ltar: good question, I have no idea if CDN are suppported"}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "But even if it is supported, still would have to copy paste all deps into the config file..."}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "Kinda strange to copy paste."}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "against DRY"}, {"timstamp": "2017-03-08 16:22", "user": "m0ltar", "body": "Why can't karma just load my entry HTML and use that for tests?"}, {"timstamp": "2017-03-08 16:22", "user": "Elarcis", "body": "m0ltar: there's probably a plugin for that"}, {"timstamp": "2017-03-08 16:25", "user": "m0ltar", "body": "Speaking of VPN, if you want a good resource for VPN discovery:"}, {"timstamp": "2017-03-08 16:25", "user": "m0ltar", "body": "Has a nice Excel file too you can download and filter what you value"}], "label": "feature"}
{"id": "8addb25e", "body": "", "comments": [{"timstamp": "2017-03-15 10:08", "user": "arussel", "body": "is there a way, when doing an $http.get on a basic auth protected resource, to not have the basic prompt pop up ?"}, {"timstamp": "2017-03-15 10:08", "user": "icebox", "body": "arussel: no"}, {"timstamp": "2017-03-15 10:09", "user": "icebox", "body": "arussel: bypassing the security? :)"}, {"timstamp": "2017-03-15 10:09", "user": "arussel", "body": "not bypassing it, just getting an 401 and not doing anything with it"}, {"timstamp": "2017-03-15 10:10", "user": "Elarcis", "body": "arussel: browser-level security, you can't autofill it code-side"}, {"timstamp": "2017-03-15 10:17", "user": "arussel", "body": "I don't want to auto-fill, I just want a 401 and no prompt"}, {"timstamp": "2017-03-15 10:17", "user": "arussel", "body": "I tried passing an authorization header, but I still get a prompt"}, {"timstamp": "2017-03-15 10:19", "user": "icebox", "body": "arussel: that is how basic authentication works"}, {"timstamp": "2017-03-15 10:19", "user": "Elarcis", "body": "arussel: 401 is for when authentication fails, not when it is asked"}, {"timstamp": "2017-03-15 10:20", "user": "icebox", "body": "arussel: it is between web server and browser, it is not at the application level"}, {"timstamp": "2017-03-15 10:20", "user": "Elarcis", "body": "arussel: when the prompt shows up, it's before your request returns any error"}, {"timstamp": "2017-03-15 10:20", "user": "Pyrrhus666", "body": "Elarcis, technically, a 401 just says youre not authorized, not that authorization failed ;"}, {"timstamp": "2017-03-15 10:21", "user": "Elarcis", "body": "Pyrrhus666: yeah, right"}, {"timstamp": "2017-03-15 10:21", "user": "arussel", "body": "so there is no way to know if a resource is Auth protected client side, so no way to protect against Authentication injection client side. Isn't it."}, {"timstamp": "2017-03-15 10:22", "user": "Elarcis", "body": "arussel: heeeeeh, not that I know"}], "label": "feature"}
{"id": "8addb25f", "body": "", "comments": [{"timstamp": "2017-03-21 15:49", "user": "ARandomFurry", "body": "Hello! Is there a way to make sure that an async operation is completed before my route builds and renders a component in angular 2?"}, {"timstamp": "2017-03-21 15:49", "user": "uru", "body": "ARandomFurry: Sounds like you want to take a look at router guards"}, {"timstamp": "2017-03-21 15:51", "user": "ARandomFurry", "body": "uru; I am using canActivate and resolve for my route. They're executed after my component's constructor and ngOnInit function."}, {"timstamp": "2017-03-21 15:52", "user": "ARandomFurry", "body": "uru; the route is defined with the loadChildren field by the way."}, {"timstamp": "2017-03-21 15:54", "user": "uru", "body": "ARandomFurry: iirc not much you can do other than wrapping the content in an ngif then, I load data in to a service via the guard, which then only completes navigation after the request is finished, as long as canActivate returns an observer/promise"}, {"timstamp": "2017-03-21 15:55", "user": "ARandomFurry", "body": "uru; Shame, such a step backwards."}, {"timstamp": "2017-03-21 15:58", "user": "ARandomFurry", "body": "uru; Thank you for assissting me though!"}, {"timstamp": "2017-03-21 15:58", "user": "uru", "body": "ARandomFurry: No worries"}], "label": "feature"}
{"id": "8addb260", "body": "", "comments": [{"timstamp": "2017-04-06 16:44", "user": "eGr00g", "body": "Hey guys, first time on here, I have a question about loading two version of angular into the same page. I have a Web Application that provides Web Forms, it's called Laserfiche Forms, it uses a very old version of angular, I am adding a module to it but i really would like to use the newer version but can't update the version that gets loaded into the Laserfiche Forms page. Is there a way that I can load the newer angular versio"}, {"timstamp": "2017-04-06 16:47", "user": "Elarcis", "body": "eGr00g: no"}, {"timstamp": "2017-04-06 16:49", "user": "eGr00g", "body": "Elarcis: ok thanks, i had read a couple articles about people doing this but it doesn't seem to want to work"}, {"timstamp": "2017-04-06 16:51", "user": "Elarcis", "body": "same"}], "label": "feature"}
{"id": "8addb261", "body": "", "comments": [{"timstamp": "2018-11-16 12:01", "user": "Pyrrhus666", "body": "on topic : do we have something like ng-true-value / ng-false-value for reactive checkboxes ? I only seem to get true/false out of them, regardless of value-attribute"}, {"timstamp": "2018-11-16 12:12", "user": "SuperTyp", "body": "what? :D"}, {"timstamp": "2018-11-16 12:12", "user": "SuperTyp", "body": "like if the checkbox is checked its true but it's value is \"foo\" and \"bar\" otherwise?"}, {"timstamp": "2018-11-16 12:14", "user": "Pyrrhus666", "body": "no, more like value is foo when checked and bar when unchecked. thats what ng-false-value/ng-true-value did with angularjs"}, {"timstamp": "2018-11-16 12:15", "user": "Pyrrhus666", "body": "dammit, thats what you said, sorry :)"}, {"timstamp": "2018-11-16 12:15", "user": "SuperTyp", "body": "hm, don't think so but you can easily solve this in your component"}, {"timstamp": "2018-11-16 12:15", "user": "Pyrrhus666", "body": "true, but it would be nice to be able to use the values directly (its a formarray of checkboxes)"}, {"timstamp": "2018-11-16 12:28", "user": "SuperTyp", "body": "you can write your own checkbox component:"}], "label": "feature"}
{"id": "8addb262", "body": "", "comments": [{"timstamp": "2017-04-07 11:37", "user": "phx", "body": "is there a way to tell \"ng serve\" what files to ignore? something like adding stuff to .gitignore"}, {"timstamp": "2017-04-07 11:37", "user": "icebox", "body": "phx: no idea about \"moving out\" action... I am not behind your shoulders and I don't know anything of your box"}, {"timstamp": "2017-04-07 11:38", "user": "phx", "body": "icebox, mv app ~/tmp/, \"moving out\""}, {"timstamp": "2017-04-07 11:39", "user": "icebox", "body": "phx: about ng serve, I don't think so..."}, {"timstamp": "2017-04-07 11:39", "user": "icebox", "body": "phx:"}, {"timstamp": "2017-04-07 11:40", "user": "icebox", "body": "phx: if you need to ignore something, that is done in the build phase"}, {"timstamp": "2017-04-07 11:43", "user": "icebox", "body": "phx: I insist with my suggestion... no idea because you are spending so many time with angular cli... if you need to develop an app, you should focus on app details :)"}, {"timstamp": "2017-04-07 11:43", "user": "icebox", "body": "phx: it is not mandatory using angular cli to develop angular apps :)"}, {"timstamp": "2017-04-07 11:44", "user": "phx", "body": ""}, {"timstamp": "2017-04-07 11:44", "user": "phx", "body": "most probably"}, {"timstamp": "2017-04-07 11:44", "user": "icebox", "body": "phx: yep"}, {"timstamp": "2017-04-07 11:46", "user": "icebox", "body": "phx: but that depends on your setup"}, {"timstamp": "2017-04-07 11:46", "user": "icebox", "body": "phx: using webpack as bundler is only an option... there are different bundlers"}, {"timstamp": "2017-04-07 11:56", "user": "icebox", "body": "phx: if you think it is a mess, you are right, but it is not matter of angular... :)"}, {"timstamp": "2017-04-07 12:00", "user": "phx", "body": "icebox, in my opinion, in IT, everything is an utter crap, until proven otherwise, so no surprise here :)"}, {"timstamp": "2017-04-07 12:03", "user": "phx", "body": "those are the \"enterprise\" applocations, usually"}, {"timstamp": "2017-04-07 12:03", "user": "phx", "body": "and that proving never gets past the sales guy"}], "label": "feature"}
{"id": "8addb263", "body": "", "comments": [{"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "does anyone perchance knows how can i make empty datepicker with angular material"}, {"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "it stubbornly tries to set it to \"today\" by default"}, {"timstamp": "2016-05-27 11:19", "user": "icebox", "body": "arlekin: what else?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: err... please ?"}, {"timstamp": "2016-05-27 11:20", "user": "icebox", "body": "arlekin: do you mean to set another default date?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: no, i'd like to have it empty by default, maybe some placeholder"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "angular material is awesome and great, but also frustrating and sucks at the same time (im not even mad)"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: well... I see... did you try emoty model and md-placeholder?"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: *empty"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "icebox: i did empty model"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "checking md-placeholder now"}, {"timstamp": "2016-05-27 11:23", "user": "arlekin", "body": "icebox: md-placeholder doesn't have any discernible effect"}, {"timstamp": "2016-05-27 11:24", "user": "icebox", "body": "arlekin:"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: been there, seen that"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "it links to another issue"}, {"timstamp": "2016-05-27 11:25", "user": "icebox", "body": "arlekin: I am afraid you need to give a look at the sources to understand better the behind the scenes about default date when model is empty"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: it seems so, i hate to modify source though"}, {"timstamp": "2016-05-27 11:26", "user": "arlekin", "body": "icebox: i need to remember then that i have this custom change"}, {"timstamp": "2016-05-27 11:26", "user": "icebox", "body": "arlekin: I didn't say that... I suggested to give a look to understand if it is feasible a PR or there is another way :)"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: there is always another way and it has to be feasible pr - since i don't imagine that having empty input field on datepicker is such an exotic usecase"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: but i get your point"}, {"timstamp": "2016-05-27 11:28", "user": "icebox", "body": "arlekin: no idea... if I would have your requirement and the lib doesn't behaviour how I wish.. firstly I would give a look at the sources :)"}, {"timstamp": "2016-05-27 11:29", "user": "arlekin", "body": "icebox: agreede"}], "label": "feature"}
{"id": "8addb264", "body": "", "comments": [{"timstamp": "2016-08-31 22:42", "user": "dman777_alter", "body": "does anyone use angular-material? I am trying to find the documentation for class=\"md-toolbar-tools\" but I am not seeing it"}, {"timstamp": "2016-08-31 22:46", "user": "da_wunder", "body": "dman777_alter: angular material webpages are good resource"}, {"timstamp": "2016-08-31 22:47", "user": "da_wunder", "body": "dman777_alter:"}, {"timstamp": "2016-08-31 22:47", "user": "dman777_alter", "body": "da_wunder: is md-toolbar-tools listed on"}, {"timstamp": "2016-08-31 22:48", "user": "dman777_alter", "body": "da_wunder: there is no documentation for md-toolbar-tools and no litsing for it ether."}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "and then"}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "examples"}, {"timstamp": "2016-08-31 22:49", "user": "dman777_alter", "body": "da_wunder: yes, that is how I found out about it. But there should be documentation on it. It makes wonder what else I might be missing if it's not included in code examples. Also, a explanation is always nice."}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "see that <md-toolbar> should have div element with that class"}, {"timstamp": "2016-08-31 22:49", "user": "swag", "body": "copy and past the example and modify it. Also use some plugin snnipet for your favorite editor :p that's what I did"}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "as the docs points you"}, {"timstamp": "2016-08-31 22:50", "user": "swag", "body": "yeah I think the same dman77_alter"}, {"timstamp": "2016-08-31 22:50", "user": "dman777_alter", "body": "da_wunder: Polymer's material design elements give full documentation and list all attributes, in addition to code examples. This would be the normal standard."}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "dman777_alter: then create an issue to the repo"}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "i haven't seen any problems with that"}, {"timstamp": "2016-08-31 22:52", "user": "da_wunder", "body": "all that code is in github, so you could easily make an issue, adds some +1 for existing PR or make new PR to cover that issue"}, {"timstamp": "2016-08-31 22:58", "user": "dman777_alter", "body": "da_wunder: I'm a developer that was told to use angular and angular metarial. I'm not coming into this wanting to develop for angular material, I have my hands full already."}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "dman777_alter: welcome to OS world"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "if you want to improve something, do it"}, {"timstamp": "2016-08-31 23:00", "user": "da_wunder", "body": "if not, just stay calm"}, {"timstamp": "2016-08-31 23:00", "user": "dman777_alter", "body": "lol...cool"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: personally i don't see any problems in that"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: what is your problem ?"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "if it's time, then just make an issue and wait IF someone answers that"}, {"timstamp": "2016-08-31 23:02", "user": "da_wunder", "body": "if not, study that yourself and when you know how it works - ask yourself the question would i make a PR to provide all my information to others too OR should i just be quiet"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "and if you choose to be quiet, so can also many others who are contributing these projects"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "which _you_ use without any charge"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "tl;dr be active in os community, if you see a problem create issue, try to study it, if you know what is \"wrong\" create a PR"}, {"timstamp": "2016-08-31 23:04", "user": "dman777_alter", "body": "da_wunder: what is your problem? I didn't mean that offensively.... when I said 'lol...cool' I meant that in good nature and I was in agreemnet. Back off"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "i just said some facts"}, {"timstamp": "2016-08-31 23:05", "user": "da_wunder", "body": "and when i was pointing that _you_ was the problem ?"}, {"timstamp": "2016-08-31 23:09", "user": "davidw", "body": "dman777_alter, similar situation; stuck with Angular"}, {"timstamp": "2016-08-31 23:12", "user": "dman777_alter", "body": "davidw: I love Angular 1.*, just not happy with incomplete documentation for angular-material. Although, my first choice is polymer personally for material design."}, {"timstamp": "2016-08-31 23:15", "user": "davidw", "body": "how can I test whether an element gets a certain class added to it in tests?"}], "label": "feature"}
{"id": "8addb265", "body": "", "comments": [{"timstamp": "2017-03-20 13:59", "user": "jlebrech", "body": "I have a problem with angular-bootstrap and opening of modals, it seems when I open a modal after another modal that it opens below it, but i'd like the new modal to open above."}, {"timstamp": "2017-03-20 14:00", "user": "Pyrrhus666", "body": "jlebrech, probably because the both have the same z-index ? can you even control that from ng-bootstrap ?"}, {"timstamp": "2017-03-20 14:01", "user": "jlebrech", "body": "Pyrrhus666: there's no option to set a z-index when launching it, and I can see the new modal having a lower z-index. I don't want to hack the ui-modal code"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, lower... thats weird..."}, {"timstamp": "2017-03-20 14:02", "user": "jlebrech", "body": "i saw a few issues and SO, and they say wontfix because modal + modal is bad form"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, which is sort of true."}, {"timstamp": "2017-03-20 14:03", "user": "jlebrech", "body": "so it's anoying, it worked in a previous version ui-bootstrap"}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, cant you hack it via css ? (some custom class having z-index: 10000!important; or smh ?)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: but previous functionality should stay the same."}, {"timstamp": "2017-03-20 14:04", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, but this was never meant as a functionality, it seems ;)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: wouldn't that be nice, but then the overlay is fucked"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: yep, anoying"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, cant you do away with the second modal ?"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, if they say its bad form, theyll probably reject your PR..."}, {"timstamp": "2017-03-20 14:05", "user": "jlebrech", "body": "I could edit and try to PR it"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "Pyrrhus666: yeah, I can try. but sometimes it's a confirmation modal (i.e 'are you sure') or a userguide popup with and instructional video"}, {"timstamp": "2017-03-20 14:06", "user": "heartburn", "body": "why wouldn't you use system ones for that?"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "^ my idea"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "except for the video ones ;)"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "because confirm box is ugly"}, {"timstamp": "2017-03-20 14:07", "user": "Pyrrhus666", "body": "jlebrech, <shrug> its functional as f*ck though ;)"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "wellthatslikejustyouropinionman.jpeg"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "they are ugly on windows mostly.)"}, {"timstamp": "2017-03-20 14:07", "user": "jlebrech", "body": "i have an option, to stop opening another video at the sametime, just hide and reopen it."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "Pyrrhus666: yeah, unfortunately it's not my product"}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "s/video/modal"}, {"timstamp": "2017-03-20 14:08", "user": "Pyrrhus666", "body": "jlebrech, that sounds like a logical option."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "yeah, i'm doing that"}, {"timstamp": "2017-03-20 14:09", "user": "jlebrech", "body": "Pyrrhus666: modals where a short term passable solution anyways"}, {"timstamp": "2017-03-20 14:11", "user": "heartburn", "body": "seriously tho, confirm()'s are platform-consistent and truly modal, so there's nothing wrong about using them. they save you a lot of trouble."}, {"timstamp": "2017-03-20 14:12", "user": "heartburn", "body": "but yea, they go look ugly on windows."}, {"timstamp": "2017-03-20 14:14", "user": "Pyrrhus666", "body": "heartburn, they look alike on all OSs I use. browser-dependent of course"}, {"timstamp": "2017-03-20 14:49", "user": "heartburn", "body": "ngdoc: location"}, {"timstamp": "2017-03-20 14:54", "user": "jlebrech", "body": "Pyrrhus666: i've fixed my issue with modal using CSS but that'll assumes that there's always ever 2 levels of modal (which is probably for the best)"}, {"timstamp": "2017-03-20 14:55", "user": "Pyrrhus666", "body": "jlebrech, ah yes, if you fix all levels inc backdrop, thatll work :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "Pyrrhus666: I could give each level a class, and hardcode which height I want each to be. and two level of backdrop too :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "shitty solution :D but will work"}, {"timstamp": "2017-03-20 14:57", "user": "Pyrrhus666", "body": "jlebrech, good enough in these circumstances :)"}, {"timstamp": "2017-03-20 14:58", "user": "jlebrech", "body": "i'll fix backdrop class if someone requests a backdrop, for now the first backdrop shows"}], "label": "feature"}
{"id": "8addb266", "body": "", "comments": [{"timstamp": "2017-05-11 14:48", "user": "oded", "body": "How can I use a forked angular repo in my package.json? It seems to require a build to be used (no version specified)"}, {"timstamp": "2017-05-11 14:53", "user": "oded", "body": "Anybody?"}, {"timstamp": "2017-05-11 14:56", "user": "Elarcis", "body": "oded: you can manually set a git repo rather than a version number iun your package.json"}, {"timstamp": "2017-05-11 14:57", "user": "oded", "body": "Elarcis: I did, I'm getting: \"npm ERR! No version provided in package.json\""}, {"timstamp": "2017-05-11 14:57", "user": "Elarcis", "body": "oded: see"}, {"timstamp": "2017-05-11 14:57", "user": "Elarcis", "body": "oded: well then you did it wrong :P"}, {"timstamp": "2017-05-11 14:57", "user": "oded", "body": "No.... angular doesn't specify a version in package.json"}, {"timstamp": "2017-05-11 14:57", "user": "Elarcis", "body": "oded: show us your package.json"}, {"timstamp": "2017-05-11 14:57", "user": "oded", "body": "only the packaged release has a version (which is probably what they upload to npm)"}, {"timstamp": "2017-05-11 14:58", "user": "Elarcis", "body": "oded: you're not clear"}, {"timstamp": "2017-05-11 14:58", "user": "oded", "body": "Elarcis: look here:"}, {"timstamp": "2017-05-11 14:58", "user": "oded", "body": "There is no version, so npm doesn't want to install it"}, {"timstamp": "2017-05-11 14:59", "user": "oded", "body": "My package.json specifies: \"angular\": \"odedniv/angular.js\""}, {"timstamp": "2017-05-11 15:10", "user": "Elarcis", "body": "oded: okay, that got out of the scope, but my question is: is your fork meant to fix a feature or provide a custom implementation of an angularjs native feature?"}, {"timstamp": "2017-05-11 15:11", "user": "oded", "body": "Elarcis: yes, I'm also creating a PR now, but I'm not sure it will be accepted. Either way until it goes into mainstream I want to use my fork"}, {"timstamp": "2017-05-11 15:12", "user": "Elarcis", "body": "oded: okay I guess ,though I'm just mentionning you could have made your custom param serializer without necessarily forking the whole of angularjs"}, {"timstamp": "2017-05-11 15:13", "user": "Elarcis", "body": "oded: back to your issue... I don't really know why your thing doesn't work, have never worked with git repos"}, {"timstamp": "2017-05-11 15:17", "user": "Elarcis", "body": "oded: or you could have used a decorator:"}, {"timstamp": "2017-05-11 15:17", "user": "oded", "body": "Elarcis: no worries, I added in version in my fork (I don't care about pushing -f to it)"}, {"timstamp": "2017-05-11 15:18", "user": "oded", "body": "Elarcis: I want to try to PR it and if it gets rejected I may as well create a custom serializer (though I prefer to stay mainstream)"}, {"timstamp": "2017-05-11 15:18", "user": "Elarcis", "body": "oded: it's not my project, I'm not worried :P"}, {"timstamp": "2017-05-11 15:18", "user": "Elarcis", "body": "oded: what's the issue with the native one exactly?"}, {"timstamp": "2017-05-11 15:20", "user": "oded", "body": ""}, {"timstamp": "2017-05-11 15:33", "user": "Elarcis", "body": "oded: interesting... although JS arrays definitely are objects with numeric keys, just typed"}, {"timstamp": "2017-05-11 15:33", "user": "oded", "body": "Elarcis: well... they aren't, an object has different methods... it's not the same type"}, {"timstamp": "2017-05-11 15:33", "user": "oded", "body": "they could be, but they aren't"}, {"timstamp": "2017-05-11 15:38", "user": "heartburn", "body": "oded: what are you trying to do tho?"}, {"timstamp": "2017-05-11 15:39", "user": "heartburn", "body": "i mean, maybe there's a way to do it w/o forking"}, {"timstamp": "2017-05-11 15:39", "user": "Elarcis", "body": "oded: turns out, if you create an object with numeric keys, do __proto__ = Array.prototype on it and give it a length property with a set value... well the console tool is fooled and thinks that's an array :D"}, {"timstamp": "2017-05-11 15:40", "user": "heartburn", "body": "derp, missed the link"}, {"timstamp": "2017-05-11 15:40", "user": "Elarcis", "body": "heartburn: it's currently a PR being reviewed, so the fork has a purpose"}, {"timstamp": "2017-05-11 15:42", "user": "Elarcis", "body": "ok not completely an array, the length calculation gets derpy"}, {"timstamp": "2017-05-11 15:46", "user": "oded", "body": "I guess __proto__ is how JS decides where the methods of the object reside, but doing that is a strong patch"}, {"timstamp": "2017-05-11 15:47", "user": "oded", "body": "Ultimately you are right, an array is an object with continuos numeric keys, but technically that's not how it goes. And the problem is not with deserialization in JS, it's actually the deserialization on the receiving end that bothers me"}], "label": "feature"}
{"id": "8addb267", "body": "", "comments": [{"timstamp": "2018-08-13 16:10", "user": "picasso", "body": "i'm looking for strategies for managing an angularjs application that will have many different customized versions of the same core functionality. are there any particular design patterns i should be using, or tools, code style (es6 classes?)?"}, {"timstamp": "2018-08-13 16:11", "user": "picasso", "body": "my goal would be to have a \"base\" app project with its own git repo, and then each customized version has its own git repo which only includes the customizations and overrides"}, {"timstamp": "2018-08-13 16:13", "user": "storkme", "body": "sounds a bit like you might want an angular library project"}, {"timstamp": "2018-08-13 16:15", "user": "picasso", "body": "i should also mention that the first version of the app already exists and is angularjs 1.x"}, {"timstamp": "2018-08-13 16:15", "user": "picasso", "body": "what's an angular library project?"}, {"timstamp": "2018-08-13 16:16", "user": "SuperTyp", "body": "sounds like you just want to use git and develop on different branches"}, {"timstamp": "2018-08-13 16:17", "user": "picasso", "body": "the use case is a SaaS business which provides customizations of our core software for various clients. we built a new tool for one client in angular and now we want to repackage it for others"}, {"timstamp": "2018-08-13 16:18", "user": "picasso", "body": "but much to my chagrin, each client needs their own customizations, both in design and business logic"}, {"timstamp": "2018-08-13 16:18", "user": "storkme", "body": "not much of a SaaS business if you end up having to support a bunch of bespoke codebases"}, {"timstamp": "2018-08-13 16:18", "user": "picasso", "body": "git branches would work if the single codebase approach is the best"}, {"timstamp": "2018-08-13 16:18", "user": "Pyrrhus666", "body": "imho you should have thought of that in the design phase, you cant easily bolt that on later. unless you just manage x forks, like SuperTyp suggests"}, {"timstamp": "2018-08-13 16:19", "user": "picasso", "body": "storkme: we do good business. but yes, it is not ideal from a developer's perspective."}, {"timstamp": "2018-08-13 16:19", "user": "picasso", "body": "Pyrrhus666: that's fair, but we now need to design it to work for more clients. if it means a ground-up rebuild, i just need to understand the best strategy for doing it"}, {"timstamp": "2018-08-13 16:20", "user": "SuperTyp", "body": ".tap is like do(() => { //some code });"}, {"timstamp": "2018-08-13 16:21", "user": "SuperTyp", "body": "and use pipe to pipe functions like .tap .map .finalize etc"}, {"timstamp": "2018-08-13 16:22", "user": "Pyrrhus666", "body": "picasso, if its only about business logic, you could try abstracting that away and make it dynamic. otherwise my first though would be angular v6 components and extensions on those when needed."}, {"timstamp": "2018-08-13 16:22", "user": "Pyrrhus666", "body": "but I know too little of whats needed..."}, {"timstamp": "2018-08-13 16:23", "user": "picasso", "body": "we will handle as much as possible through dynamic configuration, but i believe we'll still need a way to override functionality or add custom functionality for a single client"}, {"timstamp": "2018-08-13 16:24", "user": "picasso", "body": "i haven't looked much at angular v6 since we've been in 1.x world but i will check it out. does it have mechanisms for these sorts of overrides? \"extensions\" ?"}, {"timstamp": "2018-08-13 16:25", "user": "Pyrrhus666", "body": "picasso, in typescript you can just do : class ExtComponent extends Component {} and build on that."}, {"timstamp": "2018-08-13 16:25", "user": "Pyrrhus666", "body": "(in v6, that is)"}, {"timstamp": "2018-08-13 16:26", "user": "Pyrrhus666", "body": "or use interfaces or summat to have different implementations."}, {"timstamp": "2018-08-13 16:27", "user": "picasso", "body": "would it be possible & would you recommend building the \"base\" part of this as an npm package, for more explicit dependency management"}, {"timstamp": "2018-08-13 16:27", "user": "picasso", "body": "that's how we handle the backend part of it w/ php/composer"}, {"timstamp": "2018-08-13 16:28", "user": "storkme", "body": "angular 2+ makes it pretty easy to build everything as a module, so yes"}], "label": "feature"}
{"id": "8addb268", "body": "", "comments": [{"timstamp": "2016-07-07 10:38", "user": "zug_", "body": "I want to always append a <span> after a <select> like this: $('select').after('<span>...</span>'), what is the angular2 way to do this? Create a component with the options as an attribute?"}, {"timstamp": "2016-07-07 10:41", "user": "zug_", "body": "How about the <option> tags?"}, {"timstamp": "2016-07-07 10:42", "user": "zug_", "body": "something like <form-select options=\"{key1 : \"value1\", key2: \"value2\"}\"> ?"}, {"timstamp": "2016-07-07 10:43", "user": "Pyrrhus", "body": "are the option dynamic and generated in angular ?"}, {"timstamp": "2016-07-07 10:43", "user": "zug_", "body": "No, I'd rather use the default syntax"}, {"timstamp": "2016-07-07 10:44", "user": "zug_", "body": "If it is at all possible"}, {"timstamp": "2016-07-07 10:44", "user": "Pyrrhus", "body": "like <my-select><option>...</option></my-select> ? that would be nice, no idea if thats possible..."}, {"timstamp": "2016-07-07 10:44", "user": "zug_", "body": "Well, sometimes they are generated"}, {"timstamp": "2016-07-07 10:44", "user": "zug_", "body": "That would be ideal"}, {"timstamp": "2016-07-07 10:45", "user": "zug_", "body": "Or <option *ngFor=\"..\"> etc."}, {"timstamp": "2016-07-07 10:45", "user": "Pyrrhus", "body": "otherwise just bind them <my-select [options]=arrayofoptions]>"}, {"timstamp": "2016-07-07 10:45", "user": "Pyrrhus", "body": "minus the last ]"}, {"timstamp": "2016-07-07 10:45", "user": "Pyrrhus", "body": "thats the easiest way, and then internally in the component template you can use the *ngFor"}, {"timstamp": "2016-07-07 10:46", "user": "Pyrrhus", "body": "zug_: why ? you can pass anything into the directive you could ever desire ;)"}, {"timstamp": "2016-07-07 10:46", "user": "zug_", "body": "Yes.. but that would limit me in the attributes of the <option> tag"}, {"timstamp": "2016-07-07 10:47", "user": "zug_", "body": "I know.. but it feels like such a big hassle, just to append a span"}, {"timstamp": "2016-07-07 10:47", "user": "Pyrrhus", "body": "zug_: well, you could always simply use jquery, if then span has no added functionality :)"}, {"timstamp": "2016-07-07 10:48", "user": "zug_", "body": "And this solution forces me to alter the select component if I want to do something custom to a single option"}, {"timstamp": "2016-07-07 10:49", "user": "Pyrrhus", "body": "zug_: why not add the span from your template then ? does it have to be dynamic ?"}, {"timstamp": "2016-07-07 10:49", "user": "zug_", "body": "I mean .. I'm open to all options, just wanted to know if I'm missing something in the angular way of thinking"}, {"timstamp": "2016-07-07 10:49", "user": "zug_", "body": "Well, then I have to add a span for each select manually, doesn't seem very DRY"}, {"timstamp": "2016-07-07 10:49", "user": "Pyrrhus", "body": "zug_: I just dont really get what your use-case is. what does the span do ?"}, {"timstamp": "2016-07-07 10:50", "user": "Pyrrhus", "body": "zug_: as DRY as making a <select> tag for every <select> :)"}, {"timstamp": "2016-07-07 10:50", "user": "zug_", "body": "Hehe, I get your point"}, {"timstamp": "2016-07-07 10:50", "user": "zug_", "body": "It's just one example of simple DOM altering, which I learned I'm not supposed to do"}, {"timstamp": "2016-07-07 10:51", "user": "Pyrrhus", "body": "zug_: unless its a component, of course ;)"}, {"timstamp": "2016-07-07 10:51", "user": "zug_", "body": "But in this case, I want to extract the \"placeholder\" attribute of the select, and put it in a span"}, {"timstamp": "2016-07-07 10:52", "user": "zug_", "body": "Simple use-case, but I'm sure I'm facing something like this more often"}, {"timstamp": "2016-07-07 10:52", "user": "zug_", "body": "And I want to get it right :)"}, {"timstamp": "2016-07-07 10:53", "user": "Pyrrhus", "body": "zug_: well, it alters the DOM, so in ng2 terms its a structural directive..."}, {"timstamp": "2016-07-07 10:54", "user": "zug_", "body": "With custom HTML, so a Component, right?"}, {"timstamp": "2016-07-07 10:54", "user": "Pyrrhus", "body": "zug_: yup"}, {"timstamp": "2016-07-07 10:54", "user": "zug_", "body": "Pyrrhus: Thanks a lot"}, {"timstamp": "2016-07-07 10:55", "user": "Elarcis", "body": "Pyrrhus: indexedDB too"}, {"timstamp": "2016-07-07 10:55", "user": "Pyrrhus", "body": "Elarcis: youre right, too modern for me though :)"}, {"timstamp": "2016-07-07 10:55", "user": "Elarcis", "body": "Pyrrhus: I'm not getting much of it though, I just know that we use it XDD"}, {"timstamp": "2016-07-07 10:55", "user": "zug_", "body": "Pyrrhus: Will make a component :)"}, {"timstamp": "2016-07-07 10:56", "user": "Pyrrhus", "body": "Elarcis: hehe :)"}, {"timstamp": "2016-07-07 10:56", "user": "Pyrrhus", "body": "zug_: thats the spirit ;)"}], "label": "feature"}
{"id": "8addb269", "body": "", "comments": [{"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "is there a dropdown menu or something?"}, {"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "How much of the HTML do I have to reproduce?"}, {"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "this thing I'm working on is pieced together out of templates"}, {"timstamp": "2017-02-11 00:59", "user": "wafflejock", "body": "colonel-panic,"}, {"timstamp": "2017-02-11 01:18", "user": "colonel-panic", "body": "wafflejock, thanks for that plunker."}, {"timstamp": "2017-02-11 01:18", "user": "colonel-panic", "body": "That's how it's supposed to work, but for some reason I can't seem to pass this variable from my controller into the template"}, {"timstamp": "2017-02-11 01:19", "user": "colonel-panic", "body": "My code looks very similar to that, except that the color-changing code is embedded inside a function that invalidates the form if a certain button is not clicked"}], "label": "feature"}
{"id": "8addb26a", "body": "", "comments": [{"timstamp": "2017-07-26 10:25", "user": "User___", "body": "is there a way to download an angular website for offline viewing?"}, {"timstamp": "2017-07-26 10:26", "user": "icebox", "body": "User___: no"}, {"timstamp": "2017-07-26 10:26", "user": "icebox", "body": "User___: unless 3rd party tools to web scraping a site"}], "label": "feature"}
{"id": "8addb26b", "body": "", "comments": [{"timstamp": "2018-10-29 13:13", "user": "berz3rk", "body": "hello guys, im wondering how to realize a collapsible area at the end of my angular app and when I open it angular should jump to the content you know?"}, {"timstamp": "2018-10-29 13:13", "user": "berz3rk", "body": "actual scrolling"}, {"timstamp": "2018-10-29 13:15", "user": "berz3rk", "body": "I tried to do this with viewport scroller , but it didnt realy work out :("}, {"timstamp": "2018-10-29 13:15", "user": "berz3rk", "body": "I tried to place an element in the html after the collapsible area and used viewportScroller.scrollToAnchor to that element, it works the second time, but the first time it doesnt do anything"}, {"timstamp": "2018-10-29 13:16", "user": "berz3rk", "body": "maybe its because angular first has to build the DOM content of that collapsible area? no idea"}, {"timstamp": "2018-10-29 13:18", "user": "Pyrrhus666", "body": "berz3rk, make sure the anchor exists, at least, even if the collapsible is still collapsed ?"}, {"timstamp": "2018-10-29 13:19", "user": "berz3rk", "body": "the anchor is always there, its behind the collapsible div"}, {"timstamp": "2018-10-29 13:19", "user": "berz3rk", "body": "not inside"}, {"timstamp": "2018-10-29 13:19", "user": "Pyrrhus666", "body": "so it does scroll, but not far enough ?"}, {"timstamp": "2018-10-29 13:20", "user": "Pyrrhus666", "body": "personally, I feel this is bad ux, and I wouldnt even try to do it, but ok..."}, {"timstamp": "2018-10-29 13:21", "user": "pupskuchen", "body": "let's not speak about a11y"}, {"timstamp": "2018-10-29 13:22", "user": "Pyrrhus666", "body": "not even thinking about accessibility, it just feels wrong to me :)"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "eh"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "it doesnt do anything at first klick"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "at second it works"}, {"timstamp": "2018-10-29 13:24", "user": "pupskuchen", "body": "Pyrrhus666: probably because it is"}, {"timstamp": "2018-10-29 13:26", "user": "Pyrrhus666", "body": "berz3rk, probably because the 2nd time the content is already there or smt. I think you cant really solve this cleanly."}, {"timstamp": "2018-10-29 13:32", "user": "berz3rk", "body": "what should I do then?"}, {"timstamp": "2018-10-29 13:34", "user": "Pyrrhus666", "body": "dunno. what are you trying to achieve ? cant you use a popover ? or display the content in some other fashion ?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "i have a collapsible area at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "think about a link or something"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you click on it, a text area expands"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you read stuff"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "now the issue is the thing is at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "so if you click the content that is revealing is under your current view position"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you have to scroll to the new content you know?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "or else you have to scroll then yourself afterwords"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "why not click on the collapse directly ? like its meant to be used ?"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "the user clicks on the collapse"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "yes."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "but angular doesnt jump to the revealing content"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "no need if the user clicks on the collapse itself."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "i want that the content reveals"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "and that the user sees it without scrolling"}, {"timstamp": "2018-10-29 13:39", "user": "Pyrrhus666", "body": "we just established that that is not going to work."}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "this is the way a collapse is normally used :"}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "you click on the thing, it expands _in_place_"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "yeah it does that in berz3rk's case too"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "you just don't see it because the toggle is at the end of the page"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "so the content is expanding beyond the visible part of the page"}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "ah ok. then dont use a collapse, imho."}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "or accept that the user must scroll."}, {"timstamp": "2018-10-29 13:44", "user": "Pyrrhus666", "body": "(I was under the impression the click was somewhere else, and the collapse was expanded programmatically)"}], "label": "feature"}
{"id": "8addb26c", "body": "", "comments": [{"timstamp": "2018-02-25 01:17", "user": "Marble68", "body": "s2013: Do the filter as a function, I think."}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "Q: Is there something like ng-inspector for Angular?"}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "something to examine scope in debug?"}, {"timstamp": "2018-02-25 01:22", "user": "Marble68", "body": "Somethign anyone might recommend"}], "label": "feature"}
{"id": "8addb26d", "body": "", "comments": [{"timstamp": "2017-12-01 12:07", "user": "joakimk", "body": "We have an app interfacing a backend/API. app.component.onNgInit() calls up a service, to get some data from the backend, and subscribes to this. Before authentication, this would return the data from the API at app start and we'd be done. However, now, onNgInit fails to get data because the user is not logged in (authenticated) in the backend. So after logging in, I have to reload the app (client) to call the API again to get the"}, {"timstamp": "2017-12-01 12:07", "user": "joakimk", "body": "I'm wondering, now that we've got authentication in place, maybe AppComponent should no longer set up the subscriptions to get the initial data?"}, {"timstamp": "2017-12-01 12:09", "user": "joakimk", "body": "... since AppComponent is the component loaded *before* authentication (when the user is met with the login form) every time. Guess we should set up a new \"StartComponent\" or \"WelcomeComponent\" or something, which takes over this functionality. The user is redirected to StartComponent after logging in"}, {"timstamp": "2017-12-01 12:13", "user": "joakimk", "body": "in any case, after logging in, the user hits path '' (empty path) which currently invokes the Module1Component. Until now, this component has been able to assume that the *previous* module (i.e. AppComponent) has already got data from the backend, but this no longer holds. So, all the while Module1Component is the \"landing pad\" after login, then I guess this component could/should take over the responsibility of getting the initia"}, {"timstamp": "2017-12-01 12:14", "user": "joakimk", "body": "At least if it finds that data has indeed *not* been resolved"}, {"timstamp": "2017-12-01 12:14", "user": "joakimk", "body": "any input on this ? :)"}, {"timstamp": "2017-12-01 12:18", "user": "joakimk", "body": "I guess, alternatively, I could just do a reload() after successful login....."}, {"timstamp": "2017-12-01 12:20", "user": "joakimk", "body": "so, either App handles login/auth, and redirects to Module1, which reloads page if data is \"missing\". Or, App redirects to Welcome after login, which talks to backend and gets data, and then redirects to Module1 (which then has data as before)"}], "label": "feature"}
{"id": "8addb26e", "body": "", "comments": [{"timstamp": "2016-05-26 17:55", "user": "jonkri", "body": "What tool can I use for producing CSS product files? Both stylus and browserify-css seems a bit overkill... I'm using browserify for the JavaScript generation, though."}, {"timstamp": "2016-05-26 17:55", "user": "jonkri", "body": "s/product/production"}, {"timstamp": "2016-05-26 18:07", "user": "jonkri", "body": "For node modules."}, {"timstamp": "2016-05-26 18:07", "user": "jonkri", "body": "Is there a nice npm equivalent to Bower's bower_concat task for CSS? I would like to produce a CSS bundle for the browser using as little configuration as possible."}], "label": "feature"}
{"id": "8addb26f", "body": "", "comments": [{"timstamp": "2017-05-30 14:25", "user": "Eduard_Munteanu", "body": "I have a login screen. Should I use Location instead of Router to redirect people to it, assuming my app already uses a router outlet?"}, {"timstamp": "2017-05-30 15:15", "user": "Eduard_Munteanu", "body": "This is annoying. I have my app structured as /login and / { /foo, /bar, /baz }, where '/' contains a navbar and a router outlet for those tabs."}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Well, web dev kinds sucks all around, really. :("}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Is there some way I can avoid using secondary routes for login and those tabs?"}], "label": "feature"}
{"id": "8addb270", "body": "", "comments": [{"timstamp": "2016-10-25 17:53", "user": "anotheryou", "body": "Hi, I want to do an ng-if for if a filtered list is empty. Now how do i build the equivalent to something like \"| filter: {property:true}\" in the ng-repeat to something like \"contains\" for the ng-if?"}, {"timstamp": "2016-10-25 17:54", "user": "anotheryou", "body": "I simply want to show a pretty empty state if there is nothing to show"}, {"timstamp": "2016-10-25 17:58", "user": "anotheryou", "body": "(ng 1.5.x)"}], "label": "feature"}
{"id": "8addb271", "body": "", "comments": [{"timstamp": "2017-08-14 23:46", "user": "lawd", "body": "hey all anyone know if it's possible to open an angular 2/4 route in new window and have it grab data from a service"}], "label": "feature"}
{"id": "8addb272", "body": "", "comments": [{"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "I want to have the link of ng-view hidden when I click on it and the new page renders. I don't need the usual upper nav where the links or routes are present"}, {"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "Transition to a new page"}], "label": "feature"}
{"id": "8addb273", "body": "", "comments": [{"timstamp": "2017-04-27 20:50", "user": "wooster", "body": "question: i'm trying to make a chrome extension that happens to use angular. the page context contains some areas that have user-generated content that i do not want angular to parse, in case it contains malicious code or things that will break the parser. i don't really have much control over the user-generated part of the page. is there some way to run angular.bootstrap() on the page, excluding a"}, {"timstamp": "2017-04-27 20:50", "user": "wooster", "body": "certain part?"}, {"timstamp": "2017-04-27 20:53", "user": "wooster", "body": "i want to avoid any parsing/interpolation on parts of the page"}], "label": "feature"}
{"id": "8addb274", "body": "", "comments": [{"timstamp": "2017-02-10 19:55", "user": "kas84", "body": "Id like to calculate a ng-style based on some dom of the page, but the ng-style fires some time before angular finished manipulating the dom"}, {"timstamp": "2017-02-10 19:56", "user": "kas84", "body": "is there a way to do a timeout or something like that to wait for changes?"}], "label": "feature"}
{"id": "8addb275", "body": "", "comments": [{"timstamp": "2017-03-23 05:42", "user": "Anish__", "body": "Is there any provision to built in Auth functionality in Angular 2?"}], "label": "feature"}
{"id": "8addb276", "body": "", "comments": [{"timstamp": "2016-12-16 10:35", "user": "nana_", "body": "hi i hava a question."}, {"timstamp": "2016-12-16 10:35", "user": "nana_", "body": "we can export excel to local using angular, then is it possible to add several sheet to .xls file?"}], "label": "feature"}

{"id": "73af7d03", "body": "", "comments": [{"timstamp": "10:54", "user": "storkme", "body": "i've never heard of turbo, which isn't a great sign since it's from 2017"}, {"timstamp": "11:15", "user": "Eugene_", "body": "never heard of turbo as well"}, {"timstamp": "11:15", "user": "Eugene_", "body": "I'd say we all need to wait for github to become full fledged package manager and feel a breath of fresh air coming towards us :)"}], "label": "feature"}
{"id": "73af7d14", "body": "", "comments": [{"timstamp": "12:04", "user": "murii", "body": "Do you guys know a place/places where I can see sites made with angular?"}, {"timstamp": "12:04", "user": "ray02", "body": "google :D"}, {"timstamp": "12:04", "user": "murii", "body": "I'm trying to see if my design decisions are the best"}, {"timstamp": "12:04", "user": "murii", "body": ":D"}, {"timstamp": "12:05", "user": "jlebrech", "body": "they are not"}, {"timstamp": "12:05", "user": "jlebrech", "body": "best is subjective"}, {"timstamp": "12:06", "user": "ray02", "body": "jlebrech: the training website is depressing me"}, {"timstamp": "12:06", "user": "ray02", "body": "make me feell old and slow"}, {"timstamp": "12:07", "user": "jlebrech", "body": "\"you are way below average\" fuuuuuuuuu"}, {"timstamp": "12:08", "user": "jlebrech", "body": "i know, i downloaded one on steam. kept telling me i was a noob"}, {"timstamp": "12:10", "user": "ray02", "body": "ahah"}, {"timstamp": "12:11", "user": "stennowork", "body": ":/"}, {"timstamp": "12:11", "user": "ray02", "body": "fortunately i'm not trying to make a carrier as video game player"}, {"timstamp": "12:13", "user": "ray02", "body": "murii: if you are using material design they have a portfolio with stuff make with their style and and also google make a competition each year to reward the best product that use material design"}, {"timstamp": "12:14", "user": "jlebrech", "body": "if it help me win more at apex legends, i'd be happy"}, {"timstamp": "12:14", "user": "ray02", "body": "if you are not using material design you can have a look at any website that you like :D because the fact that a website is made with angular or react should not change in better or in worst how look like"}, {"timstamp": "12:18", "user": "jlebrech", "body": "i was thinking yesterday, what if you were trying to describe living in a simulation to friends and they didn't know what you were talking about and then you say \"like in the matrix\" and then you search altavista.com and the movie \"the matrix\" was never made."}, {"timstamp": "12:20", "user": "SargoDarya", "body": "jlebrech: Working on games again?"}, {"timstamp": "12:20", "user": "jlebrech", "body": "not yet, just thoughts."}, {"timstamp": "12:20", "user": "jlebrech", "body": "i have my gaming laptop back, might start again"}, {"timstamp": "12:40", "user": "SargoDarya", "body": "jlebrech: Keep me updated :)"}, {"timstamp": "12:41", "user": "jlebrech", "body": "did you finish the unreal c++ course?"}, {"timstamp": "12:42", "user": "SargoDarya", "body": "jlebrech: Nope, I'm somehow lacking time at the moment"}, {"timstamp": "12:42", "user": "jlebrech", "body": "yeaah same. think it's just motivation to do anything productive outside of work"}, {"timstamp": "12:45", "user": "murii", "body": "ray02: I'm using material, where can I see that portofolio website you mentioned?"}], "label": "feature"}

{"id": "0ec1e4a8", "body": "", "comments": [{"timstamp": "20:08", "user": "Ben_1", "body": "is it possible to use the service of an application in all of its sub projects?"}], "label": "feature"}
{"id": "0ec1e366", "body": "", "comments": [{"timstamp": "13:26", "user": "Paradisee", "body": "is there anything in angular that allows you to load more and more items more you go down on the page?"}, {"timstamp": "13:27", "user": "Paradisee", "body": "i have tons of items to load, and i'd like to return just a portion of them"}, {"timstamp": "13:27", "user": "Paradisee", "body": "so that if the user goes down on the page, i give him more items to load"}, {"timstamp": "13:27", "user": "Paradisee", "body": "sort of pagination"}, {"timstamp": "13:28", "user": "Paradisee", "body": "i prefer to check the number of elements"}], "label": "feature"}
{"id": "0edea35e", "body": "", "comments": [{"timstamp": "17:40", "user": "anddam", "body": "howdy"}, {"timstamp": "17:41", "user": "anddam", "body": "in template-driven form can I a built-in validator that is only applied if there is data?"}, {"timstamp": "17:41", "user": "anddam", "body": "namely I have an optional birth-date field where I want the DD/MM/YYYY format"}, {"timstamp": "17:41", "user": "ray02", "body": "yep"}, {"timstamp": "17:42", "user": "ray02", "body": "anddam: with is required"}, {"timstamp": "17:42", "user": "anddam", "body": "with?"}, {"timstamp": "17:42", "user": "ray02", "body": "\"is required\""}, {"timstamp": "17:42", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:42", "user": "anddam", "body": "I figured Validators.pattern fits the bill but I want it to only be checked if there is actual data"}, {"timstamp": "17:43", "user": "anddam", "body": "but that would always return ValidationErrors if the field is empty"}, {"timstamp": "17:43", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:44", "user": "ray02", "body": "is not enough ?"}, {"timstamp": "17:52", "user": "anddam", "body": "well, that seems the opposite of what I wanted"}, {"timstamp": "17:52", "user": "anddam", "body": "it will mark as non-valid an empty field"}, {"timstamp": "17:55", "user": "anddam", "body": "I want the field to be optional, but _if_ filled then match a pattern"}, {"timstamp": "17:55", "user": "anddam", "body": "I figure I need a custom validator for that, is that right?"}, {"timstamp": "17:58", "user": "ray02", "body": "anddam: sorry it's not totally clear, with pattern you check if what is typed inside respect a pattern"}, {"timstamp": "17:58", "user": "ray02", "body": "is't this what you want?"}, {"timstamp": "17:59", "user": "ray02", "body": "*isn't"}, {"timstamp": "18:01", "user": "anddam", "body": "ok, but I'd like the field to be valid if a) it is empty or b) it has a content and this content is DD/MM/YYYY"}, {"timstamp": "18:02", "user": "anddam", "body": "the pattern can obviously be expressed in regex"}, {"timstamp": "18:02", "user": "anddam", "body": "but I'm asking if I can combine built-in validators with logical operators"}, {"timstamp": "18:05", "user": "ray02", "body": "ahh now i get it, umm i think yes you are right you need a custom validator where you can add some personal logic"}, {"timstamp": "18:07", "user": "anddam", "body": "I see, thanks"}, {"timstamp": "18:12", "user": "ray02", "body": "because as you can notice, the validator is an array so no logic inside"}, {"timstamp": "18:25", "user": "anddam", "body": "yep, and no function to act on those as operators"}, {"timstamp": "18:25", "user": "anddam", "body": "I'm having a bit of hard time understanding this (control: AbstractControl): { [key: string]: any } | null => { ... }"}, {"timstamp": "18:25", "user": "anddam", "body": "the ellipsis are mine, that's a fat-arrow function accepting one argument of type AbastractControl and returning... what?"}, {"timstamp": "18:25", "user": "anddam", "body": "either null or an object"}, {"timstamp": "18:26", "user": "anddam", "body": "but the object has [key: string] as property, that I do not get"}, {"timstamp": "18:26", "user": "anddam", "body": "why the array notation?"}, {"timstamp": "18:26", "user": "anddam", "body": "does it allow for multiple properties as long as their \"name\" is a string?"}, {"timstamp": "18:26", "user": "anddam", "body": "ng generate directives blahblablah"}, {"timstamp": "18:27", "user": "anddam", "body": "no sorry"}, {"timstamp": "18:27", "user": "anddam", "body": ""}], "label": "feature"}
{"id": "0edea3f9", "body": "", "comments": [{"timstamp": "04:50", "user": "duvnell1", "body": "I have a component which renders the data provided by a service. The service requires a URL when it is created (to know where to get its data from). I made the component have a DI constructor parameter for the service. But is there a way to specify that URL when the service is instantiated? Is that in the configuration somewhere? Also, ATM this is a test app.. I'm hoping to make a reusable FeatureModule out of the component a"}, {"timstamp": "04:50", "user": "duvnell1", "body": "ervice to be used in other apps. Can a module be given a parameter (the URL in this case) when it's imported?"}], "label": "feature"}
{"id": "0edea285", "body": "", "comments": [{"timstamp": "19:07", "user": "Ben_1", "body": "is it possible to have multiple projects which will work as blackbox in a single parent application without using any third party library? I just wanna show multiple apps on the right side and navigate through them on the left side navigation."}, {"timstamp": "19:07", "user": "Ben_1", "body": "is this possible by using the parent applications router in combination with the router of each child app?"}], "label": "feature"}
