{"id": "93de0e8a", "body": "", "comments": [{"timstamp": "2017-12-06 14:38", "user": "alive-and-well", "body": "Hi, is there a way to trace function calls within chromium? I want to trace all function called by a script (including intrinsic functions, or other internal APIs (e.g., document.getElementById()))."}, {"timstamp": "2017-12-06 14:38", "user": "alive-and-well", "body": "Any advice is appriciated"}], "label": "feature"}
{"id": "93de0e8b", "body": "", "comments": [{"timstamp": "2017-07-12 20:03", "user": "thakis_", "body": "pcc2:"}, {"timstamp": "2017-07-12 20:03", "user": "thakis_", "body": "i guess that error is now actually fatal (which is generally a good thing)"}, {"timstamp": "2017-07-12 20:03", "user": "thakis_", "body": "i suppose we should just disable <unconvertable> gdb-index in fuchsia builds for now"}, {"timstamp": "2017-07-12 20:03", "user": "thakis_", "body": "?"}, {"timstamp": "2017-07-12 20:12", "user": "pcc2", "body": "thakis_: makes sense"}, {"timstamp": "2017-07-12 20:12", "user": "pcc2", "body": "thakis_: should we add fuchsia to the list of trybots for clang rolls?"}, {"timstamp": "2017-07-12 20:12", "user": "thakis_", "body": "pcc2: yeah probably :-/"}, {"timstamp": "2017-07-12 20:13", "user": "thakis_", "body": "once linux is completely on lld, the linux coverage will hopefully be mostly enough though"}, {"timstamp": "2017-07-12 20:13", "user": "thakis_", "body": "(for tot bots)"}], "label": "feature"}
{"id": "93de0e8c", "body": "", "comments": [{"timstamp": "2016-04-18 10:15", "user": "hbos", "body": "Heya! Does anyone know if it's possible yet to clone javascript objects that are backed up by a c++ implementation (and not get \"An object could not be cloned.\")? The whatwg spec talks about an internal Clone method but from what I can tell it looks like we don't support that yet. I could be wrong. See blink-dev post for more info:"}, {"timstamp": "2016-04-18 10:21", "user": "fsod", "body": "hbos, did you look at ScriptValueSerializer? I think there would similar type objects being handled there"}, {"timstamp": "2016-04-18 10:27", "user": "hbos_", "body": "fsod: I looked at ScriptValueSerializer::doSerializeValue where it hits \"An object could not be cloned.\" ("}, {"timstamp": "2016-04-18 10:29", "user": "fsod", "body": "I think the key here is \"_internal_ Clone method\""}, {"timstamp": "2016-04-18 10:32", "user": "fsod", "body": "See ImageData for an example -"}, {"timstamp": "2016-04-18 10:33", "user": "hbos_", "body": "Hmmm"}, {"timstamp": "2016-04-18 10:36", "user": "hbos_", "body": "Cool, so ImageData is an example of an object with Clone, and in ScriptValueSerializer::doSerializeValue there is \"if (V8ImageData::hasInstance(...)) { writeImageData(value); }\""}, {"timstamp": "2016-04-18 10:36", "user": "fsod", "body": "Yepp"}, {"timstamp": "2016-04-18 10:39", "user": "fsod", "body": "Presumably the spec for the object you're cloning has a definition of [[Clone]] for that object"}, {"timstamp": "2016-04-18 10:40", "user": "hbos_", "body": "I thought these were special cases for some reason, and I was looking for something more abstract like \"if <is cloneable>\". But perhaps I can add an \"if <the object type I want to be cloneable>\" to doSerializeValue."}, {"timstamp": "2016-04-18 10:40", "user": "hbos_", "body": "Yes, I can implement my own Clone, but I didn't know where to put it"}, {"timstamp": "2016-04-18 10:43", "user": "hbos_", "body": "Thanks fsod :) I'll try to do some experimental changes"}], "label": "feature"}
{"id": "93de0e8d", "body": "", "comments": [{"timstamp": "2016-07-10 23:11", "user": "bahoo", "body": "Q: Any developers looking for a side project? Ive got a Dev Tools extension I would like to commission, which would add a few bells and whistles to the Network tab. Ping me if youre interested!"}], "label": "feature"}
{"id": "93de0e8e", "body": "", "comments": [{"timstamp": "2016-04-13 19:55", "user": "thakis", "body": "dcheng: you broke official builds on win:"}, {"timstamp": "2016-04-13 19:55", "user": "thakis", "body": "..\\..\\chrome\\browser\\google\\google_update_win_unittest.cc(626,3): error: no template named 'scoped_ptr'; did you mean 'testing::internal::scoped_ptr'?"}, {"timstamp": "2016-04-13 19:56", "user": "thakis", "body": "probably just needs an #include in that file"}, {"timstamp": "2016-04-13 19:56", "user": "ellyjones", "body": "this IRC channel is not the right venue for this discussion"}, {"timstamp": "2016-04-13 19:56", "user": "ellyjones", "body": "feel free to file a feature request and I'll route it to the extensions team for you"}, {"timstamp": "2016-04-13 19:56", "user": "ellyjones", "body": "none of us here are in a position to overrule the extensions team's decision about this"}, {"timstamp": "2016-04-13 19:56", "user": "thakis", "body": "sheriffs: ^"}, {"timstamp": "2016-04-13 19:58", "user": "ellyjones", "body": "please have this discussion elsewhere"}, {"timstamp": "2016-04-13 19:58", "user": "ellyjones", "body": "there's sheriff discussion happening"}, {"timstamp": "2016-04-13 19:58", "user": "ellyjones", "body": "thakis: my memory_info CL broke on the win bots :("}, {"timstamp": "2016-04-13 19:59", "user": "thakis", "body": "ellyjones: why do you break the bots :-("}, {"timstamp": "2016-04-13 19:59", "user": "ellyjones", "body": "I'm the real monster here"}, {"timstamp": "2016-04-13 19:59", "user": "thakis", "body": "no kidding"}, {"timstamp": "2016-04-13 19:59", "user": "ellyjones", "body": "tbh there's no tests that will catch it if I broke this code anyway"}, {"timstamp": "2016-04-13 19:59", "user": "chrome", "body": "ellyjones: like i said, a simple options in settings to do this wouldn't hurt, i'm down to file a request if you want to help me with that, but i'm sure it's been done before..."}, {"timstamp": "2016-04-13 20:00", "user": "ellyjones", "body": "chrome: please file an FR if you want this feature"}], "label": "feature"}
{"id": "93de0e8f", "body": "", "comments": [{"timstamp": "2017-09-25 14:18", "user": "cgvwzq", "body": "hi, is there a reason for chrome not using hugepages on memory allocation? nor even rely on madvise with THP? sorry if this is not the proper place to ask"}, {"timstamp": "2017-09-25 14:27", "user": "ellyjones", "body": "cgvwzq: in general I don't think we can use hugepages with ASLR"}, {"timstamp": "2017-09-25 14:54", "user": "cgvwzq", "body": "ellyjones: thanks, yep, I thought that could be one reason. Do you know if other browsers do the same? or if there's any public discussion about this?"}, {"timstamp": "2017-09-25 15:15", "user": "ellyjones", "body": "cgvwzq: I should think every browser would use ASLR"}, {"timstamp": "2017-09-25 15:15", "user": "ellyjones", "body": "don't know of any discussion"}, {"timstamp": "2017-09-25 15:26", "user": "cgvwzq", "body": "ellyjones: umm.. well, hugepages can reduce a few bits of entropy, but do not completely cancel ASLR. right?"}, {"timstamp": "2017-09-25 15:27", "user": "cgvwzq", "body": "at least in 64-bit.."}, {"timstamp": "2017-09-25 15:37", "user": "ellyjones", "body": "I don't know, sorry"}, {"timstamp": "2017-09-25 15:37", "user": "ellyjones", "body": "you are better off raising this on security-dev"}, {"timstamp": "2017-09-25 15:37", "user": "ellyjones", "body": "but in general our heap allocator (aiui) wants unmapped guard pages on either side of allocations"}, {"timstamp": "2017-09-25 15:37", "user": "ellyjones", "body": "which may be difficult to do with hugepages"}, {"timstamp": "2017-09-25 15:38", "user": "cgvwzq", "body": "ok, thanks :)"}], "label": "feature"}
{"id": "93de0e90", "body": "", "comments": [{"timstamp": "2017-11-09 14:00", "user": "maxmorin", "body": "Good morning Elly"}, {"timstamp": "2017-11-09 14:29", "user": "ellyjones", "body": "hi maxmorin :) how goes?"}, {"timstamp": "2017-11-09 14:50", "user": "maxmorin", "body": "Elly: I'm doing quite well, reviewing some code and writing some docs. Everything but coding, essentially :)"}, {"timstamp": "2017-11-09 14:51", "user": "testerbeta", "body": "but can you give me a direct link"}, {"timstamp": "2017-11-09 14:52", "user": "ellyjones", "body": "testerbeta: no, sorry, I have work to do"}, {"timstamp": "2017-11-09 14:52", "user": "testerbeta", "body": "something like"}, {"timstamp": "2017-11-09 14:53", "user": "testerbeta", "body": "maxmorin :)"}, {"timstamp": "2017-11-09 15:08", "user": "testerbeta", "body": "ellyjones for me the best would be"}, {"timstamp": "2017-11-09 15:08", "user": "testerbeta", "body": "clone it at the cloud"}, {"timstamp": "2017-11-09 15:08", "user": "testerbeta", "body": "upload it to a temporary host (teknik.io)"}, {"timstamp": "2017-11-09 15:30", "user": "testerbeta", "body": "ellyjones maxmori how can i clone chromium code from git?"}, {"timstamp": "2017-11-09 15:30", "user": "testerbeta", "body": "beta channel"}, {"timstamp": "2017-11-09 16:29", "user": "testerbeta", "body": "chromium bea"}, {"timstamp": "2017-11-09 16:29", "user": "testerbeta", "body": "still outdated"}, {"timstamp": "2017-11-09 16:29", "user": "testerbeta", "body": "beta"}, {"timstamp": "2017-11-09 18:28", "user": "ellyjones", "body": "I don't believe there's a setting for that, although there should be a \"use system dialog\" thing in the bottom left of the chrome one"}, {"timstamp": "2017-11-09 18:30", "user": "THE_GFR|WORK", "body": "ellyjones: thanks I want to use it always without having to \"click\" on something each time"}, {"timstamp": "2017-11-09 18:30", "user": "THE_GFR|WORK", "body": "I guess all those settings were removed because \"google knows best\""}, {"timstamp": "2017-11-09 18:30", "user": "THE_GFR|WORK", "body": "however I'm just saying"}, {"timstamp": "2017-11-09 18:31", "user": "ellyjones", "body": "unfortunately we can't have a setting for everyone one might wish to do"}], "label": "feature"}
{"id": "93de0e91", "body": "", "comments": [{"timstamp": "2015-08-12 00:03", "user": "aklein:", "body": "danakj: I see you rolled back the previous v8 roll? it seems to have autorolled in again. do you expect it to fail again?"}, {"timstamp": "2015-08-12 00:04", "user": "aklein:", "body": "danakj: looks like the Win x64 builder, which failed previously, is offline...hmmm"}, {"timstamp": "2015-08-12 00:08", "user": "danakj:", "body": "aklein: i would expect it to if its not addressed, i iddnt get to see if the revert fixed it tho"}, {"timstamp": "2015-08-12 00:14", "user": "aklein:", "body": "danakj: the new roll is exactly the same as the old one"}, {"timstamp": "2015-08-12 00:15", "user": "danakj:", "body": "looks like the revert fixed it"}, {"timstamp": "2015-08-12 00:15", "user": "danakj:", "body": "oh hm"}, {"timstamp": "2015-08-12 00:16", "user": "danakj:", "body": "it built ok the step before the revert"}, {"timstamp": "2015-08-12 00:16", "user": "danakj:", "body": "so it fixed itself somehow?"}, {"timstamp": "2015-08-12 00:16", "user": "danakj:", "body": "ok hopefully it sticks this time then"}, {"timstamp": "2015-08-12 00:16", "user": "aklein:", "body": "danakj: nothing in the new v8 version makes any gyp changes"}, {"timstamp": "2015-08-12 00:16", "user": "aklein:", "body": "so I'd think it's unrelated"}, {"timstamp": "2015-08-12 00:17", "user": "danakj:", "body": "#windowsproblems"}, {"timstamp": "2015-08-12 00:17", "user": "danakj:", "body": "the best part is they fix themselves?"}, {"timstamp": "2015-08-12 00:17", "user": "danakj:", "body": "aklein: thanks for watching out for it"}, {"timstamp": "2015-08-12 00:22", "user": "thakis_:", "body": "danakj: aklein:"}, {"timstamp": "2015-08-12 00:22", "user": "thakis_:", "body": "(i left a comment at the bottom)"}, {"timstamp": "2015-08-12 00:31", "user": "danakj:", "body": "thakis_: oh :|"}, {"timstamp": "2015-08-12 00:31", "user": "danakj:", "body": "how can gyp be flaky :/"}, {"timstamp": "2015-08-12 00:31", "user": "thakis_:", "body": ":-|"}, {"timstamp": "2015-08-12 00:31", "user": "thakis_:", "body": "its not gyp"}, {"timstamp": "2015-08-12 00:32", "user": "thakis_:", "body": "its some bug in v8, or cl"}, {"timstamp": "2015-08-12 00:32", "user": "danakj:", "body": "o hm"}, {"timstamp": "2015-08-12 00:33", "user": "thakis_:", "body": "as it happens also with clang-cl and gn, both gyp and cl seem like unlikely causes, actually"}, {"timstamp": "2015-08-12 00:34", "user": "danakj:", "body": "mac sizes is still broken?"}, {"timstamp": "2015-08-12 00:35", "user": "danakj:", "body": "ah"}, {"timstamp": "2015-08-12 00:35", "user": "danakj:", "body": "the revert is still being built"}, {"timstamp": "2015-08-12 00:35", "user": "danakj:", "body": "wow that's behind"}, {"timstamp": "2015-08-12 00:35", "user": "rockot:", "body": "yeah."}, {"timstamp": "2015-08-12 00:35", "user": "danakj:", "body": "android gn_check failing"}, {"timstamp": "2015-08-12 00:35", "user": "rockot:", "body": "i notified sky, looks like he was doing stuff there"}, {"timstamp": "2015-08-12 00:36", "user": "rockot:", "body": "specifically mandoline GN"}, {"timstamp": "2015-08-12 00:36", "user": "danakj:", "body": "//mandoline/app/android:mandoline_runner"}, {"timstamp": "2015-08-12 00:36", "user": "danakj:", "body": "yah"}, {"timstamp": "2015-08-12 00:36", "user": "danakj:", "body": "ironically"}, {"timstamp": "2015-08-12 00:36", "user": "rockot:", "body": "heh"}, {"timstamp": "2015-08-12 00:36", "user": "danakj:", "body": "his CL claims to make this step pass"}, {"timstamp": "2015-08-12 00:36", "user": "rockot:", "body": "the CL description, yeah"}, {"timstamp": "2015-08-12 00:37", "user": "danakj:", "body": "did you make a bug?"}, {"timstamp": "2015-08-12 00:37", "user": "rockot:", "body": "yes"}, {"timstamp": "2015-08-12 00:37", "user": "rockot:", "body": "it should be linked"}, {"timstamp": "2015-08-12 00:37", "user": "danakj:", "body": "linked where?"}, {"timstamp": "2015-08-12 00:37", "user": "rockot:", "body": "sheriff-o-matic"}, {"timstamp": "2015-08-12 00:37", "user": "danakj:", "body": "oh hm"}, {"timstamp": "2015-08-12 00:37", "user": "rockot:", "body": "it's crbug.com/519755"}, {"timstamp": "2015-08-12 00:37", "user": "danakj:", "body": "it's not i think"}, {"timstamp": "2015-08-12 00:37", "user": "rockot:", "body": "it is for me D:"}, {"timstamp": "2015-08-12 00:38", "user": "danakj:", "body": "maybe i dont know where ti find it"}, {"timstamp": "2015-08-12 00:38", "user": "rockot:", "body": "it should just be in the main UI where the failure is listed."}, {"timstamp": "2015-08-12 00:38", "user": "danakj:", "body": "i have a link bug button"}, {"timstamp": "2015-08-12 00:38", "user": "danakj:", "body": "hm"}, {"timstamp": "2015-08-12 00:38", "user": "rockot:", "body": "there should be a \"Bugs\" label right next to that"}, {"timstamp": "2015-08-12 00:38", "user": "rockot:", "body": "ah - quite possibly"}, {"timstamp": "2015-08-12 00:39", "user": "danakj:", "body": "o ok"}, {"timstamp": "2015-08-12 00:41", "user": "danakj:", "body": "im going to ask sky about revert"}, {"timstamp": "2015-08-12 00:41", "user": "danakj:", "body": "its been a while now"}, {"timstamp": "2015-08-12 00:42", "user": "danakj:", "body": "sky's reverting"}, {"timstamp": "2015-08-12 00:43", "user": "rockot:", "body": "k"}, {"timstamp": "2015-08-12 01:26", "user": "danakj:", "body": "oh that LanguagesOptionsDictionaryDownloadWebUITest.testdictionaryDownloadRetry"}, {"timstamp": "2015-08-12 01:27", "user": "danakj:", "body": "Adds multilingual support to the language_options_handler."}, {"timstamp": "2015-08-12 01:27", "user": "danakj:", "body": "i wonder"}, {"timstamp": "2015-08-12 01:28", "user": "rockot:", "body": "i just reverted"}, {"timstamp": "2015-08-12 01:28", "user": "rockot:", "body": ""}, {"timstamp": "2015-08-12 01:28", "user": "rockot:", "body": ""}, {"timstamp": "2015-08-12 01:29", "user": "rockot:", "body": "oops, how do i computer?"}, {"timstamp": "2015-08-12 01:31", "user": "danakj:", "body": "computering is tough"}, {"timstamp": "2015-08-12 01:31", "user": "danakj:", "body": "ok"}, {"timstamp": "2015-08-12 01:32", "user": "danakj:", "body": "i asked the author on IM but they didnt reply"}, {"timstamp": "2015-08-12 01:32", "user": "danakj:", "body": "thanks"}, {"timstamp": "2015-08-12 01:33", "user": "rockot:", "body": "new XP failure looks like more flake"}, {"timstamp": "2015-08-12 01:44", "user": "danakj:", "body": "yah"}, {"timstamp": "2015-08-12 02:11", "user": "danakj:", "body": "static consts most often end in tears"}, {"timstamp": "2015-08-12 02:11", "user": "danakj:", "body": "lol"}, {"timstamp": "2015-08-12 02:11", "user": "danakj:", "body": "thakis: do you let people use kFooBar style in enums-that-are-consts?"}, {"timstamp": "2015-08-12 02:12", "user": "thakis:", "body": "yes"}, {"timstamp": "2015-08-12 02:14", "user": "danakj:", "body": "yay"}, {"timstamp": "2015-08-12 02:39", "user": "rockot:", "body": "danakj, i've just reverted a CL to unbreak win 64:"}, {"timstamp": "2015-08-12 02:39", "user": "rockot:", "body": "other than that i think things look pretty good. i've got to head out for now"}, {"timstamp": "2015-08-12 02:51", "user": "danakj:", "body": "dittos"}, {"timstamp": "2015-08-12 02:51", "user": "danakj:", "body": "cya tmrw"}, {"timstamp": "2015-08-12 16:12", "user": "trungl-bot:", "body": "danakj, rockot, tommi: ^^^"}, {"timstamp": "2015-08-12 17:55", "user": "rockot:", "body": "good morning, #chromium!"}, {"timstamp": "2015-08-12 17:55", "user": "trungl-bot:", "body": "Good morning, rockot!"}], "label": "feature"}
{"id": "93de0e92", "body": "", "comments": [{"timstamp": "2015-08-12 15:53", "user": "stefan27:", "body": "afaik it's impossible to set a minimum delay for the webrtc's voice engine's jitter buffer through javascript. Is it possible to make such a feature request for chrome somewhere? Also is there any chance that such a setting will be developed anyways within a few years?"}, {"timstamp": "2015-08-12 15:54", "user": "stefan27:", "body": "hmm maybe my question belongs in chromium-support too"}], "label": "feature"}
{"id": "93de0e93", "body": "", "comments": [{"timstamp": "2015-08-22 23:19", "user": "Mike9863:", "body": "I accidentally signed into Chrome and connected it with my Google account. When I unlinked it, I also ticked an option that mentioned clearing data. Now all my Chromium settings are gone and it's like I have a default browser. Is there any way I can recover my old profile?"}, {"timstamp": "2015-08-22 23:25", "user": "Mike9863:", "body": "I signed back in and my old data is there. How can I move this data so it's locally stored and sign out without removing it?"}], "label": "feature"}
{"id": "93de0e94", "body": "", "comments": [{"timstamp": "2015-09-01 20:34", "user": "ebraminio:", "body": "scottmg: Hi. While ago I asked it would be nice there was something like trybuilds for ongoing patches and you said there is some hope that would be possible soon. Is that ready now so I can test and ongoing patch without having to compile?"}], "label": "feature"}
{"id": "93de0e95", "body": "", "comments": [{"timstamp": "2015-09-03 20:42", "user": "sebbers_:", "body": "is it possible to render the source of a backend script (php,java, c#) file inside a panel of a chrome extension? the idea would be to continue debugging in the dev tools extension without having to revert back to the source ide(intellij, visual studios, etc)? is there a term to describe that sort of feature like \"server side source rendering\"?"}], "label": "feature"}
{"id": "93de0e96", "body": "", "comments": [{"timstamp": "2015-09-04 09:23", "user": "Sunny_:", "body": "hi, I'm interested in the state of"}, {"timstamp": "2015-09-04 09:34", "user": "kristahi:", "body": "Sunny_: you can browse web views of the repos at"}, {"timstamp": "2015-09-04 09:35", "user": "kristahi:", "body": "but not all code is in one single repo, so you might have to crossreference several of them - if you do a checkout, there are tools that sync everything up for you"}, {"timstamp": "2015-09-04 09:40", "user": "kristahi:", "body": "you should see if there is a tracking bug or something for your feature, it probably has handy links to the related commits"}, {"timstamp": "2015-09-04 09:55", "user": "Sunny_:", "body": "This is the issue"}, {"timstamp": "2015-09-04 09:55", "user": "Sunny_:", "body": "kristahi: ^^"}, {"timstamp": "2015-09-04 09:56", "user": "bartfab:", "body": "Sunny_: this would be a blink feature, not chrome"}, {"timstamp": "2015-09-04 09:57", "user": "bartfab:", "body": "you should look in the blink repo"}, {"timstamp": "2015-09-04 09:57", "user": "Sunny_:", "body": "I can see a list of latest commits here"}, {"timstamp": "2015-09-04 09:58", "user": "bartfab:", "body": "in chrome, every commit will actually post back to the bug"}, {"timstamp": "2015-09-04 09:58", "user": "bartfab:", "body": "i am a chrome developer and i have no idea how blink feature work is tracked"}, {"timstamp": "2015-09-04 09:58", "user": "kristahi:", "body": "you can use the code search on"}, {"timstamp": "2015-09-04 09:59", "user": "bartfab:", "body": "no idea how they do this in blink"}, {"timstamp": "2015-09-04 09:59", "user": "kristahi:", "body": "Sunny_: btw you should look at the blocking bugs (bottom left) on the main tracking bug, there is work going on there"}, {"timstamp": "2015-09-04 10:02", "user": "Sunny_:", "body": "kristahi: I had a look a few moments ago. So it seems something is happening there. I kind of waiting for the feature to be implemented because it would allow me to get rid of some JS from my web app. I thought that it would be ready in Chrome 47 but I've found out that I don't really undestand how people around Chrome decide what feature will be released and when."}, {"timstamp": "2015-09-04 10:02", "user": "Sunny_:", "body": "Maybe they just have face to face meetings.."}, {"timstamp": "2015-09-04 10:05", "user": "kristahi:", "body": "yep, I guess so - not a googler either, just looking in from the outside too"}, {"timstamp": "2015-09-04 10:06", "user": "kristahi:", "body": "the issue tracker does document quite a bit at least, and sometimes there are design docs and stuff that get published publically"}], "label": "feature"}
{"id": "93de0e97", "body": "", "comments": [{"timstamp": "2015-09-04 11:26", "user": "ShalokShalom:", "body": "whats about this feature, please ?"}, {"timstamp": "2015-09-04 11:27", "user": "ShalokShalom:", "body": ""}, {"timstamp": "2015-09-04 11:27", "user": "ShalokShalom:", "body": "abadoned ?"}, {"timstamp": "2015-09-04 20:37", "user": "ShalokShalom:", "body": "whats about this feature, please ?"}, {"timstamp": "2015-09-04 20:37", "user": "ShalokShalom:", "body": ""}, {"timstamp": "2015-09-04 20:37", "user": "ShalokShalom:", "body": "abadoned ?"}, {"timstamp": "2015-09-04 20:37", "user": "ShalokShalom:", "body": "i like to restore my tabs, when i reopen my browser"}, {"timstamp": "2015-09-04 20:38", "user": "ttuttle|work:", "body": "ShalokShalom: feature requests and discussions thereof should be on crbug.com"}, {"timstamp": "2015-09-04 20:38", "user": "ShalokShalom:", "body": "currently load chrome all this tabs at once, which is imho very ..... :D"}, {"timstamp": "2015-09-04 20:38", "user": "ttuttle|work:", "body": "ShalokShalom: this channel isn't for user support/requests, it's for developer collaboration"}, {"timstamp": "2015-09-04 20:38", "user": "ShalokShalom:", "body": "i ask, what happens about this feature"}, {"timstamp": "2015-09-04 20:39", "user": "ShalokShalom:", "body": "thx"}], "label": "feature"}
{"id": "93de0e98", "body": "", "comments": [{"timstamp": "2015-09-21 14:41", "user": "ellyjones:", "body": "how do I run a webkit layout test?"}, {"timstamp": "2015-09-21 14:43", "user": "fsod:", "body": "ellyjones, roughly \"third_party/WebKit/Tools/Scripts/run-webkit-tests the/test/you/want/to/run\""}, {"timstamp": "2015-09-21 14:43", "user": "ellyjones:", "body": "awesome, thanks"}, {"timstamp": "2015-09-21 14:43", "user": "ellyjones:", "body": "I just discovered a webkit layout test that covers a chrome feature that isn't implemented in webkit (!)"}, {"timstamp": "2015-09-21 17:12", "user": "ellyjones:", "body": "hrm"}, {"timstamp": "2015-09-21 17:12", "user": "ellyjones:", "body": "does anyone know if omahaproxy is publicly accessible?"}, {"timstamp": "2015-09-21 17:12", "user": "ellyjones:", "body": "ah it totally is"}], "label": "feature"}
{"id": "93de0e99", "body": "", "comments": [{"timstamp": "2018-08-02 20:46", "user": "no_gravity:", "body": "Hello! How hard would it be to make a little app that lets the user open a textfile in chromium in a textarea and then save the file back to disk?"}, {"timstamp": "2018-08-02 20:47", "user": "torne:", "body": "no_gravity: what do you mean by \"app\"? just a web page?"}, {"timstamp": "2018-08-02 20:48", "user": "torne:", "body": "it's trivial if you don't mind the user having to explicitly save the file *to* somewhere with a save dialog"}, {"timstamp": "2018-08-02 20:48", "user": "no_gravity:", "body": "How would that work?"}, {"timstamp": "2018-08-02 20:48", "user": "no_gravity:", "body": "Yes, I essentially want to create a texteditor with html."}, {"timstamp": "2018-08-02 20:48", "user": "torne:", "body": "all modern browsers let you load and save local files if you do so by having a button that invokes the normal system file picker"}, {"timstamp": "2018-08-02 20:48", "user": "torne:", "body": "this isn't really a chromium specific question, nor a dev question, so this is a bit off topic though"}, {"timstamp": "2018-08-02 20:49", "user": "torne:", "body": "start with"}, {"timstamp": "2018-08-02 20:51", "user": "no_gravity:", "body": "torne: That page says nothing about saving the file."}, {"timstamp": "2018-08-02 20:52", "user": "no_gravity:", "body": "Also I want to start the texteditor from the commandline."}, {"timstamp": "2018-08-02 20:52", "user": "no_gravity:", "body": "Not have the user pick a file in a dialog."}, {"timstamp": "2018-08-02 20:53", "user": "no_gravity:", "body": "torne: To the user it should feel like executing \"vim mytext\"."}, {"timstamp": "2018-08-02 20:53", "user": "no_gravity:", "body": "torne: But then use chromium and an html page to edit the file."}, {"timstamp": "2018-08-02 20:53", "user": "torne:", "body": "that's not really a thing that the web supports"}, {"timstamp": "2018-08-02 20:53", "user": "ellyjones:", "body": "probably the easiest way to achieve that is to split your thing up into client and server parts"}, {"timstamp": "2018-08-02 20:53", "user": "ellyjones:", "body": "where the \"server\" is the program the user actually runs, which serves some editing page to the user, navigates their browser to it, and when they're done have chromium post the response back to the server"}, {"timstamp": "2018-08-02 20:54", "user": "ellyjones:", "body": "(except it's all running on localhost obvs)"}, {"timstamp": "2018-08-02 20:54", "user": "ellyjones:", "body": "in general webpages cannot get access to local files without a user prompt"}, {"timstamp": "2018-08-02 21:00", "user": "no_gravi1y:", "body": "ellyjones: And then start it like 'chromium myeditor.html?file=thefile.txt'?"}, {"timstamp": "2018-08-02 21:00", "user": "torne:", "body": "no, that can't work"}, {"timstamp": "2018-08-02 21:00", "user": "torne:", "body": "opening a local file has to be the result of a direct user interaction on the page"}, {"timstamp": "2018-08-02 21:01", "user": "torne:", "body": "there's no way to just pass a filename as a parameter like that"}, {"timstamp": "2018-08-02 21:02", "user": "no_gravi1y:", "body": "torne: So it's not possible to write applications in HTML by leveraging the browser platform?"}, {"timstamp": "2018-08-02 21:03", "user": "torne:", "body": "not if the application needs to do something that's not permitted by the web security model, no"}, {"timstamp": "2018-08-02 21:03", "user": "torne:", "body": "as elly suggests you can cheat by having a local helper program that actually serves the local file up as if it were a web page, such that the web page can access it"}, {"timstamp": "2018-08-02 21:04", "user": "no_gravi1y:", "body": "Yes, that is probably the solution then."}, {"timstamp": "2018-08-02 21:04", "user": "torne:", "body": "but that would have to be a separate executable with a webserver inside it, outside teh browser"}, {"timstamp": "2018-08-02 21:04", "user": "no_gravi1y:", "body": "And then start it like 'chromium 127.0.0.1:3618/myeditor.html?file=thefile.txt'"}, {"timstamp": "2018-08-02 21:05", "user": "torne:", "body": "yes"}, {"timstamp": "2018-08-02 21:05", "user": "no_gravi1y:", "body": "I might go that route."}, {"timstamp": "2018-08-02 21:21", "user": "ellyjones:", "body": "really, you'd probably want to do 'myeditor thefile.txt' and have that invoke 'chromium 127.0.0.1:3618' or similar"}, {"timstamp": "2018-08-02 21:21", "user": "ellyjones:", "body": "ie, have the \"server\" part be in charge of knowing the filename"}, {"timstamp": "2018-08-02 21:22", "user": "ellyjones:", "body": "having the \"client\" know it and pass it back means any other process running locally that can open tcp sockets can also do that, which could be dangerous"}, {"timstamp": "2018-08-02 22:02", "user": "tuxillo:", "body": "torne: do you have a moment?"}, {"timstamp": "2018-08-02 22:03", "user": "torne:", "body": "just ask questions, don't wait for particular people :)"}, {"timstamp": "2018-08-02 22:04", "user": "tuxillo:", "body": "i've asked already :P"}, {"timstamp": "2018-08-02 22:04", "user": "tuxillo:", "body": ""}, {"timstamp": "2018-08-02 22:05", "user": "tuxillo:", "body": "the std::__cx11::basic_string thing I think I found why it happens"}, {"timstamp": "2018-08-02 22:06", "user": "tuxillo:", "body": "but the error: undefined reference"}, {"timstamp": "2018-08-02 22:06", "user": "tuxillo:", "body": "to 'SkFontMgr::Factory()'"}, {"timstamp": "2018-08-02 22:06", "user": "tuxillo:", "body": "I have no clue why it happens"}, {"timstamp": "2018-08-02 22:06", "user": "torne:", "body": "because that function is OS-specific"}, {"timstamp": "2018-08-02 22:07", "user": "torne:", "body": "see //skia/BUILD.gn"}, {"timstamp": "2018-08-02 22:07", "user": "torne:", "body": "which includes a different version of SkFontMgr_*.cpp depending what OS it's building for"}, {"timstamp": "2018-08-02 22:07", "user": "torne:", "body": "you are presumably including none of them, since they're all in positive OS conditionals"}, {"timstamp": "2018-08-02 22:07", "user": "torne:", "body": "and none of them are is_posix"}, {"timstamp": "2018-08-02 22:07", "user": "tuxillo:", "body": "I think for fontconfig OSes it uses the one in third_party/skia/src/ports/SkFontMgr_FontConfigInterface_factory.cpp"}, {"timstamp": "2018-08-02 22:07", "user": "torne:", "body": "no"}, {"timstamp": "2018-08-02 22:08", "user": "torne:", "body": "only if the GN file explciitly includes that source file :)"}, {"timstamp": "2018-08-02 22:08", "user": "torne:", "body": "which is only done if is_linux"}, {"timstamp": "2018-08-02 22:08", "user": "torne:", "body": ""}, {"timstamp": "2018-08-02 22:08", "user": "tuxillo:", "body": "ok, thanks. let me see"}, {"timstamp": "2018-08-02 22:09", "user": "torne:", "body": "in many places you are benefiting from teh fact that we *do* have a posix implementation"}, {"timstamp": "2018-08-02 22:09", "user": "torne:", "body": "but this is not one of them"}, {"timstamp": "2018-08-02 22:09", "user": "torne:", "body": "there is no POSIX way to get fonts :p"}, {"timstamp": "2018-08-02 22:09", "user": "torne:", "body": "so there are only actual OS-specific versions"}, {"timstamp": "2018-08-02 22:10", "user": "tuxillo:", "body": "ok, checking"}, {"timstamp": "2018-08-02 22:10", "user": "torne:", "body": "we don't have a category of \"fontconfig OSes\" - we only use fontconfig on linux, so it's all guarded by is_linux"}, {"timstamp": "2018-08-02 22:14", "user": "tuxillo:", "body": "i was checking third_party/skia/BUILD.gn only"}, {"timstamp": "2018-08-02 22:15", "user": "tuxillo:", "body": "weird, I have if (is_linux || is_bsd)"}, {"timstamp": "2018-08-02 22:15", "user": "tuxillo:", "body": "in all is_linux cases"}, {"timstamp": "2018-08-02 22:17", "user": "torne:", "body": "check the generated ninja files to see what source files it actually pulls in"}, {"timstamp": "2018-08-02 22:17", "user": "tuxillo:", "body": "ok"}, {"timstamp": "2018-08-02 22:18", "user": "tuxillo:", "body": "but specifically you are referring to:"}, {"timstamp": "2018-08-02 22:18", "user": "tuxillo:", "body": "\"//third_party/fontconfig\","}, {"timstamp": "2018-08-02 22:18", "user": "tuxillo:", "body": "right?"}, {"timstamp": "2018-08-02 22:18", "user": "torne:", "body": "no, i am referring ot the line I linked to above"}, {"timstamp": "2018-08-02 22:18", "user": "torne:", "body": "which adds the factory source file you referred to, only on is_linux (in our copy)"}, {"timstamp": "2018-08-02 22:19", "user": "torne:", "body": "h"}, {"timstamp": "2018-08-02 22:19", "user": "torne:", "body": "actually this is very strange :)"}, {"timstamp": "2018-08-02 22:20", "user": "torne:", "body": "there's several similarly named files and i'm mixing them up"}, {"timstamp": "2018-08-02 22:20", "user": "torne:", "body": "*nothing* ever includes SkFontMgr_FontConfigInterface_factory.cpp"}, {"timstamp": "2018-08-02 22:20", "user": "torne:", "body": "it appears to be dead code"}, {"timstamp": "2018-08-02 22:20", "user": "tuxillo:", "body": "oh"}, {"timstamp": "2018-08-02 22:20", "user": "tuxillo:", "body": "lol then what? )"}, {"timstamp": "2018-08-02 22:20", "user": "tuxillo:", "body": "normally I use 'gn desc out/Release <target>'"}, {"timstamp": "2018-08-02 22:20", "user": "tuxillo:", "body": "instead of checking the ninja files"}, {"timstamp": "2018-08-02 22:23", "user": "torne:", "body": "Ah"}, {"timstamp": "2018-08-02 22:23", "user": "torne:", "body": "okay yeah the one that is used isn't *any* of the ones from third_party/skia"}, {"timstamp": "2018-08-02 22:23", "user": "torne:", "body": "it's //skia/etc/fontmgr_default_linux.cc"}, {"timstamp": "2018-08-02 22:23", "user": "tuxillo:", "body": "maybe it's defined here?"}, {"timstamp": "2018-08-02 22:23", "user": "torne:", "body": "It's not sufficient to just modify is_linux conditions"}, {"timstamp": "2018-08-02 22:24", "user": "tuxillo:", "body": "heh ok"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "because we also use the GN sources assignment filter feature"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "to automatically exclude source files that mention a platform that is not the current platform int heir name"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "so your build will be missing *every* source file that is named *_linux.*"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "just automatically"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "even if htere's no explicit conditions in the gn file"}, {"timstamp": "2018-08-02 22:24", "user": "tuxillo:", "body": "oh cool, I can add in whatever I need then"}, {"timstamp": "2018-08-02 22:24", "user": "torne:", "body": "you need to temporarily unset the filter to add them in"}, {"timstamp": "2018-08-02 22:25", "user": "torne:", "body": "as if you just try to add the linux files explicitly it will skip them *again* :)"}, {"timstamp": "2018-08-02 22:25", "user": "tuxillo:", "body": "oh really :)"}, {"timstamp": "2018-08-02 22:25", "user": "torne:", "body": "yes"}, {"timstamp": "2018-08-02 22:25", "user": "tuxillo:", "body": "how do I disable that?"}, {"timstamp": "2018-08-02 22:25", "user": "torne:", "body": ""}, {"timstamp": "2018-08-02 22:25", "user": "torne:", "body": "like so"}, {"timstamp": "2018-08-02 22:25", "user": "torne:", "body": "it's a common pattern in the code for weird exception cases where a file normally meant for one OS most be used for another under some condition :|"}, {"timstamp": "2018-08-02 22:26", "user": "torne:", "body": "you'll likely need to do something like this in various places that have a linux-specific file"}, {"timstamp": "2018-08-02 22:26", "user": "torne:", "body": "wich is a lot of places :)"}, {"timstamp": "2018-08-02 22:26", "user": "tuxillo:", "body": "ok, i thnk i have enought to keep going again"}, {"timstamp": "2018-08-02 22:26", "user": "tuxillo:", "body": "thanks"}, {"timstamp": "2018-08-02 22:27", "user": "tuxillo:", "body": "(i'm down to < 400 files to build)"}, {"timstamp": "2018-08-02 22:27", "user": "torne:", "body": "yeah but all your major problems are going to come at the very end of the build during the main link step"}, {"timstamp": "2018-08-02 22:27", "user": "torne:", "body": "the first 99% of the build is the easy bit"}, {"timstamp": "2018-08-02 22:27", "user": "torne:", "body": ":)"}, {"timstamp": "2018-08-02 22:30", "user": "tuxillo:", "body": "haha easy"}, {"timstamp": "2018-08-02 22:31", "user": "tuxillo:", "body": "its been nightmarish and it has not even finished yet"}, {"timstamp": "2018-08-02 22:31", "user": "tuxillo:", "body": "but yeah i guess the link step is going to produce some fireworks :)"}], "label": "feature"}
{"id": "93de0e9a", "body": "", "comments": [{"timstamp": "2016-07-19 21:04", "user": "JakeSays:", "body": "bah. this aura keyboard event stuff is driving me nuts"}, {"timstamp": "2016-07-19 21:05", "user": "JakeSays:", "body": "ok so this is probably an obvious question but what is desktop_aura, and how is it used?"}, {"timstamp": "2016-07-19 21:06", "user": "dpranke:", "body": "JakeSays: context?"}, {"timstamp": "2016-07-19 21:07", "user": "JakeSays:", "body": "dpranke: i'm having issues getting the keyboard to work in content_shell (tab works, but nothing else). desktop_aura looks like there might be stuff in there i can use"}, {"timstamp": "2016-07-19 21:08", "user": "dpranke:", "body": "JakeSays: you mean //ui/views/widget/desktop_aura ?"}, {"timstamp": "2016-07-19 21:09", "user": "JakeSays:", "body": "yes"}, {"timstamp": "2016-07-19 21:09", "user": "dpranke:", "body": "I think that's largely the code used to implement the chrome ui on linux and windows (as opposed to CrOS, maybe?)"}, {"timstamp": "2016-07-19 21:09", "user": "JakeSays:", "body": "oh"}, {"timstamp": "2016-07-19 21:10", "user": "JakeSays:", "body": "if you give content_shell a try you can see what i mean about the kbd"}, {"timstamp": "2016-07-19 21:10", "user": "dpranke:", "body": "JakeSays: you lost me. Are you saying the keyboard doesn't work in a vanilla content_shell build?"}, {"timstamp": "2016-07-19 21:10", "user": "JakeSays:", "body": "correct"}, {"timstamp": "2016-07-19 21:10", "user": "dpranke:", "body": "that seems like a bug :)"}, {"timstamp": "2016-07-19 21:11", "user": "JakeSays:", "body": "i think there's some functionality missing"}, {"timstamp": "2016-07-19 21:11", "user": "dpranke:", "body": "I can't really look at it myself at the moment, though"}, {"timstamp": "2016-07-19 21:11", "user": "JakeSays:", "body": "no prob"}, {"timstamp": "2016-07-19 21:11", "user": "dpranke:", "body": "maybe file a bug and I can point some people at it?"}, {"timstamp": "2016-07-19 21:11", "user": "JakeSays:", "body": "i can do that"}, {"timstamp": "2016-07-19 21:11", "user": "dpranke:", "body": "sheriffs: fix for the \"Win x64\" build should be landing now"}, {"timstamp": "2016-07-19 21:13", "user": "trungl-bot:", "body": "Tree opened by dpranke at chromium dot org: Tree is open (Win x64 should cycle green -> dpranke)"}, {"timstamp": "2016-07-19 21:14", "user": "JakeSays:", "body": "sadrulhc: hey was that a stock content_shell you were seeing the keyboard behavior in?"}, {"timstamp": "2016-07-19 21:17", "user": "sadrulhc:", "body": "JakeSays: yep"}, {"timstamp": "2016-07-19 21:17", "user": "JakeSays:", "body": "sadrulhc: ok cool - thanks"}, {"timstamp": "2016-07-19 21:17", "user": "JakeSays:", "body": "sadrulhc: oh how old is the source you used?"}, {"timstamp": "2016-07-19 21:18", "user": "sadrulhc:", "body": "~112 days old at most"}, {"timstamp": "2016-07-19 21:18", "user": "JakeSays:", "body": "excellent"}, {"timstamp": "2016-07-19 21:18", "user": "sadrulhc:", "body": "I think it has been broken for at least a few weeks, possibly more."}, {"timstamp": "2016-07-19 21:22", "user": "JakeSays:", "body": "dpranke:"}, {"timstamp": "2016-07-19 21:23", "user": "dpranke:", "body": "JakeSays: thanks"}, {"timstamp": "2016-07-19 21:23", "user": "JakeSays:", "body": "no prob"}, {"timstamp": "2016-07-19 21:29", "user": "JakeSays:", "body": "hmm. widget looks like what i need - can a widget be the primary window?"}, {"timstamp": "2016-07-19 21:30", "user": "sadrulhc:", "body": "JakeSays: you should already be getting a views::Widget (see in shell_views.cc)"}, {"timstamp": "2016-07-19 21:30", "user": "JakeSays:", "body": "ohh i remember now - desktop aura is the project to support aura in a 'windowed' environment"}, {"timstamp": "2016-07-19 21:30", "user": "JakeSays:", "body": "or something like that"}, {"timstamp": "2016-07-19 21:34", "user": "JakeSays:", "body": "sadrulhc: shell_views.cc is only available if toolkit_views is enabled"}, {"timstamp": "2016-07-19 21:34", "user": "sadrulhc:", "body": "yes. sorry, I thought you were using views ... are you not?"}, {"timstamp": "2016-07-19 21:34", "user": "JakeSays:", "body": "i'm not"}, {"timstamp": "2016-07-19 21:35", "user": "sadrulhc:", "body": "ooooh, so just aura + ozone?"}, {"timstamp": "2016-07-19 21:35", "user": "JakeSays:", "body": "yes"}, {"timstamp": "2016-07-19 21:35", "user": "sadrulhc:", "body": "that's crazy"}, {"timstamp": "2016-07-19 21:36", "user": "sadrulhc:", "body": "but should still work ok"}, {"timstamp": "2016-07-19 21:36", "user": "JakeSays:", "body": "well views adds stuff i can't use (for the most part)"}, {"timstamp": "2016-07-19 21:37", "user": "JakeSays:", "body": "and yeah so far its worked great, except for this one issue"}, {"timstamp": "2016-07-19 21:44", "user": "JakeSays:", "body": "sadrulhc: the input_event_handler - i couldn't for the life of me figure out how to wire that in"}, {"timstamp": "2016-07-19 21:48", "user": "sadrulhc:", "body": "JakeSays: it's a little bit ugly. I may take a look at it tonight if I don't forget"}, {"timstamp": "2016-07-19 21:48", "user": "JakeSays:", "body": "weird - that desktop_aura code on cs.chromium.org doesnt have the hotlink references in it"}, {"timstamp": "2016-07-19 21:49", "user": "JakeSays:", "body": "sadrulhc: that would be cool if you could"}, {"timstamp": "2016-07-19 22:29", "user": "JakeSays:", "body": "debugging through FOR_EACH_OBSERVER is a pita"}, {"timstamp": "2016-07-19 22:29", "user": "ellyjones:", "body": "yes"}, {"timstamp": "2016-07-19 22:29", "user": "ellyjones:", "body": "so's debugging through callbacks and PostTask :("}, {"timstamp": "2016-07-19 22:29", "user": "JakeSays:", "body": "yes indeed"}, {"timstamp": "2016-07-19 22:29", "user": "ellyjones:", "body": "the perils of asynchronous programming basically"}, {"timstamp": "2016-07-19 22:30", "user": "JakeSays:", "body": "callbacks aren't too bad when you can figure out the destination"}, {"timstamp": "2016-07-19 22:30", "user": "JakeSays:", "body": "but for_each_observer is a black hole"}, {"timstamp": "2016-07-19 22:30", "user": "ellyjones:", "body": "FOR_SOME_OBSERVERS_AT_RANDOM() is worse"}, {"timstamp": "2016-07-19 22:30", "user": "JakeSays:", "body": "thats a thing?"}, {"timstamp": "2016-07-19 22:31", "user": "ellyjones:", "body": "no, but isn't it fun how plausible it sounds?"}, {"timstamp": "2016-07-19 22:31", "user": "JakeSays:", "body": "LOL yes"}, {"timstamp": "2016-07-19 22:31", "user": "JakeSays:", "body": "seems like that macro could be replaced with an inline helper function and range for"}, {"timstamp": "2016-07-19 22:32", "user": "ellyjones:", "body": "we didn't have range for when it was introduced"}, {"timstamp": "2016-07-19 22:32", "user": "JakeSays:", "body": "right"}, {"timstamp": "2016-07-19 22:32", "user": "ellyjones:", "body": "patches accepted"}, {"timstamp": "2016-07-19 22:32", "user": "JakeSays:", "body": "hmm. i might experiment once i have this project under control"}, {"timstamp": "2016-07-19 22:33", "user": "ellyjones:", "body": "(no actual guarantee such a patch would be accepted)"}, {"timstamp": "2016-07-19 22:34", "user": "JakeSays:", "body": "heh. its like buying a car - \"all offers accepted!\" - doesnt mean you'll be approved"}, {"timstamp": "2016-07-19 22:34", "user": "ellyjones:", "body": "yep :P"}, {"timstamp": "2016-07-19 22:59", "user": "JakeSays:", "body": "damn not having desktop_aura indexed sucks"}], "label": "feature"}
{"id": "93de0e9b", "body": "", "comments": [{"timstamp": "2015-07-30 09:20", "user": "ggreer:", "body": "they just linked to"}, {"timstamp": "2015-07-30 09:20", "user": "ggreer:", "body": "I know I'm repeating myself, but I've been asking about how to get presentation mode back and nobody has responded"}, {"timstamp": "2015-07-30 09:21", "user": "ggreer:", "body": "now that this is removed, the only way to full-screen chrome is if the web page requests it. this completely breaks chromium for certain use cases"}, {"timstamp": "2015-07-30 09:24", "user": "ggreer:", "body": "ideally I'd like to get presentation mode back in chromium, but *any* way to get the old behavior (an extension, a flag, etc) would be better than the current situation"}], "label": "feature"}
{"id": "93de0e9c", "body": "", "comments": [{"timstamp": "2016-03-02 19:45", "user": "bobol:", "body": "I want to ask if it's possible to store data in sqlite database in a persistent way ?"}], "label": "feature"}
{"id": "93de0e9d", "body": "", "comments": [{"timstamp": "2018-09-23 16:26", "user": "hyper_ch:", "body": "where can I set for the Chrome file picker (in KDE) that it should sort folders first?"}], "label": "feature"}
{"id": "93de0e9e", "body": "", "comments": [{"timstamp": "2017-04-05 19:23", "user": "de-facto:", "body": "hmm how come that in the new chromium 56.0.2924.76 i cant view certificates anymore? Is confirming to be connected to a webserver with a correct CERT now considered to be obsolete? when i right click on the LOCK symbol i get an overview stating that the connection to the website is secure, hmm. then when i click on more information i get a *GOOGLE HELP PAGE*???!! Before i could invoke the certificate viewer to look over what chromium"}, {"timstamp": "2017-04-05 19:23", "user": "de-facto:", "body": "considers to be secure! btw: my bank REQUIRES me to look over the cert when doing online banking"}, {"timstamp": "2017-04-05 19:23", "user": "de-facto:", "body": "so now i have to invoke developer tools for that?!"}, {"timstamp": "2017-04-05 19:23", "user": "ellyjones:", "body": "the certificate viewer did get moved into developer tools, yes"}, {"timstamp": "2017-04-05 19:24", "user": "ellyjones:", "body": "I'm very impressed that your bank requires you to look at the certificate"}, {"timstamp": "2017-04-05 19:24", "user": "de-facto:", "body": "thats unfortunate, because most customers wont find the cert viewer there"}, {"timstamp": "2017-04-05 19:24", "user": "ellyjones:", "body": "I believe the cert viewer will come back to the place it used to be"}, {"timstamp": "2017-04-05 19:25", "user": "de-facto:", "body": "and im not prepared to trust all the weird CAs chromium trusts, history in the past shows that many of them got hacked. so i really do need to have a simple one click way to look at the certs"}, {"timstamp": "2017-04-05 19:25", "user": "ellyjones:", "body": "but it was moved in 56, definitely"}, {"timstamp": "2017-04-05 19:25", "user": "de-facto:", "body": "would be really nice if it would come back to its old place"}, {"timstamp": "2017-04-05 19:25", "user": "ellyjones:", "body": "I believe it is, but I'm not sure when"}, {"timstamp": "2017-04-05 19:26", "user": "de-facto:", "body": "ppl got used to find it there and it was the perfect place for it"}, {"timstamp": "2017-04-05 19:26", "user": "ellyjones:", "body": "I'm very surprised that your bank wants users to manually verify the certificate when there is an existing technology (HPKP) for the bank to assert that a specific cert should always be used"}, {"timstamp": "2017-04-05 19:27", "user": "ellyjones:", "body": "and have the browser automatically validate it"}, {"timstamp": "2017-04-05 19:27", "user": "de-facto:", "body": "its in their contract to enable online banking: if i dont ensure its the correct cert, im fully responsible for any loss to my account"}, {"timstamp": "2017-04-05 19:27", "user": "ellyjones:", "body": "ah, that is very clever of them"}, {"timstamp": "2017-04-05 19:28", "user": "ellyjones:", "body": "anyway, yeah, I believe that button will come back in a future release, but I don't know when, sorry"}, {"timstamp": "2017-04-05 19:28", "user": "de-facto:", "body": "yeah so actually i really do look at the cert everytime i login to their site"}, {"timstamp": "2017-04-05 19:30", "user": "ellyjones:", "body": "got it"}, {"timstamp": "2017-04-05 19:46", "user": "Torne:", "body": "de-facto: it doesn't seem like a particularly effective security measure; what can you actually verify? a malicilously obtained certificate is likely to look the same in many respects"}, {"timstamp": "2017-04-05 19:51", "user": "de-facto:", "body": "well they dont specify any details how to verify, and as i said i wont trust all CAs from my system: so what i do is look at the CA which issued the cert (that it stays the same) and actually I even called them to get the hash so i compare it to what i have written down on a papersheet. could do that in the past very well with the cert viewer"}, {"timstamp": "2017-04-05 20:01", "user": "Torne:", "body": "comparing the hash is an approach that's likely to fall down in future, because the general aim is to move sites/CAs to shorter-lived certificates; I think the target is 90 days validity. So.. if that actually happens you'd have to get a new hash to compare to every 90 days.. :/"}], "label": "feature"}
{"id": "93de0e9f", "body": "", "comments": [{"timstamp": "2017-08-08 14:30", "user": "jackwhite:", "body": "I am taking screenshots with headless Chrome (61) and I get blurriness in the rendered screenshot png. Tried JPEG with quality, no difference. Any ideas?"}, {"timstamp": "2017-08-08 14:49", "user": "ivan:", "body": "jackwhite: is it actually blurry or are you viewing a lodpi screenshot on a hidpi display?"}, {"timstamp": "2017-08-08 14:49", "user": "jackwhite:", "body": "it is actually blurry"}, {"timstamp": "2017-08-08 14:50", "user": "jackwhite:", "body": "I am taking the screenshots on a Debian based system, but when zooming into the screenshot the text for example is pixelated edges"}, {"timstamp": "2017-08-08 14:54", "user": "jackwhite:", "body": "ivan: is there a way to set the dpi?"}, {"timstamp": "2017-08-08 14:58", "user": "ivan:", "body": "perhaps --force-device-scale-factor=2 or call Emulation.setDeviceMetricsOverride with a deviceScaleFactor => 2"}, {"timstamp": "2017-08-08 15:00", "user": "jackwhite:", "body": "I will try that"}, {"timstamp": "2017-08-08 15:05", "user": "jackwhite:", "body": "ivan: is there an event that is triggered when the page has finished rendering? I have a big image on the page and the screenshot returns a nil response with doubled resolution"}, {"timstamp": "2017-08-08 15:05", "user": "jackwhite:", "body": "I am currently only using Page.loadEventFired"}, {"timstamp": "2017-08-08 15:07", "user": "ivan:", "body": "no idea, sorry"}, {"timstamp": "2017-08-08 15:08", "user": "ivan:", "body": "if loadEventFired doesn't wait for images maybe an injected window.onload will"}, {"timstamp": "2017-08-08 15:09", "user": "ivan:", "body": "or wait for every single network request to finish by loading them into a map and waiting for 0 outstanding requests"}, {"timstamp": "2017-08-08 15:11", "user": "jackwhite:", "body": "ivan: thank you"}, {"timstamp": "2017-08-08 15:11", "user": "jackwhite:", "body": "The scale factor definitely increased the DPI"}, {"timstamp": "2017-08-08 15:11", "user": "jackwhite:", "body": "thanks for the suggestion again"}], "label": "feature"}
{"id": "93de0ea0", "body": "", "comments": [{"timstamp": "2018-12-19 10:13", "user": "xvilka:", "body": "Hi! I want to add custom api for accessing local objects outside the sandbox in my chromium build (think of it as a better selenium alternative). What files can I modify to add those functions and expose them to JavaScript?"}, {"timstamp": "2018-12-19 10:54", "user": "xvilka:", "body": "I want to add custom api for accessing local objects outside the sandbox in my chromium build (think of it as a better selenium alternative). What files can I modify to add those functions"}, {"timstamp": "2018-12-19 10:54", "user": "xvilka:", "body": "and expose them to JavaScript"}, {"timstamp": "2018-12-19 10:55", "user": "xvilka:", "body": "Thank you"}, {"timstamp": "2018-12-19 11:01", "user": "xvilka:", "body": "I wasn't able to find any reference to this"}, {"timstamp": "2018-12-19 11:01", "user": "xvilka:", "body": "or is it possible to save the IndexedDB storage somehow from extensions API?"}], "label": "feature"}
{"id": "93de0ea1", "body": "", "comments": [{"timstamp": "2016-04-11 17:19", "user": "qengho:", "body": "I have a crazy idea. Early rendering is great, but when Nodes are filled or changed once the user has had time to begin reading, the browser shouldn't change position of stuff under the user's eyes. E.g., a late-loading IMG at the top shouldn't cause a jump in scroll position. Is that too nebulous to be practical?"}], "label": "feature"}
{"id": "93de0ea2", "body": "", "comments": [{"timstamp": "2016-09-09 22:53", "user": "jvilk:", "body": "hey all. I have a debug Chromium build (w/ my own changes, for fun) that's crashing w/ a segfault, but it doesn't annotate its stack trace with symbols -- so it's just a listing of memory locations. are there any build flags I need to enable to get symbols? It's a debug build with enable_profiling set to true and remove_webcore_debug_symbols set to false"}, {"timstamp": "2016-09-09 22:55", "user": "jvilk:", "body": "(Also, I'd normally use something like Valgrind or Memory/AddressSanitizer to track this down, but it looks like your support of those tools does not work on Mac. If there's a Mac-friendly solution for debugging memory errors, that would be super useful too! :))"}], "label": "feature"}
{"id": "93de0ea3", "body": "", "comments": [{"timstamp": "2015-08-23 05:37", "user": "vrkansagara:", "body": "have cool idea to increate 65% of chromium rendering time"}, {"timstamp": "2015-08-23 05:41", "user": "frna:", "body": "whats that"}, {"timstamp": "2015-08-23 05:41", "user": "vrkansagara:", "body": "pm me. thaks"}], "label": "feature"}
{"id": "93de0ea4", "body": "", "comments": [{"timstamp": "2016-04-18 16:02", "user": "Anupkumar:", "body": "how can we create custom protocol handlers in chromium?"}, {"timstamp": "2016-04-18 16:02", "user": "ellyjones:", "body": "Anupkumar: from a website, or an extension, or?"}, {"timstamp": "2016-04-18 16:30", "user": "Anupkumar:", "body": "ellyjones: I have to give a clear explanation, can I PM you?"}, {"timstamp": "2016-04-18 16:30", "user": "Anupkumar:", "body": "and sorry for the late reply"}, {"timstamp": "2016-04-18 16:30", "user": "ellyjones:", "body": "if you ask here, other people will get to either answer or see the answer also :)"}, {"timstamp": "2016-04-18 16:30", "user": "ellyjones:", "body": "so it's better to ask here"}, {"timstamp": "2016-04-18 16:32", "user": "Anupkumar:", "body": "oh okay !!"}, {"timstamp": "2016-04-18 16:39", "user": "ellyjones:", "body": "go ahead whenever :)"}, {"timstamp": "2016-04-18 18:00", "user": "Anupkumar:", "body": "ellyjones: sorry, my bad internet connection"}, {"timstamp": "2016-04-18 18:03", "user": "Anupkumar:", "body": "basically, I want the protocol handler to get the url from the android emulator and then run it on the browser"}, {"timstamp": "2016-04-18 20:44", "user": "Anupkumar:", "body": "ellyjones: ping"}, {"timstamp": "2016-04-18 20:49", "user": "ellyjones:", "body": "Anupkumar: pong"}, {"timstamp": "2016-04-18 20:49", "user": "Anupkumar:", "body": "ellyjones: sorry for the late reply earlier"}, {"timstamp": "2016-04-18 20:49", "user": "Anupkumar:", "body": "basically, I want the protocol handler to get the url from the android emulator and then run it on the browser"}, {"timstamp": "2016-04-18 20:50", "user": "ellyjones:", "body": "which android emulator?"}, {"timstamp": "2016-04-18 20:50", "user": "Anupkumar:", "body": "Bluestacks"}, {"timstamp": "2016-04-18 20:50", "user": "ellyjones:", "body": "I don't know much about that emulator, but loading a URL in chrome is quite easy"}, {"timstamp": "2016-04-18 20:51", "user": "ellyjones:", "body": "you can run chrome like \"chrome"}, {"timstamp": "2016-04-18 20:52", "user": "Anupkumar:", "body": "I can do this for getting the URL from the emulator: adb shell am start -a android.intent.action.VIEW -d $1"}, {"timstamp": "2016-04-18 20:52", "user": "Anupkumar:", "body": "(not sure, I might be wrong)"}, {"timstamp": "2016-04-18 20:53", "user": "ellyjones:", "body": "and then you can feed it to chrome in the manner I described"}, {"timstamp": "2016-04-18 20:56", "user": "Anupkumar:", "body": "if I write a small script for this, then will I be able to execute the same code on multi platforms?"}, {"timstamp": "2016-04-18 20:57", "user": "Anupkumar:", "body": "as in, on Linux, Mac, Windows etc"}, {"timstamp": "2016-04-18 20:58", "user": "ellyjones:", "body": "basically all of the work you'd need to do is outside chrome so I can't really say"}, {"timstamp": "2016-04-18 20:59", "user": "ellyjones:", "body": "the chrome \"interface\" in question where you invoke it with a URL exists everywhere"}], "label": "feature"}
