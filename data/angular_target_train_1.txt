{"id": "93d59516", "body": "", "comments": [{"timstamp": "2018-05-11 15:13", "user": "rsz", "body": "How can I find the non-html5 equivalent url for my existing angular app's html5 url?"}, {"timstamp": "2018-05-11 15:16", "user": "icebox", "body": "rsz: do you know the diff?"}, {"timstamp": "2018-05-11 15:17", "user": "rsz", "body": "icebox: The problem is I need to tell this transformation(via rewrite rules) to apache, then I guess all my problem should be solved?"}, {"timstamp": "2018-05-11 15:18", "user": "rsz", "body": "right now, all my deeply nested url's are redirected to index.html by apache, if I know what is the equivalent URL(non html5) I can code it and apache will simply redirect to that url?"}, {"timstamp": "2018-05-11 15:20", "user": "icebox", "body": "rsz:"}, {"timstamp": "2018-05-11 15:21", "user": "icebox", "body": "rsz: basically regular URLs vs. special hashbang links"}, {"timstamp": "2018-05-11 15:22", "user": "rsz", "body": "what about $locationProvider.html5Mode({enabled:true,requireBase:true}).hashPrefix(''); ?? Does it cause any changes?"}, {"timstamp": "2018-05-11 15:22", "user": "icebox", "body": "rsz: now... how this is applied in your context I have no idea... same comments as a few hours ago"}, {"timstamp": "2018-05-11 15:22", "user": "rsz", "body": "I know, but atleast point me to a doc that says: do it like this and like this, specifically, and it will work??? I am not able to find anything like that."}, {"timstamp": "2018-05-11 15:23", "user": "icebox", "body": "rsz: changes with respect to what? :) how can we try that? :)"}, {"timstamp": "2018-05-11 15:23", "user": "icebox", "body": "rsz: never seen .hashPrefix('');"}, {"timstamp": "2018-05-11 15:23", "user": "rsz", "body": "No a standard convention.. that is what I am looking for. There are too many variables, everyone has posted their solution works but with some minor tweak somewhere, but there is no standard doc to follow?"}, {"timstamp": "2018-05-11 15:24", "user": "icebox", "body": "rsz: standard doc about what?"}, {"timstamp": "2018-05-11 15:24", "user": "rsz", "body": "confiuring html5 mode"}, {"timstamp": "2018-05-11 15:24", "user": "icebox", "body": "rsz: I have been using html5 mode and I have not any issue... and I didn't configure anything"}, {"timstamp": "2018-05-11 15:25", "user": "rsz", "body": "do you have it documented publically?"}, {"timstamp": "2018-05-11 15:25", "user": "rsz", "body": "I am ready to wipe my configs and start afresh with a *working* html5 solution"}, {"timstamp": "2018-05-11 15:25", "user": "rsz", "body": "end-to-end"}, {"timstamp": "2018-05-11 15:26", "user": "rsz", "body": "icebox: Do you have browser reload working fine AND links coming in from emails working fine?"}, {"timstamp": "2018-05-11 15:26", "user": "icebox", "body": "rsz: a link is a link :)"}, {"timstamp": "2018-05-11 15:27", "user": "icebox", "body": "rsz: and they work"}, {"timstamp": "2018-05-11 15:27", "user": "rsz", "body": "can you share your config? is it public?"}, {"timstamp": "2018-05-11 15:28", "user": "icebox", "body": "rsz: again there is not any special configuration"}, {"timstamp": "2018-05-11 15:29", "user": "rsz", "body": "icebox: inside my app, all links work rock-solid. It is only the 2 scenarios I mentioned, where the links do not work as expected."}, {"timstamp": "2018-05-11 15:29", "user": "rsz", "body": "icebox: I tend to stronly disagree on that."}, {"timstamp": "2018-05-11 15:29", "user": "icebox", "body": "rsz: what do you disagree about?"}, {"timstamp": "2018-05-11 15:30", "user": "icebox", "body": "rsz: no configuration?"}, {"timstamp": "2018-05-11 15:30", "user": "rsz", "body": "that's not the point. Can you point me to any working confiurations(step-by-step) that says: angularjs + ui-router + html5 mode enabled."}, {"timstamp": "2018-05-11 15:30", "user": "icebox", "body": "rsz: there are tons of examples googling"}, {"timstamp": "2018-05-11 15:30", "user": "rsz", "body": "no standard configuration."}, {"timstamp": "2018-05-11 15:31", "user": "rsz", "body": "*standard*"}, {"timstamp": "2018-05-11 15:31", "user": "rsz", "body": "people write partially their setup details... one missing piece and I will be lost again!"}, {"timstamp": "2018-05-11 15:41", "user": "icebox", "body": "rsz: if you want we can recap together your requirements"}, {"timstamp": "2018-05-11 15:43", "user": "rsz", "body": "where do we start?(thanks icebox !) :-)"}, {"timstamp": "2018-05-11 15:44", "user": "icebox", "body": "rsz: just a moment... I am googling a plunker or a stackblitz with angualrjs a ui router... just to be on the same page"}, {"timstamp": "2018-05-11 15:44", "user": "rsz", "body": "I see 2 problems (1) browser reload (2) external link(via email) not landing to their destination."}, {"timstamp": "2018-05-11 15:44", "user": "rsz", "body": "awesome! :-D"}, {"timstamp": "2018-05-11 15:45", "user": "rsz", "body": "but apache config won;t be needed too?(okay, we can wait on it)"}, {"timstamp": "2018-05-11 15:53", "user": "icebox", "body": "rsz: this is a tiny example using html5 mode for tab navigation -"}, {"timstamp": "2018-05-11 15:59", "user": "rsz", "body": "thanks icebox !"}, {"timstamp": "2018-05-11 16:00", "user": "icebox", "body": "rsz: ok... but we can go ahead"}, {"timstamp": "2018-05-11 16:00", "user": "icebox", "body": "about the 2 problems"}, {"timstamp": "2018-05-11 16:00", "user": "rsz", "body": "Can I get a url from that fiddle that can show mw the app full screen and I can test, browser reload?"}, {"timstamp": "2018-05-11 16:00", "user": "rsz", "body": "not yet :-P"}, {"timstamp": "2018-05-11 16:00", "user": "icebox", "body": "sadly I don't know jsfiddle so much"}, {"timstamp": "2018-05-11 16:00", "user": "icebox", "body": "anyway"}, {"timstamp": "2018-05-11 16:01", "user": "rsz", "body": "the fiddle is a simulation inside the angular contexnt. For me that is working fine,,, its the two problems that I want ot address."}, {"timstamp": "2018-05-11 16:01", "user": "rsz", "body": "ok.."}, {"timstamp": "2018-05-11 16:01", "user": "icebox", "body": "when you have an url, it should not be a problem to reload the link... what does it happen in your setup?"}, {"timstamp": "2018-05-11 16:01", "user": "icebox", "body": "I remember a forever loop?"}, {"timstamp": "2018-05-11 16:02", "user": "icebox", "body": "that, if I remember correctly, was due to the rewrite rules"}, {"timstamp": "2018-05-11 16:03", "user": "rsz", "body": "for me a reload takes me to home page. say I am on //server/some-page and reload, I get redirected to //server"}, {"timstamp": "2018-05-11 16:04", "user": "icebox", "body": "is the url without any hasbang? is it html mode? :)"}, {"timstamp": "2018-05-11 16:04", "user": "icebox", "body": "*html 5 mode"}, {"timstamp": "2018-05-11 16:04", "user": "icebox", "body": "*hashbang"}, {"timstamp": "2018-05-11 16:05", "user": "rsz", "body": "so the cause of these 2 problems as per me is: configuring the rewrite rule to redirect to non-html5 url once a html5 url is requested."}, {"timstamp": "2018-05-11 16:05", "user": "icebox", "body": "I see"}, {"timstamp": "2018-05-11 16:05", "user": "rsz", "body": "yes, its in html5 mode(no hash bangs)"}, {"timstamp": "2018-05-11 16:06", "user": "icebox", "body": "so... you are trying /some?foo=bar ===> /index.html#!/some?foo=bar"}, {"timstamp": "2018-05-11 16:06", "user": "rsz", "body": "if I get the non-html5 url working by typing myself and seeing, I can be assured and then it is simply writing the rule in apache"}, {"timstamp": "2018-05-11 16:06", "user": "rsz", "body": "I tried, it did not work."}, {"timstamp": "2018-05-11 16:06", "user": "icebox", "body": "I mean, is that what you are trying for?"}, {"timstamp": "2018-05-11 16:07", "user": "rsz", "body": "I am trying a simple example /some-url ===>(reload)===> / (this is what ahppens instead, after reload the url should not change"}, {"timstamp": "2018-05-11 16:07", "user": "rsz", "body": "if that is what angular meant by non-html5 url."}, {"timstamp": "2018-05-11 16:07", "user": "icebox", "body": "\"configuring the rewrite rule to redirect to non-html5 url once a html5 url is requested\"... do you mean the starting url may be a html5 or not url?"}, {"timstamp": "2018-05-11 16:08", "user": "icebox", "body": "rsz: non-html5, or legacy mode, is an url with hashbang"}, {"timstamp": "2018-05-11 16:08", "user": "rsz", "body": "right."}, {"timstamp": "2018-05-11 16:08", "user": "rsz", "body": "there is no other way for apache to take me to a deeply nested url without downgrading to non-html5 mode?(right or wrong) ?"}, {"timstamp": "2018-05-11 16:09", "user": "icebox", "body": "so here we need to forget angularjs routing, the client routing"}, {"timstamp": "2018-05-11 16:09", "user": "rsz", "body": "no"}, {"timstamp": "2018-05-11 16:10", "user": "rsz", "body": "ideally I thought, any app's url(deeply nested or top level) if redirected to index.html would invike the angularjs routing mechanism. I was working with this belief. But this is not seemingly happening."}, {"timstamp": "2018-05-11 16:10", "user": "icebox", "body": "yes, because your starting point is a mixed situation... firstly the url is filtered by rewrite rules and only at the end it lands on angularjs routing"}, {"timstamp": "2018-05-11 16:10", "user": "rsz", "body": "So angulat routing cannot/should not be ruled out?"}, {"timstamp": "2018-05-11 16:10", "user": "icebox", "body": "rsz: I mean, you cannot handle the both cases with client routing"}, {"timstamp": "2018-05-11 16:11", "user": "rsz", "body": "angular docs said, it understands both formats in html5 mode enabled, so angular should handle both scenarios for me?"}, {"timstamp": "2018-05-11 16:11", "user": "icebox", "body": "rsz: yes... but not together :)"}, {"timstamp": "2018-05-11 16:11", "user": "rsz", "body": "I just need to give the right url"}, {"timstamp": "2018-05-11 16:11", "user": "rsz", "body": "agreed, one at a time, absolutely!"}, {"timstamp": "2018-05-11 16:12", "user": "icebox", "body": "rsz: so.. what I am saying the critical point are the rewrite rules"}, {"timstamp": "2018-05-11 16:12", "user": "rsz", "body": "the right rewrite rule..."}, {"timstamp": "2018-05-11 16:12", "user": "icebox", "body": "yep"}, {"timstamp": "2018-05-11 16:13", "user": "icebox", "body": "rsz: so... task 1... setting the correct rewrite rules"}, {"timstamp": "2018-05-11 16:13", "user": "icebox", "body": "rsz: what about the second problem?"}, {"timstamp": "2018-05-11 16:13", "user": "rsz", "body": "also, Ive been lurking in httpd channel, and they insist do not follow the stale/outdated angular js rewrite tutorials online(their stress is on apache more than getting it working with angular, which is fair)"}, {"timstamp": "2018-05-11 16:14", "user": "icebox", "body": "rsz: details on task 1 later :)"}, {"timstamp": "2018-05-11 16:14", "user": "rsz", "body": "both problems should be resolved by this one fix."}, {"timstamp": "2018-05-11 16:14", "user": "icebox", "body": "ah perfect :)"}, {"timstamp": "2018-05-11 16:14", "user": "rsz", "body": "yipee!! :-D"}, {"timstamp": "2018-05-11 16:14", "user": "icebox", "body": "one task fixes two problems :)"}, {"timstamp": "2018-05-11 16:14", "user": "rsz", "body": "200% productivity!"}, {"timstamp": "2018-05-11 16:14", "user": "DieguezZ", "body": "icebox it works!!!!!"}, {"timstamp": "2018-05-11 16:14", "user": "DieguezZ", "body": ":D"}, {"timstamp": "2018-05-11 16:15", "user": "icebox", "body": "rsz: I understand correctly the rewrite rules should handle the mixed urls to land on angular with html5 mode urls"}, {"timstamp": "2018-05-11 16:15", "user": "icebox", "body": "DieguezZ: cool"}, {"timstamp": "2018-05-11 16:15", "user": "icebox", "body": "DieguezZ: very cool"}, {"timstamp": "2018-05-11 16:15", "user": "rsz", "body": "Aye Aye captain!"}, {"timstamp": "2018-05-11 16:16", "user": "icebox", "body": "rsz: it seems we agree with httpd channel advice... \"their stress is on apache more than getting it working with angular\""}, {"timstamp": "2018-05-11 16:16", "user": "rsz", "body": "rather than playing with the rewrite rule, if you can give me the equivalent html5/nonhtml5 urls that should work in any angular 1,5,8 app, then I can devise the rule accordingly"}, {"timstamp": "2018-05-11 16:17", "user": "rsz", "body": "no, they said ignore the tutorial, they made me uprade all my suntax(I did reluctantly) but at the end I was where I started!"}, {"timstamp": "2018-05-11 16:17", "user": "icebox", "body": "rsz: it is explained here with a nice picture"}, {"timstamp": "2018-05-11 16:18", "user": "icebox", "body": "rsz:"}, {"timstamp": "2018-05-11 16:18", "user": "icebox", "body": "DieguezZ: now you can sell it :)"}, {"timstamp": "2018-05-11 16:19", "user": "rsz", "body": "all this is gold, when apache is not in picture(within an apps context) I guess?"}, {"timstamp": "2018-05-11 16:19", "user": "icebox", "body": "rsz: no... that picture is valid in any browser/backend :)"}, {"timstamp": "2018-05-11 16:19", "user": "DieguezZ", "body": "icebox ill do a meetup about this :joy:"}, {"timstamp": "2018-05-11 16:20", "user": "icebox", "body": "DieguezZ: wonderful"}, {"timstamp": "2018-05-11 16:20", "user": "DieguezZ", "body": "icebox now lets refine this ugly code to something more presentable :) thanks for your help and enthusiasm btw"}, {"timstamp": "2018-05-11 16:21", "user": "rsz", "body": "It does not work on my local. Should I drop apache and try?"}, {"timstamp": "2018-05-11 16:21", "user": "icebox", "body": "rsz: yep :)"}, {"timstamp": "2018-05-11 16:21", "user": "rsz", "body": "ok cool"}, {"timstamp": "2018-05-11 16:21", "user": "icebox", "body": "rsz: just for a try and to understand what is in the equation and what is not"}, {"timstamp": "2018-05-11 16:22", "user": "rsz", "body": "yes, I get, I know eventually apache is needed!"}, {"timstamp": "2018-05-11 16:22", "user": "icebox", "body": "rsz: did you see this one?"}, {"timstamp": "2018-05-11 16:23", "user": "rsz", "body": "yeoman? A new dependency??? I go ahead with it?"}, {"timstamp": "2018-05-11 16:23", "user": "icebox", "body": "rsz: no... read the post :)"}, {"timstamp": "2018-05-11 16:23", "user": "rsz", "body": "Atleast it is hitting right on the target: \"The one issue people run into is that you end up having a lot of 404 when a user tries to refresh at an unknown path.\" :-D"}, {"timstamp": "2018-05-11 16:24", "user": "icebox", "body": ":P"}, {"timstamp": "2018-05-11 16:24", "user": "rsz", "body": "umm, I am not using node :-P"}, {"timstamp": "2018-05-11 16:24", "user": "rsz", "body": "nor grunt :-P"}, {"timstamp": "2018-05-11 16:25", "user": "icebox", "body": "rsz: I am highlighting the .htaccess, not the rest"}, {"timstamp": "2018-05-11 16:25", "user": "rsz", "body": "ok, there is apache config(and you noticed, another difference and something new in the apche config, no standard!)"}, {"timstamp": "2018-05-11 16:26", "user": "rsz", "body": "let me try this config using *htaccess* I have been doing everything in virtual host(which is better performant that htaccess)"}, {"timstamp": "2018-05-11 16:27", "user": "rsz", "body": "why is this page 404::"}, {"timstamp": "2018-05-11 16:27", "user": "rsz", "body": "angular issue :-D :-P"}, {"timstamp": "2018-05-11 16:27", "user": "icebox", "body": "rsz: what is your main resource... reading this one seems \"simple\""}, {"timstamp": "2018-05-11 16:28", "user": "rsz", "body": "icebox: httpd channel said \"stop following this outdated tutorial\" :-P"}, {"timstamp": "2018-05-11 16:28", "user": "rsz", "body": "this url that you shared"}, {"timstamp": "2018-05-11 16:28", "user": "icebox", "body": "that is quite recent 2015"}, {"timstamp": "2018-05-11 16:28", "user": "rsz", "body": "try having fun in httpd with this url"}, {"timstamp": "2018-05-11 16:28", "user": "rsz", "body": ":-D"}, {"timstamp": "2018-05-11 16:29", "user": "rsz", "body": "they'll roast you for using outdated syntax :-D"}, {"timstamp": "2018-05-11 16:29", "user": "icebox", "body": ":P"}, {"timstamp": "2018-05-11 16:30", "user": "icebox", "body": "you have not chance... angularjs is old and the resources will be outdated if compared with latest apache... you need to \"migrate\" that knowledge to the latest version"}, {"timstamp": "2018-05-11 16:31", "user": "icebox", "body": "rsz: my point is... use a stable working configuration, even it is old, and then upgrade, intending old apache, otherwise you have not any reference point"}, {"timstamp": "2018-05-11 16:31", "user": "rsz", "body": "yup!"}, {"timstamp": "2018-05-11 16:33", "user": "rsz", "body": "oldest reference,"}, {"timstamp": "2018-05-11 16:34", "user": "icebox", "body": "I see - .htaccess for HTML5 Pushstate support"}, {"timstamp": "2018-05-11 16:34", "user": "rsz", "body": "icebox: I will update in a while about moving to htaccess."}, {"timstamp": "2018-05-11 16:35", "user": "icebox", "body": "\"how to use angularjs with apache configured with .htaccess supporting HTML5 Pushstate\""}, {"timstamp": "2018-05-11 16:35", "user": "icebox", "body": "that is the question :)"}, {"timstamp": "2018-05-11 16:38", "user": "icebox", "body": "off in a few minutes... have a nice weekend"}, {"timstamp": "2018-05-11 16:52", "user": "icebox", "body": "bye"}], "label": "other"}
{"id": "93d594ec", "body": "", "comments": [{"timstamp": "2017-04-10 16:43", "user": "iprime", "body": "don't you guys go to work, you have so much time to talk :|"}, {"timstamp": "2017-04-10 16:54", "user": "Elarcis", "body": "iprime: I personnally am melting on my desk"}, {"timstamp": "2017-04-10 16:55", "user": "Elarcis", "body": "iprime: which is universally recognized as a bad physical state of matter to do proper work"}, {"timstamp": "2017-04-10 16:55", "user": "Elarcis", "body": "webstorm's typescript support is shit"}, {"timstamp": "2017-04-10 16:55", "user": "Elarcis", "body": "highlighting unexisting errors, and missing real ones"}, {"timstamp": "2017-04-10 16:56", "user": "iprime", "body": "Elarcis, :D tell your boss to get an air conditioner"}, {"timstamp": "2017-04-10 16:56", "user": "Elarcis", "body": "got to troubleshoot a colleague, had to switch to VSCode to properly see the problem"}, {"timstamp": "2017-04-10 16:58", "user": "iprime", "body": "hmm"}, {"timstamp": "2017-04-10 16:58", "user": "iprime", "body": "really?"}, {"timstamp": "2017-04-10 16:58", "user": "iprime", "body": "IntelliJ Idea here, works just fine"}, {"timstamp": "2017-04-10 17:01", "user": "Elarcis", "body": "iprime: well it has great troubles understanding generic types, for a start"}, {"timstamp": "2017-04-10 17:01", "user": "iprime", "body": "was that your friend's issue?"}, {"timstamp": "2017-04-10 17:03", "user": "Elarcis", "body": "iprime: no, it has been my issue for a while"}, {"timstamp": "2017-04-10 17:04", "user": "Elarcis", "body": "iprime: the friend's issue is due to webstorm failing to detect a type conflict between a child constructor redefining a class member defined in a parent constructor, causing an invalid class implementation, causing a type conflict in another class, causing a chain reaction in type errors, resulting in a 20 lines long error message in the console and an \"all clear\" report from webstorm"}, {"timstamp": "2017-04-10 17:04", "user": "Elarcis", "body": "iprime: switched to VSCode in any of the incriminated files, and instantaneously saw the error underlined in read"}, {"timstamp": "2017-04-10 17:10", "user": "merpnderp", "body": "Elarcis: lol I remember why we didn't use components. I tried this several months ago, but we use VS to build our angular typescript, and we can't upgrade our d.ts files to angular at 1 dot 5."}, {"timstamp": "2017-04-10 17:10", "user": "Elarcis", "body": "merpnderp: wut"}, {"timstamp": "2017-04-10 17:10", "user": "merpnderp", "body": "We have no build system except VS's building based on TS references"}, {"timstamp": "2017-04-10 17:10", "user": "Elarcis", "body": "merpnderp: why can't you upgrade d.ts files?*"}, {"timstamp": "2017-04-10 17:11", "user": "merpnderp", "body": "it doesn't make sense actually. I'll get a VS error saying ng doesn't have IScope. But i'll type ng. and VS intellisense will show IScope."}, {"timstamp": "2017-04-10 17:11", "user": "merpnderp", "body": "Elarcis: we were and have the d.ts for it. Now we're using 1.5.11 with the 1.2 d.ts"}, {"timstamp": "2017-04-10 17:11", "user": "merpnderp", "body": "becauyse apparently the interfaces have changed a LOT since 1.2"}, {"timstamp": "2017-04-10 17:11", "user": "Elarcis", "body": "merpnderp: you're using 1.2 ?"}, {"timstamp": "2017-04-10 17:12", "user": "Elarcis", "body": "merpnderp: you're saying you use 1.5, but with typings from 1.2 because your typings tell you you're not using 1.5 correctly, and rather than change it you just stick with obsolete type definitions?"}, {"timstamp": "2017-04-10 17:12", "user": "merpnderp", "body": "Elarcis: I'll show you an example and you tell me if I'm using the typings wrong. Because I don't see it."}, {"timstamp": "2017-04-10 17:12", "user": "merpnderp", "body": "The error is ng.IScope doesn't exist."}, {"timstamp": "2017-04-10 17:13", "user": "merpnderp", "body": ""}, {"timstamp": "2017-04-10 17:13", "user": "Elarcis", "body": "merpnderp: typescript one and only goal is to provide typings to JS. If you use an incorrect typings of the JS lib you're using, you potentially have A LOT of bugs waiting to happen because you're using angularjs' API wrong and typescript won't tell you because it thinks you're still using 1.2, with deprecated features, or not using new ones, etc."}, {"timstamp": "2017-04-10 17:14", "user": "merpnderp", "body": "well how is that ng.IScope wrong?"}, {"timstamp": "2017-04-10 17:15", "user": "Elarcis", "body": "merpnderp: well first, I don't see why you'd be extending IScope"}, {"timstamp": "2017-04-10 17:16", "user": "Elarcis", "body": "merpnderp: secondly, I can hardly tell you what's wrong with 5 lines, including nothing angular except that out-of-context interface"}, {"timstamp": "2017-04-10 17:16", "user": "merpnderp", "body": "I just had an idea. The reference types vs paths. Looks like typescript changed the syntax for a reference"}, {"timstamp": "2017-04-10 17:16", "user": "merpnderp", "body": "Elarcis: that's at the top of the file and the first build error."}, {"timstamp": "2017-04-10 17:16", "user": "Elarcis", "body": "merpnderp: I don't know about VS, but in my editor I don't have to put reference comments, so no idea"}, {"timstamp": "2017-04-10 17:20", "user": "merpnderp", "body": "Elarcis: it's just so bizarre. I changed that last interface to an any type. Next error is ng has no exported member IHttpService"}, {"timstamp": "2017-04-10 17:21", "user": "merpnderp", "body": "But VS gives me intellisense that it does."}, {"timstamp": "2017-04-10 17:23", "user": "Elarcis", "body": "merpnderp: now that is indeed weird"}, {"timstamp": "2017-04-10 17:23", "user": "Elarcis", "body": "merpnderp: because it has on my side"}, {"timstamp": "2017-04-10 17:25", "user": "merpnderp", "body": "Elarcis: on the CLI I'm using tsc 2.0.6 and the first error is from the angular.d.ts file on line 17: export as namespace angular;"}, {"timstamp": "2017-04-10 17:25", "user": "merpnderp", "body": "Scripts/TypescriptDefinitions/angularjs/angular.d.ts(17,1): error TS1128: Declaration or statement expected."}, {"timstamp": "2017-04-10 17:26", "user": "Elarcis", "body": "merpnderp: I'm using 2.0.10, so not that far from yours"}, {"timstamp": "2017-04-10 17:26", "user": "Elarcis", "body": "merpnderp: my angular.d.ts uses the 'declare' keyword"}, {"timstamp": "2017-04-10 17:26", "user": "merpnderp", "body": "Yeah. Boss now wants me to write up a plan for converting all our TS to JS and putting in an ES6 build system so we can use webpack."}, {"timstamp": "2017-04-10 17:27", "user": "merpnderp", "body": "But I have to think there's something simple I'm missing here."}, {"timstamp": "2017-04-10 17:28", "user": "Elarcis", "body": "merpnderp: but you can use webpack with TS"}, {"timstamp": "2017-04-10 17:29", "user": "merpnderp", "body": "Elarcis: but TS is our problem."}, {"timstamp": "2017-04-10 17:29", "user": "Elarcis", "body": "merpnderp: it's the same config process than ES6"}, {"timstamp": "2017-04-10 17:29", "user": "Elarcis", "body": "merpnderp: welp, not an expert, but your setup is confusing me"}, {"timstamp": "2017-04-10 17:29", "user": "merpnderp", "body": "if I could get TS to work I wouldn't need webpack."}, {"timstamp": "2017-04-10 17:30", "user": "Elarcis", "body": "merpnderp: heeeee, I got both to work together and wepback is quite a cinch to work with"}, {"timstamp": "2017-04-10 17:30", "user": "Elarcis", "body": "merpnderp: monolithic and opinionated, yes, but really useful on some aspects"}, {"timstamp": "2017-04-10 17:30", "user": "merpnderp", "body": "Yeah, it is confusing to me. But it's really fairly simple. VS just runs tsc with flags against every single ts file in the project. Obviously order matters, so /// references ensure that particular files appear before others."}, {"timstamp": "2017-04-10 17:30", "user": "merpnderp", "body": "And then all of our code appears in angular.modules"}, {"timstamp": "2017-04-10 17:31", "user": "Elarcis", "body": "merpnderp: any technical motivation behind not using import? It feels like your setup would be even more confusing without ES6/types"}, {"timstamp": "2017-04-10 17:31", "user": "merpnderp", "body": "Elarcis: VS didn't support it?"}, {"timstamp": "2017-04-10 17:31", "user": "Elarcis", "body": "merpnderp: import?"}, {"timstamp": "2017-04-10 17:32", "user": "merpnderp", "body": "I don't know. We started this over 5 years ago."}, {"timstamp": "2017-04-10 17:32", "user": "Elarcis", "body": "merpnderp: ...ah. might explain it"}, {"timstamp": "2017-04-10 17:33", "user": "Elarcis", "body": "merpnderp: I didn't know typescript existed 5 years ago :P"}, {"timstamp": "2017-04-10 17:33", "user": "Elarcis", "body": "merpnderp: now, 5-years old typescript, never upgraded/changed, I can understand why you're struggling"}, {"timstamp": "2017-04-10 17:34", "user": "merpnderp", "body": "here's an entire file"}, {"timstamp": "2017-04-10 17:34", "user": "merpnderp", "body": ""}, {"timstamp": "2017-04-10 17:34", "user": "merpnderp", "body": "A trivial one just wiring a template to a service. But you see there's no module syntax."}, {"timstamp": "2017-04-10 17:35", "user": "merpnderp", "body": "So our choice is either figure out why TS is broken or move to JS."}, {"timstamp": "2017-04-10 17:36", "user": "Elarcis", "body": "merpnderp: I don't know, of course I'm not your boss nor a know-it-all, but I would suggest your boss to consider the cost of migrating to ES6/webpack vs. upgrading your Typescript setup, since after 5 years your team must be a bit familiar with TS, and from a technical PoV, I find it sad to switch ot another transpiled tech and losing to the change :P"}, {"timstamp": "2017-04-10 17:37", "user": "Elarcis", "body": "merpnderp: yeah, seeing your example, you have almost no gain from typescript"}, {"timstamp": "2017-04-10 17:37", "user": "merpnderp", "body": "Elarcis: There's not a whole lot of help to be had debugging tsc errors."}, {"timstamp": "2017-04-10 17:37", "user": "Elarcis", "body": "merpnderp: yeah, seeing your code, I get why you don't see its usefulness"}, {"timstamp": "2017-04-10 17:37", "user": "merpnderp", "body": "Elarcis: well in that example. We use typings extensively in most files."}, {"timstamp": "2017-04-10 17:38", "user": "Elarcis", "body": "merpnderp: you might as well use an angry JS engine which screams at you for no reason"}, {"timstamp": "2017-04-10 17:38", "user": "merpnderp", "body": "Elarcis: that was jsut the smallest file I could find to show how everyting was declared in the global scope."}, {"timstamp": "2017-04-10 17:39", "user": "Elarcis", "body": "merpnderp: yeah, on the flip side, your code might be stuck in that old format"}, {"timstamp": "2017-04-10 17:40", "user": "merpnderp", "body": "Elarcis: what old format? Old TS format that has changed?"}, {"timstamp": "2017-04-10 17:40", "user": "Elarcis", "body": "merpnderp: in both cases, you're going to need a bit of upgrading; even with ES6 if I'm not mistaken"}, {"timstamp": "2017-04-10 17:41", "user": "Elarcis", "body": "merpnderp: well are you typing your injected dependencies, using classes for constructors, all that jig"}, {"timstamp": "2017-04-10 17:42", "user": "Elarcis", "body": "merpnderp: to me it feels you're trying to ditch a tech because it is blocking you from doing modern code, but the real problem is not the tech, it's how you use it due to the project being old"}, {"timstamp": "2017-04-10 17:43", "user": "merpnderp", "body": "Elarcis: well here, what do you think of this?"}, {"timstamp": "2017-04-10 17:43", "user": "merpnderp", "body": ""}, {"timstamp": "2017-04-10 17:44", "user": "merpnderp", "body": "a mixture of typed and untyped injections."}, {"timstamp": "2017-04-10 17:44", "user": "Elarcis", "body": "merpnderp: for instance, with webpack you're going to need to build a whole import tree in your project for webpack to be useful, and if you do that, well you'll have done a big step toward making typescript enjoyable (regardless of your current VS's version TS integration)"}, {"timstamp": "2017-04-10 17:44", "user": "merpnderp", "body": "I'd have no problem doing that in Typescript right now. Only like a 300 files or so right now."}, {"timstamp": "2017-04-10 17:44", "user": "Elarcis", "body": "merpnderp: ah, yes, now I get why you extend ng.IScope"}, {"timstamp": "2017-04-10 17:45", "user": "merpnderp", "body": "But I can't work with the d.ts file itself throwing weird errors google has no answer for."}, {"timstamp": "2017-04-10 17:45", "user": "Elarcis", "body": "merpnderp: yep"}, {"timstamp": "2017-04-10 17:45", "user": "Elarcis", "body": "merpnderp: where did you get that d.ts, by the way?"}, {"timstamp": "2017-04-10 17:45", "user": "merpnderp", "body": "definitelytyped on github"}, {"timstamp": "2017-04-10 17:45", "user": "merpnderp", "body": ""}, {"timstamp": "2017-04-10 17:46", "user": "Elarcis", "body": "merpnderp: but it's 1.6 types"}, {"timstamp": "2017-04-10 17:46", "user": "Elarcis", "body": "merpnderp: thought you wanted to use 1.5?"}, {"timstamp": "2017-04-10 17:47", "user": "merpnderp", "body": "Elarcis: I do. Can't find it. Look at the history on that file."}, {"timstamp": "2017-04-10 17:47", "user": "Elarcis", "body": "merpnderp: fuck"}, {"timstamp": "2017-04-10 17:48", "user": "merpnderp", "body": "Elarcis: Yeah, I don't feel like the ts ecosystem is particularly easy to navigate."}, {"timstamp": "2017-04-10 17:50", "user": "Elarcis", "body": "merpnderp:"}, {"timstamp": "2017-04-10 17:50", "user": "merpnderp", "body": "Elarcis: oh wow, thank you so much. How did you find that if you don't mind me asking?"}, {"timstamp": "2017-04-10 17:52", "user": "Elarcis", "body": "merpnderp: saw that they moved the typings from an angularjs folder, tried branches at random until stumbling on a 1.5 typings"}, {"timstamp": "2017-04-10 17:52", "user": "merpnderp", "body": "Elarcis: hah, nice."}, {"timstamp": "2017-04-10 17:52", "user": "Elarcis", "body": "merpnderp: I still don't have the same typings"}, {"timstamp": "2017-04-10 17:53", "user": "Elarcis", "body": "merpnderp: 'lucky' is a better term"}, {"timstamp": "2017-04-10 17:53", "user": "merpnderp", "body": "Now I get line 17 \"Imported decl conflicts with local decl of ng'"}, {"timstamp": "2017-04-10 17:53", "user": "merpnderp", "body": "Elarcis: You can see why I want to throw my hands up and just drop TS."}, {"timstamp": "2017-04-10 17:53", "user": "merpnderp", "body": "Take our exported JS which is all perfectly readable and live the rough life without typings."}, {"timstamp": "2017-04-10 17:54", "user": "Elarcis", "body": "merpnderp: it's more definitelyTyped's repo that's a mess"}, {"timstamp": "2017-04-10 17:54", "user": "Elarcis", "body": "merpnderp: you can"}, {"timstamp": "2017-04-10 17:54", "user": "merpnderp", "body": "Elarcis: yeah, but I'd like to just fix this :D"}, {"timstamp": "2017-04-10 17:54", "user": "Elarcis", "body": "merpnderp: well you'd have to configure weback/ES6 per boss's request, so this'd be a whole different problem"}, {"timstamp": "2017-04-10 17:55", "user": "merpnderp", "body": "Elarcis: well webpack and es6 wouldn't be hard. I'd have to edit every file, but any typos should be build times"}, {"timstamp": "2017-04-10 17:55", "user": "Elarcis", "body": "merpnderp: suggestion: make a proof of concept of replacing a few reference comments by an import statement"}, {"timstamp": "2017-04-10 17:55", "user": "Elarcis", "body": "merpnderp: check if there aren't any circular import issues"}, {"timstamp": "2017-04-10 17:55", "user": "Elarcis", "body": "merpnderp: (yeah, hard on 300 files)"}, {"timstamp": "2017-04-10 17:56", "user": "merpnderp", "body": "Elarcis: what do I do about this line 17 in the angular.d.ts?"}, {"timstamp": "2017-04-10 17:56", "user": "Elarcis", "body": "merpnderp: I have no idea what's causing it, honestly"}, {"timstamp": "2017-04-10 17:57", "user": "Elarcis", "body": "merpnderp: I don't even have the same file (but I'm using typings so that might be it)"}, {"timstamp": "2017-04-10 18:20", "user": "iprime", "body": "Elarcis, nice story, hopefully I won't have to switch to VS, I'm used to IntelliJ because I'm using for other platforms/frameworks/languages"}, {"timstamp": "2017-04-10 18:24", "user": "Elarcis", "body": "iprime: yeah, they have a good insight on what devs need"}], "label": "other"}
{"id": "93d5948d", "body": "", "comments": [{"timstamp": "2017-04-18 12:14", "user": "anotheryou", "body": "Is there a nice way to trigger some script when no input in to some text fields has been made for 1 second? I can only think of a counter that resets on every keystroke, but that seems a bit hacky"}, {"timstamp": "2017-04-18 12:15", "user": "anotheryou", "body": "or should I ask in #js?"}], "label": "other"}
{"id": "93d5953a", "body": "", "comments": [{"timstamp": "2016-05-28 10:45", "user": "zenman", "body": "Hi, anyone know why this wouldn't work for ngDialog? ng-click=\"forget() && closeThisDialog('Confirm')\""}, {"timstamp": "2016-05-28 10:46", "user": "zenman", "body": "just having closeThisDialog('Confirm') closes the dialog, but adding it to forget doesn't close it."}, {"timstamp": "2016-05-28 11:06", "user": "SET001", "body": "zenman, ^"}, {"timstamp": "2016-05-28 11:12", "user": "zenman", "body": "SET001: queef worked"}, {"timstamp": "2016-05-28 11:12", "user": "keemyb", "body": "zenman: you want the semicolon as SET001 says. using the operators is only useful if you are returning truthy / falsy values"}, {"timstamp": "2016-05-28 11:12", "user": "keemyb", "body": "but I'm ofc too late :)"}, {"timstamp": "2016-05-28 11:14", "user": "SET001", "body": "googled for what is queef is -"}], "label": "other"}
{"id": "93d5949a", "body": "", "comments": [{"timstamp": "2017-05-30 15:41", "user": "lorenx", "body": "how can i call a service that updates a controller scope from another controller?"}, {"timstamp": "2017-05-30 15:43", "user": "Elarcis", "body": "lorenx: you don't"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "lorenx: XD shall i?"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "Elarcis: shall i?*"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": ":P"}, {"timstamp": "2017-05-30 15:43", "user": "lorenx", "body": "how can i deal with this scenario then?"}, {"timstamp": "2017-05-30 15:43", "user": "jlebrech", "body": "Services"}, {"timstamp": "2017-05-30 15:43", "user": "Elarcis", "body": "lorenx: see here"}, {"timstamp": "2017-05-30 15:44", "user": "Elarcis", "body": "lorenx: services provide data and components fetch it, calls only go from the controller to the service and not the opposite"}, {"timstamp": "2017-05-30 15:47", "user": "lorenx", "body": "Elarcis: so you mean that i have to keep myVar content within the service?"}, {"timstamp": "2017-05-30 15:50", "user": "Elarcis", "body": "lorenx: no"}, {"timstamp": "2017-05-30 15:50", "user": "lorenx", "body": "Elarcis: good ^_^"}, {"timstamp": "2017-05-30 15:52", "user": "lorenx", "body": "Elarcis: i saw your example, it seems that it keeps the increment variable within the service..."}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "lorenx:"}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "no, it uses the service to make the data shared"}, {"timstamp": "2017-05-30 15:54", "user": "Elarcis", "body": "lorenx: ideally, your service is a black box that's shared between controllers that inject it"}, {"timstamp": "2017-05-30 15:55", "user": "jlebrech", "body": "you can do stuff to that shared variable, but might aswell have helper functions in the service no?"}, {"timstamp": "2017-05-30 15:55", "user": "jlebrech", "body": "if it's a function that that be performed from more than one place?"}, {"timstamp": "2017-05-30 15:57", "user": "Elarcis", "body": "jlebrech: of course"}, {"timstamp": "2017-05-30 15:57", "user": "Elarcis", "body": "here it's a simple example, so the object is just shared"}, {"timstamp": "2017-05-30 16:17", "user": "lorenx", "body": "Elarcis: excuse me, why getData() must return an object and it cannot just return the value?"}, {"timstamp": "2017-05-30 16:21", "user": "Elarcis", "body": "lorenx: JS references"}, {"timstamp": "2017-05-30 16:21", "user": "Elarcis", "body": "lorenx: the template is analyzed constantly to see what changes"}, {"timstamp": "2017-05-30 16:22", "user": "lorenx", "body": "only objects are analyzed? not primitives?"}, {"timstamp": "2017-05-30 16:23", "user": "notsacho", "body": "lorenx, short answer no, long answer is really long and it involves how angular's watches work"}, {"timstamp": "2017-05-30 16:24", "user": "lorenx", "body": "short is ok ;)"}, {"timstamp": "2017-05-30 16:24", "user": "notsacho", "body": "it's a rule of thumb that whenever you're binding an expression it's a good idea to bind to a property of an object"}, {"timstamp": "2017-05-30 16:30", "user": "lorenx", "body": "Elarcis: and sorry, this might be stupid but... why sharedService.increment doesn't want any parenthesis? isn't it a service function just like sharedService.getData() is?"}, {"timstamp": "2017-05-30 16:32", "user": "lorenx", "body": "but i guess it's not a function call though, just a callback binding, right?"}, {"timstamp": "2017-05-30 16:40", "user": "Elarcis", "body": "lorenx: everything is object"}, {"timstamp": "2017-05-30 16:40", "user": "Elarcis", "body": "lorenx: hence functions are objects"}, {"timstamp": "2017-05-30 17:05", "user": "Elarcis", "body": "fucking Semantic-UI implements a dropdown, but has no 'lazy-load' option"}, {"timstamp": "2017-05-30 17:06", "user": "Elarcis", "body": "\"need one dropdown per repeated item? FUCK YOU, we'll instantiate your 87 dropdowns in one go on view load!\""}, {"timstamp": "2017-05-30 17:07", "user": "Elarcis", "body": "\"and god forbid we optimize the thing for the heaviest calculations done on first click, no no, let's do everything at once, so it's the slowest operation, for dropdowns you won't even use\""}], "label": "other"}
{"id": "93d59549", "body": "", "comments": [{"timstamp": "2017-07-28 19:59", "user": "aleek", "body": "hello! After 15 years of kernel developing, I moved back to developing web apps. Currently learning angular4. I loved the instand developing of typescript modules/components and see the result immediately. Question is - is it angular specyfic, or is this some kind of external framework, I can use to develop my own, typescipt-based library?"}, {"timstamp": "2017-07-28 20:01", "user": "zomg_", "body": "aleek: you get this with pretty much any web based stack"}, {"timstamp": "2017-07-28 20:01", "user": "bs0d", "body": "aleek so how is the transition from low-level to high-level development feels?"}, {"timstamp": "2017-07-28 20:01", "user": "zomg_", "body": "there might be a small compile step involved (ie. building TS into JS) but it's near instant compared to something like kernel dev I'm sure :D"}, {"timstamp": "2017-07-28 20:04", "user": "aleek", "body": "bs0d: It sucks as f***. I used to develop web apps around 2003, when php5 was shiny new tool, eveyone used flash, and javascript was just cool addition to make snow on your website. Now, there's clouds everywhere, whole business logic is on client side, and JS in general is so powefull... I LOVE IT :)"}, {"timstamp": "2017-07-28 20:04", "user": "aleek", "body": "But it's nice to play with something that has graphical interface though"}, {"timstamp": "2017-07-28 20:05", "user": "bs0d", "body": "aleek yeah, I started using Angular 2 recently myself, and am amazed by the possibilities of it"}, {"timstamp": "2017-07-28 20:08", "user": "aleek", "body": "zomg_: can you provide some examples? I know, that angular (or to be specyfic, `ng serve`) uses some extra tools/libraries to make it work"}, {"timstamp": "2017-07-28 20:09", "user": "aleek", "body": "also there is some cool tool, that translates javascipt exception stacks into typescript file line number"}, {"timstamp": "2017-07-28 20:10", "user": "zomg_", "body": "well these days \"modern\" JS projects tend to use tools like webpack"}, {"timstamp": "2017-07-28 20:10", "user": "zomg_", "body": "that bundles and compiles stuff for you, and can \"watch\" files so the build runs automatically etc."}, {"timstamp": "2017-07-28 20:12", "user": "bs0d", "body": "aleek: a quickstart example using angular-cli"}, {"timstamp": "2017-07-28 20:19", "user": "aleek", "body": "bs0d: great, thanks"}, {"timstamp": "2017-07-28 20:48", "user": "bs0d", "body": "a stupid question: filtering an Observable<Array<Record>>, why is filter argument of type Record[]? I expected it to be just Record, because filter is applied to every single element in an array. What am I missing here?"}, {"timstamp": "2017-07-28 20:48", "user": "zomg_", "body": "Observable<T>"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "filter(param : T)"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "see the issue?"}, {"timstamp": "2017-07-28 20:49", "user": "SargoDarya", "body": "Observable<Record[]> is probably what you want I guess"}, {"timstamp": "2017-07-28 20:49", "user": "SargoDarya", "body": "Also, sup zomg_?"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "SargoDarya: isn't that the same as Array<Record> though"}, {"timstamp": "2017-07-28 20:49", "user": "zomg_", "body": "iirc anyway"}, {"timstamp": "2017-07-28 20:50", "user": "SargoDarya", "body": "zomg_: not too sure actually"}, {"timstamp": "2017-07-28 20:50", "user": "zomg_", "body": "I recall at least in Flow T[] and Array<T> are same :)"}, {"timstamp": "2017-07-28 20:50", "user": "bs0d", "body": "I think they are the same"}, {"timstamp": "2017-07-28 20:52", "user": "bs0d", "body": "but still ... I changed it to Observable<Record[]> at it behaves exactly the same manner"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "yes the issue is that you have Observable<T>"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "where the filter function is filter(v : T)"}, {"timstamp": "2017-07-28 20:53", "user": "zomg_", "body": "what is T in your case going to be?"}, {"timstamp": "2017-07-28 20:54", "user": "bs0d", "body": "T will be Record[]"}, {"timstamp": "2017-07-28 20:54", "user": "zomg_", "body": "so see the problem now? :)"}, {"timstamp": "2017-07-28 20:54", "user": "bs0d", "body": "hmm, so if I wish to filter items having specific id property, I cannot use filter for this purpose, I need something else?"}, {"timstamp": "2017-07-28 20:55", "user": "zomg_", "body": "I don't know how it's supposed to be done with observables tbh but you could just filter the array inside the filter function again"}, {"timstamp": "2017-07-28 20:55", "user": "zomg_", "body": "maybe"}, {"timstamp": "2017-07-28 20:55", "user": "bs0d", "body": "zomg_: this.dataService.records.filter(x => x.id == 0) tells me Property id doesn't exist on type Record[]"}, {"timstamp": "2017-07-28 20:56", "user": "zomg_", "body": "perhaps flatMap might be the way to go"}, {"timstamp": "2017-07-28 20:56", "user": "zomg_", "body": "eg. records.flatMap(x => x.filter(y => y.id == 0))"}, {"timstamp": "2017-07-28 20:58", "user": "bs0d", "body": "zomg_ I'll give it a try"}, {"timstamp": "2017-07-28 21:00", "user": "bs0d", "body": "zomg_ it worked like magic! Thanks a lot. Btw, what is the use of filter if it filters not the elements of a container, but the container type itself?"}, {"timstamp": "2017-07-28 21:02", "user": "bs0d", "body": "zomg_ I was assuming that if I am filtering a container, the filter is applied to each of its elements. And I think this is the case for regular arrays, not obseervables"}, {"timstamp": "2017-07-28 21:02", "user": "zomg_", "body": "probably more useful for cases where the observable isn't an array"}, {"timstamp": "2017-07-28 21:03", "user": "zomg_", "body": "it seems a bit odd for the observable to be an array tbh :P"}, {"timstamp": "2017-07-28 21:03", "user": "sadme", "body": "it's not"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "isn't observable more for values over time"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "why do you have arrays over time?"}, {"timstamp": "2017-07-28 21:04", "user": "sadme", "body": "grabbing a collection of items from an http resource, for example"}, {"timstamp": "2017-07-28 21:04", "user": "zomg_", "body": "why not use a promise for that if it's a one time grab?"}, {"timstamp": "2017-07-28 21:05", "user": "bs0d", "body": "zomg_ in my case, I have a set of records which come from a web service. Users edit entries, delete/remove entries, and other components track these changes"}, {"timstamp": "2017-07-28 21:05", "user": "sadme", "body": "because it might not always be a one time grab :)"}, {"timstamp": "2017-07-28 21:06", "user": "sadme", "body": "also, promises aren't cancelable, so you shouldn't really use them for http requests"}, {"timstamp": "2017-07-28 21:06", "user": "zomg_", "body": "I wonder why they used it for fetch then"}, {"timstamp": "2017-07-28 21:06", "user": "sadme", "body": "because observable isn't part of ecmascript yet"}, {"timstamp": "2017-07-28 21:06", "user": "bs0d", "body": "Angular tutorial should be re-written to not to use promises"}, {"timstamp": "2017-07-28 21:08", "user": "bs0d", "body": "could be* - I was way too categoric"}, {"timstamp": "2017-07-28 21:08", "user": "Violinist", "body": "sadme,"}, {"timstamp": "2017-07-28 21:12", "user": "zomg_", "body": "sadme: tbh it seems semantically wrong to use an observable for something which only ever returns a single value like an http request :P"}, {"timstamp": "2017-07-28 21:13", "user": "sadme", "body": "why?"}, {"timstamp": "2017-07-28 21:14", "user": "zomg_", "body": "because an observable implies it may return multiple values"}, {"timstamp": "2017-07-28 21:14", "user": "sadme", "body": "no it doesn't"}, {"timstamp": "2017-07-28 21:14", "user": "zomg_", "body": "how do I know how many values will it produce?"}, {"timstamp": "2017-07-28 21:14", "user": "bs0d", "body": "zomg_ observables are used to subscribe to async requests, what, in your opinion, would be more proper way to react to async http server responses returning a single value?"}, {"timstamp": "2017-07-28 21:15", "user": "sadme", "body": "how do you know if a promise will resolve"}, {"timstamp": "2017-07-28 21:15", "user": "zomg_", "body": "sadme: how do you know if an observable will ever produce any values? :)"}, {"timstamp": "2017-07-28 21:15", "user": "sadme", "body": "indeed"}, {"timstamp": "2017-07-28 21:16", "user": "zomg_", "body": "bs0d: imo it would be a promise since it'll always produce just one result"}, {"timstamp": "2017-07-28 21:16", "user": "zomg_", "body": "with observables there's no clear distinction between those that return a single result and those which return multiple values"}, {"timstamp": "2017-07-28 21:17", "user": "zomg_", "body": "with http requests in particular it seems there would be some confusion between streaming and non streaming responses"}, {"timstamp": "2017-07-28 21:17", "user": "sadme", "body": "observables from http methods return a single value"}, {"timstamp": "2017-07-28 21:17", "user": "Violinist", "body": "std::stream"}, {"timstamp": "2017-07-28 21:18", "user": "bs0d", "body": "speaking about observables, is it possible to do a two-way data binding to an observable?"}, {"timstamp": "2017-07-28 21:18", "user": "Violinist", "body": "s << asdfasdfasdf;"}, {"timstamp": "2017-07-28 21:19", "user": "sadme", "body": "you can have a Subject, if that's what you mean"}, {"timstamp": "2017-07-28 21:19", "user": "Violinist", "body": "cant u just assign it to the scope model"}, {"timstamp": "2017-07-28 21:19", "user": "Violinist", "body": "the data u get from observable"}, {"timstamp": "2017-07-28 21:20", "user": "zomg_", "body": "sadme: you only know it returns a single value because the docs say so :)"}, {"timstamp": "2017-07-28 21:21", "user": "sadme", "body": "generally speaking, you only know how any observable behaves based on the documentation of the function which generates said observable.."}, {"timstamp": "2017-07-28 21:23", "user": "Violinist", "body": "documentation belongs in the trash"}, {"timstamp": "2017-07-28 21:23", "user": "Violinist", "body": "burn all the books"}, {"timstamp": "2017-07-28 21:24", "user": "Violinist", "body": "burn the priest"}, {"timstamp": "2017-07-28 21:24", "user": "zomg_", "body": "sadme: yeah that's why it's confusing semantically - why can you not use a type which clearly communicates the behavior?"}, {"timstamp": "2017-07-28 21:25", "user": "sadme", "body": "i mentioned cancellations before, that's a pretty good reason"}, {"timstamp": "2017-07-28 21:25", "user": "sadme", "body": "also observables are powerful composable objects, not just \"a value delivered asynchronously\""}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "ya u can make ur own observable class"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "then u can see that u can set it to anything u want"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "its actually kinda simple"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "its like 2 or 3 methods"}, {"timstamp": "2017-07-28 21:26", "user": "Violinist", "body": "about 15 lines of code"}, {"timstamp": "2017-07-28 21:30", "user": "bs0d", "body": "sadme what does a Subject do?"}, {"timstamp": "2017-07-28 21:31", "user": "bs0d", "body": "sadme I have a selectedRecord which comes from ngrx/store in the form of an observable. I need to display the items of this object in a form and let the user edit these values. Do I need a Subject for this?"}, {"timstamp": "2017-07-28 21:32", "user": "sadme", "body": "what kind of form are you using, reactive or model driven?"}, {"timstamp": "2017-07-28 21:32", "user": "sadme", "body": "a subject is both an observable and a subscriber, so it emits values and can receive them"}, {"timstamp": "2017-07-28 21:34", "user": "bs0d", "body": "sadme model driven forms, every input corresponds to a data field in an selectedRecord object"}, {"timstamp": "2017-07-28 21:34", "user": "sadme", "body": "with reactive forms you can just subscribe to it, and in the `next` method just call form.setValue({stuff})"}, {"timstamp": "2017-07-28 21:35", "user": "bs0d", "body": "sadme and with template driven forms I need to convert my selectedRecord into a subject and use it?"}, {"timstamp": "2017-07-28 21:36", "user": "sadme", "body": "nono, ignore the subject thing, i don't think you need to worry about that"}, {"timstamp": "2017-07-28 21:36", "user": "sadme", "body": "i guess with model driven forms you can just set 'myValue' inside your subscription ?"}, {"timstamp": "2017-07-28 21:37", "user": "bs0d", "body": "sadme I do not quite understand how to apply this subscription. I subscribe, and with every change to the obs I update a local copy of the same data, then bind my inputs to this local copy?"}, {"timstamp": "2017-07-28 21:39", "user": "sadme", "body": "well, your ngModel directive will point to a copy of the data in your component, right? so in your subscription you can just do (next) => {mydata = next;} or something"}, {"timstamp": "2017-07-28 21:40", "user": "sadme", "body": "i haven't really used template driven forms so i'm not totally sure"}, {"timstamp": "2017-07-28 21:41", "user": "bs0d", "body": "I am trying to avoid this, because I have ~15 components which require same data, I wouldn't like to keep 15 copies of the same dataset. This was the main reason why I started to use ngrx/store and ended up in shared data stored in observables"}, {"timstamp": "2017-07-28 21:42", "user": "bs0d", "body": "sadme: but I still need a way to display shared object's data fields in component template form, as well as let the user edit these values"}, {"timstamp": "2017-07-28 21:43", "user": "sadme", "body": "i'm not overly familiar with ngrx, but don't you need to fire an event or something to update data inside the store?"}, {"timstamp": "2017-07-28 21:57", "user": "bs0d", "body": "sadme yes, you are right. I do not need two way data binding here. I can fire update events to the store instead"}, {"timstamp": "2017-07-28 22:04", "user": "zomg_", "body": "sadme: assuming the promise doesn't have those issues then ther should be no reason not to use it"}, {"timstamp": "2017-07-28 22:05", "user": "zomg_", "body": "so more than anything it just seems like a poor design decision in the implementation of whatever"}, {"timstamp": "2017-07-28 22:07", "user": "sadme", "body": "\\_()_/ tell that to the angular team, all the Http methods in angular 2+ use observables"}, {"timstamp": "2017-07-28 22:07", "user": "zomg_", "body": "yeah I'm just talking on the theoretical level :)"}, {"timstamp": "2017-07-28 22:08", "user": "zomg_", "body": "*ideally* it seems like a promise or some other single-result type would function better for things which only produce a single result"}, {"timstamp": "2017-07-28 22:10", "user": "sadme", "body": "ideally isn't the word i'd use - unless you don't care about cancellation or composition"}, {"timstamp": "2017-07-28 22:10", "user": "zomg_", "body": "well, ideally you would be able to cancel it :P"}, {"timstamp": "2017-07-28 22:11", "user": "zomg_", "body": "but that kind of goes into other topics like high and low level apis etc."}], "label": "other"}
{"id": "93d594a7", "body": "", "comments": [{"timstamp": "2016-05-26 18:32", "user": "tristanp", "body": "how can it be that I am returning a promise from a mocha test and still getting the \"done() not called in 2000 ms\" error? here is what the test and output is:"}, {"timstamp": "2016-05-26 18:32", "user": "tristanp", "body": "is there some subtlety to the $httpBackend that I'm not understanding?"}], "label": "other"}
{"id": "93d594af", "body": "", "comments": [{"timstamp": "2017-02-24 21:24", "user": "geoid_", "body": "How can I select the items by id here:"}, {"timstamp": "2017-02-24 21:24", "user": "geoid_", "body": "See the console.log"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "geoid_, think yer doing it wrong :)"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "geoid_, if you have a directive you apply to the element that's being repeated then the element passed to the link will be the one you want"}, {"timstamp": "2017-02-24 21:38", "user": "wafflejock", "body": "what're you trying to do?"}, {"timstamp": "2017-02-24 21:40", "user": "wafflejock", "body": "geoid_, long story short the template will be loaded by the time the link function fires but the ng-repeat directive will update/change the markup anytime the model it points to changes which can happen after your link function here fires, but knowing the goal will help to know if there's an easier way"}, {"timstamp": "2017-02-24 21:40", "user": "wafflejock", "body": "also {{}} are creating watch functions that get fired anytime the model changes for those elements so all that async stuff can happen after the link functions have run"}, {"timstamp": "2017-02-24 21:42", "user": "geoid_", "body": "I'm actually trying to solve a bigger problem, which is using angular-scroll ("}, {"timstamp": "2017-02-24 21:42", "user": "geoid_", "body": "you wish to scroll. So I need to figure out how to get hold of that element. My plunker is a simplification of that scenario without bringing in the library."}, {"timstamp": "2017-02-24 21:44", "user": "wafflejock", "body": "gotcha... okay so you can have your directive be on the ng-repeated elements but this could cause some problems since like I said if the array or object the ng-repeat is iterating over changes then it's going to destroy that part of the DOM and rebuild it"}, {"timstamp": "2017-02-24 21:46", "user": "wafflejock", "body": "if you applied a directive to the thing being ng-repeated though you'd have the link function fired for each element of the repeat iteration I believe and could pass in the identifier for the one that should fire the scroll"}, {"timstamp": "2017-02-24 21:46", "user": "geoid_", "body": "maybe I could set up a plnkr using angular-scroll... not sure how to include the library though?"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "usually can search common ones in the book icon on the right in plnkr"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "if it's not there I usually look for a CDN or last ditch is rawgit"}, {"timstamp": "2017-02-24 21:47", "user": "geoid_", "body": "I found the cdn but not sure how to pull it into my plnkr"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "just add it to the index.html as a script and add the module dependency"}, {"timstamp": "2017-02-24 21:47", "user": "wafflejock", "body": "should be all you need"}, {"timstamp": "2017-02-24 21:47", "user": "geoid_", "body": "oh"}, {"timstamp": "2017-02-24 21:53", "user": "geoid_", "body": "I'm trying to make this easier to read but the template has lost it's bindings somehow:"}, {"timstamp": "2017-02-24 21:53", "user": "geoid_", "body": "what am I missing?"}, {"timstamp": "2017-02-24 21:55", "user": "wafflejock", "body": ""}, {"timstamp": "2017-02-24 21:56", "user": "geoid_", "body": "wow ok thx"}, {"timstamp": "2017-02-24 21:56", "user": "geoid_", "body": "still getting used to plnkr"}, {"timstamp": "2017-02-24 21:58", "user": "wafflejock", "body": "geoid_, no prob yeah here check it out"}, {"timstamp": "2017-02-24 21:59", "user": "wafflejock", "body": "I added the console.log for a new directive that is just another attribute and logged out the attribtutes"}, {"timstamp": "2017-02-24 22:00", "user": "geoid_", "body": "ok I'm going to add css and try to get the scrolling thing plugged in so I can highlight the issue"}, {"timstamp": "2017-02-24 22:00", "user": "wafflejock", "body": "should be able to conditionally look at those and decide which one to scroll to"}, {"timstamp": "2017-02-24 22:00", "user": "wafflejock", "body": "yeah can add some junk before it to make some scrollable area"}, {"timstamp": "2017-02-24 22:11", "user": "geoid_", "body": "I've run into some problems:"}, {"timstamp": "2017-02-24 22:12", "user": "geoid_", "body": "This is the example I'm following:"}, {"timstamp": "2017-02-24 22:15", "user": "geoid_", "body": "The error message in the console is indeed what I'm getting in my real world example."}, {"timstamp": "2017-02-24 22:26", "user": "geoid_", "body": "Why does my whole layout disappear when I add in a controller to the directive?"}, {"timstamp": "2017-02-24 22:26", "user": "geoid_", "body": ""}, {"timstamp": "2017-02-24 22:34", "user": "wafflejock", "body": "geoid_, errors in the console when trying to compile part of the DOM cause angular to give up"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "geoid_,"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "timeout waiting for the ng-repeat to finish it's thing"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "doesn't need 1000ms no delay works fine I just had some other issues too namely the container needs to be the document itself"}, {"timstamp": "2017-02-24 22:35", "user": "wafflejock", "body": "the thing with the scroll bar on it"}, {"timstamp": "2017-02-24 22:36", "user": "geoid_", "body": "wafflejock I am confused: what did you change?? I can't see anything different except the timeout."}, {"timstamp": "2017-02-24 22:36", "user": "wafflejock", "body": "to avoid using the timeout you could use the directive attribute I applied to the ng-repeating elements themselves but that has it's own issues too so no perfect solution I can think of"}, {"timstamp": "2017-02-24 22:37", "user": "wafflejock", "body": "see the container I changed out for the angular.element(document) and the section I took out the # don't need that before the id for getElementById"}, {"timstamp": "2017-02-24 22:38", "user": "geoid_", "body": "but for me the layout wasn't rendering at all... yours suddenly is magically"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "yeah the not rendering is cause it tried to process some directive in the compilation of the markup and it borked while doing that"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "if it dies while compiling i won't inject the new broken stuff into the view it just fails"}, {"timstamp": "2017-02-24 22:38", "user": "wafflejock", "body": "it* won't"}, {"timstamp": "2017-02-24 22:40", "user": "wafflejock", "body": "basically anything after an error like that is going to be unexpected behavior because it couldn't complete processing all the functions needed to generate the view and do whatever else the directives are doing, adding listeners etc etc"}, {"timstamp": "2017-02-24 22:40", "user": "geoid_", "body": "is that a plnkr thing?"}, {"timstamp": "2017-02-24 22:40", "user": "wafflejock", "body": "no angular"}, {"timstamp": "2017-02-24 22:41", "user": "wafflejock", "body": "check out $compile and can see how it works under the hood for analyzing the html and running directives"}, {"timstamp": "2017-02-24 22:42", "user": "wafflejock", "body": "it has to create a combined link function that is all the link functions for all the directives in some part of the markup it is $compiling so if any part of that fails to run then it can't really generate the view properly"}, {"timstamp": "2017-02-24 22:44", "user": "wafflejock", "body": "geoid_, it can fail in some weird ways but you get used to debugging it eventually, with angular 2 if you use TSC you get some ahead of time/compile time errors that will probably reduce runtime errors with type checking and all, but just like any other framework you eventually learn to decipher the errors and behaviors"}, {"timstamp": "2017-02-24 22:46", "user": "geoid_", "body": "the example was supposed to be for a container scrollTo <unconvertable> which is what I'm using in my real world example, any reason why that won't work?"}, {"timstamp": "2017-02-24 22:46", "user": "wafflejock", "body": "geoid_, the container needs to be the thing with the scrollbar think they are assuming you have some container with a fixed height and some contents bigger than that height that are adding a scroll rect and all to that element"}, {"timstamp": "2017-02-24 22:47", "user": "geoid_", "body": "I see, so it might be CSS preventing that from working."}, {"timstamp": "2017-02-24 22:47", "user": "wafflejock", "body": "geoid_, yeah"}, {"timstamp": "2017-02-24 22:50", "user": "geoid_", "body": "I don't understand why the element isn't available in the link function though?"}, {"timstamp": "2017-02-24 22:56", "user": "wafflejock", "body": "geoid_, well couple of issues, you really don't want to be writing stuff in the controller that reads out of the DOM because the directives deal with the DOM exclusively and the controller just deals with getting services into the view model/scope so that bindings in the view can reference that data"}, {"timstamp": "2017-02-24 22:57", "user": "wafflejock", "body": "geoid_, beyond that the ng-repeat in the template is a directive as well and needs to be run through the $compile process so it's link function gets triggered with a scope and then based on the data in the scope for the ng-repeat it makes new elements and assigns the scope of each of the new elements to the thing you're iterating over"}, {"timstamp": "2017-02-24 22:57", "user": "wafflejock", "body": "after all that happens it has bindings in those elements that get filled in but all that stuff doesn't happen synchronously"}, {"timstamp": "2017-02-24 22:59", "user": "wafflejock", "body": "geoid_,"}, {"timstamp": "2017-02-24 22:59", "user": "wafflejock", "body": "geoid_, ultimately would need to get a good understanding of how ng-repeat works under the hood too though I think to fully understand what's happening there"}, {"timstamp": "2017-02-24 23:02", "user": "geoid_", "body": "hmm. Thanks wafflejock I'm not sure how that answers my question but I'll defs bookmark your plnkr"}, {"timstamp": "2017-02-24 23:10", "user": "wafflejock", "body": "geoid_, basically the post link for the ng-repeat will have run by the time your post link happens but the watch it registers won't be fired off and it won't have stamped out the template elements using translcude yet by the time you try to getElementById"}, {"timstamp": "2017-02-24 23:10", "user": "wafflejock", "body": ""}, {"timstamp": "2017-02-24 23:14", "user": "geoid_", "body": "Wow... how do you know that the post link will have run but the watch and the stamping won't have happened?"}, {"timstamp": "2017-02-24 23:14", "user": "wafflejock", "body": "well cause it didn't work :)"}, {"timstamp": "2017-02-24 23:15", "user": "wafflejock", "body": "hehe and my example shows the post link for the children happens before the parent I also read it on a blog"}, {"timstamp": "2017-02-24 23:15", "user": "wafflejock", "body": "the $timeout is just giving it \"long enough\" to do the actual stamping out of the elements so when we get the element by id after that timeout it's fine cause the watch must have completed it's work of making those elements"}, {"timstamp": "2017-02-24 23:16", "user": "wafflejock", "body": "to verify could add some breakpoints in the angular source"}, {"timstamp": "2017-02-24 23:21", "user": "geoid_", "body": "amazing thanks for your insights there"}, {"timstamp": "2017-02-24 23:21", "user": "geoid_", "body": "I'm trying to flesh out the example so that it's more like my real world implementation as I'm still having problems with that."}, {"timstamp": "2017-02-24 23:23", "user": "wafflejock", "body": "no prob, yeah just verified what I said it's actually true :P"}, {"timstamp": "2017-02-24 23:40", "user": "geoid_", "body": "weird.. I built up an example as close as possible in plnkr... and it works. But in my real world example it still doesn't work :("}, {"timstamp": "2017-02-24 23:41", "user": "geoid_", "body": "I'll have to try the other way around <unconvertable> build up a simple working example in my real world app and then gradually add to it till I figure out what's causing it to break."}, {"timstamp": "2017-02-24 23:41", "user": "geoid_", "body": "wafflejock tx again for your help. I'm done for the evening."}, {"timstamp": "2017-02-24 23:43", "user": "wafflejock", "body": "geoid_, ah no prob have a good one"}], "label": "other"}
{"id": "93d594b4", "body": "", "comments": [{"timstamp": "2016-11-04 11:03", "user": "smiche", "body": "my angular app is melting this tablet"}, {"timstamp": "2016-11-04 11:06", "user": "tobias", "body": "smiche: nice :D"}, {"timstamp": "2016-11-04 11:35", "user": "smiche", "body": "uh"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": "yep"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": "this one"}, {"timstamp": "2016-11-04 11:36", "user": "loZio", "body": ""}, {"timstamp": "2016-11-04 11:37", "user": "loZio", "body": "I want to custom infowindow"}, {"timstamp": "2016-11-04 11:38", "user": "icebox", "body": "loZio: nice"}, {"timstamp": "2016-11-04 11:39", "user": "icebox", "body": "loZio: it seems there is an example there:"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "XD"}, {"timstamp": "2016-11-04 11:40", "user": "icebox", "body": "loZio: and?"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": ""}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "I think that with this one I can inject my template in the popup"}, {"timstamp": "2016-11-04 11:40", "user": "loZio", "body": "but I want to custom the form of my popup"}, {"timstamp": "2016-11-04 11:41", "user": "icebox", "body": "loZio: perfect :)"}, {"timstamp": "2016-11-04 11:41", "user": "loZio", "body": "do you have example for custom infowindow?"}, {"timstamp": "2016-11-04 11:42", "user": "icebox", "body": "loZio: \"out of scope. infowindow is set by Google, not by ng-map. ng-map is just a wrapper of google maps api\""}, {"timstamp": "2016-11-04 11:42", "user": "icebox", "body": "loZio: here it is #angularjs... it is not google api channel or ngmap one :)"}], "label": "other"}
{"id": "93d59534", "body": "", "comments": [{"timstamp": "2017-09-06 09:24", "user": "joakimk", "body": "I've set up a global/shared service (singleton) to share some parameters across my components. This contains two variables, id1 and id2, which various components can subscribe to in order to be \"notified\" when either changes"}, {"timstamp": "2017-09-06 09:25", "user": "joakimk", "body": "I want the component to reload/query the API whenever either variable changes. Problem is, on application load, id1 and id2 are initialized and \"broadcast\" to the components asynchronously. So, componentA will be notified of id1 and id2 in some order. How can I ensure that componentA.getData(id1, id2) is only invoked whenever BOTH id1 AND id2 are defined?"}, {"timstamp": "2017-09-06 09:27", "user": "joakimk", "body": "Way I've implemented it, is to set up two subscriptions in componentA.ngOnInit(): this._parameterService.id1.subscribe(data=>{this.getData(this.id1, this.id2);});"}, {"timstamp": "2017-09-06 09:27", "user": "joakimk", "body": "and similarily for id2... So getData(id1, id2) is invoked two times -- the first time with only one of the variables defined..."}, {"timstamp": "2017-09-06 09:28", "user": "joakimk", "body": "btw, the service's id1 and id2 are BehaviorSubjects"}], "label": "other"}
{"id": "93d59490", "body": "", "comments": [{"timstamp": "2016-07-12 07:08", "user": "spider_", "body": "hey how to add methode of aary and then retrieve one by ine"}], "label": "other"}
{"id": "8addb276", "body": "", "comments": [{"timstamp": "2016-12-16 10:35", "user": "nana_", "body": "hi i hava a question."}, {"timstamp": "2016-12-16 10:35", "user": "nana_", "body": "we can export excel to local using angular, then is it possible to add several sheet to .xls file?"}], "label": "feature"}
{"id": "93d59476", "body": "", "comments": [{"timstamp": "2018-11-16 11:45", "user": "zomg", "body": "hey hey hey Pyrrhus666"}, {"timstamp": "2018-11-16 11:47", "user": "Pyrrhus666", "body": "c-c-c-c-c-combo breaker :P"}, {"timstamp": "2018-11-16 11:48", "user": "ray02", "body": "ahah"}, {"timstamp": "2018-11-16 11:48", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2018-11-16 11:49", "user": "Pyrrhus666", "body": "ray02, how was that long interview yesterday ? I saw you mentioning it, but missed the rest."}, {"timstamp": "2018-11-16 11:51", "user": "ray02", "body": "it was nice the environment of work look very nice"}, {"timstamp": "2018-11-16 11:52", "user": "ray02", "body": "they try to make partecipate all the person of the team to the decision"}, {"timstamp": "2018-11-16 11:52", "user": "ray02", "body": "and to propose new solution"}, {"timstamp": "2018-11-16 11:53", "user": "Pyrrhus666", "body": "sounds cool... so when will you hear if youre hired ?"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "and in general to the activity , like for example there was aslso frontend guy partecipating to this interview"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "in one week"}, {"timstamp": "2018-11-16 11:54", "user": "Pyrrhus666", "body": "ray02, exciting :)"}, {"timstamp": "2018-11-16 11:54", "user": "ray02", "body": "now i'm going to make the role play game to another company"}, {"timstamp": "2018-11-16 11:55", "user": "berz3rk", "body": "ray02: what?"}, {"timstamp": "2018-11-16 11:56", "user": "Pyrrhus666", "body": "ray02, you did bring the dice and your phb, no ?"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "as a proces of hiring they love to make a role play game"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "ahah"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "no also i'm little bit drunked from yesterday"}, {"timstamp": "2018-11-16 11:56", "user": "Pyrrhus666", "body": "more coffee, stat ! ;)"}, {"timstamp": "2018-11-16 11:56", "user": "ray02", "body": "i hope they don't ask me to do strange things"}, {"timstamp": "2018-11-16 11:57", "user": "ray02", "body": ":d"}, {"timstamp": "2018-11-16 11:57", "user": "ray02", "body": "i go, i will let you know later how has been"}, {"timstamp": "2018-11-16 11:57", "user": "Pyrrhus666", "body": "Im off early for a long weekend (in about an hour), so Ill ask you on tuesday when Im back ;)"}, {"timstamp": "2018-11-16 13:06", "user": "pupskuchen", "body": "Pyrrhus666: I'm convinced it's a router-related issue now and you may be right with your concern about the window object"}, {"timstamp": "2018-11-16 13:07", "user": "pupskuchen", "body": "I provided MockLocationStrategy to avoid the URL changing, but I suspect the BrowserPlatformLocation class still messes with the window object anyway"}, {"timstamp": "2018-11-16 14:08", "user": "Pyrrhus666", "body": "off in a bit. see yall tuesday, have a good weekend"}], "label": "other"}
{"id": "93d594eb", "body": "", "comments": [{"timstamp": "2016-10-28 13:37", "user": "sl33k", "body": "My directive is not getting escaped. I used a directive on stackoverflow as well as <pre><code>. What gives?"}, {"timstamp": "2016-10-28 13:38", "user": "sl33k", "body": "This is my directive"}, {"timstamp": "2016-10-28 13:38", "user": "sl33k", "body": "<angucomplete-alt id=\"ex1\" placeholder=\"Search countries\" pause=\"100\" selected-object=\"selectedCountry\" local-data=\"countries\" search-fields=\"name\" title-field=\"name\" minlength=\"1\" input-class=\"form-control form-control-small\" />"}, {"timstamp": "2016-10-28 13:40", "user": "Pyrrhus666", "body": "sl33k: \"not getting escaped\" ?"}, {"timstamp": "2016-10-28 13:40", "user": "sl33k", "body": "I want the HTML to show up as it is"}, {"timstamp": "2016-10-28 13:40", "user": "sl33k", "body": "like <pre> tags"}, {"timstamp": "2016-10-28 13:42", "user": "Pyrrhus666", "body": "got plunk ? no real clue what you're getting at here..."}, {"timstamp": "2016-10-28 13:42", "user": "icebox", "body": "Pyrrhus666: in markdown ''' my code ''', but in SO"}, {"timstamp": "2016-10-28 13:43", "user": "Pyrrhus666", "body": "ah, so this is an SO editor issue ?"}, {"timstamp": "2016-10-28 13:43", "user": "sl33k", "body": "icebox thats exactly what I mean"}, {"timstamp": "2016-10-28 13:43", "user": "sl33k", "body": "Not SO but my page"}, {"timstamp": "2016-10-28 13:45", "user": "icebox", "body": "Pyrrhus666:"}, {"timstamp": "2016-10-28 13:46", "user": "icebox", "body": "sl33k: you need to transform the text you put in a code or pre tag, if it is html"}, {"timstamp": "2016-10-28 13:47", "user": "icebox", "body": "sl33k: it is not enough how I did in the plunker above"}, {"timstamp": "2016-10-28 13:47", "user": "Pyrrhus666", "body": "ah, he expected <pre> or <code> to do that for him."}, {"timstamp": "2016-10-28 13:48", "user": "icebox", "body": "sl33k: and generally speaking this is an html question :)"}, {"timstamp": "2016-10-28 13:50", "user": "icebox", "body": "sl33k: if you refresh the plunker you see what you need to do to display html in code tag"}], "label": "other"}
{"id": "0ec1e38a", "body": "", "comments": [{"timstamp": "12:54", "user": "Paradisee", "body": "how can i create a cookie in angular?"}, {"timstamp": "12:56", "user": "Paradisee", "body": "ngx-cookie-service"}, {"timstamp": "12:56", "user": "OnceMe", "body": "there is also CookieService"}, {"timstamp": "12:56", "user": "Paradisee", "body": "do i have to use this ?"}, {"timstamp": "12:56", "user": "OnceMe", "body": "you can"}, {"timstamp": "12:56", "user": "OnceMe", "body": "but I would use localStorage/sessionStorage"}, {"timstamp": "12:57", "user": "OnceMe", "body": "depending on what do you need it for"}, {"timstamp": "12:57", "user": "Paradisee", "body": "i used lcoalstorage, but i don't know why the server can't read the jwt"}, {"timstamp": "12:57", "user": "OnceMe", "body": "do not store jwt in cookie"}, {"timstamp": "12:57", "user": "Paradisee", "body": "why not"}, {"timstamp": "13:04", "user": "SargoDarya", "body": "Paradisee: Server has no access to localStorage. If you have to just set the authorization header with a bearer token"}, {"timstamp": "13:04", "user": "Paradisee", "body": "SargoDarya: that's why i want to use cookie"}, {"timstamp": "13:05", "user": "SargoDarya", "body": "Paradisee:"}, {"timstamp": "13:05", "user": "Paradisee", "body": "thanks"}, {"timstamp": "13:05", "user": "Paradisee", "body": "or even a header"}, {"timstamp": "13:05", "user": "Paradisee", "body": "but i need to find out how to use an interceptor on each http"}], "label": "other"}
{"id": "93d59512", "body": "", "comments": [{"timstamp": "2018-01-22 10:57", "user": "Archelaus", "body": ""}, {"timstamp": "2018-01-22 10:57", "user": "Archelaus", "body": "?"}, {"timstamp": "2018-01-22 10:57", "user": "SuperTyp", "body": "Archelaus: been there too just right now =D"}, {"timstamp": "2018-01-22 10:58", "user": "SuperTyp", "body": "but he wants to show an ad if I understood right"}, {"timstamp": "2018-01-22 10:58", "user": "Archelaus", "body": "i have a service called LoadingService for this, but it's pretty much the same thing, a promise that gets resolved"}, {"timstamp": "2018-01-22 10:58", "user": "Archelaus", "body": "Could rework that into a modal fairly easily"}, {"timstamp": "2018-01-22 10:58", "user": "Archelaus", "body": "I'm using ui-router though"}], "label": "other"}
{"id": "73af7d22", "body": "", "comments": [{"timstamp": "02:59", "user": "yakiza", "body": "A good angular7-8 for begginer from youtube to doc anything you guys have to suggest?"}], "label": "other"}
{"id": "93d59482", "body": "", "comments": [{"timstamp": "2017-02-27 14:58", "user": "songi", "body": "hi iceboc"}, {"timstamp": "2017-02-27 14:58", "user": "songi", "body": "*icebox"}, {"timstamp": "2017-02-27 14:58", "user": "icebox", "body": "songi: hey"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: resolved?"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "nope unfortunately"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: repeat me, please, the question"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "when I change the url and the I run a urlrouter sync"}, {"timstamp": "2017-02-27 14:59", "user": "icebox", "body": "songi: ah ok"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "the following navigatio"}, {"timstamp": "2017-02-27 14:59", "user": "songi", "body": "starts"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "but not succede"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "I don't get any error neither exception"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "and I don't know where/what investigate"}, {"timstamp": "2017-02-27 15:00", "user": "songi", "body": "could you suggest something?"}, {"timstamp": "2017-02-27 15:01", "user": "icebox", "body": "songi: at the moment, no idea... what is your use case?"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "I manipulate the url"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "I replace it"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "and then I trigger the sync"}, {"timstamp": "2017-02-27 15:02", "user": "songi", "body": "to trigger a \"reload\""}, {"timstamp": "2017-02-27 15:02", "user": "Elarcis", "body": "songi: the sync?"}, {"timstamp": "2017-02-27 15:03", "user": "songi", "body": "urlrouter.sync"}, {"timstamp": "2017-02-27 15:03", "user": "songi", "body": "what's wrong?"}, {"timstamp": "2017-02-27 15:04", "user": "Elarcis", "body": "songi: what's urlrouter?"}, {"timstamp": "2017-02-27 15:04", "user": "songi", "body": "ng UrlRouterService"}, {"timstamp": "2017-02-27 15:04", "user": "icebox", "body": "songi: that is what you think you should code... but what is your goal? what do you are trying to achieve?"}, {"timstamp": "2017-02-27 15:05", "user": "songi", "body": "I need to remove some query parameters from the url"}, {"timstamp": "2017-02-27 15:05", "user": "songi", "body": "and replace it"}, {"timstamp": "2017-02-27 15:05", "user": "Elarcis", "body": "songi: can't you just do a $state.go?"}, {"timstamp": "2017-02-27 15:05", "user": "icebox", "body": "songi: I see"}, {"timstamp": "2017-02-27 15:06", "user": "icebox", "body": "songi: did you try $location? $location.search('key', null)"}, {"timstamp": "2017-02-27 15:07", "user": "songi", "body": "it's an idea :)"}, {"timstamp": "2017-02-27 15:07", "user": "icebox", "body": "songi: credits to"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "but I'm afraid that it will mess up the router state"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "and the following sync"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "break something"}, {"timstamp": "2017-02-27 15:08", "user": "songi", "body": "and finally navigation doesn't succede"}, {"timstamp": "2017-02-27 15:09", "user": "songi", "body": "in my scenario the navigation starts but I don't get why it doesn't succede"}, {"timstamp": "2017-02-27 15:09", "user": "songi", "body": "*succede"}, {"timstamp": "2017-02-27 15:10", "user": "icebox", "body": "songi: this is another one"}, {"timstamp": "2017-02-27 15:11", "user": "songi", "body": "I see"}, {"timstamp": "2017-02-27 15:11", "user": "songi", "body": "thanks"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "songi: add those nice graphs to debug ui router states"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "Pyrrhus666: ^"}, {"timstamp": "2017-02-27 15:11", "user": "icebox", "body": "Pyrrhus666: please the link above that"}, {"timstamp": "2017-02-27 15:12", "user": "icebox", "body": "Pyrrhus666: a plunker with ui router setup"}, {"timstamp": "2017-02-27 15:12", "user": "songi", "body": "which ones?"}, {"timstamp": "2017-02-27 15:12", "user": "icebox", "body": "songi: just a moment... Pyrrhus666 knows it"}, {"timstamp": "2017-02-27 15:12", "user": "Pyrrhus666", "body": "icebox, ah, yes, the visualiser... hold on"}, {"timstamp": "2017-02-27 15:14", "user": "Pyrrhus666", "body": "icebox, songi this thing, right :"}, {"timstamp": "2017-02-27 15:15", "user": "Pyrrhus666", "body": "you can just add the four includes under <!-- visualizer and url --> to any plunk"}, {"timstamp": "2017-02-27 15:16", "user": "songi", "body": "thanks"}, {"timstamp": "2017-02-27 15:36", "user": "Elarcis", "body": "Pyrrhus666: what is this sorcery?!"}, {"timstamp": "2017-02-27 15:37", "user": "Pyrrhus666", "body": "Elarcis, voodoo. it cost me a goat and same black candles."}, {"timstamp": "2017-02-27 15:37", "user": "Pyrrhus666", "body": "*some"}, {"timstamp": "2017-02-27 15:38", "user": "Elarcis", "body": "Pyrrhus666: tips: you don't need a new goat each time when you got a goatee"}, {"timstamp": "2017-02-27 15:38", "user": "Pyrrhus666", "body": "also : its simply lifted from examples in the ui-router docs. couldve save me a goat and some candles if I knew that before..."}, {"timstamp": "2017-02-27 15:38", "user": "Pyrrhus666", "body": "Elarcis, that may be, but I cant stand goatees when not on actual goats."}, {"timstamp": "2017-02-27 15:59", "user": "Elarcis", "body": "Did I already state that I hate jqPlot?"}, {"timstamp": "2017-02-27 15:59", "user": "Elarcis", "body": "Because I hate it"}, {"timstamp": "2017-02-27 16:00", "user": "Pyrrhus666", "body": "Elarcis, why not chart.js then :P"}, {"timstamp": "2017-02-27 16:00", "user": "Elarcis", "body": "freaking 2000-ish jQuery intensive charting plugin that is a pain to configure, limited, slow and ugly."}, {"timstamp": "2017-02-27 16:00", "user": "Elarcis", "body": "Pyrrhus666: we're so going to use d3 when we have some time to ditch it"}, {"timstamp": "2017-02-27 16:00", "user": "Pyrrhus666", "body": "Elarcis, also good."}, {"timstamp": "2017-02-27 16:02", "user": "icebox", "body": "Elarcis: that is right choice, d3"}, {"timstamp": "2017-02-27 16:02", "user": "Elarcis", "body": "Pyrrhus666: only catch is that we have custom non-linear scales and need coloring between two series, but nothing that can't be handled, I believe"}], "label": "other"}
{"id": "93d59492", "body": "", "comments": [{"timstamp": "2018-06-15 15:52", "user": "Peppa_Swine", "body": "ever heard of borland delphi/builder?"}, {"timstamp": "2018-06-15 15:52", "user": "Peppa_Swine", "body": "man i miss those."}, {"timstamp": "2018-06-15 15:52", "user": "jlebrech_", "body": "we'll probably have 1st line \"coder\", 2nd line coder, 3rd line coder.."}, {"timstamp": "2018-06-15 15:52", "user": "icebox", "body": "pascal ffi was the best :)"}, {"timstamp": "2018-06-15 15:52", "user": "jlebrech_", "body": "Peppa_Swine: i started with delphi"}, {"timstamp": "2018-06-15 15:52", "user": "jlebrech_", "body": "was great"}, {"timstamp": "2018-06-15 15:52", "user": "jlebrech_", "body": "there should be a webpascal :P"}], "label": "other"}
{"id": "93d59506", "body": "", "comments": [{"timstamp": "2018-05-13 06:00", "user": "Peppa_Sw1ne", "body": "just spill it out matey"}, {"timstamp": "2018-05-13 06:12", "user": "Peppa_Sw1ne", "body": "this place is mostly active during the daytime in eu."}, {"timstamp": "2018-05-13 06:12", "user": "Peppa_Sw1ne", "body": "all the 3 and a half people are here."}, {"timstamp": "2018-05-13 06:12", "user": "Peppa_Sw1ne", "body": "you forgot to save your plunker tho."}, {"timstamp": "2018-05-13 06:12", "user": "marco_polo", "body": "oops sorry"}, {"timstamp": "2018-05-13 06:13", "user": "marco_polo", "body": "oh I see, I'm actually in Japan and I didn't think about this ^^"}, {"timstamp": "2018-05-13 06:14", "user": "marco_polo", "body": "sorry for the plunker, I was just trying to reference what I found in the accordion section of the docs:"}, {"timstamp": "2018-05-13 06:15", "user": "Peppa_Sw1ne", "body": "try to be more specific and put together another one that reproduces your issue, i'll have a look."}, {"timstamp": "2018-05-13 06:15", "user": "marco_polo", "body": "I don't really understand the `template-url` option, and how I'm supposed to use a template here"}, {"timstamp": "2018-05-13 06:16", "user": "Peppa_Sw1ne", "body": "just pass a url to your template in there."}, {"timstamp": "2018-05-13 06:16", "user": "Peppa_Sw1ne", "body": "the template being the stuff you wanna show in an accordion section."}, {"timstamp": "2018-05-13 06:16", "user": "Peppa_Sw1ne", "body": "it's optional though."}, {"timstamp": "2018-05-13 06:17", "user": "marco_polo", "body": "ohhh I see"}, {"timstamp": "2018-05-13 06:18", "user": "marco_polo", "body": "ok thanks"}, {"timstamp": "2018-05-13 06:21", "user": "marco_polo", "body": "I was a bit confused because when I tried to use it in my Python flask application I would get an error like:"}, {"timstamp": "2018-05-13 06:21", "user": "marco_polo", "body": "Failed to load template: uib/template/accordion/accordion.html"}, {"timstamp": "2018-05-13 06:22", "user": "marco_polo", "body": "ok thanks, I'll keep working on this then"}, {"timstamp": "2018-05-13 06:23", "user": "Peppa_Sw1ne", "body": "has nothing to do with python, just make sure the bootstrap stuff is in the right place."}, {"timstamp": "2018-05-13 06:24", "user": "Peppa_Sw1ne", "body": "<documentRoot>/uib/template/and/so/on that is."}, {"timstamp": "2018-05-13 06:25", "user": "marco_polo", "body": "yeah definitely, it's raised by angularjs and I didn't understand why it was looking for this"}], "label": "other"}
{"id": "93d594a5", "body": "", "comments": [{"timstamp": "2017-01-30 13:25", "user": "JJH", "body": "If someone got some time to help with my \"regex\" that would be great :D"}], "label": "other"}
{"id": "93d59522", "body": "", "comments": [{"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "f.email or user.email?"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "Hi, I am looking for some suggestions about angular best practice here. I was creating a form using FormsModule. I used #f = \"ngForm directive for the form, and something like [(ngModel)] = \"user.email\" If I want to check for validation, which"}, {"timstamp": "2017-10-21 17:52", "user": "TRer", "body": "state should I go for?"}, {"timstamp": "2017-10-21 17:53", "user": "TRer", "body": "Or should I avoid two-way binding altogether?"}], "label": "other"}
{"id": "93d594ce", "body": "", "comments": [{"timstamp": "2016-09-23 21:12", "user": "[1]David", "body": "anyone used ngMaterial?"}, {"timstamp": "2016-09-23 21:13", "user": "dopry", "body": "[1]David, da_wunder has a seed for that... maybe he knows."}, {"timstamp": "2016-09-23 21:13", "user": "[1]David", "body": "dopry: sorry to be a complete idiot, but what is a seed?"}, {"timstamp": "2016-09-23 21:14", "user": "dopry", "body": "[1]David,"}, {"timstamp": "2016-09-23 21:15", "user": "[1]David", "body": "so like a basic project to build on?"}, {"timstamp": "2016-09-23 21:17", "user": "grizzm0", "body": "[1]David, seed/skeleton"}, {"timstamp": "2016-09-23 21:18", "user": "grizzm0", "body": "Something to start upon. So yeah."}, {"timstamp": "2016-09-23 21:18", "user": "[1]David", "body": "cool thanks"}, {"timstamp": "2016-09-23 21:20", "user": "[1]David", "body": "ok next dumb question, how do i know if i am able to use ES6 or not? as far as i know i am using javascript and angularjs"}, {"timstamp": "2016-09-23 21:21", "user": "da_wunder", "body": "[1]David: first question are you using any build tools?"}, {"timstamp": "2016-09-23 21:22", "user": "[1]David", "body": "da_wunder: i am using webstorm IDE and i dont think i have installed any build tools"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "da_wunder: I am a mathematician/financier who was fascinated by webdevelopment so am trying to learn"}, {"timstamp": "2016-09-23 21:23", "user": "[1]David", "body": "I can code java/C# and a few others"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "[1]David: and for that i would read john papa's guide"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": "but this is a whole different world"}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "and see some projects that are public"}, {"timstamp": "2016-09-23 21:24", "user": "[1]David", "body": ""}, {"timstamp": "2016-09-23 21:24", "user": "da_wunder", "body": "yep"}, {"timstamp": "2016-09-23 21:25", "user": "[1]David", "body": "ok will do thanks"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "da_wunder, I think there should be a channel bot that responds to all \"how do I\" questions with,"}, {"timstamp": "2016-09-23 21:26", "user": "dopry", "body": "have you read"}, {"timstamp": "2016-09-23 21:27", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-09-23 21:28", "user": "[1]David", "body": "really thank you all for your help. I appreciate it!#"}, {"timstamp": "2016-09-23 21:34", "user": "da_wunder", "body": "[1]David: np"}], "label": "other"}
{"id": "93d59520", "body": "", "comments": [{"timstamp": "2016-07-12 11:15", "user": "verwilst", "body": "hi guys, was thinking about having a selector in my main navbar, and have my other components be based on that as a filter. How do I pass it to my components?"}, {"timstamp": "2016-07-12 11:16", "user": "icebox", "body": "verwilst: to share info between components (controllers, directives, etc.) use services"}, {"timstamp": "2016-07-12 11:17", "user": "icebox", "body": "verwilst: you should focus on data, not on dom"}, {"timstamp": "2016-07-12 11:19", "user": "verwilst", "body": "icebox: imagine it being a combobox with 'company A' and 'company B'. That box should be in my app.component.ts. I wonder how i make a service out of that and save its state.."}, {"timstamp": "2016-07-12 11:19", "user": "icebox", "body": "verwilst: ah... angular 2?"}, {"timstamp": "2016-07-12 11:19", "user": "verwilst", "body": "yup"}, {"timstamp": "2016-07-12 11:19", "user": "icebox", "body": "verwilst: conceptually it is the same"}, {"timstamp": "2016-07-12 11:21", "user": "verwilst", "body": "icebox: all my services are rest api calls now.. so i should make a company.service.ts then?"}, {"timstamp": "2016-07-12 11:21", "user": "icebox", "body": "verwilst: likely"}, {"timstamp": "2016-07-12 11:21", "user": "verwilst", "body": "with getCompanies() being a hardcoded list?"}, {"timstamp": "2016-07-12 11:21", "user": "verwilst", "body": "but how do i store the selected company then so another component can get the 'active' company?"}, {"timstamp": "2016-07-12 11:22", "user": "verwilst", "body": "do i store it in localStorage or the?"}, {"timstamp": "2016-07-12 11:22", "user": "verwilst", "body": "something*"}, {"timstamp": "2016-07-12 11:23", "user": "icebox", "body": "verwilst: localStorage is for a persistent state between \"session\"... is it not enough store the state in that class?"}, {"timstamp": "2016-07-12 11:23", "user": "verwilst", "body": "hm"}, {"timstamp": "2016-07-12 11:24", "user": "verwilst", "body": "ah right, with dependency injection, there is only a single instance of CompanyService then i guess"}, {"timstamp": "2016-07-12 11:24", "user": "verwilst", "body": "if you would like to have a language selector, would that work the same way? a LanguageService?"}, {"timstamp": "2016-07-12 11:25", "user": "icebox", "body": "verwilst: I think so"}, {"timstamp": "2016-07-12 11:26", "user": "verwilst", "body": "or with a directive"}, {"timstamp": "2016-07-12 11:26", "user": "icebox", "body": "verwilst: a few ideas"}], "label": "other"}
{"id": "93d594cf", "body": "", "comments": [{"timstamp": "2016-05-13 14:02", "user": "nodedfree", "body": "angular2 support avail here?"}, {"timstamp": "2016-05-13 14:02", "user": "arlekin", "body": "nodedfree: in a stochastic manner"}, {"timstamp": "2016-05-13 14:03", "user": "nodedfree", "body": "in angular2 component, in constructor > how can i call global function ? (bootstrap slider function)"}, {"timstamp": "2016-05-13 14:07", "user": "Pyrrhus", "body": "nodedfree: what do you mean by global ? isnt the slider a part of your component ?"}, {"timstamp": "2016-05-13 14:09", "user": "nodedfree", "body": "Pyrrhus: i added js file of bootstrap slider before angular files, and when running window.Slider(....) it works, but i get many errors from angular that it couldn't find this function"}, {"timstamp": "2016-05-13 14:10", "user": "Pyrrhus", "body": "nodedfree: you should consider using ng2-bootstrap, the angularized bootstrap. then, the slide is a native angular2 component."}, {"timstamp": "2016-05-13 14:10", "user": "nodedfree", "body": "Pyrrhus: i want to solve this issue for future conflicts.. any solutions?"}, {"timstamp": "2016-05-13 14:10", "user": "bd-", "body": "nodedfree: you getting errors from angular itself or from the typescript compiler?"}, {"timstamp": "2016-05-13 14:10", "user": "Pyrrhus", "body": "communicating with stuff outside of angular kind of sucks (at least it did in angular 1)"}, {"timstamp": "2016-05-13 14:13", "user": "nodedfree", "body": "bd-:"}, {"timstamp": "2016-05-13 14:14", "user": "bd-", "body": "i don't think the global exists there"}, {"timstamp": "2016-05-13 14:15", "user": "bd-", "body": "which slider thing are you using?"}, {"timstamp": "2016-05-13 14:16", "user": "nodedfree", "body": "bd-: the funny thing, if i put the code in try/catch - it works cleanly"}, {"timstamp": "2016-05-13 14:16", "user": "nodedfree", "body": ""}, {"timstamp": "2016-05-13 14:16", "user": "bd-", "body": "shouldn't you be using Slider instead of slider"}, {"timstamp": "2016-05-13 14:17", "user": "nodedfree", "body": "nope"}, {"timstamp": "2016-05-13 14:17", "user": "nodedfree", "body": "i use the native, without jquery"}, {"timstamp": "2016-05-13 14:17", "user": "bd-", "body": "yea and that page says Slider for that"}, {"timstamp": "2016-05-13 14:19", "user": "bd-", "body": "> var slider = new Slider('#ex1', {"}, {"timstamp": "2016-05-13 14:21", "user": "nodedfree", "body": "bd-: that's what i do.. nvm i'll search for more info"}, {"timstamp": "2016-05-13 14:21", "user": "nodedfree", "body": "ty.."}, {"timstamp": "2016-05-13 14:22", "user": "bd-", "body": "well the error is sayign you're not doing that"}, {"timstamp": "2016-05-13 14:22", "user": "bd-", "body": "> ReferenceError: slider is not defined"}], "label": "other"}
{"id": "93d594a3", "body": "", "comments": [{"timstamp": "2016-09-16 13:17", "user": "arlekin", "body": "btw does anyone has some thoughts on UI for modular applications ?"}, {"timstamp": "2016-09-16 13:18", "user": "arlekin", "body": "I mean it could be potentially useful for me to make my app this way, and i have no problem with the coding side of that"}, {"timstamp": "2016-09-16 13:18", "user": "arlekin", "body": "but the moment i try to imagine concise ui for something like that...."}, {"timstamp": "2016-09-16 13:19", "user": "Pyrrhus666", "body": "arlekin: what"}, {"timstamp": "2016-09-16 13:19", "user": "Pyrrhus666", "body": "oops"}, {"timstamp": "2016-09-16 13:19", "user": "arlekin", "body": "i can't imagine UI structure that would provide good UX along with the ability to pull out some parts of it"}, {"timstamp": "2016-09-16 13:19", "user": "Pyrrhus666", "body": "arlekin: whats wrong with a ui framework for that ?"}, {"timstamp": "2016-09-16 13:20", "user": "arlekin", "body": "Pyrrhus666: i would have to either make very custom changes depending on combination of modules used"}, {"timstamp": "2016-09-16 13:20", "user": "Pyrrhus666", "body": "youre always going to have to compromise if you generalize it to be modular , so why not simply conform to something already existing ?"}, {"timstamp": "2016-09-16 13:20", "user": "arlekin", "body": "Pyrrhus666: or i'd have very blocky ux"}, {"timstamp": "2016-09-16 13:20", "user": "arlekin", "body": "Pyrrhus666: fair enough, but whats existing ?"}, {"timstamp": "2016-09-16 13:21", "user": "Pyrrhus666", "body": "arlekin: I guess modular almost always implies blocky, as in general containers containing widgets..."}, {"timstamp": "2016-09-16 13:21", "user": "Pyrrhus666", "body": "arlekin: md, foundation, primeNG, bootstrap, semanticUI ( :P )"}, {"timstamp": "2016-09-16 13:23", "user": "arlekin", "body": "Pyrrhus666: you didn't understood me"}, {"timstamp": "2016-09-16 13:23", "user": "arlekin", "body": "things like md or fucking bootstrap ain't gonna cut it"}, {"timstamp": "2016-09-16 13:23", "user": "Pyrrhus666", "body": "if I think back to my awt days, that was already the case. have a container, throw in some widgets with a layout-manager and presto : a ui. granted, awt sucked donkeyballs, but back then there wasnt anything better."}, {"timstamp": "2016-09-16 13:24", "user": "arlekin", "body": "Pyrrhus666: well, of course i could make one big dashboard with button for each such \"module\" and then strap that together like some damn animal"}, {"timstamp": "2016-09-16 13:24", "user": "arlekin", "body": "Pyrrhus666: but thats not an option since i need to have easy and streamlined workflows"}, {"timstamp": "2016-09-16 13:25", "user": "arlekin", "body": "Pyrrhus666: the modularity should be totally transparent from the user perspective"}, {"timstamp": "2016-09-16 13:25", "user": "Pyrrhus666", "body": "easy and streamlined do not go together with modular and beatiful."}, {"timstamp": "2016-09-16 13:25", "user": "arlekin", "body": "Pyrrhus666: (the thing is im installing basically same app with minor changes at various clients and it would be easier to keep order in all that if i had some client-specific modules to swap out"}, {"timstamp": "2016-09-16 13:26", "user": "arlekin", "body": "Pyrrhus666: actually beatufil can go with easy and streamlined, though i agree about modular"}, {"timstamp": "2016-09-16 13:26", "user": "arlekin", "body": "Pyrrhus666: it doesn't necessary have to have a solution, i was just wondering if someone ever did something like that"}, {"timstamp": "2016-09-16 13:27", "user": "arlekin", "body": "but it seems to be hard triangle there somewhere"}, {"timstamp": "2016-09-16 13:28", "user": "arlekin", "body": "great... now im gonna be thinking about it all day..."}, {"timstamp": "2016-09-16 13:29", "user": "arlekin", "body": "Pyrrhus666: btw, you make a perfect rubber duck"}, {"timstamp": "2016-09-16 13:29", "user": "arlekin", "body": "Pyrrhus666: some of your remarks sound almost like the real person would said it ;P"}, {"timstamp": "2016-09-16 13:30", "user": "arlekin", "body": "Pyrrhus666: smart way of doing feedback :P"}, {"timstamp": "2016-09-16 13:30", "user": "Pyrrhus666", "body": "(also : I love rubber ducking, one of the funniest aspects of my work :))"}, {"timstamp": "2016-09-16 13:30", "user": "Pyrrhus666", "body": "arlekin: why thank you. I shall pass this on to my programmer ;)"}, {"timstamp": "2016-09-16 13:31", "user": "arlekin", "body": "also rubberducking sounds like something quite perversive"}, {"timstamp": "2016-09-16 13:32", "user": "Pyrrhus666", "body": "and yes, its a tough thing to do. as far as I understand your use-case though, Id probably go with an existing css framework and see how far that gets me whilst staying within its confines."}, {"timstamp": "2016-09-16 13:32", "user": "Pyrrhus666", "body": "arlekin: which is why I like it of course. a dirty mind is a joy forever..."}, {"timstamp": "2016-09-16 13:33", "user": "arlekin", "body": "Pyrrhus666: well, css ain't a problem, im past that, the problem is more of an architecture for the whole ui"}, {"timstamp": "2016-09-16 13:33", "user": "arlekin", "body": "Pyrrhus666: thats a koan i didn't heard yet :D"}, {"timstamp": "2016-09-16 13:33", "user": "Pyrrhus666", "body": "arlekin: every framework has some kind of generalized container system..."}, {"timstamp": "2016-09-16 13:34", "user": "arlekin", "body": "Pyrrhus666: sure, but none of them suggest how to lay things out on a page for given domain information, and options"}, {"timstamp": "2016-09-16 13:34", "user": "Pyrrhus666", "body": "arlekin: I picked it up 30 years ago, no idea of its origin though :)"}, {"timstamp": "2016-09-16 13:34", "user": "arlekin", "body": "if we had that, the designers and other ui/ux specialist would be obsolete"}, {"timstamp": "2016-09-16 13:34", "user": "Pyrrhus666", "body": "arlekin: true. are there frameworks out there that actually have layout managers ?"}, {"timstamp": "2016-09-16 13:35", "user": "arlekin", "body": "Pyrrhus666: nope, hence im not looking for one, i was asking about concept, not implementation"}, {"timstamp": "2016-09-16 13:35", "user": "arlekin", "body": "either way, gotta go, thanks for rubberducking with me ;P"}, {"timstamp": "2016-09-16 13:35", "user": "Pyrrhus666", "body": "I know, but that made me question if anybody had already done it (which is often the case) :)"}, {"timstamp": "2016-09-16 13:45", "user": "Pyrrhus666", "body": "I am the walrus, coo coo cachoo"}, {"timstamp": "2016-09-16 13:47", "user": "Eugene_", "body": "@Pyrrhus666: something is realy wrong with scope, when it shouldn't be. Solution was, that I needed to use dot notation. In simple terms, I needed to wrap model into some container scope.vm = {model: scope.model};, then it was updated."}, {"timstamp": "2016-09-16 13:47", "user": "Eugene_", "body": "on directive level"}, {"timstamp": "2016-09-16 13:48", "user": "Pyrrhus666", "body": "Eugene_: ah yes, of course. references work with objects, not primitives... I shouldve guessed..."}, {"timstamp": "2016-09-16 13:49", "user": "Eugene_", "body": "But at the same time scope is already a container."}, {"timstamp": "2016-09-16 13:49", "user": "Eugene_", "body": "Or is ti dismissed"}, {"timstamp": "2016-09-16 13:49", "user": "Pyrrhus666", "body": "Eugene_: dunno, actually..."}], "label": "other"}
{"id": "93d594e0", "body": "", "comments": [{"timstamp": "2018-07-12 16:22", "user": "Blizzard_", "body": "Hello everyone, what's a way to make the function fire everytime something happens?"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "I have a getTotalPrice() func but some optional things can be selected later, so I want that to reflect on the UI"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "is using $watch and updating a hoisted $scope.total variable the only way?"}, {"timstamp": "2018-07-12 16:23", "user": "Blizzard_", "body": "Or am I missing something?"}, {"timstamp": "2018-07-12 16:24", "user": "Blizzard_", "body": "(1.5)"}, {"timstamp": "2018-07-12 16:30", "user": "icebox", "body": "Blizzard_: no need for that... update data and automagically the template is updated"}, {"timstamp": "2018-07-12 16:30", "user": "Blizzard_", "body": "It's not happening, as it stands it just renders the total price the first time"}, {"timstamp": "2018-07-12 16:30", "user": "icebox", "body": "Blizzard_: here it works"}, {"timstamp": "2018-07-12 16:30", "user": "Blizzard_", "body": "and if I place a watcher on the func, it shows new values coming in"}, {"timstamp": "2018-07-12 16:31", "user": "Blizzard_", "body": "getTotalPrice() should fire everytime $scope is updated you think?"}, {"timstamp": "2018-07-12 16:31", "user": "icebox", "body": "Blizzard_: watchers are bad pratices... you need them only for attrs in directives"}, {"timstamp": "2018-07-12 16:31", "user": "icebox", "body": "Blizzard_: ok... read the rules, please..."}, {"timstamp": "2018-07-12 16:33", "user": "icebox", "body": "Blizzard_: if you provide a minimal working stackblitz reproducing your use case, we may give a look at it"}, {"timstamp": "2018-07-12 16:33", "user": "Elarcis", "body": "Blizzard_: expressions written in the template are evaluated on each detection cycle. If you need your value to always reflect a particular state, you need to either compute it dynamically in a function called from the template, or store it in a service where its updated everytime its dependencies change (and make sure the template points to the variable stored on the service, and not to a local copy of it)"}, {"timstamp": "2018-07-12 16:33", "user": "icebox", "body": "Blizzard_: template link in the topic"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "Haha yeah makes sense"}, {"timstamp": "2018-07-12 16:34", "user": "icebox", "body": "Blizzard_: and generally speaking you should not put functions in the template"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "Yes that's a good point"}, {"timstamp": "2018-07-12 16:34", "user": "Elarcis", "body": "Blizzard_: $watchers should be avoided as much as possible, because they add a performance cost on each detection cycle, vs. calculating what you need when data change"}, {"timstamp": "2018-07-12 16:34", "user": "Blizzard_", "body": "I'm coming back to angular after a good few years so totally out of touch :S"}, {"timstamp": "2018-07-12 16:35", "user": "Elarcis", "body": "Blizzard_: yes, things have changed a lot"}, {"timstamp": "2018-07-12 16:35", "user": "icebox", "body": "Blizzard_: state of art for angularjs 1.5+ is here"}, {"timstamp": "2018-07-12 16:36", "user": "Blizzard_", "body": "So I should stick to hoisting a variable and firing on an interaction?"}, {"timstamp": "2018-07-12 16:37", "user": "icebox", "body": "Blizzard_: you should focus on \"manipulating\" data :)"}, {"timstamp": "2018-07-12 16:37", "user": "icebox", "body": "the rest is magic"}, {"timstamp": "2018-07-12 16:37", "user": "Elarcis", "body": "Blizzard_: yeah, probably"}, {"timstamp": "2018-07-12 16:38", "user": "Blizzard_", "body": "Thanks guys! : )"}, {"timstamp": "2018-07-12 16:38", "user": "icebox", "body": "Blizzard_: see the example in the topic"}, {"timstamp": "2018-07-12 16:39", "user": "Blizzard_", "body": "The biggest takeaway is not using watchers because that's what I thought would make my func fire but then once you start using them, you have to add a bunch of variables etc to compare and update state"}, {"timstamp": "2018-07-12 16:41", "user": "Elarcis", "body": "Blizzard_: yes, it gets ugly very quickly"}, {"timstamp": "2018-07-12 16:41", "user": "Elarcis", "body": "Blizzard_: if youre using components, you can also use ngOnChange(), which fires everytime a binding is changed"}, {"timstamp": "2018-07-12 16:43", "user": "icebox", "body": "off... bye"}], "label": "other"}
{"id": "93d59502", "body": "", "comments": [{"timstamp": "2017-01-03 07:47", "user": "gopar", "body": "Any ideas as to why a config function won't load? Google searches ain't helping"}, {"timstamp": "2017-01-03 07:48", "user": "wafflejock", "body": "gopar, only problem would be if the module it's defined on isn't included or is redefined"}, {"timstamp": "2017-01-03 07:50", "user": "gopar", "body": "wafflejock, hmmm it's only defined once, and it's included... dam, I hate nights like these eh"}, {"timstamp": "2017-01-03 07:51", "user": "wafflejock", "body": "gopar, add debugger everywhere"}, {"timstamp": "2017-01-03 07:52", "user": "wafflejock", "body": "gopar, add one where the config is defined (at the same level as the angular.module.config to see that the script gets included"}, {"timstamp": "2017-01-03 07:52", "user": "wafflejock", "body": ")"}], "label": "other"}
{"id": "93d594e5", "body": "", "comments": [{"timstamp": "2016-07-05 09:08", "user": "raskel", "body": "how many rcs will be there? any idea when is the release date? ( ~ )"}, {"timstamp": "2016-07-05 09:13", "user": "Elarcis", "body": "raskel: I have no idea, but it's been speculated that angular2 might be released on some angular circa the end of the year"}, {"timstamp": "2016-07-05 09:14", "user": "raskel", "body": "Elarcis, ohhh, we have an internal project for Q4, and i wish to be stable..."}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "raskel: what's Q4? I always get lost in these time slots :D"}, {"timstamp": "2016-07-05 09:15", "user": "Limarson", "body": "Elarcis: October-December :)"}, {"timstamp": "2016-07-05 09:15", "user": "raskel", "body": "Elarcis, yup. the fourth quarter of the year"}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "Limarson: should be released in these waters"}, {"timstamp": "2016-07-05 09:15", "user": "Elarcis", "body": "with a bit of luck"}, {"timstamp": "2016-07-05 09:16", "user": "Limarson", "body": "Elarcis: I have time until March next year which will be most likely possible :)"}, {"timstamp": "2016-07-05 09:16", "user": "Limarson", "body": "I have just problems with primeng - they are getting slower the faster Angular Development becomes - at least by personal feeling :)"}, {"timstamp": "2016-07-05 09:16", "user": "Elarcis", "body": "Limarson: We've started implementing it and the next release of our app is at th end of the month :D"}, {"timstamp": "2016-07-05 09:17", "user": "Limarson", "body": "Elarcis: I feel that the RC candidates are pretty stable already, only the routing changes like every week :D"}, {"timstamp": "2016-07-05 09:17", "user": "Limarson", "body": "(also personal feeling)"}, {"timstamp": "2016-07-05 09:17", "user": "raskel", "body": "how many rc's will be there?"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "Limarson: thank god we're still using 1.x router :D"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "raskel: I don't know... 4? 5?"}, {"timstamp": "2016-07-05 09:18", "user": "Elarcis", "body": "raskel: according to this, there's already a RC5 planned"}, {"timstamp": "2016-07-05 09:18", "user": "Limarson", "body": "Elarcis: ui-router with upgrade-components? Does that work good?"}, {"timstamp": "2016-07-05 09:19", "user": "Elarcis", "body": "raskel: I guess it's safe to assume there are gonna be at least two more until release"}, {"timstamp": "2016-07-05 09:19", "user": "Elarcis", "body": "Limarson: we're currently only using Angular2 for services (which is a bit silly but that's the only priority we got)"}, {"timstamp": "2016-07-05 09:19", "user": "Limarson", "body": "Elarcis: Damn, the component approach is so nice"}, {"timstamp": "2016-07-05 09:20", "user": "Limarson", "body": "Elarcis: That's how I could convince my boss to give me extra time to migrate :)"}, {"timstamp": "2016-07-05 09:20", "user": "Elarcis", "body": "Limarson: yes, I'm afraid it will be hard to transition to it, there's a lot of scope inheritance I've got to get rid of first"}, {"timstamp": "2016-07-05 09:20", "user": "Limarson", "body": "Elarcis: I made it 2 steps: The first was to put *everything* in directives"}, {"timstamp": "2016-07-05 09:21", "user": "Limarson", "body": "Elarcis: If you made this transition, you basically have components and need to migrate only syntactically"}, {"timstamp": "2016-07-05 09:22", "user": "Limarson", "body": "Elarcis: But to switch from scopes and plain html partials and ng-include caused some headache^^"}, {"timstamp": "2016-07-05 09:23", "user": "uru", "body": "Limarson: Elarcis: We (my workplace) is about to push a deployment that will have ng2 stuff in it. Small homepage widgets to start with but we are currently building a full single page dashboard app with it too"}, {"timstamp": "2016-07-05 09:23", "user": "Limarson", "body": "Elarcis: I have the feeling, the whole program is more robust and predictable sine I migrated to ng2 though - just from a maintenance perspective. Not so much unforeseen side-effects from $parent.$parent. ..."}, {"timstamp": "2016-07-05 09:24", "user": "Limarson", "body": "uru: Nice :) At least you have *some* components to reuse later then"}, {"timstamp": "2016-07-05 09:26", "user": "uru", "body": "Limarson: Yea, the homepage is comprised of multiple small ng2 apps that can talk to each other through shared service layers"}, {"timstamp": "2016-07-05 09:26", "user": "Elarcis", "body": "uru: that's cool!"}, {"timstamp": "2016-07-05 09:27", "user": "uru", "body": "So we have a login overlay that's an NG2 app, that can be triggered by other ng2 apps by pushing a status change request to an observable."}, {"timstamp": "2016-07-05 09:27", "user": "uru", "body": "(That's one example)"}, {"timstamp": "2016-07-05 09:27", "user": "Elarcis", "body": "uru: how do you share services between apps though? is it a separate library that instantiate them, and you just inject them when bootstraping the apps?"}, {"timstamp": "2016-07-05 09:28", "user": "uru", "body": "Elarcis: The data that is shared (mostly eventemitters) are defined as static, so they have a single state in the browser, the services that access those are just injected in to multiple apps as needed"}, {"timstamp": "2016-07-05 09:28", "user": "Limarson", "body": "uru: So you have something like SPA-Silos? I tried to build something like that but horribly failed ;D"}, {"timstamp": "2016-07-05 09:29", "user": "uru", "body": "I don't know what SPA-Silos is :x But our homepage stuff is pretty simple, so there's not all that much communication going on."}, {"timstamp": "2016-07-05 09:30", "user": "Limarson", "body": "uru: I found that term in some speech from john papa or dan wahlin (idk anymore) - they described how to break down complexity on large SPA applications and made it in angular1 with \"SPA silo\", several small SPA applications that are bound together with one more or less static page"}, {"timstamp": "2016-07-05 09:31", "user": "Limarson", "body": "uru: I liked the term :)"}, {"timstamp": "2016-07-05 09:32", "user": "uru", "body": "Ah yea, well it seemed like the logical thing to do for a homepage, the dashboard will be an actual single page app"}, {"timstamp": "2016-07-05 09:34", "user": "Limarson", "body": "uru: We are developing something like...basically a ticketing system (there's much more to it). What I would've like to have was to have several logical \"modules\" like Ticketing, Knowledge Base,... that will be put together as an app. I failed at the communication between those \"modules\" because it was too complex after a while"}, {"timstamp": "2016-07-05 09:35", "user": "Limarson", "body": "I left this part for the future-limarson :)"}, {"timstamp": "2016-07-05 09:35", "user": "uru", "body": "Yea, can get tricky, I've been pushing various models and/or enums along the emitters to get things talking, at the moment the parts don't share data though, so that makes it a lot simpler."}, {"timstamp": "2016-07-05 09:38", "user": "Elarcis", "body": "future yourself is always stabed in the back by past and present yourselves"}, {"timstamp": "2016-07-05 09:39", "user": "Limarson", "body": "Elarcis: Shh, don't tell him or he'll know what's coming to him ;)"}, {"timstamp": "2016-07-05 10:07", "user": "Elarcis", "body": "only: create a new order? have you asked a jedi?"}, {"timstamp": "2016-07-05 10:07", "user": "only", "body": "Elarcis: yes, a new order"}, {"timstamp": "2016-07-05 10:07", "user": "Elarcis", "body": "only: more seriously, I guess we can help"}, {"timstamp": "2016-07-05 10:08", "user": "Elarcis", "body": "only: do you already have some code, or are you just requiring for assistance if needed?"}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": "so the api works"}, {"timstamp": "2016-07-05 10:08", "user": "only", "body": "Elarcis: I don't know where to start"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "so have no code atm :)"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: aaah :)"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "is there an example somewhere perhaps"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "that shows how to POST data"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "from a form"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "to the API?"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: well these are different concerns"}, {"timstamp": "2016-07-05 10:09", "user": "only", "body": "and not reveal the key and secret, obviously :)"}, {"timstamp": "2016-07-05 10:09", "user": "Elarcis", "body": "only: I suggest you start by coding an angular service that does a $http.post with hardcoded values"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: so you ensure you can call the API right and get this working"}, {"timstamp": "2016-07-05 10:10", "user": "only", "body": "and then replace the hardcoded values with forms?"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: then, and only then, you can start coding a controller with form logic to send that data to the service"}, {"timstamp": "2016-07-05 10:10", "user": "Elarcis", "body": "only: yes. forms and http calls should be separated, as they don't have the same responsibilities"}, {"timstamp": "2016-07-05 10:11", "user": "Elarcis", "body": "only: a form collects data, a ,say orderService formats it and POSTs it to the API."}, {"timstamp": "2016-07-05 10:11", "user": "only", "body": "ok, got it!"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: this way you can progress little bits by little bits and verify at each step that you're doing it right :)"}, {"timstamp": "2016-07-05 10:12", "user": "only", "body": "what are the prerequisites of being able to code an angular service that does a $http.post?"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: here is the doc for $http, it'll show you how to do POST requests"}, {"timstamp": "2016-07-05 10:12", "user": "only", "body": "I mean, should I install any libraries on my VPS"}, {"timstamp": "2016-07-05 10:12", "user": "Elarcis", "body": "only: you only need angularjs"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "only: you mean you haven't done any angularjs yet?"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "only: (I mean never ever?)"}, {"timstamp": "2016-07-05 10:13", "user": "only", "body": "I'm about to :)"}, {"timstamp": "2016-07-05 10:13", "user": "Elarcis", "body": "Angular 1.x or 2?"}, {"timstamp": "2016-07-05 10:14", "user": "only", "body": "well I wouldn't know, which one should I go for?"}, {"timstamp": "2016-07-05 10:15", "user": "Elarcis", "body": "only: it depends. 1.x is stable and has a lot of community support, but 2 is newer, more performant, will be released around the end of the year, but has less support and is more prone to change"}, {"timstamp": "2016-07-05 10:15", "user": "Elarcis", "body": "only: I suggest you start by learning 1.x"}, {"timstamp": "2016-07-05 10:16", "user": "Elarcis", "body": "only: you'll get help from more people (including me), and as long as you follow best practices, transitionning to angular2 later will be 'relatively' easy"}, {"timstamp": "2016-07-05 10:17", "user": "only", "body": "thanks for the advice"}, {"timstamp": "2016-07-05 10:18", "user": "only", "body": "so how would one hide the keys and secrets AND still send the API requests?"}, {"timstamp": "2016-07-05 10:18", "user": "only", "body": "with angularjs"}, {"timstamp": "2016-07-05 10:19", "user": "only", "body": "also, which one will work best from this list:"}, {"timstamp": "2016-07-05 10:19", "user": "only", "body": "cURL or Node.js"}, {"timstamp": "2016-07-05 10:19", "user": "Elarcis", "body": "only: cURL is a linux command line program, so I guess it's non-relevant"}, {"timstamp": "2016-07-05 10:20", "user": "Elarcis", "body": "only: angularjs already provides logic to make HTTP calls"}, {"timstamp": "2016-07-05 10:20", "user": "only", "body": "zomg: but I need the forms' contents from the \"client\""}, {"timstamp": "2016-07-05 10:20", "user": "only", "body": "Elarcis: so the two examples set out there are irrelevant?"}, {"timstamp": "2016-07-05 10:21", "user": "Elarcis", "body": "only: yes, I didn't get this was some wordpress plugin API"}, {"timstamp": "2016-07-05 10:21", "user": "only", "body": "zomg: what stops somebody to replicate a request to my own server?"}, {"timstamp": "2016-07-05 10:21", "user": "Elarcis", "body": "only: authentication"}, {"timstamp": "2016-07-05 10:22", "user": "Elarcis", "body": "only: basically, and this applies to any client-side application, everything that is delivered outside of your server can't be trusted anymore"}, {"timstamp": "2016-07-05 10:22", "user": "Elarcis", "body": "only: may it be secret keys, source code, passwords, etc."}, {"timstamp": "2016-07-05 10:23", "user": "Elarcis", "body": "only: it's particularly true for in-browser javascript since anybody can look at the source code with the dev tools, but it also applies to programs written in C++, python, C#... it's always possible to take a peek at the source"}, {"timstamp": "2016-07-05 10:24", "user": "Elarcis", "body": "only: so sensible data (such as secret keys, and authentication data) have to be securely stored on your server, because you're theoretically the only one who can access it"}, {"timstamp": "2016-07-05 10:26", "user": "Elarcis", "body": "only: My guess is that in your needs, angularjs should only manage the form part: collecting user input, and sending it to the server so that it can call the 'WooCommerce' API securely."}, {"timstamp": "2016-07-05 10:26", "user": "only", "body": "yes, exactly"}, {"timstamp": "2016-07-05 10:26", "user": "only", "body": "now trying to figure out a way to do it :)"}, {"timstamp": "2016-07-05 10:26", "user": "Elarcis", "body": "only: I could be wrong of course, but given the examples given (PHP, cURL, Node.js) that looks like something to be done server-side"}, {"timstamp": "2016-07-05 10:27", "user": "Elarcis", "body": "only: well the angularjs service part still holds true: you have to code one that does a $http.post to your server with the form data as a JSON object, then code a form that exploits it"}, {"timstamp": "2016-07-05 10:27", "user": "only", "body": "data-ng-class=\"{ pending: submitOrderPending }\" data-ng-click=\"submitOrder()\""}, {"timstamp": "2016-07-05 10:28", "user": "Elarcis", "body": "only: there will be some server-side method to expose to receive and format that data though"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "ugh, sorry, wrong window"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "well yeah"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "gutted they don't give real life examples"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "for collecting stuff from forms and POSTing it"}, {"timstamp": "2016-07-05 10:28", "user": "only", "body": "(the WooCommerce REST API devs)"}, {"timstamp": "2016-07-05 10:28", "user": "Elarcis", "body": "only: sorry if you already know that, I don't have a clue about your level of knowledge x)"}, {"timstamp": "2016-07-05 10:29", "user": "Elarcis", "body": "only: well it's a pretty broad topic, because there are A LOT of frontend frameworks, form libraries; etc."}, {"timstamp": "2016-07-05 10:29", "user": "only", "body": "is there a way I can pay somebody to help me out with this?"}, {"timstamp": "2016-07-05 10:30", "user": "only", "body": "a chan on #freenode perhaps?"}, {"timstamp": "2016-07-05 10:30", "user": "Elarcis", "body": "only: I have no idea"}, {"timstamp": "2016-07-05 10:34", "user": "only", "body": "Elarcis: do you mind if I PM you?"}, {"timstamp": "2016-07-05 10:35", "user": "Elarcis", "body": "yes I do mind, sorry x)"}, {"timstamp": "2016-07-05 10:36", "user": "Elarcis", "body": "only: we're all here to help but we got jobs, I don't have the time to dedicate to only one person. if you PM me, you'll just have to wait for me to have time to answer instead of benefiting from the help of everybody here"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": "fair enough"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": "I wonder, this script"}, {"timstamp": "2016-07-05 10:36", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "where does it submit the form?"}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "can't figure it out"}, {"timstamp": "2016-07-05 10:37", "user": "Elarcis", "body": "only: I'm unauthorized"}, {"timstamp": "2016-07-05 10:37", "user": "only", "body": "the submit button looks like this <a class=\"btn btn-success btn-fill pull-right order hidden-lg hidden-md hidden-sm\" data-ng-class=\"{ pending: submitOrderPending }\" data-ng-click=\"submitOrder()\">"}, {"timstamp": "2016-07-05 10:38", "user": "only", "body": "is there a pastebin for many lines of code?"}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: I suppose pastebin"}, {"timstamp": "2016-07-05 10:39", "user": "mrded", "body": "=)"}, {"timstamp": "2016-07-05 10:39", "user": "only", "body": "You have exceeded the maximum paste size of 512 kilobytes per paste."}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: indeed that's strange, usually the form tag has a ng-submit attribute with a function in it"}, {"timstamp": "2016-07-05 10:39", "user": "mrded", "body": "only: try"}, {"timstamp": "2016-07-05 10:39", "user": "Elarcis", "body": "only: in that case, try to narrow it down, I doubt all the code is mandatory"}, {"timstamp": "2016-07-05 10:40", "user": "only", "body": "mrded: it worked, thanks!"}, {"timstamp": "2016-07-05 10:41", "user": "only", "body": "so, where does it submit the form? ->"}, {"timstamp": "2016-07-05 10:41", "user": "only", "body": "I'm lost"}, {"timstamp": "2016-07-05 10:41", "user": "Elarcis", "body": "UH"}, {"timstamp": "2016-07-05 10:41", "user": "Elarcis", "body": "I'm not reading that"}, {"timstamp": "2016-07-05 10:42", "user": "only", "body": ""}, {"timstamp": "2016-07-05 10:42", "user": "Elarcis", "body": "only: that's still minified and bundled code"}, {"timstamp": "2016-07-05 10:42", "user": "Elarcis", "body": "only: where did you get it? on an actual site?"}, {"timstamp": "2016-07-05 10:42", "user": "only", "body": "yes"}, {"timstamp": "2016-07-05 10:43", "user": "only", "body": "trying to figure out how do they do it"}, {"timstamp": "2016-07-05 10:43", "user": "Elarcis", "body": "only: :)"}, {"timstamp": "2016-07-05 10:43", "user": "only", "body": "and where do they submit the form using angularjs"}, {"timstamp": "2016-07-05 10:43", "user": "Elarcis", "body": "only look at the example"}, {"timstamp": "2016-07-05 10:43", "user": "mrded", "body": "it looks uglified"}, {"timstamp": "2016-07-05 10:44", "user": "Elarcis", "body": "only: basically you bind a function to the standard onSubmit event, and that function will be called and process the form's data in anyway you want"}, {"timstamp": "2016-07-05 10:44", "user": "Elarcis", "body": "only: you still need to add a submit trigger, like an input type='submit' or a button"}, {"timstamp": "2016-07-05 10:45", "user": "only", "body": "funny thing is that I don't see the URL anywhere in that .js"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "so it's extremely unclear to me"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "where is that form getting submitted"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "only: don't give yourself a headache, this code has been automatically compressed by a program, it's not meant to be read"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "(by humans at least)"}, {"timstamp": "2016-07-05 10:46", "user": "only", "body": "you can de-uglify it, can't you?"}, {"timstamp": "2016-07-05 10:46", "user": "Elarcis", "body": "only: yes, you're staring at it deuglified"}, {"timstamp": "2016-07-05 10:47", "user": "Elarcis", "body": "only: uglified, there would be no whitespace nor line breaks"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "compressed or not compressed, there must be an URL"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "where the form is submitted"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "no?"}, {"timstamp": "2016-07-05 10:47", "user": "only", "body": "that's the only .js they use"}, {"timstamp": "2016-07-05 10:47", "user": "Elarcis", "body": "only: not necessarily if the form isn't meant to be sent online"}, {"timstamp": "2016-07-05 10:48", "user": "Elarcis", "body": "only: also, the URL could be constructed from different function calls, in which case it'd be hard to find it"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: you should, imho, just see how angularjs services and $http calls are written and start from scratch, instead of looking at computer code :)"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "thing is, I want to use their field validation and all the UX effects"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: it will be much simpler and you'll have a better understanding of what you're doing"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "and just submit the form differently if it makes sense :)"}, {"timstamp": "2016-07-05 10:49", "user": "only", "body": "is it possible to change just the last bit?"}, {"timstamp": "2016-07-05 10:49", "user": "Elarcis", "body": "only: do you have access to the source of that site?"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "yes, the .js and .css"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "and everything works beautifully"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "until you click \"submit\""}, {"timstamp": "2016-07-05 10:50", "user": "Elarcis", "body": "only: ok then no it's not psosible unless you're a demi-god and you're not bothered to steal source code ;)"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "now, I want to put a woocommerce underneath it"}, {"timstamp": "2016-07-05 10:50", "user": "only", "body": "and receive the forms and create an order out of it"}, {"timstamp": "2016-07-05 10:52", "user": "only", "body": "it's stealing to learn ;)"}, {"timstamp": "2016-07-05 10:52", "user": "only", "body": "not production"}, {"timstamp": "2016-07-05 10:54", "user": "Elarcis", "body": "only: yeah, I still advive against it, since you're a beginner in angularjs and that it's hard enough to reverse engineed minified code, don't think about it if you don't master the framework used :D"}, {"timstamp": "2016-07-05 10:55", "user": "Elarcis", "body": "only: it'd be like trying to create your own religion by reading a bible written in a foreign language you've never heard of, while seaking to replace every mention to bread by 'burger'"}, {"timstamp": "2016-07-05 10:56", "user": "only", "body": "hah"}, {"timstamp": "2016-07-05 11:11", "user": "Elarcis", "body": "only: how are you holding uo?"}, {"timstamp": "2016-07-05 11:11", "user": "Elarcis", "body": "*up"}, {"timstamp": "2016-07-05 11:12", "user": "only", "body": "bad :( I can't get angularjs to work with the REST API"}, {"timstamp": "2016-07-05 11:12", "user": "Elarcis", "body": "only: do you need some help? :)"}, {"timstamp": "2016-07-05 11:12", "user": "only", "body": "I would love some help :)"}, {"timstamp": "2016-07-05 11:13", "user": "Elarcis", "body": "only: what do you have so far?"}, {"timstamp": "2016-07-05 11:13", "user": "only", "body": "Elarcis: I was reading through this:"}, {"timstamp": "2016-07-05 11:13", "user": "Elarcis", "body": "only: don't you want to use angularjs forms?"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "yes I do"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "basically, if you can help me out with a submit button with just hardcoded variable"}, {"timstamp": "2016-07-05 11:15", "user": "Elarcis", "body": "only: you don't need nodejs for that then x)"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "that will talk to this API"}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": ""}, {"timstamp": "2016-07-05 11:15", "user": "only", "body": "I will be out of the woods"}, {"timstamp": "2016-07-05 11:16", "user": "only", "body": "or better yet, with a <input type=\"text\">"}, {"timstamp": "2016-07-05 11:16", "user": "only", "body": "so a form with a singe <input type=\"text\"> and a submit button that would POST to the woo rest api"}, {"timstamp": "2016-07-05 11:17", "user": "Elarcis", "body": "only: if I may, look at the demo on this page: it shows you how you can have a html form, exploit the fields values in angularjs and have a submit function"}, {"timstamp": "2016-07-05 11:18", "user": "Elarcis", "body": "only: try to have just one text input and retrieve its value first"}, {"timstamp": "2016-07-05 11:18", "user": "Elarcis", "body": "only: we'll worry about the API later :)"}, {"timstamp": "2016-07-05 11:18", "user": "only", "body": "Elarcis: thank you, that's what I will do, be back soon :)"}, {"timstamp": "2016-07-05 11:19", "user": "Elarcis", "body": "np"}, {"timstamp": "2016-07-05 11:21", "user": "Elarcis", "body": "only: actually, you might want to read the whole article, it explains a lot :D"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "also, retrieve as in \"alert\" it?"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "does that count?"}, {"timstamp": "2016-07-05 11:21", "user": "only", "body": "ha"}, {"timstamp": "2016-07-05 11:22", "user": "Elarcis", "body": "only: yes, that count x)"}, {"timstamp": "2016-07-05 11:22", "user": "Elarcis", "body": "only: since basically you'll later replace alert() with yourService.createOrder()"}], "label": "other"}
{"id": "93d5947d", "body": "", "comments": [{"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "hi guys, I have a pdf with a lot of text that I'd need to transform to json, to make it visible in a dialog"}, {"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "(general terms and conditions)"}, {"timstamp": "2017-09-20 13:03", "user": "SuperTyp", "body": "the headers needs to be inidcated so that I can style them, any idea what would be the best way to do so?"}, {"timstamp": "2017-09-20 13:04", "user": "Pyrrhus666", "body": "SuperTyp, pdf2html, and pray to whatever god you want you have a properly layed out pdf or else it will be garbage."}, {"timstamp": "2017-09-20 13:06", "user": "Pyrrhus666", "body": "or just give a link to the pdf and a checkbox to let people say theyve read it ;)"}, {"timstamp": "2017-09-20 13:08", "user": "SuperTyp", "body": "yeah thats what I told UX too..."}], "label": "other"}
{"id": "0ec1e28a", "body": "", "comments": [{"timstamp": "13:09", "user": "Paradisee", "body": "how does a push notification work?"}, {"timstamp": "13:10", "user": "Paradisee", "body": "i basically have a json on my server, where there are a list of notifications i would like to send to the user"}, {"timstamp": "13:11", "user": "Paradisee", "body": "the list is complitely generated as a standalone project"}, {"timstamp": "13:13", "user": "Paradisee", "body": "i'm reading this:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "it says: What we know as Web Push Notifications are actually based on two separate browser standards:"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Push API - this is an API that allows messages to be pushed from a server to a browser (even when the site isn't focused or the browser is closed)"}, {"timstamp": "13:13", "user": "Paradisee", "body": "Notifications API: displays native system notifications to the user"}], "label": "other"}
{"id": "73af7ce7", "body": "", "comments": [{"timstamp": "10:24", "user": "storkme", "body": "services are good for this"}, {"timstamp": "10:24", "user": "murii", "body": "^"}], "label": "other"}
{"id": "93d59500", "body": "", "comments": [{"timstamp": "2018-08-09 15:10", "user": "CssNoob", "body": "any example code for this problem?"}, {"timstamp": "2018-08-09 16:11", "user": "Elarcis", "body": "CssNoob: the goal of that exercice is you figuring it out by yourselves"}, {"timstamp": "2018-08-09 16:24", "user": "SargoDarya", "body": "Elarcis: also Math.floor"}, {"timstamp": "2018-08-09 16:25", "user": "Elarcis", "body": "SargoDarya: Math.floor?"}, {"timstamp": "2018-08-09 16:25", "user": "SargoDarya", "body": "Elarcis: Never heard of Math.floor()?"}, {"timstamp": "2018-08-09 16:26", "user": "Elarcis", "body": "SargoDarya: I did, I just dont get how its relevant here :P"}, {"timstamp": "2018-08-09 16:29", "user": "Elarcis", "body": "CssNoob: if that might comfort you, I solved it. Show you made some efforts, and well share advices"}, {"timstamp": "2018-08-09 16:34", "user": "Elarcis", "body": "CssNoob: break it into small pieces. First, how to count how many of a bill is there in a given amount? then how much is left? then how to pass whats left to the next bill? then start again, while keeping the previous quantities? then showing the result? then showing an error if there is money left? then... oh wait, youre done."}, {"timstamp": "2018-08-09 16:53", "user": "CssNoob", "body": "Elarcis"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: well you have a nice start, dont give up!"}, {"timstamp": "2018-08-09 17:21", "user": "Elarcis", "body": "CssNoob: I hope you didnt spend the whole hour on it, though :P"}, {"timstamp": "2018-08-09 17:21", "user": "CssNoob", "body": "I'm stuck"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: what, youre stuck?"}, {"timstamp": "2018-08-09 17:22", "user": "CssNoob", "body": "inputting a value"}, {"timstamp": "2018-08-09 17:22", "user": "Elarcis", "body": "CssNoob: you have your amount of money, you have checked that its a number, it works"}, {"timstamp": "2018-08-09 17:24", "user": "Elarcis", "body": "CssNoob: what is wrong with your input?"}, {"timstamp": "2018-08-09 17:25", "user": "CssNoob", "body": "I don't know how to input by the type of bills"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "should I input like 2,500 Righ away? or like 1,000, and 500"}, {"timstamp": "2018-08-09 17:26", "user": "CssNoob", "body": "for 1,500"}, {"timstamp": "2018-08-09 17:26", "user": "Elarcis", "body": "CssNoob: reread the exercice. What is asked is to convert a single amount into a list of bills and their quantities."}, {"timstamp": "2018-08-09 17:27", "user": "CssNoob", "body": "1,550 right?"}, {"timstamp": "2018-08-09 17:28", "user": "CssNoob", "body": "or I need to input a new integer?"}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its even written in the example. You give your code 1550, it spits you back a result, no matter the format. What matters is that the results logical."}, {"timstamp": "2018-08-09 17:28", "user": "Elarcis", "body": "CssNoob: its an example... whatever is fine, it could be 3 for all you know"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: if your teacher/website checks your work itll pass a list of random values to test it"}, {"timstamp": "2018-08-09 17:29", "user": "CssNoob", "body": "Elarcis What do you mean ' 3 ' ?"}, {"timstamp": "2018-08-09 17:29", "user": "Elarcis", "body": "CssNoob: well how to breakdown $3 into bills of $1000, $500, $100 and $50?"}, {"timstamp": "2018-08-09 17:30", "user": "CssNoob", "body": "so the program is breakdown the given total number ?"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "CssNoob: What's the result of 0.1 + 0.2?"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob: yes... if you input 1550, it spits out 1000 - 1 500 - 1 50 - 1"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "SargoDarya: that is not how you test for humanity."}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "and if it's not given from the type of bills show error"}, {"timstamp": "2018-08-09 17:31", "user": "CssNoob", "body": "hmm"}, {"timstamp": "2018-08-09 17:31", "user": "SargoDarya", "body": "Elarcis: :("}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "CssNoob:"}, {"timstamp": "2018-08-09 17:31", "user": "Elarcis", "body": "If the amount cant be breakdown into the available bills show an error message."}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "available bills = type of bills"}, {"timstamp": "2018-08-09 17:32", "user": "Elarcis", "body": "CssNoob: I suppose so, yes"}, {"timstamp": "2018-08-09 17:32", "user": "CssNoob", "body": "so my sample number is 1550"}, {"timstamp": "2018-08-09 17:33", "user": "Elarcis", "body": "CssNoob: what language are you mainly speaking?"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "Denomination of bills. There are 1000$ bills, 500$, 100$ and 50$."}, {"timstamp": "2018-08-09 17:33", "user": "CssNoob", "body": "I'm from philippines. My bad for my grammar"}, {"timstamp": "2018-08-09 17:33", "user": "SargoDarya", "body": "What is the least amount of bills you need for 2000$"}, {"timstamp": "2018-08-09 17:34", "user": "CssNoob", "body": "SargoDarya Depends?"}, {"timstamp": "2018-08-09 17:34", "user": "SargoDarya", "body": ":|"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: depending on the bills given in the exercice"}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: there is only one solution."}, {"timstamp": "2018-08-09 17:34", "user": "Elarcis", "body": "CssNoob: _least_ amount of bills"}, {"timstamp": "2018-08-09 17:35", "user": "SargoDarya", "body": "Elarcis: Depends on the definition of least I guess xD"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "so for 2000$ . I can I put a const value like 1,000 and 1,000 ,500, 500"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "can I*"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "I Mean"}, {"timstamp": "2018-08-09 17:36", "user": "CssNoob", "body": "1,000 , 500 , 500"}, {"timstamp": "2018-08-09 17:37", "user": "Elarcis", "body": "CssNoob: that would be a wrong answer... 2 bills of $1,000 is the least amount of bills needed."}, {"timstamp": "2018-08-09 17:37", "user": "CssNoob", "body": "dammit"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "CssNoob: How often does 10 fit into 45?"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "10, 10, 10 and 5?"}, {"timstamp": "2018-08-09 17:38", "user": "SargoDarya", "body": "..."}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh boy"}, {"timstamp": "2018-08-09 17:38", "user": "CssNoob", "body": "oh man"}, {"timstamp": "2018-08-09 17:39", "user": "SargoDarya", "body": "Yupp, I'm out for today. Gotta leave before the storm."}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "SargoDarya thanks"}, {"timstamp": "2018-08-09 17:39", "user": "CssNoob", "body": "take care :)"}, {"timstamp": "2018-08-09 17:41", "user": "SargoDarya", "body": "The answer to the question of how often 10 fits in 45 is 4 times, because 4 * 10 = 40 but 5 * 10 would be 50 so that's too much. It leaves you with the rest 5."}, {"timstamp": "2018-08-09 17:41", "user": "CssNoob", "body": ":)"}, {"timstamp": "2018-08-09 18:00", "user": "Elarcis", "body": "CssNoob: I was bored so I rewrote the exercice in a (I hope) clearer way"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "ELarcis"}, {"timstamp": "2018-08-09 18:25", "user": "CssNoob", "body": "oh man, you went out?"}], "label": "other"}
{"id": "93d5950a", "body": "", "comments": [{"timstamp": "2016-08-04 09:35", "user": "ngWalrus", "body": "has anyone here used emmet?"}, {"timstamp": "2016-08-04 09:36", "user": "arlekin", "body": "ngWalrus: had it installed in almost every sublime i ever used and then struggled to remember / understand shortcuts therefore didn't use it to anythink particularly clever"}, {"timstamp": "2016-08-04 09:37", "user": "ngWalrus", "body": "good thing I'm not the only one"}, {"timstamp": "2016-08-04 09:37", "user": "arlekin", "body": "ngWalrus: but i've always heard lots of praise and it seems to be pretty essential part of toolchain for a lot o ppl"}, {"timstamp": "2016-08-04 09:42", "user": "arlekin", "body": "it may well be that i just didn't wrote enough code OOP-style, but im really struggling to understand a practical difference between classical and prototypal inheritance"}, {"timstamp": "2016-08-04 09:43", "user": "arlekin", "body": "i read a lot about it, but all i could find was like: \" classes suck and in prototypal you can do A, B and C\" but nowhere i've see explanation why something would be impossible/hard in classical"}, {"timstamp": "2016-08-04 09:44", "user": "arlekin", "body": "or the other way around ofc"}, {"timstamp": "2016-08-04 09:49", "user": "arlekin", "body": "sleepy weather outside my window, but for the whole irc ? uncany"}, {"timstamp": "2016-08-04 09:49", "user": "arlekin", "body": "*uncanny"}, {"timstamp": "2016-08-04 09:52", "user": "icebox", "body": "arlekin: the main topics about classical and prototypal inheritance are the following: subclassing (inheritance) and functional mixins (composition)"}, {"timstamp": "2016-08-04 09:52", "user": "arlekin", "body": "icebox: agreed, but in both paradigms there are paradigms, and some OO languages support mixins (and/or multiple parents)"}, {"timstamp": "2016-08-04 09:53", "user": "arlekin", "body": "*there is inheritance (not paradigms, derp)"}, {"timstamp": "2016-08-04 09:53", "user": "icebox", "body": "arlekin: the two approaches about inheritance, classical and prototypal, are quite similar... there are a few diffs, but they are technical details... the real differences are the patterns you use depending the approach you choose"}, {"timstamp": "2016-08-04 09:54", "user": "arlekin", "body": "icebox: ain't patterns like by definition technology agnostic ?"}, {"timstamp": "2016-08-04 09:54", "user": "icebox", "body": "arlekin: (mixins are not functional mixins) :)"}, {"timstamp": "2016-08-04 09:54", "user": "arlekin", "body": "icebox: ok, so whats the difference ?"}, {"timstamp": "2016-08-04 09:54", "user": "icebox", "body": "arlekin: ah... see... do you need a link? :)"}, {"timstamp": "2016-08-04 09:55", "user": "arlekin", "body": "icebox: seems like it :P"}, {"timstamp": "2016-08-04 10:00", "user": "ngWalrus", "body": "can someone explain to me usecases where one would learn(and I assume write) SVG by hand in a text editor instead of using something like inkscape"}, {"timstamp": "2016-08-04 10:01", "user": "ngWalrus", "body": "like maybe optimising by hand? idk"}, {"timstamp": "2016-08-04 10:01", "user": "arlekin", "body": "ngWalrus: im pretty sure i read some interview with a guy, some kind of rockstar UI/UX guy who wrote them by hand"}, {"timstamp": "2016-08-04 10:01", "user": "arlekin", "body": "ngWalrus: also its xml so in practice it should be as much sesne as writing html"}, {"timstamp": "2016-08-04 10:02", "user": "arlekin", "body": "ngWalrus: unless you mean writing paths by hand - which is just the kind of problem where visual tools are undoubtely superior"}, {"timstamp": "2016-08-04 10:02", "user": "ngWalrus", "body": "arlekin comparing html to svg by hand doesn't really make sense to me"}, {"timstamp": "2016-08-04 10:02", "user": "zomg", "body": "ngWalrus: I'd imagine there are very few benefits to doing that by hand unless it's just some fairly simple stuff"}, {"timstamp": "2016-08-04 10:02", "user": "zomg", "body": "being able to read/write it by hand would have the benefit of being able to easily modify it ad-hoc if needed"}, {"timstamp": "2016-08-04 10:03", "user": "ngWalrus", "body": "zomg like yeah I get that ad-hoc modification bt"}, {"timstamp": "2016-08-04 10:03", "user": "ngWalrus", "body": "bit*"}, {"timstamp": "2016-08-04 10:03", "user": "arlekin", "body": "ngWalrus: meant that the same support we have in editors for html one should have for xml (svg) and would be good to go, its just tags"}, {"timstamp": "2016-08-04 10:03", "user": "arlekin", "body": "except paths which i mentioned already"}, {"timstamp": "2016-08-04 10:04", "user": "ngWalrus", "body": "and do people still not use browser dev tools for html?"}, {"timstamp": "2016-08-04 10:04", "user": "Elarcis", "body": "ngWalrus: I actually wrote a pulsing hexagon animation in SVG by hand"}, {"timstamp": "2016-08-04 10:05", "user": "Elarcis", "body": "ngWalrus: it's pretty basic, although I guess some people just want a finer control over what they draw, or are hit by OCD and hate paths with an infinite amount of decimals"}, {"timstamp": "2016-08-04 10:05", "user": "ngWalrus", "body": "Elarcis good? I bet it probably would have been easier with a tool"}, {"timstamp": "2016-08-04 10:05", "user": "ngWalrus", "body": "don't post code in irc plz"}, {"timstamp": "2016-08-04 10:05", "user": "nikitabanthiya", "body": "see my code"}, {"timstamp": "2016-08-04 10:05", "user": "Elarcis", "body": "ngWalrus: (just to show off my crazy SVG skillz) elarcis.fr"}, {"timstamp": "2016-08-04 10:06", "user": "ngWalrus", "body": "that is a pretty nifty animation"}, {"timstamp": "2016-08-04 10:06", "user": "arlekin", "body": "ngWalrus: there is plenty of tools for svg and i've already seen tools for removing bloat from tools-created svg"}, {"timstamp": "2016-08-04 10:06", "user": "arlekin", "body": "Elarcis: neat brah"}, {"timstamp": "2016-08-04 10:06", "user": "Elarcis", "body": "haha"}, {"timstamp": "2016-08-04 10:07", "user": "arlekin", "body": "in fact i just yestarday was looking into svg a bit, since it seems to be gaining popularity at last + allows for doing things simply impossible in css"}, {"timstamp": "2016-08-04 10:07", "user": "ngWalrus", "body": "wow finally this guy actually tells me what he is trying to do"}, {"timstamp": "2016-08-04 10:08", "user": "arlekin", "body": "ngWalrus: what guy >"}, {"timstamp": "2016-08-04 10:08", "user": "nikitabanthiya", "body": "@zomg"}, {"timstamp": "2016-08-04 10:08", "user": "ngWalrus", "body": "arlekin he's on another channel, and he wants to make a d3 application but someone told the poor sod he needs to know svg beforehand"}, {"timstamp": "2016-08-04 10:08", "user": "arlekin", "body": "ngWalrus: what ??? he doesn't!"}, {"timstamp": "2016-08-04 10:09", "user": "nikitabanthiya", "body": "hey anybody can tell me !!!"}, {"timstamp": "2016-08-04 10:09", "user": "arlekin", "body": "ngWalrus: d3 is this magical thing that even when you dont get it for shit you can kinda instinctively figure things out"}, {"timstamp": "2016-08-04 10:09", "user": "arlekin", "body": "nikitabanthiya: dude, you just got your template url wrong"}, {"timstamp": "2016-08-04 10:09", "user": "Elarcis", "body": "arlekin: well, awesome scalability, pretty compact, no compression issues since vectors... it has its pros"}, {"timstamp": "2016-08-04 10:10", "user": "arlekin", "body": "Elarcis: exactly, and i'd really like to be able to make all those awesome visuals and microinteractions and stuff, so i feel compelled to lern it"}, {"timstamp": "2016-08-04 10:10", "user": "arlekin", "body": "*learn"}, {"timstamp": "2016-08-04 10:10", "user": "Elarcis", "body": "arlekin: microinteractions?"}, {"timstamp": "2016-08-04 10:10", "user": "nikitabanthiya", "body": "yaa i know but name is same in view"}, {"timstamp": "2016-08-04 10:10", "user": "arlekin", "body": "nikitabanthiya: ain't about the name"}, {"timstamp": "2016-08-04 10:11", "user": "arlekin", "body": "its about the path"}, {"timstamp": "2016-08-04 10:11", "user": "nikitabanthiya", "body": "how to girl template url ?? any pattern is there @arlein"}, {"timstamp": "2016-08-04 10:11", "user": "arlekin", "body": "nikitabanthiya: i wish i knew how to template a girl, whats your point ?"}, {"timstamp": "2016-08-04 10:11", "user": "nikitabanthiya", "body": "can u tell me how i will write the path ?file is inside the view folder"}, {"timstamp": "2016-08-04 10:12", "user": "Elarcis", "body": "nikitabanthiya: absolute path starting from the app's root path"}, {"timstamp": "2016-08-04 10:12", "user": "arlekin", "body": "nikitabanthiya: what he said"}, {"timstamp": "2016-08-04 10:12", "user": "arlekin", "body": "Elarcis: thanks bro"}, {"timstamp": "2016-08-04 10:12", "user": "Elarcis", "body": "nikitabanthiya: what I said"}, {"timstamp": "2016-08-04 10:12", "user": "ngWalrus", "body": "what they said"}, {"timstamp": "2016-08-04 10:13", "user": "Elarcis", "body": "What ngWalrus said we said"}, {"timstamp": "2016-08-04 10:13", "user": "icebox", "body": "arlekin: about diamond problem"}, {"timstamp": "2016-08-04 10:13", "user": "arlekin", "body": "icebox: there we go, thanks a lot! :)"}, {"timstamp": "2016-08-04 10:13", "user": "arlekin", "body": "btw weechat sucks in terms of long links"}, {"timstamp": "2016-08-04 10:14", "user": "Elarcis", "body": "arlekin: hexChat"}, {"timstamp": "2016-08-04 10:14", "user": "ngWalrus", "body": "arlekin irssi"}, {"timstamp": "2016-08-04 10:14", "user": "Elarcis", "body": "arlekin: oh wait"}, {"timstamp": "2016-08-04 10:14", "user": "Elarcis", "body": ":D"}, {"timstamp": "2016-08-04 10:14", "user": "ngWalrus", "body": "all you need bro"}, {"timstamp": "2016-08-04 10:15", "user": "arlekin", "body": "Elarcis: yup if we still were in the 90' or early 00' then maybe"}, {"timstamp": "2016-08-04 10:15", "user": "arlekin", "body": "ngWalrus: is there really that much difference ? i meant i used irssi and then found weechat to be more intuitive"}, {"timstamp": "2016-08-04 10:15", "user": "Elarcis", "body": "arlekin: well then in the 90' or early 00' they knew how to probably parse long URLs"}, {"timstamp": "2016-08-04 10:15", "user": "arlekin", "body": "Elarcis: smartass"}, {"timstamp": "2016-08-04 10:15", "user": "Elarcis", "body": "arlekin: :D"}, {"timstamp": "2016-08-04 10:16", "user": "ngWalrus", "body": "arlekin probably nothing other than irssi being able to handly long links :^)"}, {"timstamp": "2016-08-04 10:16", "user": "ngWalrus", "body": "handle*"}, {"timstamp": "2016-08-04 10:16", "user": "arlekin", "body": "ngWalrus: some day i will finally start all those sideprojects i keep a list of///"}, {"timstamp": "2016-08-04 10:17", "user": "icebox", "body": "arlekin: about mixins"}, {"timstamp": "2016-08-04 10:17", "user": "Elarcis", "body": "arlekin: It's pretty ironical that some GUI programs look more obsolete than programs in CLI"}, {"timstamp": "2016-08-04 10:17", "user": "Elarcis", "body": "arlekin: probably the same than 3D games vs. 2D ones"}, {"timstamp": "2016-08-04 10:17", "user": "arlekin", "body": "Elarcis: or is it ?"}, {"timstamp": "2016-08-04 10:17", "user": "ngWalrus", "body": "CLI is like fine wine"}, {"timstamp": "2016-08-04 10:17", "user": "arlekin", "body": "ngWalrus: agredx"}, {"timstamp": "2016-08-04 10:17", "user": "arlekin", "body": "*agreed"}, {"timstamp": "2016-08-04 10:17", "user": "ezio", "body": "Elarcis, hahaha good point"}, {"timstamp": "2016-08-04 10:18", "user": "arlekin", "body": "icebox: didn;t understood that diamond problem - shouldn't it just group B and C as a 'parents' of A ?"}, {"timstamp": "2016-08-04 10:19", "user": "ngWalrus", "body": "I wonder if someone has done any research why 3d games start looking like dogshit after a couple of years and good(or even mediocre) doesn't age all that much(is it because 2d graphics are more abstract and stylised?)"}, {"timstamp": "2016-08-04 10:19", "user": "arlekin", "body": "Elarcis: you've got a point with the games though - notice that while 3D games from like 15 years ago look, well, old, the 2d games really don't (except for resolution maybe but thats all)"}, {"timstamp": "2016-08-04 10:19", "user": "icebox", "body": "arlekin: the point is the path :)"}, {"timstamp": "2016-08-04 10:19", "user": "Elarcis", "body": "CLI or 2D games are like a printed book. It doesn't matter what year it is, it always looks sturdier, more reliable, and never gets out of fashion"}, {"timstamp": "2016-08-04 10:19", "user": "arlekin", "body": "icebox: why not bothh then ?"}, {"timstamp": "2016-08-04 10:19", "user": "zomg", "body": "ngWalrus: probably"}, {"timstamp": "2016-08-04 10:19", "user": "zomg", "body": "ngWalrus: the more abstract the graphics are the less they age I guess"}, {"timstamp": "2016-08-04 10:19", "user": "zomg", "body": "ie. people still play games with text based graphics like Dwarf Fortress"}, {"timstamp": "2016-08-04 10:19", "user": "arlekin", "body": "ngWalrus: also there is much less 'things'"}, {"timstamp": "2016-08-04 10:20", "user": "arlekin", "body": "going on with 2D"}, {"timstamp": "2016-08-04 10:20", "user": "zomg", "body": "But on the other hand, pseudo-3D games like Doom or Duke 3D"}, {"timstamp": "2016-08-04 10:20", "user": "arlekin", "body": "there is no geometry, no camera, no lightining etc"}, {"timstamp": "2016-08-04 10:20", "user": "zomg", "body": "those still look good imo at least"}, {"timstamp": "2016-08-04 10:20", "user": "nikitabanthiya", "body": "hi i tried giving root path like from localhost: something its not working"}, {"timstamp": "2016-08-04 10:20", "user": "arlekin", "body": "zomg: agreeed"}, {"timstamp": "2016-08-04 10:20", "user": "icebox", "body": "arlekin: no... the compiler needs to know the result of the cast depending on the path"}, {"timstamp": "2016-08-04 10:20", "user": "Elarcis", "body": "never saw people say 'urh, why did this guy publish a BOOK? It's so obsolete, and looks so old and unpractical!'"}, {"timstamp": "2016-08-04 10:20", "user": "zomg", "body": "they do look dated but they have a certain art style to them which isn't bad per se"}, {"timstamp": "2016-08-04 10:20", "user": "icebox", "body": "arlekin: if you use ordinary inheritance, each path has it's own distinctive endpoint, meaning that the result of the cast is ambiguous, which is the problem."}, {"timstamp": "2016-08-04 10:20", "user": "Elarcis", "body": "nevermind, people could actually do that"}, {"timstamp": "2016-08-04 10:20", "user": "nikitabanthiya", "body": "@arlekin"}, {"timstamp": "2016-08-04 10:20", "user": "nikitabanthiya", "body": "@zomg"}, {"timstamp": "2016-08-04 10:21", "user": "icebox", "body": "arlekin: there is a nice answer explaining that in that thread"}, {"timstamp": "2016-08-04 10:21", "user": "arlekin", "body": "nikitabanthiya: there isn't really much more we can tell you about your problem because it depends on how are you serving statics and what is your directory structure"}, {"timstamp": "2016-08-04 10:21", "user": "ngWalrus", "body": "zomg nethack still has best graphics eu"}, {"timstamp": "2016-08-04 10:22", "user": "zomg", "body": "lol"}, {"timstamp": "2016-08-04 10:22", "user": "arlekin", "body": "nikitabanthiya: try, fail, and in the end succeed"}, {"timstamp": "2016-08-04 10:23", "user": "icebox", "body": "arlekin: (just not to get lost... we talk about diamond problem like an example about the patterns are not agnostic.. in this case it (inheritance) depends on language design)"}, {"timstamp": "2016-08-04 10:23", "user": "arlekin", "body": "icebox: i just dont get why, as long as there is a common ancestor somewhere up the chain... its all about intent, and if programmer intents for A to inherit from both B and C, then why shouldn't it"}, {"timstamp": "2016-08-04 10:24", "user": "Elarcis", "body": "long story short: multiple inheritance is absolute evil"}, {"timstamp": "2016-08-04 10:24", "user": "arlekin", "body": "icebox: well, but thats just either broken implementation, or exploiting bug in the language, either multiple ancestors are allowed and compiler should deal with that, or are not allowed, and should throw error on setting multiple parents"}, {"timstamp": "2016-08-04 10:25", "user": "icebox", "body": "arlekin: you are missing a detail... that in theory... if you write the code, c++ compiler complains... to resolve that you need to \"virtualize\" the endpoints (using the keyword \"virtual\")"}, {"timstamp": "2016-08-04 10:26", "user": "arlekin", "body": "icebox: i do accept the status quo (im not THAT stupid) i just think its either bad design or stupid usecase"}, {"timstamp": "2016-08-04 10:26", "user": "icebox", "body": "arlekin: sigh... I give up... we are OT"}, {"timstamp": "2016-08-04 10:26", "user": "icebox", "body": "arlekin: my fault"}, {"timstamp": "2016-08-04 10:26", "user": "arlekin", "body": "icebox: i initiated it"}, {"timstamp": "2016-08-04 10:27", "user": "arlekin", "body": "anyway, i dont do C++, and now i know i understand the diamond problem, still, dont see fundamental difference in prototypal and OO"}, {"timstamp": "2016-08-04 10:28", "user": "arlekin", "body": "if we assume there is no mixins in classical inheritance, would that mean that something like python where you can inherit from multiple ancestors is in fact some monstrous hibrid ?"}, {"timstamp": "2016-08-04 10:29", "user": "icebox", "body": "arlekin: the answer is... none, unless a few tech details, because both address inheritance problem... but prototypal one (and I say composition pattern, with functional mixins) suits better ti js :)"}, {"timstamp": "2016-08-04 10:29", "user": "icebox", "body": "arlekin: and of course it is an opinionated point of view :)"}, {"timstamp": "2016-08-04 10:30", "user": "arlekin", "body": "icebox: well im not really asking about whats best for js (prototypal ofc) but whats different in paradigms"}, {"timstamp": "2016-08-04 10:30", "user": "icebox", "body": "arlekin: (like in java classical one suits better to that domain language) :)"}, {"timstamp": "2016-08-04 10:30", "user": "arlekin", "body": "icebox: namely, on last meetup a guy (from hiring company) asked me about the difference between protypal and classical inheritance"}, {"timstamp": "2016-08-04 10:31", "user": "icebox", "body": "arlekin: none, unless a few tech details :)"}, {"timstamp": "2016-08-04 10:31", "user": "arlekin", "body": "icebox: and i realised i dont know how to answer, now (few blogposts and our discussion later) i know how to anser correctly, but it feels like its all just deeply ingrained syntactic sugar, but syntactic sugar nonetheless"}, {"timstamp": "2016-08-04 10:32", "user": "arlekin", "body": "icebox: i mean pure, platonic, abstract data relations doesn't inherently divide prototypally or classicaly"}, {"timstamp": "2016-08-04 10:33", "user": "icebox", "body": "arlekin: behind the scenes in js there is the prototype and the classical inheritance is built on it, as you know, there is not \"class\" in js... at least in ES5"}, {"timstamp": "2016-08-04 10:33", "user": "icebox", "body": "zomg: Sorella is great :)"}, {"timstamp": "2016-08-04 10:33", "user": "zomg", "body": "yeah"}, {"timstamp": "2016-08-04 10:33", "user": "arlekin", "body": "icebox: and personnally i think that the abstract thinking part of coding should be done just so, in abstrac way, away from language"}, {"timstamp": "2016-08-04 10:33", "user": "arlekin", "body": "zomg: aint that this crazy feminist ?"}, {"timstamp": "2016-08-04 10:33", "user": "zomg", "body": "no"}, {"timstamp": "2016-08-04 10:34", "user": "arlekin", "body": "zomg: u sure ? -.- ?"}, {"timstamp": "2016-08-04 10:34", "user": "zomg", "body": "reasonably"}, {"timstamp": "2016-08-04 10:34", "user": "zomg", "body": "she might be a feminist but she's not that crazy :p"}, {"timstamp": "2016-08-04 10:34", "user": "arlekin", "body": "zomg: ain't that oxymoron ?"}, {"timstamp": "2016-08-04 10:35", "user": "zomg", "body": "you're an oxymoron"}, {"timstamp": "2016-08-04 10:35", "user": "zomg", "body": ":D"}, {"timstamp": "2016-08-04 10:35", "user": "arlekin", "body": "zomg: i see what you did there..."}, {"timstamp": "2016-08-04 10:35", "user": "arlekin", "body": "ha!"}, {"timstamp": "2016-08-04 10:35", "user": "arlekin", "body": "punny...."}, {"timstamp": "2016-08-04 10:41", "user": "arlekin", "body": "icebox: there is this guy, Eric Elliot and he seems to have pretty strong opinions about those paradigms, namely that classical is bad, and that kinda shakes my conviction there is fundamentally no difference, on the other hand he talks about classical with single parent (kinda pure one imho)"}, {"timstamp": "2016-08-04 10:42", "user": "icebox", "body": "arlekin: yep... agree"}, {"timstamp": "2016-08-04 10:42", "user": "zomg", "body": "Eric is a clown"}, {"timstamp": "2016-08-04 10:42", "user": "arlekin", "body": "icebox: and frankly he deals more with concept than implementation"}, {"timstamp": "2016-08-04 10:42", "user": "arlekin", "body": "zomg: why so ?"}, {"timstamp": "2016-08-04 10:42", "user": "zomg", "body": "Many of his articles contain a lot of factual mistakes, even on basic stuff like composition"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "and he makes bombastic claims on his stuff like how a lot of people are using the stamp thing he made"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "even when he's basically the only person who does that"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "then he has this weirdo JS for homeless thing"}, {"timstamp": "2016-08-04 10:43", "user": "arlekin", "body": "zomg: there we go, i agree with you on the account that what you are saing is confirming my convictions"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "where he claims to help homeless people by teaching them JS and whatnot"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "there's literally zero proof he's done anything"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "the nonprofit he claims to have for it doesn't seem to exist"}, {"timstamp": "2016-08-04 10:43", "user": "zomg", "body": "it's all just marketing for his courses and books"}, {"timstamp": "2016-08-04 10:44", "user": "icebox", "body": "zomg: really, I think often all we say the same thing... only from different point of view... or extreme point of view (like Elliot) :)"}, {"timstamp": "2016-08-04 10:44", "user": "arlekin", "body": "zomg: thats cute where ppl put coding literacy as cure for all evil - kinda reminds me of the montage from \"Silicon Valley\" where all those startups \"made a world a better place\""}, {"timstamp": "2016-08-04 10:44", "user": "arlekin", "body": "*when"}, {"timstamp": "2016-08-04 10:45", "user": "zomg", "body": "icebox: he's like the Zed Shaw of JS I guess, except at least Zed Shaw's stuff is accurate and useful :D"}, {"timstamp": "2016-08-04 10:45", "user": "icebox", "body": "zomg: :P"}, {"timstamp": "2016-08-04 10:45", "user": "arlekin", "body": "i honestly wait for the day i read somewhere a headline \"curing cancer by teaching ppl to code\""}, {"timstamp": "2016-08-04 10:45", "user": "arlekin", "body": "WTFI Zed Shaw ?"}, {"timstamp": "2016-08-04 10:45", "user": "ngWalrus", "body": "curing constipation by teaching people to code"}, {"timstamp": "2016-08-04 10:45", "user": "arlekin", "body": "ngWalrus: you just loled me"}, {"timstamp": "2016-08-04 10:46", "user": "zomg", "body": "arlekin: Zed Shaw is a potty mouth who made \"learn python the hard way\" and some others \"learn X the hard way\" things"}, {"timstamp": "2016-08-04 10:46", "user": "arlekin", "body": "zomg: oh dear"}, {"timstamp": "2016-08-04 10:46", "user": "zomg", "body": "he was internet famous for something else before those"}, {"timstamp": "2016-08-04 10:46", "user": "zomg", "body": "but I forget what"}, {"timstamp": "2016-08-04 10:46", "user": "zomg", "body": "probably for being a potty mouth"}, {"timstamp": "2016-08-04 10:46", "user": "zomg", "body": ":D"}, {"timstamp": "2016-08-04 10:47", "user": "arlekin", "body": "zomg: \"potty mouth\" is such gentle and well-behaved expression"}, {"timstamp": "2016-08-04 10:47", "user": "zomg", "body": "lol"}, {"timstamp": "2016-08-04 10:47", "user": "zomg", "body": "it's funny"}, {"timstamp": "2016-08-04 10:47", "user": "arlekin", "body": "why we just plain and honest won't say shitspitter"}, {"timstamp": "2016-08-04 10:48", "user": "arlekin", "body": "*why won't we (gotta keep my grammar at least a bit straight)"}, {"timstamp": "2016-08-04 10:48", "user": "ngWalrus", "body": "I've noticed something facinating"}, {"timstamp": "2016-08-04 10:48", "user": "ngWalrus", "body": "the longer I code during the day the worse my language facilities become"}, {"timstamp": "2016-08-04 10:48", "user": "ngWalrus", "body": "when I get off work I mainly communicate by grunting"}, {"timstamp": "2016-08-04 10:49", "user": "arlekin", "body": "ngWalrus: as long as you dont put semicolons at the end of sentences..."}, {"timstamp": "2016-08-04 10:49", "user": "ngWalrus", "body": "who uses semi-colons in javascript :^)"}, {"timstamp": "2016-08-04 10:49", "user": "zomg", "body": "I only use greek question marks"}, {"timstamp": "2016-08-04 10:49", "user": "arlekin", "body": "ngWalrus: lets dont go there"}, {"timstamp": "2016-08-04 10:50", "user": "arlekin", "body": "zomg: ha, punny"}, {"timstamp": "2016-08-04 10:50", "user": "icebox", "body": "I missed... at last was the select problem resolved (none user)?"}, {"timstamp": "2016-08-04 10:51", "user": "arlekin", "body": "icebox: select problem ?"}, {"timstamp": "2016-08-04 10:52", "user": "icebox", "body": "arlekin: today you are out of order :)"}, {"timstamp": "2016-08-04 10:52", "user": "icebox", "body": "arlekin: cascading selects"}, {"timstamp": "2016-08-04 11:00", "user": "arlekin", "body": "icebox: what do you mean by out of order ? and really what selects ??"}, {"timstamp": "2016-08-04 11:07", "user": "arlekin", "body": "you know what would be cool ? if there was browser extension generating qr code from the url, so i could switch to browsing on my smartphone quickly"}, {"timstamp": "2016-08-04 11:08", "user": "arlekin", "body": "i know chrome shares the data, and tabs and all, but i really don't want to have all 30 tabs from my work chrome on my phone,"}, {"timstamp": "2016-08-04 11:08", "user": "arlekin", "body": "also there are all the other browsers user"}, {"timstamp": "2016-08-04 11:08", "user": "arlekin", "body": "*users"}, {"timstamp": "2016-08-04 11:08", "user": "arlekin", "body": "hah, i wonder how hard could it be"}, {"timstamp": "2016-08-04 11:08", "user": "icebox", "body": "arlekin: I mean for out of order, we are not on the same page... yesterday a user asked for cascading combo boxes"}, {"timstamp": "2016-08-04 11:09", "user": "icebox", "body": "arlekin: :P"}, {"timstamp": "2016-08-04 11:09", "user": "arlekin", "body": "icebox: damn, that is a hell of an ask, i mean its possible, but i fail to see valid UX with that"}, {"timstamp": "2016-08-04 11:10", "user": "zomg", "body": "arlekin: chrome doesn't force all the tabs"}, {"timstamp": "2016-08-04 11:10", "user": "zomg", "body": "pretty often I just go on my phone and open one of my desktop tabs on it"}, {"timstamp": "2016-08-04 11:11", "user": "arlekin", "body": "zomg: and is the interface for that usable ??"}, {"timstamp": "2016-08-04 11:11", "user": "icebox", "body": "it seems today Elarcis is working :)"}, {"timstamp": "2016-08-04 11:11", "user": "zomg", "body": "arlekin: yeah, it basically gives you a menu where you can pick one of the previous tabs, which includes a list of tabs on other devices"}, {"timstamp": "2016-08-04 11:11", "user": "zomg", "body": "so it has my pc listed there by name, and then each tab I have open there is listed by its title"}, {"timstamp": "2016-08-04 11:12", "user": "arlekin", "body": "icebox: first such day in my memory i guess :P"}, {"timstamp": "2016-08-04 11:12", "user": "arlekin", "body": "zomg: seems legit"}, {"timstamp": "2016-08-04 11:12", "user": "icebox", "body": ":P"}, {"timstamp": "2016-08-04 11:12", "user": "arlekin", "body": "zomg: either way i found this:"}, {"timstamp": "2016-08-04 11:12", "user": "arlekin", "body": "it does precisely what i wished for"}, {"timstamp": "2016-08-04 11:13", "user": "zomg", "body": "only if it wasn't so clunky to get a QR code read on the phone :p"}, {"timstamp": "2016-08-04 11:13", "user": "arlekin", "body": "now i only there was really neat qr code reader for android, preferably one integrating seamlessly in camera app"}, {"timstamp": "2016-08-04 11:13", "user": "zomg", "body": "I have a sony xperia and the sony info eye app does it kinda ok but it's still not as smooth as I'd like"}, {"timstamp": "2016-08-04 11:14", "user": "arlekin", "body": "zomg: nexus 6 nobility here"}, {"timstamp": "2016-08-04 11:14", "user": "zomg", "body": "hm actually the info eye app does integrate with the camera app, never noticed that :P"}, {"timstamp": "2016-08-04 11:16", "user": "arlekin", "body": "zomg: you are right, it works great"}, {"timstamp": "2016-08-04 11:17", "user": "arlekin", "body": "the chrome sharing tabs across devices"}, {"timstamp": "2016-08-04 11:17", "user": "zomg", "body": "yeah it's pretty good"}, {"timstamp": "2016-08-04 11:17", "user": "arlekin", "body": "i miss the option to force reload tho"}, {"timstamp": "2016-08-04 11:17", "user": "arlekin", "body": "pull down to refresh aint there *weep* *weep*"}, {"timstamp": "2016-08-04 11:18", "user": "arlekin", "body": "now all i need is good irc app and i can go lay on the couch to read blogs"}, {"timstamp": "2016-08-04 11:18", "user": "arlekin", "body": "is it me or the amount of technology needed increases with its progress instead of the other way around ?"}, {"timstamp": "2016-08-04 11:18", "user": "arlekin", "body": "oh the irony..."}, {"timstamp": "2016-08-04 11:22", "user": "zomg", "body": "heh"}, {"timstamp": "2016-08-04 11:22", "user": "zomg", "body": "I just use connectbot"}, {"timstamp": "2016-08-04 11:22", "user": "zomg", "body": "since I run my irc client on a server"}, {"timstamp": "2016-08-04 11:24", "user": "arlekin", "body": "zomg: oldschool"}, {"timstamp": "2016-08-04 11:24", "user": "ngWalrus", "body": "I do that too"}, {"timstamp": "2016-08-04 11:24", "user": "ngWalrus", "body": ":)"}, {"timstamp": "2016-08-04 11:25", "user": "arlekin", "body": "i feel so young and inexperienced now, i use irc just like one would use every other chat, i fire it up, i talk, i close it down"}], "label": "other"}
{"id": "73af7d35", "body": "", "comments": [{"timstamp": "15:56", "user": "ray02", "body": "the problem is that you don't know how to unsubscribe the user from the push notification?"}, {"timstamp": "15:56", "user": "ray02", "body": "i mean how to store this infomation?"}, {"timstamp": "15:56", "user": "Paradisee", "body": "i know how to unsubscribe:"}, {"timstamp": "15:56", "user": "Paradisee", "body": "i don't know how to delete the correct user from the db"}, {"timstamp": "15:56", "user": "Paradisee", "body": "i need an ID, or something that corresponds to the device he is unsubscribing"}, {"timstamp": "15:57", "user": "ray02", "body": "don't you have a user class with all the info related to that user?"}, {"timstamp": "15:58", "user": "Paradisee", "body": "i can retrieve the user_id from the be, it is not a problem"}, {"timstamp": "15:58", "user": "Paradisee", "body": "the db will have n records based on how many devices he subscribed"}, {"timstamp": "15:58", "user": "Paradisee", "body": "the user can unsubscribe one device, and not the others"}, {"timstamp": "15:59", "user": "ray02", "body": "yes at this point have an id for each device is a good idea i think"}, {"timstamp": "15:59", "user": "Paradisee", "body": "how do you know the id of the device"}, {"timstamp": "16:00", "user": "Paradisee", "body": "there's no way to know which one is requesting the subscription"}, {"timstamp": "16:00", "user": "Paradisee", "body": "the only way is what SargoDarya said"}, {"timstamp": "16:00", "user": "Paradisee", "body": "but i still don't get how to retrieve the subcription"}, {"timstamp": "16:05", "user": "ray02", "body": "Paradisee: sorry there are to many thing i don know very well about your project"}, {"timstamp": "16:06", "user": "Paradisee", "body": "nothing to know about my project"}, {"timstamp": "16:06", "user": "ray02", "body": "Paradisee: i meant to the argument"}, {"timstamp": "16:06", "user": "Paradisee", "body": "it's just how push notifications works"}, {"timstamp": "16:06", "user": "Paradisee", "body": "and how should be handled"}, {"timstamp": "16:06", "user": "Paradisee", "body": "which i'm not an expert"}, {"timstamp": "16:06", "user": "ray02", "body": "Paradisee: i never used to :D"}], "label": "other"}
{"id": "93d5951c", "body": "", "comments": [{"timstamp": "2018-10-09 16:37", "user": "Snugglebash", "body": "Hello all. I am trying to deploy an Angular 4 app. as part of the specs it needs to support IE 11... all tested UAT so far so good. I get to prod and suddenly it spits out SCRIPT1010: Expected identifier, 4 times. Now the Ops admin who has some higher permissioning can load it fine, the rest of us cannot load. Any ideas?"}], "label": "other"}
{"id": "93d594c8", "body": "", "comments": [{"timstamp": "2019-02-08 13:47", "user": "Pyrrhus666", "body": "read the link ?"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "yes Pyrrhus666"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "let me google it"}, {"timstamp": "2019-02-08 13:48", "user": "Mylee", "body": "the article assumes you know what walrus operator is"}, {"timstamp": "2019-02-08 13:49", "user": "Mylee", "body": "oops, my bad"}, {"timstamp": "2019-02-08 13:49", "user": "Mylee", "body": "I just do not get it"}, {"timstamp": "2019-02-08 13:50", "user": "Mylee", "body": "Walrus-operator is another name for assignment expressions. I think the official PEP does an excellent job of explaining the semantics. <--- he would be wrong"}, {"timstamp": "2019-02-08 13:51", "user": "Pyrrhus666", "body": "Mylee, the examples are pretty clear :"}, {"timstamp": "2019-02-08 13:54", "user": "Mylee", "body": "thanks Pyrrhus666, that was a good example, reading two definitions helped, i learned something today, I teach a python class, so I gotta let my students know about this"}, {"timstamp": "2019-02-08 13:55", "user": "Pyrrhus666", "body": "Mylee, it's only in the newest alpha though ;)"}, {"timstamp": "2019-02-08 13:56", "user": "Mylee", "body": "ah, this is the students first class in python, we have a fun book,"}, {"timstamp": "2019-02-08 13:56", "user": "Mylee", "body": "first computer class that is"}, {"timstamp": "2019-02-08 13:57", "user": "Mylee", "body": "I lecture for 30 minutes and have them code the next 30 minutes with me walking over their shoulders, answering questions"}, {"timstamp": "2019-02-08 13:57", "user": "Mylee", "body": "gotta go now, have a good day all"}, {"timstamp": "2019-02-08 14:05", "user": "Pyrrhus666", "body": "it is, when your imports are incorrect/incomplete"}, {"timstamp": "2019-02-08 14:09", "user": "berz3rk", "body": ":P"}, {"timstamp": "2019-02-08 14:09", "user": "berz3rk", "body": "thank you grandmaster"}, {"timstamp": "2019-02-08 14:10", "user": "berz3rk", "body": "is there no combobox in angular material?"}, {"timstamp": "2019-02-08 14:11", "user": "Pyrrhus666", "body": "dunno, if it is, it's in the list of components in the docs :P"}, {"timstamp": "2019-02-08 14:11", "user": "berz3rk", "body": "you mean the select element?"}, {"timstamp": "2019-02-08 14:12", "user": "berz3rk", "body": "i mean a textbox with a select list"}, {"timstamp": "2019-02-08 14:12", "user": "berz3rk", "body": "not a checkbox"}, {"timstamp": "2019-02-08 14:12", "user": "Pyrrhus666", "body": "again, if it's not in the list, it's not in angular material ;)"}, {"timstamp": "2019-02-08 14:14", "user": "berz3rk", "body": "T_T"}], "label": "other"}
{"id": "73af7d14", "body": "", "comments": [{"timstamp": "12:04", "user": "murii", "body": "Do you guys know a place/places where I can see sites made with angular?"}, {"timstamp": "12:04", "user": "ray02", "body": "google :D"}, {"timstamp": "12:04", "user": "murii", "body": "I'm trying to see if my design decisions are the best"}, {"timstamp": "12:04", "user": "murii", "body": ":D"}, {"timstamp": "12:05", "user": "jlebrech", "body": "they are not"}, {"timstamp": "12:05", "user": "jlebrech", "body": "best is subjective"}, {"timstamp": "12:06", "user": "ray02", "body": "jlebrech: the training website is depressing me"}, {"timstamp": "12:06", "user": "ray02", "body": "make me feell old and slow"}, {"timstamp": "12:07", "user": "jlebrech", "body": "\"you are way below average\" fuuuuuuuuu"}, {"timstamp": "12:08", "user": "jlebrech", "body": "i know, i downloaded one on steam. kept telling me i was a noob"}, {"timstamp": "12:10", "user": "ray02", "body": "ahah"}, {"timstamp": "12:11", "user": "stennowork", "body": ":/"}, {"timstamp": "12:11", "user": "ray02", "body": "fortunately i'm not trying to make a carrier as video game player"}, {"timstamp": "12:13", "user": "ray02", "body": "murii: if you are using material design they have a portfolio with stuff make with their style and and also google make a competition each year to reward the best product that use material design"}, {"timstamp": "12:14", "user": "jlebrech", "body": "if it help me win more at apex legends, i'd be happy"}, {"timstamp": "12:14", "user": "ray02", "body": "if you are not using material design you can have a look at any website that you like :D because the fact that a website is made with angular or react should not change in better or in worst how look like"}, {"timstamp": "12:18", "user": "jlebrech", "body": "i was thinking yesterday, what if you were trying to describe living in a simulation to friends and they didn't know what you were talking about and then you say \"like in the matrix\" and then you search altavista.com and the movie \"the matrix\" was never made."}, {"timstamp": "12:20", "user": "SargoDarya", "body": "jlebrech: Working on games again?"}, {"timstamp": "12:20", "user": "jlebrech", "body": "not yet, just thoughts."}, {"timstamp": "12:20", "user": "jlebrech", "body": "i have my gaming laptop back, might start again"}, {"timstamp": "12:40", "user": "SargoDarya", "body": "jlebrech: Keep me updated :)"}, {"timstamp": "12:41", "user": "jlebrech", "body": "did you finish the unreal c++ course?"}, {"timstamp": "12:42", "user": "SargoDarya", "body": "jlebrech: Nope, I'm somehow lacking time at the moment"}, {"timstamp": "12:42", "user": "jlebrech", "body": "yeaah same. think it's just motivation to do anything productive outside of work"}, {"timstamp": "12:45", "user": "murii", "body": "ray02: I'm using material, where can I see that portofolio website you mentioned?"}], "label": "feature"}
{"id": "93d59532", "body": "", "comments": [{"timstamp": "2016-09-28 16:19", "user": "Snugglebash", "body": "anyone have a good way to exclude node_modules from tsc? I tried exclude: [node_modules] in tsconfig but it doesnt work."}, {"timstamp": "2016-09-28 16:20", "user": "Elarcis", "body": "Snugglebash: provided that you wrote the quotes, it should work, strange"}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "elarcis: \"exclude\": ["}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "\"node_modules\""}, {"timstamp": "2016-09-28 16:20", "user": "Snugglebash", "body": "]"}, {"timstamp": "2016-09-28 16:20", "user": "Elarcis", "body": "Snugglebash: are you just using bare tsc?"}, {"timstamp": "2016-09-28 16:21", "user": "Elarcis", "body": "Snugglebash: looks about right"}, {"timstamp": "2016-09-28 16:21", "user": "Snugglebash", "body": "Elarcis: i think so. I dont use gulp or something like that"}], "label": "other"}
{"id": "93d59538", "body": "", "comments": [{"timstamp": "2016-09-22 20:06", "user": "yetitwo", "body": "does `ngClass` update classes dynamically? like, if the data used to evaluate the expression in ngClass changes, does the ngClass change as well?"}, {"timstamp": "2016-09-22 20:06", "user": "SaltyCatFish", "body": "yetitwo: yes"}, {"timstamp": "2016-09-22 20:07", "user": "yetitwo", "body": "hmm... okay. i've got other issues, apparently."}, {"timstamp": "2016-09-22 20:08", "user": "yetitwo", "body": "is there a way to see what the values in an angular controller are from the console?"}, {"timstamp": "2016-09-22 20:10", "user": "SaltyCatFish", "body": "yetitwo: console.log();"}, {"timstamp": "2016-09-22 20:10", "user": "SaltyCatFish", "body": "yetitwo: Angular also has a built in $log"}, {"timstamp": "2016-09-22 20:10", "user": "SaltyCatFish", "body": "yetitwo: Not very fancy"}, {"timstamp": "2016-09-22 20:11", "user": "yetitwo", "body": "where is a controller's data hidden, though?"}, {"timstamp": "2016-09-22 20:11", "user": "yetitwo", "body": "i've tried doing console.log(controller_name.data) and it doesn't work"}, {"timstamp": "2016-09-22 20:11", "user": "yetitwo", "body": "is there something that i'm missing"}, {"timstamp": "2016-09-22 20:14", "user": "yetitwo", "body": "?"}, {"timstamp": "2016-09-22 20:29", "user": "SaltyCatFish", "body": "yetitwo: In $scope"}, {"timstamp": "2016-09-22 20:29", "user": "SaltyCatFish", "body": "$scope.data"}, {"timstamp": "2016-09-22 20:29", "user": "yetitwo", "body": "ah, kk"}, {"timstamp": "2016-09-22 20:29", "user": "yetitwo", "body": "thank you"}, {"timstamp": "2016-09-22 20:29", "user": "SaltyCatFish", "body": "np"}, {"timstamp": "2016-09-22 20:29", "user": "yetitwo", "body": "also, random javascript question: why doesn't 0 < 12 < 10 evaluate to false?"}, {"timstamp": "2016-09-22 20:30", "user": "yetitwo", "body": "i've noticed that you can break it up"}, {"timstamp": "2016-09-22 20:30", "user": "yetitwo", "body": "(0 < 12) && (12 < 10)"}, {"timstamp": "2016-09-22 20:30", "user": "yetitwo", "body": "ohhhh"}, {"timstamp": "2016-09-22 20:30", "user": "yetitwo", "body": "is it because false is zeroish?"}, {"timstamp": "2016-09-22 20:31", "user": "yetitwo", "body": "that's totally why"}, {"timstamp": "2016-09-22 20:31", "user": "SaltyCatFish", "body": "it evals to true"}, {"timstamp": "2016-09-22 20:32", "user": "SaltyCatFish", "body": "sorry msread"}, {"timstamp": "2016-09-22 20:32", "user": "SaltyCatFish", "body": "misread"}, {"timstamp": "2016-09-22 20:36", "user": "yetitwo", "body": "you're right"}, {"timstamp": "2016-09-22 20:36", "user": "yetitwo", "body": "it evaluates to true :P"}, {"timstamp": "2016-09-22 20:36", "user": "yetitwo", "body": "but that was confusing until i thought about it for a bit"}], "label": "other"}
{"id": "8addb26e", "body": "", "comments": [{"timstamp": "2016-05-26 17:55", "user": "jonkri", "body": "What tool can I use for producing CSS product files? Both stylus and browserify-css seems a bit overkill... I'm using browserify for the JavaScript generation, though."}, {"timstamp": "2016-05-26 17:55", "user": "jonkri", "body": "s/product/production"}, {"timstamp": "2016-05-26 18:07", "user": "jonkri", "body": "For node modules."}, {"timstamp": "2016-05-26 18:07", "user": "jonkri", "body": "Is there a nice npm equivalent to Bower's bower_concat task for CSS? I would like to produce a CSS bundle for the browser using as little configuration as possible."}], "label": "feature"}
{"id": "93d594ac", "body": "", "comments": [{"timstamp": "2019-01-07 15:49", "user": "jlebrech", "body": "httpclient is yuck, use typhoeus"}, {"timstamp": "2019-01-07 15:50", "user": "jlebrech", "body": "i've had reverse issues where it didn't work on postman but from ruby it did, it's user-agents checks etc from the server you're connecting to"}, {"timstamp": "2019-01-07 15:51", "user": "Pyrrhus666", "body": "jlebrech, why would you want to use a ruby version of curl in an angular app ?"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": "crap"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": "wrong channel"}, {"timstamp": "2019-01-07 15:51", "user": "jlebrech", "body": ":P"}, {"timstamp": "2019-01-07 15:51", "user": "Pyrrhus666", "body": ":P"}, {"timstamp": "2019-01-07 15:51", "user": "dor", "body": "haha :P"}, {"timstamp": "2019-01-07 15:52", "user": "dor", "body": "Maybe the way i'm trying to add the file is wrong ?"}, {"timstamp": "2019-01-07 15:52", "user": "jlebrech", "body": "if the topic is js, then i say params might have to be json encoded"}, {"timstamp": "2019-01-07 15:53", "user": "SargoDarya", "body": "dor: Sharing code helps ;)"}, {"timstamp": "2019-01-07 15:53", "user": "dor", "body": "SargoDarya: here is the code ==>"}, {"timstamp": "2019-01-07 15:53", "user": "dor", "body": "(file is a File object)"}, {"timstamp": "2019-01-07 15:54", "user": "SargoDarya", "body": "dor: Headers are set correctly?"}, {"timstamp": "2019-01-07 15:54", "user": "trampi", "body": "dor: can you examine your request size in the network tab? 413 is \"payload too large\""}, {"timstamp": "2019-01-07 15:54", "user": "SargoDarya", "body": "Like, it's multipart/form-data?"}, {"timstamp": "2019-01-07 15:55", "user": "dor", "body": "SargoDarya: I didn't set any header in the request"}, {"timstamp": "2019-01-07 15:55", "user": "SargoDarya", "body": "Check the request"}, {"timstamp": "2019-01-07 15:57", "user": "dor", "body": "trampi: you're talking about this ? ==> content-length: 185"}, {"timstamp": "2019-01-07 15:57", "user": "dor", "body": "SargoDarya: here is the contentType: Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHU6Kt79obshihAmg"}, {"timstamp": "2019-01-07 15:59", "user": "trampi", "body": "your requests must be differing if it works with postman. 185 does not seem very large for a client request..."}, {"timstamp": "2019-01-07 15:59", "user": "dor", "body": "trampi: sorry i'm wrong, 185 was the size of response"}, {"timstamp": "2019-01-07 15:59", "user": "dor", "body": "I don't see any size for request in the network tab :|"}, {"timstamp": "2019-01-07 16:00", "user": "trampi", "body": "which browser? in chrome you can click on the request and look on the right under \"Request Headers\" -> \"content-length\""}, {"timstamp": "2019-01-07 16:02", "user": "dor", "body": "trampi: this is what I have in my browser"}, {"timstamp": "2019-01-07 16:02", "user": "dor", "body": "no content-length"}, {"timstamp": "2019-01-07 16:02", "user": "trampi", "body": "mhmm. except the missing content length it looks good to me ..."}, {"timstamp": "2019-01-07 16:03", "user": "trampi", "body": "any chance to get the server logs? especially why it returns 413 - payload too large?"}, {"timstamp": "2019-01-07 16:03", "user": "dor", "body": "I guess so"}, {"timstamp": "2019-01-07 16:03", "user": "dor", "body": "I'll see if I can check server logs"}, {"timstamp": "2019-01-07 16:04", "user": "dor", "body": "the strange part is that it works with postman :|"}, {"timstamp": "2019-01-07 16:04", "user": "trampi", "body": "yeah, thats really strange!"}, {"timstamp": "2019-01-07 16:05", "user": "trampi", "body": "there must be a difference in the requests if it works with postman..."}, {"timstamp": "2019-01-07 16:05", "user": "dor", "body": "I'm sending the same file btw"}, {"timstamp": "2019-01-07 16:06", "user": "dor", "body": "just maybe there is a problem with request headers or with the way i'm attaching the file with FormData"}, {"timstamp": "2019-01-07 16:07", "user": "trampi", "body": "if you are really desperate you could export the request in curl format and diff them manually."}, {"timstamp": "2019-01-07 16:08", "user": "Pyrrhus666", "body": "dor, the angular code looks fine to me. I do it like that too ( f = new FormData(); f.append(file,file); ) and then POST"}, {"timstamp": "2019-01-07 16:09", "user": "Pyrrhus666", "body": "dor, only diff : I use http.request(new HttpRequest(POST, url, f, { reportProgress: true } ); because I want progress events"}, {"timstamp": "2019-01-07 16:09", "user": "dor", "body": "trampi: ok, i'll try exporting request and comparing, thx"}, {"timstamp": "2019-01-07 16:10", "user": "dor", "body": "Pyrrhus666: great, so my code is a clean way"}, {"timstamp": "2019-01-07 16:11", "user": "dor", "body": "Pyrrhus666: do you add any headers?"}, {"timstamp": "2019-01-07 16:11", "user": "Pyrrhus666", "body": "dor, no"}, {"timstamp": "2019-01-07 16:13", "user": "Pyrrhus666", "body": "dor, just noticed : why do you not have a subscribe() call on your post ?"}, {"timstamp": "2019-01-07 16:39", "user": "dor", "body": "Pyrrhus666: which subscribe?"}, {"timstamp": "2019-01-07 16:39", "user": "dor", "body": "(sorry i was away)"}, {"timstamp": "2019-01-07 16:40", "user": "dor", "body": "I'm doing a map to get the exact param I need, thats all"}, {"timstamp": "2019-01-07 16:40", "user": "Pyrrhus666", "body": "dor, the .subscribe() call that actually makes the POST request ? or are you on an ancient ng version ?"}, {"timstamp": "2019-01-07 16:40", "user": "dor", "body": "Proditor: I'm on angular 7"}, {"timstamp": "2019-01-07 16:41", "user": "dor", "body": "Pyrrhus666: * sorry"}, {"timstamp": "2019-01-07 16:41", "user": "dor", "body": "Pyrrhus666: no subscribe, httpClient.post(... )"}, {"timstamp": "2019-01-07 16:41", "user": "Pyrrhus666", "body": "dor, but thats a cold observable ?"}, {"timstamp": "2019-01-07 16:44", "user": "dor", "body": "Pyrrhus666: yes whats wrong with that? could you correct me if i'm wrong? (i'm still beginning with angular)"}, {"timstamp": "2019-01-07 16:45", "user": "dor", "body": "I'm doing just to get updated from the WS"}, {"timstamp": "2019-01-07 16:45", "user": "Pyrrhus666", "body": "dor, a cold observable does not _do_ an actual request until you subscribe() to it. unless you use an async pipe."}, {"timstamp": "2019-01-07 16:46", "user": "dor", "body": "Pyrrhus666: what do u suggest instead ?"}, {"timstamp": "2019-01-07 16:46", "user": "Pyrrhus666", "body": "dor, from"}, {"timstamp": "2019-01-07 16:47", "user": "Pyrrhus666", "body": "dor, just subscribe() to it ?"}, {"timstamp": "2019-01-07 16:48", "user": "dor", "body": "Pyrrhus666: sorry, i didn't get the idea.. I have to replace the httpClient.post ?"}, {"timstamp": "2019-01-07 16:48", "user": "dor", "body": "or you're talking about the map"}, {"timstamp": "2019-01-07 16:49", "user": "Pyrrhus666", "body": "dor, read"}, {"timstamp": "2019-01-07 16:50", "user": "Pyrrhus666", "body": "see that the http.post() returns an observable that does nothing until later in the code they call .subscribe() on it"}, {"timstamp": "2019-01-07 16:51", "user": "dor", "body": "Pyrrhus666: yes in fact i'm calling .subscirbe in the componenet where i use it"}, {"timstamp": "2019-01-07 16:51", "user": "Pyrrhus666", "body": "dor, ok, that was all I wanted to know ;)"}, {"timstamp": "2019-01-07 16:51", "user": "dor", "body": "Pyrrhus666: thats ok! thanks for the clarifications ~"}, {"timstamp": "2019-01-07 16:52", "user": "Pyrrhus666", "body": "off in a bit. later folks !"}], "label": "other"}
{"id": "93d59555", "body": "", "comments": [{"timstamp": "2017-03-09 19:05", "user": "Elarcis", "body": "zom"}, {"timstamp": "2017-03-09 19:05", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-09 19:05", "user": "Elarcis", "body": "zomg: cringiest for me is people trying to play KSP without tutorials, failing miserably but not being the slightest humorous about it"}, {"timstamp": "2017-03-09 19:05", "user": "zomg", "body": "lol"}, {"timstamp": "2017-03-09 19:05", "user": "zomg", "body": "yeah I mean My Summer Car is a bit like that if you don't know what you're doing"}, {"timstamp": "2017-03-09 19:05", "user": "Elarcis", "body": "zomg: people that do screw around make stupid things and laugh about their incompetence, however... goldmine"}, {"timstamp": "2017-03-09 19:06", "user": "zomg", "body": "and yeah, I was basically failing and screwing up and laughing about it :P"}, {"timstamp": "2017-03-09 19:06", "user": "Elarcis", "body": "zomg: but I don't like watching someone half asleef playing a complex game without having the slightest idea how to play"}, {"timstamp": "2017-03-09 19:06", "user": "zomg", "body": "yeah"}, {"timstamp": "2017-03-09 19:06", "user": "zomg", "body": "I know Sips for example refuses to go through tutorials which is sometimes a bit frustrating to watch :D"}, {"timstamp": "2017-03-09 19:06", "user": "Elarcis", "body": "zomg: I don't mind funny people botching my favorite games though"}, {"timstamp": "2017-03-09 19:07", "user": "zomg", "body": "but yeah I quite like streaming, it's pretty fun"}, {"timstamp": "2017-03-09 19:07", "user": "zomg", "body": "I would probably do it more if I had the time :P"}, {"timstamp": "2017-03-09 19:11", "user": "caitp", "body": "it's a sport for the young"}, {"timstamp": "2017-03-09 19:12", "user": "Elarcis", "body": "zomg: I do like streaming, but I don't have a robust enough connection"}, {"timstamp": "2017-03-09 19:12", "user": "zomg", "body": "Well I'm 30 and I'm pretty sure I had people who were like 15 watching the My Summer Car streams I did (which so far was the most popular thing I streamed) :D"}, {"timstamp": "2017-03-09 19:13", "user": "zomg", "body": "Elarcis: oh?"}, {"timstamp": "2017-03-09 19:13", "user": "zomg", "body": "like dropped packets or something?"}, {"timstamp": "2017-03-09 19:13", "user": "Elarcis", "body": "zomg: back in the day, I'd do a new year's eve stream with 1200 viewers, but that was my best"}, {"timstamp": "2017-03-09 19:13", "user": "caitp", "body": "i'm not saying you can't get viewers at 30, I'm saying it's hard to not want to sleep at 9pm at 30 :p"}, {"timstamp": "2017-03-09 19:13", "user": "Elarcis", "body": "zomg: like the connection CRASHING after half an hour"}, {"timstamp": "2017-03-09 19:14", "user": "zomg", "body": "caitp: heh, yeah I guess that's true, my sleep rhythm is so messed up I don't really get tired until I've been up too long :P"}, {"timstamp": "2017-03-09 19:14", "user": "Elarcis", "body": "zomg: and the ISP make me suffer for it through the whole day"}, {"timstamp": "2017-03-09 19:14", "user": "zomg", "body": "I don't really know why but my sleep rhythm is more like 20 hours + 10 hours where with normal people it's 16+8"}, {"timstamp": "2017-03-09 19:15", "user": "zomg", "body": "Elarcis: that sounds fun"}, {"timstamp": "2017-03-09 19:15", "user": "zomg", "body": "but 1600 is pretty fucking amazing"}, {"timstamp": "2017-03-09 19:16", "user": "zomg", "body": "err 1200"}, {"timstamp": "2017-03-09 19:16", "user": "zomg", "body": "my best was 15!"}, {"timstamp": "2017-03-09 19:17", "user": "zomg", "body": "something I need to try is seeing if I can lock specific cores for OBS"}, {"timstamp": "2017-03-09 19:17", "user": "caitp", "body": "my average is like 5, but to be fair I only stream a pretty niche game"}, {"timstamp": "2017-03-09 19:18", "user": "zomg", "body": "like, if I dedicated two cores / four threads purely for OBS, I'm wondering if that would improve performance"}, {"timstamp": "2017-03-09 19:18", "user": "zomg", "body": "caitp: yeah that sounds about right for me as well =)"}, {"timstamp": "2017-03-09 19:19", "user": "Elarcis", "body": "damn"}, {"timstamp": "2017-03-09 19:19", "user": "caitp", "body": "not exactly in a position to quit my job and live off jeff bezos money for the rest of my life"}, {"timstamp": "2017-03-09 19:19", "user": "zomg", "body": "haha"}, {"timstamp": "2017-03-09 19:19", "user": "Elarcis", "body": "hahaha"}, {"timstamp": "2017-03-09 19:19", "user": "Elarcis", "body": "I call it the hobo 2.0"}, {"timstamp": "2017-03-09 19:19", "user": "zomg", "body": "yeah if I win in the startup lottery I'll just stream games I guess"}, {"timstamp": "2017-03-09 19:19", "user": "zomg", "body": ":P"}, {"timstamp": "2017-03-09 19:19", "user": "zomg", "body": "at least until I get bored of it"}, {"timstamp": "2017-03-09 19:19", "user": "Elarcis", "body": "nearly was in this situation, then realized it would be the stupidest mistake in my life and got my current job"}, {"timstamp": "2017-03-09 19:20", "user": "Elarcis", "body": "still have like 140k subs on YouTube, as a memento"}, {"timstamp": "2017-03-09 19:20", "user": "Elarcis", "body": "\":o\""}, {"timstamp": "2017-03-09 19:20", "user": "Elarcis", "body": "anyway, laterz!"}, {"timstamp": "2017-03-09 19:20", "user": "zomg", "body": "what did you do"}, {"timstamp": "2017-03-09 19:20", "user": "zomg", "body": ":P"}, {"timstamp": "2017-03-09 19:20", "user": "zomg", "body": "you could be PewElacrisPie"}, {"timstamp": "2017-03-09 19:20", "user": "Elarcis", "body": "zomg: that blocky game that teens like a lot"}, {"timstamp": "2017-03-09 19:21", "user": "Elarcis", "body": "zomg: and simcity"}, {"timstamp": "2017-03-09 19:21", "user": "zomg", "body": "nice"}, {"timstamp": "2017-03-09 19:21", "user": "Elarcis", "body": "zomg: god did I love Simcity 4"}, {"timstamp": "2017-03-09 19:21", "user": "zomg", "body": "I also really started watching games with minecraft :P"}, {"timstamp": "2017-03-09 19:21", "user": "zomg", "body": "didn't really follow much anything before I started watching yogscast"}, {"timstamp": "2017-03-09 19:22", "user": "zomg", "body": "really should try and revisit the inicast idea"}, {"timstamp": "2017-03-09 19:22", "user": "zomg", "body": "(ini is the tag of one gaming group I belong to)"}], "label": "other"}
{"id": "93d5953c", "body": "", "comments": [{"timstamp": "2018-01-31 13:45", "user": "Tazmain", "body": "Hi all, would it be better to have a button using ng-show or ng-if , for when I want to add a button right after the user clicks something?"}, {"timstamp": "2018-01-31 14:37", "user": "Elarcis", "body": "Tazmain: ngShow is lighter than ngIf (just a CSS class toggle), ngIf spares performances if your hidden element contains lots of logic (it removes the element from the dom and doesnt run anything in it)"}, {"timstamp": "2018-01-31 14:38", "user": "Elarcis", "body": "Tazmain: in short: if it has lots of logic, use ngIf, if its a dumb element whose presence doesnt mean too much, ngShow."}, {"timstamp": "2018-01-31 14:39", "user": "Pyrrhus6661", "body": "Elarcis, I was specifically targetting SuperTyps statement about just a button. your generalization is correct."}, {"timstamp": "2018-01-31 14:39", "user": "Tazmain", "body": "Elarcis, so if its a button with one function ?"}, {"timstamp": "2018-01-31 14:39", "user": "Elarcis", "body": "Tazmain: the function is on a ngClick I guess, so it doesnt even matter"}, {"timstamp": "2018-01-31 14:39", "user": "Elarcis", "body": "Tazmain: ngShow"}, {"timstamp": "2018-01-31 14:40", "user": "Elarcis", "body": "Pyrrhus6661: both about your next gen game dev question"}, {"timstamp": "2018-01-31 14:40", "user": "Elarcis", "body": ":P"}, {"timstamp": "2018-01-31 14:40", "user": "Pyrrhus6661", "body": "Elarcis, ah, ok :)"}, {"timstamp": "2018-01-31 14:44", "user": "Pyrrhus6661", "body": "just make sure whatever happens client side is checked server side. then you can stop caring about client side"}, {"timstamp": "2018-01-31 14:44", "user": "Elarcis", "body": "Pyrrhus6661: or dont have any server side, like me :P"}, {"timstamp": "2018-01-31 14:44", "user": "Pyrrhus6661", "body": "Elarcis, even better :P"}, {"timstamp": "2018-01-31 14:44", "user": "Elarcis", "body": "Pyrrhus6661: no data is reliable, so dont care about data :P"}, {"timstamp": "2018-01-31 14:45", "user": "Pyrrhus6661", "body": "sounds about right for s/data/people/g too ;)"}, {"timstamp": "2018-01-31 14:45", "user": "Elarcis", "body": "I dont know how to do it for Angular, but Im pretty sure its moderately hard."}], "label": "other"}
{"id": "0ec1e464", "body": "", "comments": [{"timstamp": "16:26", "user": "lf94", "body": "So they should be drop-in replacements for the original files"}, {"timstamp": "16:26", "user": "lf94", "body": "Usually a bootstrap theme is just a collection of css files"}], "label": "other"}
{"id": "93d59475", "body": "", "comments": [{"timstamp": "2017-02-10 10:20", "user": "Pyrrhus666", "body": "I have a small war inside vscode. the formatter and linter cannot agree how my code should look :("}, {"timstamp": "2017-02-10 10:24", "user": "icebox", "body": "Pyrrhus666: snippet?"}, {"timstamp": "2017-02-10 10:26", "user": "Pyrrhus666", "body": "an example is : code format does <unconvertable> f() {}, linter wants <unconvertable> f () {}. the linter is correct, but I cant seem to convince the formatter of this :)"}, {"timstamp": "2017-02-10 10:27", "user": "Miaow", "body": "icebox: ahah ^^"}, {"timstamp": "2017-02-10 10:27", "user": "Pyrrhus666", "body": "ah. seems I should install a plugin for that. quelle surprise."}, {"timstamp": "2017-02-10 10:29", "user": "icebox", "body": "Pyrrhus666: I see... usually I follow strictly the original eslint-config and I don't use any formatter"}, {"timstamp": "2017-02-10 10:30", "user": "graingert", "body": "Pyrrhus666: what's your code formater"}, {"timstamp": "2017-02-10 10:30", "user": "Pyrrhus666", "body": "icebox, I dont use the formatter often, but as Im a bit sloppy it would be nice if they both do the same thing ;)"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "graingert, vscode internal, now experimenting with the beautify plugin"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "I want a formatter that I can point at my .eslintrc :("}, {"timstamp": "2017-02-10 10:31", "user": "graingert", "body": "Pyrrhus666: just use eslint --fix"}, {"timstamp": "2017-02-10 10:31", "user": "icebox", "body": "Pyrrhus666: yep... but I abandoned that unicorn a few years ago :)"}, {"timstamp": "2017-02-10 10:34", "user": "icebox", "body": "Pyrrhus666: I would give a try to graingert's suggestion"}, {"timstamp": "2017-02-10 10:35", "user": "icebox", "body": "Pyrrhus666: but, as I said, it doesn't exist that kind of unicorn... for instance, what about blank lines? of course \"--fix\" cannot add them following your tastes"}], "label": "other"}
{"id": "93d59487", "body": "", "comments": [{"timstamp": "2016-08-17 19:20", "user": "myghty", "body": "oO always those trolling discussions..."}, {"timstamp": "2016-08-17 19:21", "user": "sadme", "body": "care to weigh in, myghty? meta-commentary isn't very interesting :)"}, {"timstamp": "2016-08-17 19:21", "user": "myghty", "body": "I am just wondering like more and more people are just coming in (it feels like that at least)"}, {"timstamp": "2016-08-17 19:21", "user": "myghty", "body": "to just randomly complayn"}, {"timstamp": "2016-08-17 19:21", "user": "myghty", "body": "*complain"}, {"timstamp": "2016-08-17 19:21", "user": "myghty", "body": "and then leave again or something..."}, {"timstamp": "2016-08-17 19:22", "user": "myghty", "body": "last time someone came just posted \"angular sucks so much! it is so fucking wrong!\" - and left..."}, {"timstamp": "2016-08-17 19:24", "user": "Huuugo", "body": "myghty: welcome to the internets xD"}, {"timstamp": "2016-08-17 19:24", "user": "myghty", "body": "Huuugo: awful..."}, {"timstamp": "2016-08-17 19:24", "user": "Huuugo", "body": "go back to your boring RL then :-P"}, {"timstamp": "2016-08-17 19:24", "user": "myghty", "body": "just imagine a manager walking around, randomly opening doors at your company, shouting \"YOU SUCK!\""}, {"timstamp": "2016-08-17 19:25", "user": "myghty", "body": "RL? what is that... :P"}, {"timstamp": "2016-08-17 19:26", "user": "Huuugo", "body": "a new game by Google. Gameplay gets boring pretty fast, but it has RR (similar to VR) built-in."}, {"timstamp": "2016-08-17 19:26", "user": "Huuugo", "body": "the inputs are kinda goofy, tho"}, {"timstamp": "2016-08-17 19:26", "user": "myghty", "body": "oh okay..."}, {"timstamp": "2016-08-17 19:26", "user": "myghty", "body": "did not know that"}, {"timstamp": "2016-08-17 19:27", "user": "Huuugo", "body": "feels a lot like kinect merged with oculus rift"}, {"timstamp": "2016-08-17 19:27", "user": "myghty", "body": "hm I see... well"}, {"timstamp": "2016-08-17 19:27", "user": "myghty", "body": "to much movement"}, {"timstamp": "2016-08-17 19:28", "user": "Huuugo", "body": "in easy mode you can basically idle the whole time"}, {"timstamp": "2016-08-17 19:28", "user": "myghty", "body": "that sounds better"}, {"timstamp": "2016-08-17 19:28", "user": "myghty", "body": "goal is to evade sunlight?"}, {"timstamp": "2016-08-17 19:28", "user": "Huuugo", "body": "ah, i see you've played it already"}, {"timstamp": "2016-08-17 19:33", "user": "myghty", "body": "nah"}, {"timstamp": "2016-08-17 19:33", "user": "myghty", "body": "read about it on the internet Huuugo"}], "label": "other"}
{"id": "93d5952d", "body": "", "comments": [{"timstamp": "2017-02-10 10:20", "user": "Pyrrhus666", "body": "I have a small war inside vscode. the formatter and linter cannot agree how my code should look :("}, {"timstamp": "2017-02-10 10:24", "user": "icebox", "body": "Pyrrhus666: snippet?"}, {"timstamp": "2017-02-10 10:26", "user": "Pyrrhus666", "body": "an example is : code format does <unconvertable> f() {}, linter wants <unconvertable> f () {}. the linter is correct, but I cant seem to convince the formatter of this :)"}, {"timstamp": "2017-02-10 10:27", "user": "Miaow", "body": "icebox: ahah ^^"}, {"timstamp": "2017-02-10 10:27", "user": "Pyrrhus666", "body": "ah. seems I should install a plugin for that. quelle surprise."}, {"timstamp": "2017-02-10 10:29", "user": "icebox", "body": "Pyrrhus666: I see... usually I follow strictly the original eslint-config and I don't use any formatter"}, {"timstamp": "2017-02-10 10:30", "user": "graingert", "body": "Pyrrhus666: what's your code formater"}, {"timstamp": "2017-02-10 10:30", "user": "Pyrrhus666", "body": "icebox, I dont use the formatter often, but as Im a bit sloppy it would be nice if they both do the same thing ;)"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "graingert, vscode internal, now experimenting with the beautify plugin"}, {"timstamp": "2017-02-10 10:31", "user": "Pyrrhus666", "body": "I want a formatter that I can point at my .eslintrc :("}, {"timstamp": "2017-02-10 10:31", "user": "graingert", "body": "Pyrrhus666: just use eslint --fix"}, {"timstamp": "2017-02-10 10:31", "user": "icebox", "body": "Pyrrhus666: yep... but I abandoned that unicorn a few years ago :)"}, {"timstamp": "2017-02-10 10:34", "user": "icebox", "body": "Pyrrhus666: I would give a try to graingert's suggestion"}, {"timstamp": "2017-02-10 10:35", "user": "icebox", "body": "Pyrrhus666: but, as I said, it doesn't exist that kind of unicorn... for instance, what about blank lines? of course \"--fix\" cannot add them following your tastes"}], "label": "other"}
{"id": "0ec1e30a", "body": "", "comments": [{"timstamp": "12:36", "user": "anddam", "body": "how can I set the width of a material select dropdown menu?"}, {"timstamp": "12:37", "user": "stennowork", "body": ""}, {"timstamp": "12:39", "user": "anddam", "body": "ohh"}, {"timstamp": "12:40", "user": "anddam", "body": "I just realized I was looking at an autocomplete panel, it has @Input() panelWidth"}, {"timstamp": "12:40", "user": "anddam", "body": "\"Specify the width of the autocomplete panel. Can be any CSS sizing value, otherwise it will match the width of its host.\""}, {"timstamp": "12:41", "user": "anddam", "body": "the mat-select answer is a bit ugly though, there should be a way to override look via CSS, not by hardcoding style in the template"}, {"timstamp": "12:41", "user": "anddam", "body": "or by passing it as component parameters"}], "label": "other"}
{"id": "8addb26c", "body": "", "comments": [{"timstamp": "2018-02-25 01:17", "user": "Marble68", "body": "s2013: Do the filter as a function, I think."}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "Q: Is there something like ng-inspector for Angular?"}, {"timstamp": "2018-02-25 01:21", "user": "Marble68", "body": "something to examine scope in debug?"}, {"timstamp": "2018-02-25 01:22", "user": "Marble68", "body": "Somethign anyone might recommend"}], "label": "feature"}
{"id": "93d594c9", "body": "", "comments": [{"timstamp": "2017-02-10 08:58", "user": "Miaow", "body": "hello ! let's say i have a user who can create some tasks. i have created 2 services (UserService & TaskService) which allow me to do some stuff. So my question : what is the best practice between having a method getTasks() on UserService, and having a method getTasks(user) in the TaskService ?? tyvm"}, {"timstamp": "2017-02-10 09:02", "user": "icebox", "body": "Miaow: what is your concern about that?"}, {"timstamp": "2017-02-10 09:04", "user": "Miaow", "body": "icebox: ?"}, {"timstamp": "2017-02-10 09:04", "user": "icebox", "body": "Miaow: what are you asking for?"}, {"timstamp": "2017-02-10 09:05", "user": "icebox", "body": "Miaow: I don't see any issue, apart the naming"}, {"timstamp": "2017-02-10 09:05", "user": "Miaow", "body": "my concern is the best pratice to do what i want (through this simple use case) : get user tasks"}, {"timstamp": "2017-02-10 09:05", "user": "Miaow", "body": "it's not only an Angular question"}, {"timstamp": "2017-02-10 09:06", "user": "icebox", "body": "Miaow: and what is your concern? you created a method in the controller calling a method of a service"}, {"timstamp": "2017-02-10 09:06", "user": "icebox", "body": "Miaow: or you are calling a method of a service from another service"}, {"timstamp": "2017-02-10 09:07", "user": "icebox", "body": "Miaow: and?"}, {"timstamp": "2017-02-10 09:22", "user": "Miaow", "body": "icebox: that's my question, where shall i have to place the getTasks() method ? in the UserService or in the TaskService knowing that i have to have the userID data ?"}, {"timstamp": "2017-02-10 09:23", "user": "icebox", "body": "Miaow: TaskService"}, {"timstamp": "2017-02-10 09:23", "user": "icebox", "body": "Miaow: userID is a parameter"}, {"timstamp": "2017-02-10 09:24", "user": "icebox", "body": "Miaow: but there is not best practice... it depends on how you designed your data model"}, {"timstamp": "2017-02-10 09:25", "user": "icebox", "body": "Miaow: from a point of view creating pure functions (no side effects), it would be better using an explicit parameter"}, {"timstamp": "2017-02-10 09:26", "user": "Miaow", "body": "icebox: i dont' have anything yet, i wondered what i should do"}, {"timstamp": "2017-02-10 09:27", "user": "Miaow", "body": "the only thing i know is that my User object has an array of Tasks"}, {"timstamp": "2017-02-10 09:27", "user": "icebox", "body": "Miaow: ok... but really it is not an angular question, neither js one :)"}, {"timstamp": "2017-02-10 09:27", "user": "icebox", "body": "Miaow: it is a sort of how to design my api\" :)"}, {"timstamp": "2017-02-10 09:27", "user": "Miaow", "body": "not, that's what i told you, that's not only an angular question"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "Miaow: I suggest to follow a TDD approach"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "Miaow: surely you will have a few iterations"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "refactory the code a few times"}, {"timstamp": "2017-02-10 09:28", "user": "icebox", "body": "*refactoring"}, {"timstamp": "2017-02-10 09:54", "user": "Miaow", "body": "icebox: ok ty"}, {"timstamp": "2017-02-10 09:55", "user": "icebox", "body": "Miaow: you are welcome"}, {"timstamp": "2017-02-10 09:57", "user": "Miaow", "body": "i think i'll retrieve Tasks from the TaskService by using the user id, but maybe i shouldn't attach a tasks array to my user model ?"}, {"timstamp": "2017-02-10 09:58", "user": "Miaow", "body": "keep the datas separated"}, {"timstamp": "2017-02-10 09:59", "user": "icebox", "body": "Miaow: feasible... when you think on it you should ask yourself \"what if data is updated and how the changes are propagated?\""}, {"timstamp": "2017-02-10 10:00", "user": "icebox", "body": "Miaow: then there are different kind of objects... business objects, dao objects, display objects and so on :)"}, {"timstamp": "2017-02-10 10:00", "user": "icebox", "body": "Miaow: generally speaking, you need to outline an application architecture :)"}, {"timstamp": "2017-02-10 10:01", "user": "icebox", "body": "Miaow: but here we enter in consultant domain :) how many hours your team have and what is your budget? :)"}, {"timstamp": "2017-02-10 10:01", "user": "Miaow", "body": "lol"}, {"timstamp": "2017-02-10 10:02", "user": "Miaow", "body": "my team is me and my budget is none"}, {"timstamp": "2017-02-10 10:03", "user": "icebox", "body": "Miaow: ah sorry... we interface only 500 Fortune companies :)"}, {"timstamp": "2017-02-10 10:03", "user": "icebox", "body": "Elarcis:"}, {"timstamp": "2017-02-10 10:04", "user": "icebox", "body": "Elarcis: strong dynamic type checking"}, {"timstamp": "2017-02-10 10:06", "user": "icebox", "body": "zomg: agreed... anyway it is a nice try :)"}, {"timstamp": "2017-02-10 10:13", "user": "icebox", "body": "Get Angular 1 Features in Angular 2 -"}], "label": "other"}
{"id": "73af7d06", "body": "", "comments": [{"timstamp": "13:21", "user": "berz3rk", "body": ""}, {"timstamp": "13:21", "user": "berz3rk", "body": "nothing works"}, {"timstamp": "13:21", "user": "berz3rk", "body": "is angular broken by design or why do APIs change all the time and nothing works and is terribly slow"}], "label": "other"}
{"id": "93d594c1", "body": "", "comments": [{"timstamp": "2016-09-29 11:21", "user": "Pyrrhus666", "body": "Im experimenting with ui-router (ng1). is it ok to have child-states _without_ having nested views ? traditionally, the chilld-state takes over the complete view, but from a logical standpoint it _is_ a child-state."}, {"timstamp": "2016-09-29 11:32", "user": "Pyrrhus666", "body": "since electron is cross platform ("}, {"timstamp": "2016-09-29 11:34", "user": "rand0m", "body": "mornin Elarcis Pyrrhus666"}, {"timstamp": "2016-09-29 11:34", "user": "Pyrrhus666", "body": "morning rand0m"}, {"timstamp": "2016-09-29 11:35", "user": "rand0m", "body": "hmmm, is electron a wrapper with builtin browser ?"}, {"timstamp": "2016-09-29 11:35", "user": "rand0m", "body": "like ionic for desktops"}, {"timstamp": "2016-09-29 11:35", "user": "ngWalrus", "body": "it is"}, {"timstamp": "2016-09-29 11:35", "user": "Pyrrhus666", "body": "it packages chrome and node, so yes"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": "VS Code, Slack, Atom are made with it"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": "and others :)"}, {"timstamp": "2016-09-29 11:36", "user": "senayar", "body": ""}, {"timstamp": "2016-09-29 11:36", "user": "Pyrrhus666", "body": "and since vscode is built on it, it must be good :)"}, {"timstamp": "2016-09-29 11:37", "user": "Elarcis", "body": "Pyrrhus666: o/"}, {"timstamp": "2016-09-29 11:37", "user": "rand0m", "body": "nice"}, {"timstamp": "2016-09-29 11:37", "user": "Pyrrhus666", "body": "Elarcis: you seem to have lost an arm ?"}, {"timstamp": "2016-09-29 11:37", "user": "Pyrrhus666", "body": "\\ have another"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "oh btw, I have a question which relates to gulp if anyone can answer"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "Im trying to copy some fonts over to my dist/fonts folder"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "Pyrrhus666: but you could say that Atom is built on Electron, so it can't be good"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "#trololololo"}, {"timstamp": "2016-09-29 11:38", "user": "rand0m", "body": "can I create a folder and move the fonts into the folder"}, {"timstamp": "2016-09-29 11:38", "user": "Pyrrhus666", "body": "Elarcis: I could, but I didnt. atom being the pos it is, is not electrons fault :P"}, {"timstamp": "2016-09-29 11:38", "user": "Elarcis", "body": "rand0m: just directly pipe your src to your dest"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "i thought so too"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "but the problem is with the folder naming structure"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "im trying to copy fonts from fontawesome"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "and they labelled the fonts directory simply as fonts"}, {"timstamp": "2016-09-29 11:39", "user": "rand0m", "body": "where as in bootstrap, its bootstrap/assets/fonts/bootstrap"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "so when we copy fonts folder, then its neatly organised :)"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "when I copy both folders I get something like this"}, {"timstamp": "2016-09-29 11:40", "user": "rand0m", "body": "dist/fonts/bootstrap/bootstrap.ttf, dist/fonts/font-awesome.ttf,"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "which TECHNICALLY WORKS, but I would like to organize it"}, {"timstamp": "2016-09-29 11:41", "user": "senayar", "body": "are you going to edit CSS and JS file to change path structure ? rand0m"}, {"timstamp": "2016-09-29 11:41", "user": "senayar", "body": "I think not"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "umm, im using sass"}, {"timstamp": "2016-09-29 11:41", "user": "rand0m", "body": "and they take font location as variables"}, {"timstamp": "2016-09-29 11:42", "user": "rand0m", "body": "so I can change the variable to whatever I want and it gets compiled"}, {"timstamp": "2016-09-29 11:42", "user": "rand0m", "body": ":)"}], "label": "other"}
{"id": "93d59518", "body": "", "comments": [{"timstamp": "2016-06-04 11:53", "user": "vegycslol", "body": "can someone help me, im stuck. why am i getting \"angular.js:13550Error: [ngModel:datefmt]"}, {"timstamp": "2016-06-04 11:53", "user": "vegycslol", "body": "type='time' ofc"}, {"timstamp": "2016-06-04 11:57", "user": "zomg", "body": "vegycslol: click on the url in the error message :)"}, {"timstamp": "2016-06-04 11:59", "user": "vegycslol", "body": "yes i did, it says that '20:00:00' isnt a date"}, {"timstamp": "2016-06-04 11:59", "user": "zomg", "body": "it also explains why it says that below it"}, {"timstamp": "2016-06-04 11:59", "user": "zomg", "body": "(the value must be a Date object)"}, {"timstamp": "2016-06-04 11:59", "user": "vegycslol", "body": "All date-related inputs like <input type=\"date\"> require the model to be a Date object."}, {"timstamp": "2016-06-04 11:59", "user": "vegycslol", "body": "but i have type='time'?"}, {"timstamp": "2016-06-04 12:00", "user": "zomg", "body": "time is consdered date-related I guess :) but yeah maybe it would be more clear if it said date or time related"}, {"timstamp": "2016-06-04 12:00", "user": "vegycslol", "body": ""}, {"timstamp": "2016-06-04 12:00", "user": "vegycslol", "body": "here they pass the same format as i do right?"}, {"timstamp": "2016-06-04 12:02", "user": "zomg", "body": "that's pretty confusing because they use the same scope variables for two different things"}, {"timstamp": "2016-06-04 12:03", "user": "zomg", "body": "most likely the reason that works is that the date inputs in this case don't try to read the value when it's not a Date object"}, {"timstamp": "2016-06-04 12:06", "user": "vegycslol", "body": "but if i reduce this fiddle to just the same as i have it works"}, {"timstamp": "2016-06-04 12:08", "user": "vegycslol", "body": "zomg: tnx for help, i see that fiddle is using a different angular version, if i change it to 1.5.5 it doesnt work on fiddle :)"}, {"timstamp": "2016-06-04 12:08", "user": "zomg", "body": "it's possible angular 1.0.7 didn't use dates to represnt time"}, {"timstamp": "2016-06-04 12:08", "user": "zomg", "body": "heh yeah :)"}], "label": "other"}
{"id": "8addb272", "body": "", "comments": [{"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "I want to have the link of ng-view hidden when I click on it and the new page renders. I don't need the usual upper nav where the links or routes are present"}, {"timstamp": "2016-10-28 14:19", "user": "sl33k_", "body": "Transition to a new page"}], "label": "feature"}
{"id": "93d5952e", "body": "", "comments": [{"timstamp": "2017-06-16 08:17", "user": "larsk", "body": "anyone here to help with my little .directive problem? ;)"}, {"timstamp": "2017-06-16 08:21", "user": "larsk", "body": "let my go a little bit in detail: i am using drumjs"}, {"timstamp": "2017-06-16 08:22", "user": "larsk", "body": "now i want to move this function to a directive, but the whole concept of the directive is a little bit unclear"}, {"timstamp": "2017-06-16 08:23", "user": "icebox", "body": "larsk: same question of yesterday :)"}, {"timstamp": "2017-06-16 08:23", "user": "larsk", "body": "yes"}, {"timstamp": "2017-06-16 08:24", "user": "larsk", "body": "i followed the given link, but SO is a little bit overwhelming"}, {"timstamp": "2017-06-16 08:24", "user": "icebox", "body": "larsk: firstly read the docs"}, {"timstamp": "2017-06-16 08:25", "user": "icebox", "body": "larsk: that SO link is a bit overhelming because to integrate a jquery plugin and angular, you need to know what you are doing.. it is not a basic topic :)"}], "label": "other"}
{"id": "93d5949e", "body": "", "comments": [{"timstamp": "2019-01-08 17:23", "user": "Elarcis", "body": "I still haven't wrapped my head around how the significand is stored in bit format"}, {"timstamp": "2019-01-08 17:24", "user": "Elarcis", "body": "I get that 000000000000...0001 is like 2^-52, but _why_?"}, {"timstamp": "2019-01-08 17:28", "user": "stennowork", "body": "Elarcis, significant is always an integer, and 64bit is defined as having 53 bits significant and the rest exponent"}, {"timstamp": "2019-01-08 17:36", "user": "stennowork", "body": "Elarcis, maybe this helps?"}, {"timstamp": "2019-01-08 17:37", "user": "stennowork", "body": "> .svg.png"}, {"timstamp": "2019-01-08 17:37", "user": "stennowork", "body": "nice"}, {"timstamp": "2019-01-08 17:39", "user": "Elarcis", "body": "stennowork: no it doesn't, I had already googled my question :P"}, {"timstamp": "2019-01-08 17:39", "user": "stennowork", "body": "you always want to use the \"lowest\" value of the currency as your base value"}, {"timstamp": "2019-01-08 17:40", "user": "ray02", "body": "ah ok"}, {"timstamp": "2019-01-08 17:40", "user": "stennowork", "body": "Elarcis, the wiki article has a formula after this diagram"}, {"timstamp": "2019-01-08 17:40", "user": "ray02", "body": "good to know"}, {"timstamp": "2019-01-08 17:40", "user": "stennowork", "body": ""}, {"timstamp": "2019-01-08 17:40", "user": "ray02", "body": "thanks stennowork"}, {"timstamp": "2019-01-08 17:40", "user": "stennowork", "body": "np, but yeah, it's really good to know :)"}, {"timstamp": "2019-01-08 17:41", "user": "ray02", "body": "is something that till now never need it but hey in two seconds you will looklike the smarth guy of the room :p"}, {"timstamp": "2019-01-08 17:42", "user": "stennowork", "body": "you will need it as soon as you deal with currencies :)"}, {"timstamp": "2019-01-08 17:42", "user": "Elarcis", "body": "stennowork: yes but then I don't get how 1.000...001 somehow turns into 1+2^-52"}, {"timstamp": "2019-01-08 17:44", "user": "stennowork", "body": "Elarcis, it should be 2^(-1022)"}, {"timstamp": "2019-01-08 17:45", "user": "Elarcis", "body": "stennowork: I'm talking about the significand"}, {"timstamp": "2019-01-08 17:45", "user": "stennowork", "body": "the significant is 1"}, {"timstamp": "2019-01-08 17:45", "user": "stennowork", "body": "1 * 2^(-1022) in the case of 000001"}, {"timstamp": "2019-01-08 17:45", "user": "Elarcis", "body": "stennowork: no, in 1.000...001 the significand obviously isn't 1"}, {"timstamp": "2019-01-08 17:46", "user": "Elarcis", "body": "stennowork: take 0 01111111111 0000000000000000000000000000000000000000000000000001"}, {"timstamp": "2019-01-08 17:47", "user": "Elarcis", "body": "it's a positive, exponent 2^0 (thus 1), significand 1+2^-52, and I'm not sure to get why the -52 part"}, {"timstamp": "2019-01-08 17:47", "user": "stennowork", "body": "aah"}, {"timstamp": "2019-01-08 17:47", "user": "stennowork", "body": "so if you have 0.125 in decimal"}, {"timstamp": "2019-01-08 17:48", "user": "stennowork", "body": "in binary, thats 0.001"}, {"timstamp": "2019-01-08 17:49", "user": "stennowork", "body": "0 * 1/(2^1) + 0 * 1/(2^2) + 1 * 1/(2^3)"}, {"timstamp": "2019-01-08 17:49", "user": "stennowork", "body": "so significant 000000....1 is"}, {"timstamp": "2019-01-08 17:50", "user": "stennowork", "body": "0 * 1/(2^1) + 0 * 1/(2^2) + 0 * 1/(2^3) + ... + 1 * 1/(2^52)"}, {"timstamp": "2019-01-08 17:51", "user": "stennowork", "body": "as significant here is always 1 + (the binary)"}, {"timstamp": "2019-01-08 17:51", "user": "stennowork", "body": "we end up with 1 + 2^-52"}, {"timstamp": "2019-01-08 17:51", "user": "Elarcis", "body": "I... think that makes sense somehow"}, {"timstamp": "2019-01-08 17:52", "user": "stennowork", "body": "the confusing thing is that you have to do the binary -> decimal thing backwards"}, {"timstamp": "2019-01-08 17:52", "user": "stennowork", "body": "1101 is 13, but 1101.1101 is NOT 13.13"}, {"timstamp": "2019-01-08 17:53", "user": "stennowork", "body": "its 13 + 1/2 + 1/4 + 1/16"}, {"timstamp": "2019-01-08 17:54", "user": "Elarcis", "body": "pretty much like 10.125 is 1x10^1 + 1/10^1 + 2/10^2 + 5/10^3"}, {"timstamp": "2019-01-08 17:55", "user": "stennowork", "body": "1x10^1 + 1/10^-1 + 2/10^-2 + 5/10^-3"}, {"timstamp": "2019-01-08 17:55", "user": "stennowork", "body": "err"}, {"timstamp": "2019-01-08 17:55", "user": "stennowork", "body": "yes, sorry"}, {"timstamp": "2019-01-08 17:55", "user": "Elarcis", "body": "stennowork: np, I did the same before correcting myself"}, {"timstamp": "2019-01-08 17:55", "user": "Elarcis", "body": ":P"}, {"timstamp": "2019-01-08 17:57", "user": "stennowork", "body": "i go home now, happy hacking"}, {"timstamp": "2019-01-08 17:58", "user": "ray02", "body": "have a nice evening stennowork"}, {"timstamp": "2019-01-08 17:58", "user": "stennowork", "body": "au revoir"}, {"timstamp": "2019-01-08 18:01", "user": "Elarcis", "body": "stennowork: bye"}, {"timstamp": "2019-01-08 18:09", "user": "Elarcis", "body": "so if I got it right, 13.13 would be something like 1101.0010001 100010001... and so on?"}, {"timstamp": "2019-01-08 18:10", "user": "Elarcis", "body": "sorry, 1101.00100010100010001"}, {"timstamp": "2019-01-08 18:10", "user": "Elarcis", "body": "ll this was educative"}, {"timstamp": "2019-01-08 18:13", "user": "ray02", "body": "you can say that also today you have learned something"}, {"timstamp": "2019-01-08 18:13", "user": "ray02", "body": ":)"}, {"timstamp": "2019-01-08 18:20", "user": "Elarcis", "body": "ray02: indeed"}, {"timstamp": "2019-01-08 18:38", "user": "ray02", "body": "Elarcis do you work till late usally?"}, {"timstamp": "2019-01-08 18:38", "user": "ray02", "body": "usually"}], "label": "other"}
{"id": "93d59546", "body": "", "comments": [{"timstamp": "2017-02-17 11:27", "user": "Ayz", "body": "guys using a table like this in plunker , on clicking the delete button if there is only one row then I dont want to delete it, how can i achieve it.. link -->>>"}, {"timstamp": "2017-02-17 11:28", "user": "arlekin", "body": "Ayz: u sure you posted good plnkr ? it doesn't seem to be working (or have callback for deleting things for that matter)"}, {"timstamp": "2017-02-17 11:29", "user": "Ayz", "body": "arlekin i ll check it once.."}, {"timstamp": "2017-02-17 11:29", "user": "Ayz", "body": "arlekin"}, {"timstamp": "2017-02-17 11:30", "user": "Pyrrhus666", "body": "arlekin, seems plunkr is having issues again, it works for me"}, {"timstamp": "2017-02-17 11:30", "user": "arlekin", "body": "Ayz: now its good, still, you just need put some conditional checking number of rows, and skipping deletion if there is only one row"}, {"timstamp": "2017-02-17 11:30", "user": "Pyrrhus666", "body": "Ayz,"}, {"timstamp": "2017-02-17 11:31", "user": "Pyrrhus666", "body": "Ayz, component.ts line 66"}, {"timstamp": "2017-02-17 11:31", "user": "Pyrrhus666", "body": "Ayz, oops. doesnt works as it should..."}, {"timstamp": "2017-02-17 11:32", "user": "Ayz", "body": "Pyrrhus666 ya not working"}, {"timstamp": "2017-02-17 11:33", "user": "Ayz", "body": "Pyrrhus666 after using that line it doesnt delete at all"}, {"timstamp": "2017-02-17 11:34", "user": "Pyrrhus666", "body": "Ayz, yes, I noticed, looking closer now :)"}, {"timstamp": "2017-02-17 11:34", "user": "Ayz", "body": "Pyrrhus666 :-)"}, {"timstamp": "2017-02-17 11:35", "user": "Ayz", "body": "Pyrrhus666 use >=1 it works.."}, {"timstamp": "2017-02-17 11:36", "user": "Ayz", "body": "Pyrrhus666 while using >=1 it works even splices the last column too ;-)"}, {"timstamp": "2017-02-17 11:37", "user": "Pyrrhus666", "body": "Ayz, yes, its some confusion in your use of data and datas as properties :)"}, {"timstamp": "2017-02-17 11:37", "user": "Ayz", "body": "data is the array and datas is the instance"}, {"timstamp": "2017-02-17 11:37", "user": "Ayz", "body": "Pyrrhus666 data is the array and datas is the instance"}, {"timstamp": "2017-02-17 11:40", "user": "Ayz", "body": "Pyrrhus666 length spelling buddy"}, {"timstamp": "2017-02-17 11:41", "user": "Pyrrhus666", "body": "Ayz, haha, good catch :)"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 nw working right??"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 ha ha ha.."}, {"timstamp": "2017-02-17 11:41", "user": "Pyrrhus666", "body": "looks good from here"}, {"timstamp": "2017-02-17 11:41", "user": "Ayz", "body": "Pyrrhus666 ya working here too..."}, {"timstamp": "2017-02-17 11:42", "user": "Pyrrhus666", "body": "Ayz, a suggestion though : per row just a delete, and one add button under the table. an add on every row feels a bit much :)"}, {"timstamp": "2017-02-17 11:43", "user": "Ayz", "body": "Pyrrhus666 ya the suggestion seems good and i ll use it.. :-)"}, {"timstamp": "2017-02-17 11:44", "user": "Pyrrhus666", "body": "Ayz, and for good measure : hide the delete button when data.length <= 1"}, {"timstamp": "2017-02-17 11:45", "user": "Ayz", "body": "Pyrrhus666 ya sure i ll.."}], "label": "other"}
{"id": "93d59559", "body": "", "comments": [{"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "man the average problem here seems to simple"}, {"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "meanwhile I have to figure out how to take a centered element and animate moving it without messing with the centering..."}, {"timstamp": "2018-01-11 18:47", "user": "zomg", "body": "and oh wait, it might be centered in a weird way in a parent, so the parent's dimensions must be known to calculate the correct animation"}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait, the elements might not even be in DOM, so actually in order to calculate it we need to figure out the dimensions without them in DOM..."}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait, some of the values might not be there because they're being calculated based on aspect ratio..."}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": "and oh wait fuck this shit"}, {"timstamp": "2018-01-11 18:48", "user": "zomg", "body": ":D"}], "label": "other"}
{"id": "93d5951a", "body": "", "comments": [{"timstamp": "2016-08-04 22:16", "user": "RomulusDaniel", "body": "icfantv can you please check where I am doing wrong injecting the http service"}, {"timstamp": "2016-08-04 22:17", "user": "RomulusDaniel", "body": "it is about the same project as before"}, {"timstamp": "2016-08-04 22:18", "user": "RomulusDaniel", "body": ""}, {"timstamp": "2016-08-04 22:19", "user": "RomulusDaniel", "body": "or anybody else?"}, {"timstamp": "2016-08-04 22:20", "user": "RomulusDaniel", "body": "I am getting Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: lemme look"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:21", "user": "icfantv", "body": "RomulusDaniel: are you minifiying your code?"}, {"timstamp": "2016-08-04 22:21", "user": "RomulusDaniel", "body": "nope"}, {"timstamp": "2016-08-04 22:22", "user": "icfantv", "body": "that service looks fine"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "you should still pull that CORS stuff out of the service"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "it should be done once and only once"}, {"timstamp": "2016-08-04 22:23", "user": "icfantv", "body": "making it a service is overkill"}, {"timstamp": "2016-08-04 22:24", "user": "RomulusDaniel", "body": "I will just call it once in the future"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "i suppose one other thing to check would be to use array syntax for those DI args to see if that changes anything"}, {"timstamp": "2016-08-04 22:24", "user": "icfantv", "body": "are you familiar with that syntax?"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "angular.module.service('MyService', ['$scope', function($scope) { ... }]);"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "I am"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "just something to try and eliminate stuff"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "will do that"}, {"timstamp": "2016-08-04 22:25", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:25", "user": "icfantv", "body": "i would be surprised if it did change anything"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "nope the same"}, {"timstamp": "2016-08-04 22:27", "user": "RomulusDaniel", "body": "Error: [$injector:unpr] Unknown provider: $scopeProvider <- $scope <- getData"}, {"timstamp": "2016-08-04 22:28", "user": "RomulusDaniel", "body": "it doesn't say from where the error is coming the service or the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "oh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "duh"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "you can't inject scope to service"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services have no scope"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "remember that scope is the \"glue\" between the view and the controller"}, {"timstamp": "2016-08-04 22:31", "user": "icfantv", "body": "services are agnostic"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "(they're supposed to be)"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "oh yes"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "RomulusDaniel: ^^"}, {"timstamp": "2016-08-04 22:32", "user": "icfantv", "body": "services shouldn't care how they're used or who uses them"}, {"timstamp": "2016-08-04 22:32", "user": "RomulusDaniel", "body": "I remember from what I once learned yes you are right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "this means I can't use $scope at all in the service"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "?"}, {"timstamp": "2016-08-04 22:33", "user": "icfantv", "body": "exactly"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "right"}, {"timstamp": "2016-08-04 22:33", "user": "RomulusDaniel", "body": "ok"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "I will modify my code"}, {"timstamp": "2016-08-04 22:34", "user": "RomulusDaniel", "body": "thanks"}, {"timstamp": "2016-08-04 22:35", "user": "icfantv", "body": "yep"}], "label": "other"}
{"id": "93d594c4", "body": "", "comments": [{"timstamp": "2018-10-29 13:21", "user": "pupskuchen", "body": "let's not speak about a11y"}, {"timstamp": "2018-10-29 13:22", "user": "Pyrrhus666", "body": "not even thinking about accessibility, it just feels wrong to me :)"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "eh"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "it doesnt do anything at first klick"}, {"timstamp": "2018-10-29 13:23", "user": "berz3rk", "body": "at second it works"}, {"timstamp": "2018-10-29 13:24", "user": "pupskuchen", "body": "Pyrrhus666: probably because it is"}, {"timstamp": "2018-10-29 13:26", "user": "Pyrrhus666", "body": "berz3rk, probably because the 2nd time the content is already there or smt. I think you cant really solve this cleanly."}, {"timstamp": "2018-10-29 13:32", "user": "berz3rk", "body": "what should I do then?"}, {"timstamp": "2018-10-29 13:34", "user": "Pyrrhus666", "body": "dunno. what are you trying to achieve ? cant you use a popover ? or display the content in some other fashion ?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "i have a collapsible area at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "think about a link or something"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you click on it, a text area expands"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you read stuff"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "now the issue is the thing is at the end of the page"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "so if you click the content that is revealing is under your current view position"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "you have to scroll to the new content you know?"}, {"timstamp": "2018-10-29 13:37", "user": "berz3rk", "body": "or else you have to scroll then yourself afterwords"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "why not click on the collapse directly ? like its meant to be used ?"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "the user clicks on the collapse"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "yes."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "but angular doesnt jump to the revealing content"}, {"timstamp": "2018-10-29 13:38", "user": "Pyrrhus666", "body": "no need if the user clicks on the collapse itself."}, {"timstamp": "2018-10-29 13:38", "user": "berz3rk", "body": "what do you mean"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "i want that the content reveals"}, {"timstamp": "2018-10-29 13:39", "user": "berz3rk", "body": "and that the user sees it without scrolling"}, {"timstamp": "2018-10-29 13:39", "user": "Pyrrhus666", "body": "we just established that that is not going to work."}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "this is the way a collapse is normally used :"}, {"timstamp": "2018-10-29 13:40", "user": "Pyrrhus666", "body": "you click on the thing, it expands _in_place_"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "yeah it does that in berz3rk's case too"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "you just don't see it because the toggle is at the end of the page"}, {"timstamp": "2018-10-29 13:41", "user": "pupskuchen", "body": "so the content is expanding beyond the visible part of the page"}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "ah ok. then dont use a collapse, imho."}, {"timstamp": "2018-10-29 13:42", "user": "Pyrrhus666", "body": "or accept that the user must scroll."}, {"timstamp": "2018-10-29 13:44", "user": "Pyrrhus666", "body": "(I was under the impression the click was somewhere else, and the collapse was expanded programmatically)"}], "label": "other"}
{"id": "93d5953d", "body": "", "comments": [{"timstamp": "2016-05-26 19:42", "user": "jpstone", "body": "is it possible to $watch an attribute in a directive in the controller: property instead of inside the link function"}, {"timstamp": "2016-05-26 19:43", "user": "sunimasuno", "body": "jpstone: yes, you can set up a $watch nearly anywhere"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "if the attribute is 2-way databound (so string isn't avaible on this.attributeName)"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "sunimasuno: how can I do that without the string inside the attribute?"}, {"timstamp": "2016-05-26 19:43", "user": "jpstone", "body": "maybe create another scope binding for the same attribute, but name it differently?"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "bindToController: {attribute: '=attribute', attributeString: '@attribute'} ?"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "then $scope.$watch(this.attributeString, ...)"}, {"timstamp": "2016-05-26 19:44", "user": "jpstone", "body": "?"}, {"timstamp": "2016-05-26 19:44", "user": "sunimasuno", "body": "That sounds like it would work, but it feels a bit clunky, can you explain a bit more of the situation to me jpstone I feel like there's a better way"}, {"timstamp": "2016-05-26 19:45", "user": "jpstone", "body": "well, for one, when i add a link function to the directive, angular complains it can't find the required controller...which is weird"}, {"timstamp": "2016-05-26 19:45", "user": "jpstone", "body": "require: '^ngDisabled'"}, {"timstamp": "2016-05-26 19:46", "user": "jpstone", "body": "ngDisabled is clearly an attribute on the element, just like my directive is"}, {"timstamp": "2016-05-26 19:46", "user": "sunimasuno", "body": "jpstone: just a silly question to get out of the way, you do have ng-disabled in the html, right? The cap to - is a gotcha that gets people so often"}, {"timstamp": "2016-05-26 19:46", "user": "jpstone", "body": "yes"}, {"timstamp": "2016-05-26 19:47", "user": "sunimasuno", "body": "ok, sorry if that was beneath you, just wanted to make sure"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "<div ng-disabled=\"someString\" nullify-on-disabled>"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "there's also an ng-model on there"}, {"timstamp": "2016-05-26 19:47", "user": "sunimasuno", "body": "ok"}, {"timstamp": "2016-05-26 19:47", "user": "jpstone", "body": "which I want to nullify when ng-disabled evaluates as true"}, {"timstamp": "2016-05-26 19:50", "user": "sunimasuno", "body": "man jpstone you've got a good one, can you make a jsfiddle of it?"}, {"timstamp": "2016-05-26 19:51", "user": "sunimasuno", "body": "the string to print"}, {"timstamp": "2016-05-26 19:57", "user": "jpstone", "body": "sure"}], "label": "other"}
{"id": "93d59535", "body": "", "comments": [{"timstamp": "2017-04-25 13:06", "user": "E1arcis", "body": "back"}, {"timstamp": "2017-04-25 13:07", "user": "SargoDarya", "body": "wb E1arcis"}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "I really hate atlassian today..."}, {"timstamp": "2017-04-25 13:21", "user": "SargoDarya", "body": "Still can't access Jira."}, {"timstamp": "2017-04-25 13:32", "user": "uru", "body": "SargoDarya:"}, {"timstamp": "2017-04-25 13:33", "user": "uru", "body": "Main problem is they are having issues with their account servers it seems, I can use JIRA fine as I had an existing session from yesterday, co-worker can't log in though"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "uru: Yeah, figured that already. They're also saying that on their status page"}, {"timstamp": "2017-04-25 13:35", "user": "SargoDarya", "body": "Honestly though, that issues seems to be open for 13 hours already."}, {"timstamp": "2017-04-25 13:37", "user": "uru", "body": "Yea< I can't even load their offical status page, it's just times out. It's all rather annoying :)"}, {"timstamp": "2017-04-25 13:38", "user": "SargoDarya", "body": "That one works for me though. Are you using status.atlassian.com?"}, {"timstamp": "2017-04-25 13:46", "user": "uru", "body": "Nope, I can't actually access that"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh, seems to be working now"}, {"timstamp": "2017-04-25 13:47", "user": "uru", "body": "Oh well"}, {"timstamp": "2017-04-25 13:47", "user": "SargoDarya", "body": "You mean the status page or what"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "because I'm still receiving freaking cloudflare errors"}, {"timstamp": "2017-04-25 13:48", "user": "SargoDarya", "body": "front, not flare"}, {"timstamp": "2017-04-25 14:11", "user": "uru", "body": "The status page, I can't access the log in page but I'm already logged in so it's not a problem for me."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I'm not."}, {"timstamp": "2017-04-25 14:13", "user": "SargoDarya", "body": "I miss my tickets :<"}, {"timstamp": "2017-04-25 14:14", "user": "uru", "body": "The ones of us that have access still are sending screenshots of issues to people who don't"}, {"timstamp": "2017-04-25 14:19", "user": "uru", "body": "I am actually, getting to build lots of fun stuff at the moment"}, {"timstamp": "2017-04-25 14:21", "user": "Elarcis", "body": "uru: I might have to look at C# again someday, so I'm hopeful :P"}, {"timstamp": "2017-04-25 14:30", "user": "uru", "body": "Elarcis: Neat, I've been doing a bit of Go recently (the language, not the game)"}, {"timstamp": "2017-04-25 14:30", "user": "SargoDarya", "body": "uru: Rare to see someone who even knows go (the game)"}, {"timstamp": "2017-04-25 14:30", "user": "Elarcis", "body": "uru: I've been told to learn Haskell for fun. I don't know if I'll ever be masochist enough"}, {"timstamp": "2017-04-25 14:31", "user": "Elarcis", "body": "SargoDarya: Come on, it made the headlines a few years ago"}, {"timstamp": "2017-04-25 14:31", "user": "SargoDarya", "body": "Elarcis: Well, sure but I'd say still not much people know about it."}, {"timstamp": "2017-04-25 14:32", "user": "Elarcis", "body": "SargoDarya: right"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Still have a large go-ban in the basement"}, {"timstamp": "2017-04-25 14:32", "user": "SargoDarya", "body": "Loved playing it back then, think I actually got to 17kyu"}, {"timstamp": "2017-04-25 14:34", "user": "Elarcis", "body": "SargoDarya: I don't know the rules of Go, though"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "location[varname]"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Easy to learn, hard to master. It's really about recognising patterns and knowing when to attack or safe"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: sounds a lot like Overwatch"}, {"timstamp": "2017-04-25 14:35", "user": "Elarcis", "body": "SargoDarya: *hides in a corner*"}, {"timstamp": "2017-04-25 14:35", "user": "SargoDarya", "body": "Except that in overwatch 95% of the time your team mates are at fault for losing :P"}, {"timstamp": "2017-04-25 14:36", "user": "Elarcis", "body": "SargoDarya: well obviously, I play way too well to be at fault"}, {"timstamp": "2017-04-25 14:36", "user": "SargoDarya", "body": "And god damn Hanzo. OP when on the other team, non existent when on your team"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: best I saw was a Junkrat who would take long pauses to hide behind a wall between each. grenade."}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "Elarcis: lol, I was subjected to it at uni"}, {"timstamp": "2017-04-25 14:37", "user": "uru", "body": "SargoDarya: Co-worker plays it ;)"}, {"timstamp": "2017-04-25 14:37", "user": "Elarcis", "body": "SargoDarya: or a Winston that would take the flag, then go back to the spawn and decide to clean it (and die) before rushing to the flagpole."}, {"timstamp": "2017-04-25 14:37", "user": "SargoDarya", "body": "lol Elarcis, I actually haven't played in ages."}, {"timstamp": "2017-04-25 14:38", "user": "Elarcis", "body": "\"ages\", the game has been out for less than a year :D"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "Elarcis: {{location[field]}} seems not to work while {{location.fieldname}} does"}, {"timstamp": "2017-04-25 14:38", "user": "SargoDarya", "body": "Was a regular at goproblems.com. That site still looks ages old and is Java driven if I remember correctly"}, {"timstamp": "2017-04-25 14:38", "user": "justelex", "body": "in FE"}, {"timstamp": "2017-04-25 14:39", "user": "Elarcis", "body": "justelex: what's FE?"}, {"timstamp": "2017-04-25 14:41", "user": "justelex", "body": "Frontend.. The html template.. sorry"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: well if it works"}, {"timstamp": "2017-04-25 14:41", "user": "Elarcis", "body": "justelex: problem solved"}, {"timstamp": "2017-04-25 14:45", "user": "justelex", "body": "Elarcis: I need a variable in this. Like location.$SomeVariableIDontknowInAdvance. With one of the fieldsnames in loctation it works, if I hardcode the name."}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: location[fieldName], I stand my grounds"}, {"timstamp": "2017-04-25 14:46", "user": "Elarcis", "body": "justelex: it's how you access dynamically named variables in an object"}, {"timstamp": "2017-04-25 14:47", "user": "Elarcis", "body": "justelex: if it doesn't work, either fieldName is wrong or location doesn't have any key going by that name"}, {"timstamp": "2017-04-25 14:47", "user": "justelex", "body": "Gnaahh... Sorry, my fault. Had an dumb spelling error in this."}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "Sorry for wasting your time ;)"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "np"}, {"timstamp": "2017-04-25 14:48", "user": "Elarcis", "body": "I'll fax you my hourly rates"}, {"timstamp": "2017-04-25 14:48", "user": "justelex", "body": "hmm... Do this. will be back later, need to search my fax..."}, {"timstamp": "2017-04-25 14:51", "user": "SargoDarya", "body": "Elarcis: Heh, fax."}, {"timstamp": "2017-04-25 14:52", "user": "Elarcis", "body": "SargoDarya: should have said they're on my Minitel."}, {"timstamp": "2017-04-25 14:53", "user": "SargoDarya", "body": "I'm only 28 and I feel freaking old. Somethings wrong."}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: 24 and feel the same"}, {"timstamp": "2017-04-25 14:54", "user": "Elarcis", "body": "SargoDarya: what should I say."}, {"timstamp": "2017-04-25 14:56", "user": "SargoDarya", "body": "Back to work mate"}, {"timstamp": "2017-04-25 14:56", "user": "Pyrrhus666", "body": "SargoDarya, yeeeeaaaahhhh thatd be greeaat."}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": "Pyrrhus666: ?"}, {"timstamp": "2017-04-25 14:57", "user": "SargoDarya", "body": ""}, {"timstamp": "2017-04-25 14:59", "user": "Pyrrhus666", "body": "SargoDarya,"}, {"timstamp": "2017-04-25 15:00", "user": "Pyrrhus666", "body": "also"}, {"timstamp": "2017-04-25 15:27", "user": "SargoDarya", "body": "Honestly though it's getting to the point where it's laughable with Atlassian"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "yeah :|"}, {"timstamp": "2017-04-25 15:28", "user": "Elarcis", "body": "SargoDarya: reminds me of GitLab a few weeks ago"}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "and they got quite a bit of money"}, {"timstamp": "2017-04-25 15:28", "user": "SargoDarya", "body": "I especially love this sentence in the past incidents from yesterdays unavailable login: \"Our teams have completed an extensive health check and are confident Atlassian Account services will remain healthy.\""}, {"timstamp": "2017-04-25 15:28", "user": "iprime", "body": "SargoDarya, they've revamped the UI at least :)"}, {"timstamp": "2017-04-25 15:29", "user": "SargoDarya", "body": "Confidence of a 3 year old"}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: don't mess with Murphy's law"}, {"timstamp": "2017-04-25 15:30", "user": "SargoDarya", "body": "Probably some technician who was like: \"HAHAHAAAAAAAAAAAA nope.\""}, {"timstamp": "2017-04-25 15:30", "user": "Elarcis", "body": "SargoDarya: making a statement like that, it was begging for an incident to happen"}], "label": "other"}
{"id": "93d59545", "body": "", "comments": [{"timstamp": "2017-03-28 15:31", "user": "asteele", "body": "oh. my. god."}, {"timstamp": "2017-03-28 15:31", "user": "Elarcis", "body": "asteele: yes? what do you want me?"}, {"timstamp": "2017-03-28 15:32", "user": "Pyrrhus666", "body": "asteele: @obey Elarcis"}, {"timstamp": "2017-03-28 15:32", "user": "asteele", "body": "i just spent a solid 3 hours debugging this dumb shit. i was putting a formGroup directive on a ng-container, it was trying to grab an actual element to put css classes on for valid/invalid, but ng content isnt a real element. the errors were SO MISLEADING"}, {"timstamp": "2017-03-28 15:32", "user": "Pyrrhus666", "body": "why doesnt that work ?"}, {"timstamp": "2017-03-28 15:33", "user": "asteele", "body": "ng container isnt an element*"}, {"timstamp": "2017-03-28 15:35", "user": "icebox", "body": "asteele: codelyzer is what you are looking for :)"}, {"timstamp": "2017-03-28 15:35", "user": "icebox", "body": "asteele:"}, {"timstamp": "2017-03-28 15:36", "user": "asteele", "body": "interesting icebox"}, {"timstamp": "2017-03-28 15:37", "user": "asteele", "body": "is there a rule there that would have saved me?"}, {"timstamp": "2017-03-28 15:37", "user": "asteele", "body": "i dont see which one it would be"}, {"timstamp": "2017-03-28 15:37", "user": "icebox", "body": "asteele: Minko Gechev is the same author of de facto angular seed -"}, {"timstamp": "2017-03-28 15:38", "user": "asteele", "body": "man im so relieved to have that figured out, even if it was the dumbest shit ever, haven't been stuck that long on one thing in quite a while lol"}, {"timstamp": "2017-03-28 15:39", "user": "icebox", "body": ":P"}], "label": "other"}
{"id": "8addb25f", "body": "", "comments": [{"timstamp": "2017-03-21 15:49", "user": "ARandomFurry", "body": "Hello! Is there a way to make sure that an async operation is completed before my route builds and renders a component in angular 2?"}, {"timstamp": "2017-03-21 15:49", "user": "uru", "body": "ARandomFurry: Sounds like you want to take a look at router guards"}, {"timstamp": "2017-03-21 15:51", "user": "ARandomFurry", "body": "uru; I am using canActivate and resolve for my route. They're executed after my component's constructor and ngOnInit function."}, {"timstamp": "2017-03-21 15:52", "user": "ARandomFurry", "body": "uru; the route is defined with the loadChildren field by the way."}, {"timstamp": "2017-03-21 15:54", "user": "uru", "body": "ARandomFurry: iirc not much you can do other than wrapping the content in an ngif then, I load data in to a service via the guard, which then only completes navigation after the request is finished, as long as canActivate returns an observer/promise"}, {"timstamp": "2017-03-21 15:55", "user": "ARandomFurry", "body": "uru; Shame, such a step backwards."}, {"timstamp": "2017-03-21 15:58", "user": "ARandomFurry", "body": "uru; Thank you for assissting me though!"}, {"timstamp": "2017-03-21 15:58", "user": "uru", "body": "ARandomFurry: No worries"}], "label": "feature"}
{"id": "93d594b0", "body": "", "comments": [{"timstamp": "2016-07-26 15:46", "user": "Pyrrhus1", "body": "if theyre hardcoded, why the need for an ngFor ? theyre already there, no need to loop..."}, {"timstamp": "2016-07-26 15:47", "user": "mnero", "body": "Pyrrhus1: I mean only the first 3 are, then the subsequent elements will be dynamic"}, {"timstamp": "2016-07-26 15:47", "user": "mnero", "body": "like a <ul> which always starts with the same 3 things, then has other stuff"}, {"timstamp": "2016-07-26 15:49", "user": "Pyrrhus1", "body": "<ul><li>1</li><li>2</li><li>3</li><li *ngFor=let other of others>{{other}}</li></ul>"}, {"timstamp": "2016-07-26 15:49", "user": "Pyrrhus1", "body": "I guess Im missing something ?"}, {"timstamp": "2016-07-26 15:50", "user": "mnero", "body": "Pyrrhus1: doesn't that loop children of the last <li>?"}, {"timstamp": "2016-07-26 15:50", "user": "mnero", "body": "not <li>'s themselves"}, {"timstamp": "2016-07-26 15:50", "user": "mnero", "body": "like you would loop the text inside"}, {"timstamp": "2016-07-26 15:50", "user": "Pyrrhus1", "body": "no it loops the others which id probably an array of stuff."}, {"timstamp": "2016-07-26 15:51", "user": "Pyrrhus1", "body": "s/id/is/"}, {"timstamp": "2016-07-26 15:51", "user": "mnero", "body": "sweet thanks"}, {"timstamp": "2016-07-26 15:51", "user": "Pyrrhus1", "body": "it _generates_ lis for every item in that array."}, {"timstamp": "2016-07-26 15:52", "user": "mnero", "body": "yeah I think I've been misunderstanding where ngFor should be all along and wondering why this extra padding was showing up, lol"}, {"timstamp": "2016-07-26 16:02", "user": "Elarcis", "body": "Pyrrhus1: I feel you sooo much."}, {"timstamp": "2016-07-26 16:02", "user": "Elarcis", "body": "Pyrrhus1: luckily, with angular2 it should be a thing of the past!"}, {"timstamp": "2016-07-26 16:02", "user": "Pyrrhus1", "body": "those are the things I really hate..."}, {"timstamp": "2016-07-26 16:02", "user": "Pyrrhus1", "body": "having to do $timeout(() => { $state.go(home); }); instead of straight $state.go(home);... I thought we were past that sort of crap..."}, {"timstamp": "2016-07-26 16:03", "user": "Pyrrhus1", "body": "funnily enough, it works with a deeper (child) state, but nog a higher (parent) state..."}], "label": "other"}
{"id": "93d594e7", "body": "", "comments": [{"timstamp": "2016-05-26 19:57", "user": "Twirl", "body": "anyone has some simple tutorial on how to make a deployable package? the tutorial in the official angular website shows an example on how to deploy locally to an open browser (completely useless)"}, {"timstamp": "2016-05-26 20:17", "user": "Twirl", "body": "anyone has some tutorial on how to deploy an angular2 app with gulp or something?"}, {"timstamp": "2016-05-26 20:17", "user": "sunimasuno", "body": "Twirl: I have my default \"how to build a js project\" link,"}, {"timstamp": "2016-05-26 20:20", "user": "Twirl", "body": "sunimasuno: i said angular2"}, {"timstamp": "2016-05-26 20:26", "user": "scssquatch", "body": "sunimasuno: okay I believe the problem was due to a binding being in an ng-if during compile time"}, {"timstamp": "2016-05-26 20:26", "user": "sunimasuno", "body": "Twirl yeah, he uses some angular 1 examples, but ng2 doesn't have any unique build requirements that I'm aware of. Is there something special you need in your build process?"}, {"timstamp": "2016-05-26 20:26", "user": "scssquatch", "body": "so rest easy, accessing that attr doesn't blow anything up :)"}, {"timstamp": "2016-05-26 20:27", "user": "sunimasuno", "body": "scssquatch: the world makes sense now, thanks!"}, {"timstamp": "2016-05-26 20:27", "user": "scssquatch", "body": "Any time!"}, {"timstamp": "2016-05-26 20:28", "user": "Twirl", "body": "sunimasuno: i'm a complete noob when it comes to angular, i followed the tutorial and it deploys to a running browser in your local machine @ localhost"}, {"timstamp": "2016-05-26 20:28", "user": "Twirl", "body": "sunimasuno: i want to test this in my vagrant vm"}, {"timstamp": "2016-05-26 20:30", "user": "sunimasuno", "body": "Hmmm... so Twirl I think the issue then is nailing down exactly what you want. gulp, grunt, npm, etc all just line up your steps for you, you still have to write them. You want to push your code to a web server for sure, but do you need to transpile, minify, test, etc?"}, {"timstamp": "2016-05-26 20:30", "user": "Twirl", "body": "yea i don't know how to do any of that, do you have a tutorial or an example or something"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "functionally you can ignore the word \"angular\" when doing a JS project build and deployment, unless your transpiling something special"}, {"timstamp": "2016-05-26 20:31", "user": "Twirl", "body": "minify i don't really care"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "Do you have a web server up and running?"}, {"timstamp": "2016-05-26 20:31", "user": "Twirl", "body": "yes"}, {"timstamp": "2016-05-26 20:31", "user": "scssquatch", "body": "there's probably an heroku buildpack if you're cool with heroku"}, {"timstamp": "2016-05-26 20:31", "user": "scssquatch", "body": "ah never mind then"}, {"timstamp": "2016-05-26 20:31", "user": "sunimasuno", "body": "what one?"}, {"timstamp": "2016-05-26 20:32", "user": "Twirl", "body": "sunimasuno: what web server?"}, {"timstamp": "2016-05-26 20:32", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 20:32", "user": "Twirl", "body": "sunimasuno: why does it matter? i have all of them anyways, currently using tomcat"}, {"timstamp": "2016-05-26 20:33", "user": "Twirl", "body": "but i could stop it and start nginx or apache"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "It should have a public html directory in there somewhere, you just need to copy your html, css, and js files into it"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "that's what gulp/grunt/npm do"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "most of them literally run cp or COPY under the hood"}, {"timstamp": "2016-05-26 20:33", "user": "Twirl", "body": "yea, so i just put my angular app in the folder being served and access the index.html?"}, {"timstamp": "2016-05-26 20:33", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 20:34", "user": "sunimasuno", "body": "so long as your file structure and relative links make sense you should be fine"}, {"timstamp": "2016-05-26 20:34", "user": "Twirl", "body": "well, no, the tutorial uses typescript and compile on the fly on the browser"}, {"timstamp": "2016-05-26 20:35", "user": "Twirl", "body": "also, every mistake is freaking costly it takes this vm literally 10 minutes to start tomcat"}, {"timstamp": "2016-05-26 20:36", "user": "sunimasuno", "body": "The one I sent he transpiles and drops the code in dist, then starts up an express server and tells it to serve the dist directory, which the transpile (browserify) droped an index.html into"}, {"timstamp": "2016-05-26 20:37", "user": "Twirl", "body": "yes i need to transpile all the typescript files somehow, maybe with a task manager or npm script (what i'm asking) test and deploy"}, {"timstamp": "2016-05-26 20:37", "user": "sunimasuno", "body": "so if you look for build:scripts you'll see where he transpiles the typescript"}, {"timstamp": "2016-05-26 20:38", "user": "sunimasuno", "body": "\"test\": shows where he runs the tests"}, {"timstamp": "2016-05-26 20:38", "user": "sunimasuno", "body": "\"serve\": is where he stands up the server, you'd probably wanta \"deploy\" where you copy out to your tomcat server"}, {"timstamp": "2016-05-26 20:39", "user": "sunimasuno", "body": "he also has a \"clean\" to kill old stuffs"}, {"timstamp": "2016-05-26 20:39", "user": "sunimasuno", "body": "a few other helper tasks"}, {"timstamp": "2016-05-26 20:40", "user": "Twirl", "body": "alright seems like i forgot all the freaking node modules"}, {"timstamp": "2016-05-26 20:40", "user": "sunimasuno", "body": "yeah, there's a lot of them. When the tech stack gets deep so do the modules"}, {"timstamp": "2016-05-26 20:42", "user": "Twirl", "body": "sunimasuno: alright, so the guy uses npm scripts instead of gulp and grunt?"}, {"timstamp": "2016-05-26 20:42", "user": "Twirl", "body": "and explains the whole process? looks like a good read then"}, {"timstamp": "2016-05-26 20:42", "user": "sunimasuno", "body": "Yeah, all three just end up running things in the command line at the end of the day"}, {"timstamp": "2016-05-26 20:42", "user": "sunimasuno", "body": "Half the time I just write a bash script myself"}, {"timstamp": "2016-05-26 20:43", "user": "sunimasuno", "body": "But, ya'know, I gotta play nice with them windows folks"}, {"timstamp": "2016-05-26 20:43", "user": "Twirl", "body": "i hate windows"}, {"timstamp": "2016-05-26 20:43", "user": "Twirl", "body": "it's a virus"}, {"timstamp": "2016-05-26 20:44", "user": "Twirl", "body": "just kidding, it's good for playing computer games"}, {"timstamp": "2016-05-26 20:44", "user": "sunimasuno", "body": "there is that"}, {"timstamp": "2016-05-26 20:44", "user": "Twirl", "body": "anyways, i gotta read all of that, it's going to take a while"}, {"timstamp": "2016-05-26 20:44", "user": "sunimasuno", "body": "good luck!"}], "label": "other"}
{"id": "93d5947b", "body": "", "comments": [{"timstamp": "2016-07-07 15:12", "user": "verwilst", "body": "i've reverted, and even adding my app.settings.ts stuff isnt working anymore"}, {"timstamp": "2016-07-07 15:14", "user": "Elarcis", "body": "verwilst: justo ne question: what do you like in webstorm? (not a troll, I never used it but I heard it's quite nice)"}, {"timstamp": "2016-07-07 15:14", "user": "verwilst", "body": "Elarcis: i've been using phpstorm and pycharm for ages, and i love those, so i started using webstorm for angular.."}, {"timstamp": "2016-07-07 15:15", "user": "Pyrrhus", "body": "Elarcis: as an aside, my colleague (who does react <unconvertable> n stuff) also uses webstorm, and is perfectly happy"}, {"timstamp": "2016-07-07 15:16", "user": "verwilst", "body": "phpstorm and pycharm have very nice debugging possibilities, and it's the first IDE set that i don't get annoyed by :-)"}, {"timstamp": "2016-07-07 15:16", "user": "verwilst", "body": "angular2 support comes along quite nicely as well"}, {"timstamp": "2016-07-07 15:17", "user": "Elarcis", "body": "verwilst: oh okay"}, {"timstamp": "2016-07-07 15:17", "user": "verwilst", "body": "despite being java, it seems pretty ok on responsiveness, and memory usage etc.."}, {"timstamp": "2016-07-07 15:17", "user": "prometh", "body": "verwilst: waht's so bad about using a text editor, console and browser?"}, {"timstamp": "2016-07-07 15:18", "user": "verwilst", "body": "word completion, autocomplete of functions/classes, adding import statements automatically, ..."}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": "text editors haev those"}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": ""}, {"timstamp": "2016-07-07 15:18", "user": "verwilst", "body": "and the debugging possibilites"}, {"timstamp": "2016-07-07 15:18", "user": "prometh", "body": "browsers haev debuggers"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "prometh: not talking about js"}, {"timstamp": "2016-07-07 15:19", "user": "prometh", "body": "ah"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "and good luck debugging python or php in your browser :-D"}, {"timstamp": "2016-07-07 15:19", "user": "prometh", "body": "obviously"}, {"timstamp": "2016-07-07 15:19", "user": "verwilst", "body": "can't live without them anymore :-)"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "prometh: that looks like more of a code editor than a text one"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "and for webstorm, every ts file groups its matching .js and .map.js"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "so you only see the .ts"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": ".js.map*"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "nice things like that :-)"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "verwilst: this I like, Visual Studio does it but not VSCode /c"}, {"timstamp": "2016-07-07 15:20", "user": "Pyrrhus", "body": "verwilst: it doesnt really seem to help you with setting up your API_ENDPOINT though :P"}, {"timstamp": "2016-07-07 15:20", "user": "Elarcis", "body": "Pyrrhus: OH BUUUUURN"}, {"timstamp": "2016-07-07 15:20", "user": "verwilst", "body": "hehe"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "even my app.settings doesn't work anymore :-p"}, {"timstamp": "2016-07-07 15:21", "user": "Elarcis", "body": "verwilst: well VSCode has its own debugger with an PI for Python and such, which is nice :D"}, {"timstamp": "2016-07-07 15:21", "user": "Elarcis", "body": "*API"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "might of well have stayed in bed, would'be been equally productive"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "vscode? is that win?"}, {"timstamp": "2016-07-07 15:21", "user": "verwilst", "body": "i'm even further off than this morning.."}, {"timstamp": "2016-07-07 15:22", "user": "Elarcis", "body": "verwilst: it's free, open source and cross-platform"}, {"timstamp": "2016-07-07 15:22", "user": "verwilst", "body": "phpstorm uses xdebug and pycharm pydbg"}, {"timstamp": "2016-07-07 15:22", "user": "Elarcis", "body": "verwilst: and Microsoft, which is the oddest thing"}, {"timstamp": "2016-07-07 15:22", "user": "prometh", "body": "Elarcis: indeed.. it's espresso"}, {"timstamp": "2016-07-07 15:22", "user": "verwilst", "body": "visualstudio, isnt that by ms?"}, {"timstamp": "2016-07-07 15:23", "user": "prometh", "body": "i use both espresso and sublime text"}, {"timstamp": "2016-07-07 15:23", "user": "prometh", "body": "beginning to phase out espresso now"}, {"timstamp": "2016-07-07 15:23", "user": "Elarcis", "body": "verwilst: it's like if Winchester started advocating for world peace."}, {"timstamp": "2016-07-07 15:23", "user": "Pyrrhus", "body": "there are far to much pieces of software called after coffee or derivatives."}, {"timstamp": "2016-07-07 15:23", "user": "Pyrrhus", "body": "I blame java."}, {"timstamp": "2016-07-07 15:24", "user": "Pyrrhus", "body": "Im waiting for the first project called ventimachiato"}, {"timstamp": "2016-07-07 15:24", "user": "Elarcis", "body": "Pyrrhus: I need some tea right now"}, {"timstamp": "2016-07-07 15:24", "user": "Pyrrhus", "body": "Elarcis: jasmine, perchance ? ;)"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "Pyrrhus: what do you call coffeescript that's not working?"}, {"timstamp": "2016-07-07 15:25", "user": "prometh", "body": "Elarcis: decaf"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "Pyrrhus: a kaputccino"}, {"timstamp": "2016-07-07 15:25", "user": "Pyrrhus", "body": "haha, both good :)"}, {"timstamp": "2016-07-07 15:25", "user": "Elarcis", "body": "*badum tss*"}, {"timstamp": "2016-07-07 15:28", "user": "Elarcis", "body": "Pyrrhus: well it's better than Java which, when not working, explodes into a mud volcano"}, {"timstamp": "2016-07-07 15:28", "user": "Pyrrhus", "body": "Elarcis: at least the stacktraces are so long that the original exception _must_ be in there somewhere ;)"}, {"timstamp": "2016-07-07 15:29", "user": "Elarcis", "body": "Pyrrhus: haha: from GasDrillException"}], "label": "other"}
{"id": "0ec1e512", "body": "", "comments": [{"timstamp": "15:26", "user": "pagios", "body": "hi all, when it comes to webcomponents, is it easier for me to create a webcomponent using angular or to create a webcomponent using vanilla javascript? idea is to have a webcomponent that is reusable across thirdparty websites and thus replace using an iframe, thanks"}, {"timstamp": "15:28", "user": "stennowork", "body": "pagios, web components is still a rather new technology and might not be supported that well"}, {"timstamp": "15:29", "user": "pagios", "body": "stennowork, the idea is to have some code loaded on some third party website, i dont want to bother the third party web developer, and give me an easy way of embedding my code, should i go with an iframe?"}, {"timstamp": "15:36", "user": "stennowork", "body": "in case of doubt, use iframe"}, {"timstamp": "15:40", "user": "pagios", "body": "stennowork, any alternatives?"}, {"timstamp": "15:40", "user": "stennowork", "body": "well, web components, if you are fine with not supporting all (tm) browsers"}, {"timstamp": "15:42", "user": "stennowork", "body": "keep in mind that angulars components are not the same as vanilla components"}], "label": "other"}
{"id": "93d594f8", "body": "", "comments": [{"timstamp": "2017-07-26 08:16", "user": "bs0d", "body": "Hello community. I need an advice on organizing data."}, {"timstamp": "2017-07-26 08:17", "user": "bs0d", "body": "I need to display a list of selectable items, which the user can switch on or off. Unchecked items need to be displayed in the left column, checked ones in the column to the right"}, {"timstamp": "2017-07-26 08:18", "user": "bs0d", "body": "So in my data, I've got a set of elements, containing of a string (text) and a boolean flag which marks the checked state"}, {"timstamp": "2017-07-26 08:19", "user": "Elarcis", "body": "bs0d: yes?"}, {"timstamp": "2017-07-26 08:19", "user": "bs0d", "body": "but the culprit is, that the list of items to display comes from a web service, so I have a set of string coming from a web service. Then I iterate over all, and re-fit all items into my new structure with boolean flags in it - this looks terribly bad solution to me."}, {"timstamp": "2017-07-26 08:19", "user": "bs0d", "body": "Am I doing it right, or is there a better way to organize data?"}, {"timstamp": "2017-07-26 08:20", "user": "Elarcis", "body": "bs0d: yourItems | filter:{selected:true}?"}, {"timstamp": "2017-07-26 08:20", "user": "icebox", "body": "bs0d: why do you think it is a bad solution?"}, {"timstamp": "2017-07-26 08:21", "user": "icebox", "body": "bs0d: there are different data structures in different layers"}, {"timstamp": "2017-07-26 08:21", "user": "Elarcis", "body": "icebox: debattable, but I completely understand their point. When users talk about what they'd like, it most often comes down to \"I'd like a checkbox to disable <thing I don't like>\""}, {"timstamp": "2017-07-26 08:22", "user": "Elarcis", "body": "bs0d: also, iterating through an array of items is pretty fast unless it's a very large array, if you only do it once it's okay"}, {"timstamp": "2017-07-26 08:24", "user": "Elarcis", "body": "bs0d: I'd say for the sake of simplicity, I wouldn't put a selected flag in the data structure, as it ties it to your view state, but have two arrays: one for selected and one for non-selected elements. Your controller's job is to move elements from the non-selected to the selected list, and vice versa"}, {"timstamp": "2017-07-26 08:24", "user": "icebox", "body": "Elarcis: (anyway in the realm of light-ide, vscode is the best) :)"}, {"timstamp": "2017-07-26 08:25", "user": "Elarcis", "body": "bs0d: unless of course you have a multi-layered architecture with view-dedicated models separated from business and data access, which I very much doubt because we don't see it often here"}, {"timstamp": "2017-07-26 08:25", "user": "Elarcis", "body": "icebox: of course!"}, {"timstamp": "2017-07-26 08:27", "user": "bs0d", "body": "Elarcis yes, keeping a two sets of data looks better compared to what I have now. I will re-write the code, so it is uncoupled from the view"}, {"timstamp": "2017-07-26 08:27", "user": "Elarcis", "body": "icebox: <unconvertable> But Atom isnt an IDE, its a code editor, totally different thing! <unconvertable>"}, {"timstamp": "2017-07-26 08:29", "user": "bs0d", "body": "what is the difference between an IDE and a code editor? If it does code highlighting and shows context help for api - it looks pretty much IDE-ish to me"}, {"timstamp": "2017-07-26 08:29", "user": "Elarcis", "body": "bs0d: code editor is halfway between a text editor and an IDE, it's not a clear demarcation"}, {"timstamp": "2017-07-26 08:31", "user": "Elarcis", "body": "bs0d: there's not much as much a difference as people think there is"}, {"timstamp": "2017-07-26 08:31", "user": "Elarcis", "body": "bs0d: imho that's just an excuse for people to justify their favorite software not having a certain feature :P"}, {"timstamp": "2017-07-26 08:32", "user": "icebox", "body": ":P"}, {"timstamp": "2017-07-26 08:32", "user": "icebox", "body": "another sad truth... \"To me, open source doesn't mean projects get lots of love, it may get more love, but a large percent of users don't want to actually contribute to an open source project except to tell you you to add their beloved feature, or fix this particular issue.\""}, {"timstamp": "2017-07-26 08:33", "user": "icebox", "body": "\"They do create a lot of bug reports and +1 comments...\""}, {"timstamp": "2017-07-26 08:33", "user": "icebox", "body": "really demotivating"}, {"timstamp": "2017-07-26 08:38", "user": "bs0d", "body": "I think in my case it will be storing one single array of string values to display (together with their IDs) which come from a web service, and a set of \"checked\" IDs as a reference to items in the first array"}, {"timstamp": "2017-07-26 08:38", "user": "bs0d", "body": "Is it possible in this case to use filters to display the items from the first array, which id-s are listed in the second array?"}, {"timstamp": "2017-07-26 08:42", "user": "icebox", "body": "bs0d:"}, {"timstamp": "2017-07-26 08:44", "user": "bs0d", "body": "icebox thanks, this outline is really helpful!"}, {"timstamp": "2017-07-26 08:47", "user": "Elarcis", "body": "bs0d: any motivation behind only storing the selected IDs? Easier processing in another part of the app?"}, {"timstamp": "2017-07-26 08:49", "user": "Elarcis", "body": "bs0d: truly it doesn't matter much what structure you chose, all that counts is the complexity of your solution and its readability"}, {"timstamp": "2017-07-26 08:49", "user": "bs0d", "body": "Elarcis the user preferences, as well as the list of items to select from, will eventually both come from a database. I imagine that the 'user selection' will be just foreign keys referencing the items in the classifier storing the list of items. So it will come in the form of IDs from the database"}, {"timstamp": "2017-07-26 08:49", "user": "Elarcis", "body": "bs0d: in this case you have a serious design issue where your view's state management is directly dependant on what comes from the database"}, {"timstamp": "2017-07-26 08:51", "user": "bs0d", "body": "Elarcis this doesn't sound good. Could you please recommend a good way to organize the data and the view? I am lacking experience in this, but I try to learn"}, {"timstamp": "2017-07-26 08:51", "user": "icebox", "body": "bs0d: display (view) models, business models, dao models and so on :)"}, {"timstamp": "2017-07-26 08:53", "user": "icebox", "body": "bs0d: there is not any guide because the granularity (and the kind) of the models depends on the patterns you are applying"}, {"timstamp": "2017-07-26 08:53", "user": "Elarcis", "body": "bs0d: the recommended way is usually to have your app's services divided into multiple layers: data access, whose services only provide data read/write operations using models strictly corresponding to whichever source you have (indexedDB, web services, local storage)..."}, {"timstamp": "2017-07-26 08:53", "user": "icebox", "body": "bs0d: you may give a look at Todd Motto's code style guide for a few hints"}, {"timstamp": "2017-07-26 08:53", "user": "Elarcis", "body": "bs0d: business services, which process data according to whatever feature your app proposes, and aren't tied to a particular data access layer, they just provide your app's \"behind the curtain\" logic"}, {"timstamp": "2017-07-26 08:54", "user": "Elarcis", "body": "bs0d: and the view layer (possibly with view services if necessary), which processes the models returned by your business layer and possibly uses view-specific models, tied to what your UI looks like"}, {"timstamp": "2017-07-26 08:56", "user": "Elarcis", "body": "bs0d: in that regard it's closed to classical \"back-end\" app designs, and it lowers the coupling in your architectures => makes maintaining easier when something has to be changed"}, {"timstamp": "2017-07-26 08:57", "user": "Elarcis", "body": "bs0d: on the other hand, it's tricky to pull off a first time, and it can easily spiral into a \"cookie cutter architecture\" where you strictly adhere to a design to the point of having useless services that do nothing for the sake of coherence"}, {"timstamp": "2017-07-26 08:58", "user": "bs0d", "body": "right, the feeling of the right layering scheme comes with experience only"}, {"timstamp": "2017-07-26 08:58", "user": "bs0d", "body": "So I need at least two models here, right? One for the db representation, following the table layout, and one supporting the view, at a minimum"}, {"timstamp": "2017-07-26 08:59", "user": "bs0d", "body": "and a data service which pulls/pushes data into the db, and a view service which restructures the data to be easily rendered"}, {"timstamp": "2017-07-26 09:00", "user": "bs0d", "body": "if my understanding is correct, the data model would contain a set of string records with their IDs, and a set of IDs selected by the user. The view model would contain a set of objects containing a string and a flag (on/off) which would be easy to display in the view"}, {"timstamp": "2017-07-26 09:01", "user": "bs0d", "body": "and some service which converts between these two representations"}, {"timstamp": "2017-07-26 09:04", "user": "bs0d", "body": "In this scheme, the view component \"talks\" to the view service, and the view service, in turns, \"talks\" to the data service, and the component never sees the data service, actually"}, {"timstamp": "2017-07-26 09:04", "user": "Elarcis", "body": "bs0d: it depends. In my project's case, we have a data model with dates in it. in the data layer, these dates are merely strings. the business layer converts them to Date objects, and the view, even though it allows for item selection, doesn't lead to a 'selected' property on the model. instead, the view stores itself a separate set of selected items for an easier lookup"}, {"timstamp": "2017-07-26 09:05", "user": "Elarcis", "body": "bs0d: but yeah, you get the gist"}, {"timstamp": "2017-07-26 09:06", "user": "Elarcis", "body": "bs0d: google up \"3 layer architectures\" for more info"}, {"timstamp": "2017-07-26 09:07", "user": "Elarcis", "body": "icebox: am I right"}, {"timstamp": "2017-07-26 09:07", "user": "Elarcis", "body": "?"}, {"timstamp": "2017-07-26 09:07", "user": "icebox", "body": "Elarcis: yep, you are"}, {"timstamp": "2017-07-26 09:08", "user": "Elarcis", "body": "yiss!"}, {"timstamp": "2017-07-26 09:08", "user": "icebox", "body": "generally speaking,"}, {"timstamp": "2017-07-26 09:15", "user": "bs0d", "body": "Elarcis may I ask you about your project a bit more to understand the different layers?"}, {"timstamp": "2017-07-26 09:16", "user": "Elarcis", "body": "bs0d: you may, but I won't be very available right now so answers will be scarce"}, {"timstamp": "2017-07-26 09:16", "user": "icebox", "body": ":P"}, {"timstamp": "2017-07-26 09:17", "user": "bs0d", "body": "is the data layer represented by a service which has some intermediate data storage in local variables, storing dates as strings? And same for business layer - is it again a service storing the same dates as Date objects internally?"}, {"timstamp": "2017-07-26 09:17", "user": "Elarcis", "body": "bs0d: also my setup is quite unconventional (read <unconvertable> no server at all)"}, {"timstamp": "2017-07-26 09:17", "user": "bs0d", "body": "and which data is stored in the view component itself?"}, {"timstamp": "2017-07-26 09:18", "user": "Elarcis", "body": "bs0d: no, they're stored in models. Models are just objects that implement a specific interface (in my case a typescript one)"}, {"timstamp": "2017-07-26 09:18", "user": "Elarcis", "body": "bs0d: view component is a pleonasm"}, {"timstamp": "2017-07-26 09:18", "user": "Elarcis", "body": "bs0d: the view component stores and handles any logic/data"}, {"timstamp": "2017-07-26 09:18", "user": "Elarcis", "body": "bs0d: specific to its state"}, {"timstamp": "2017-07-26 09:19", "user": "icebox", "body": "bs0d: const union = a.filter(item => b.some(item2 => item2.id === item.id)); // where a or b are something like const a = [ { id: 1, value: 1 }, { id: 2, value: 2 }, { id: 3, value: 3 } ];"}, {"timstamp": "2017-07-26 09:19", "user": "Elarcis", "body": "bs0d: any logic that COULD be needed somewhere else => in a service, or at least a separate JS file/module"}, {"timstamp": "2017-07-26 09:20", "user": "Elarcis", "body": "icebox: that's an intersection"}, {"timstamp": "2017-07-26 09:20", "user": "icebox", "body": "Elarcis: yep"}, {"timstamp": "2017-07-26 09:21", "user": "icebox", "body": "Elarcis: copy and paste typo"}, {"timstamp": "2017-07-26 09:21", "user": "Elarcis", "body": "icebox: :P"}, {"timstamp": "2017-07-26 09:22", "user": "icebox", "body": "Elarcis: union would be easy with spread operator and Set :)"}, {"timstamp": "2017-07-26 09:24", "user": "Elarcis", "body": "Semantic-UI... why are you overriding so many CSS rules... Can't even set a cursor: pointer; without having to SPECIFICALLY write a selector more specific than Semantic's bazillion classes selector"}, {"timstamp": "2017-07-26 09:24", "user": "icebox", "body": "ahahah... functional css coming :)"}, {"timstamp": "2017-07-26 09:26", "user": "Elarcis", "body": "icebox: we're pretty much using a naive version of BEM"}, {"timstamp": "2017-07-26 09:26", "user": "Elarcis", "body": "(and Angular's shadow DOM combined)"}, {"timstamp": "2017-07-26 09:26", "user": "icebox", "body": "I see"}, {"timstamp": "2017-07-26 09:27", "user": "Elarcis", "body": "icebox: each component's style is wrapped in the component's selector, and only defines vital component layout rules"}, {"timstamp": "2017-07-26 09:28", "user": "Elarcis", "body": "icebox: works for now"}, {"timstamp": "2017-07-26 09:30", "user": "icebox", "body": "Elarcis: that is important :)"}], "label": "other"}
{"id": "93d59528", "body": "", "comments": [{"timstamp": "2016-05-26 17:22", "user": "Jeroen2", "body": "I've got an property with an array in it. But I only want 0-2 results."}, {"timstamp": "2016-05-26 17:22", "user": "Jeroen2", "body": "How can I do that?"}, {"timstamp": "2016-05-26 17:22", "user": "roadrunneratwast", "body": "you could split the array?"}, {"timstamp": "2016-05-26 17:23", "user": "sunimasuno", "body": "Jeroen2: slice"}, {"timstamp": "2016-05-26 17:23", "user": "sunimasuno", "body": "roadrunneratwast: you never actually instantiate a promise object in your code that I can see"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "you pass the return value of the .then"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "which is an array"}, {"timstamp": "2016-05-26 17:24", "user": "roadrunneratwast", "body": "but isn't the $http.get() a promise object?"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "You .then off it already"}, {"timstamp": "2016-05-26 17:24", "user": "sunimasuno", "body": "so you don't pass the promise any further"}, {"timstamp": "2016-05-26 17:25", "user": "sunimasuno", "body": "you could just wrap that array in a promise that immediately resolves"}, {"timstamp": "2016-05-26 17:25", "user": "roadrunneratwast", "body": "but that's what i do in the working example"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "Hmmm..."}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "this works fine when the code is not part of the submitGraphRequest()"}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "i commented out he top part that works"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "So the commented one, lines #5-30 is the good or bad one?"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "ah"}, {"timstamp": "2016-05-26 17:26", "user": "roadrunneratwast", "body": "is the good one"}, {"timstamp": "2016-05-26 17:26", "user": "sunimasuno", "body": "thanks"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "sorry i should have made that clear in the pastern"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "it's when the promise is created in the event callback"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "that it doesn't work"}, {"timstamp": "2016-05-26 17:27", "user": "sunimasuno", "body": "^_^ is cool, this is kinda a fun problem"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "no"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "it isn"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "t"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "haha"}, {"timstamp": "2016-05-26 17:27", "user": "roadrunneratwast", "body": "i think maybe it has to do with the isolate scope?"}, {"timstamp": "2016-05-26 17:28", "user": "roadrunneratwast", "body": "maybe when the directive is created it has access to the initial state of the containing directive"}, {"timstamp": "2016-05-26 17:28", "user": "sunimasuno", "body": "I mean, I always use directive as syntax for a reason, $scope is tricky"}, {"timstamp": "2016-05-26 17:28", "user": "sunimasuno", "body": "directive as? controller as >.<"}, {"timstamp": "2016-05-26 17:28", "user": "roadrunneratwast", "body": "i could try that ..."}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "i don't have a lot of control over the am-charts directive"}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "only the external directive that is wrapping it"}, {"timstamp": "2016-05-26 17:29", "user": "roadrunneratwast", "body": "it might be a lousy component for all i know"}, {"timstamp": "2016-05-26 17:29", "user": "sunimasuno", "body": "Yeah, I've never touched it myself"}, {"timstamp": "2016-05-26 17:30", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:30", "user": "roadrunneratwast", "body": "blah"}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "wait..."}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "roadrunneratwast: where do you return from your callback?"}, {"timstamp": "2016-05-26 17:31", "user": "sunimasuno", "body": "you don't, right?"}, {"timstamp": "2016-05-26 17:31", "user": "roadrunneratwast", "body": "nope"}, {"timstamp": "2016-05-26 17:32", "user": "Jeroen2", "body": "sunimasuno: but what if it's a scope var?"}, {"timstamp": "2016-05-26 17:32", "user": "Jeroen2", "body": "ng-repeat=\"item in accordionData\" <-- I only want the first 2 results."}, {"timstamp": "2016-05-26 17:33", "user": "roadrunneratwast", "body": "let me see if i can hack the js fiddle provide by the designer of the component"}, {"timstamp": "2016-05-26 17:33", "user": "sunimasuno", "body": "if you want an array inside a repeat you usually want a filter Jeroen2 you want this one"}, {"timstamp": "2016-05-26 17:34", "user": "sunimasuno", "body": "Jeroen2: which just runs splice() under the hood"}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": "@sunimasuno -- let's just work with the jsfiddle"}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": ""}, {"timstamp": "2016-05-26 17:36", "user": "roadrunneratwast", "body": "how would you make this.dataFromPromise react to a button press?"}, {"timstamp": "2016-05-26 17:38", "user": "sunimasuno", "body": "so we basically want to change the options when a button is pushed?"}, {"timstamp": "2016-05-26 17:38", "user": "roadrunneratwast", "body": "yEAH"}, {"timstamp": "2016-05-26 17:38", "user": "roadrunneratwast", "body": "i am toddling with it ..."}, {"timstamp": "2016-05-26 17:38", "user": "sunimasuno", "body": "ok, I think I see the issue here"}, {"timstamp": "2016-05-26 17:39", "user": "sunimasuno", "body": "I think amchart is assuming the data in, and not reacting to it changing over time"}, {"timstamp": "2016-05-26 17:39", "user": "sunimasuno", "body": "not 100% on that, checking"}, {"timstamp": "2016-05-26 17:39", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:39", "user": "roadrunneratwast", "body": "i think that is the problem"}, {"timstamp": "2016-05-26 17:40", "user": "roadrunneratwast", "body": "so i need to abandon it maybe?"}, {"timstamp": "2016-05-26 17:40", "user": "sunimasuno", "body": "One sec, lemme look at something"}, {"timstamp": "2016-05-26 17:40", "user": "roadrunneratwast", "body": "or maybe wrap the button press in a promise?"}, {"timstamp": "2016-05-26 17:41", "user": "sunimasuno", "body": "roadrunneratwast: so the whole thing is apache liscense, so you can edit your own version, and it's tiny code,"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "yeah"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "that might be right"}, {"timstamp": "2016-05-26 17:41", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:41", "user": "sunimasuno", "body": "So I'd build my own version, instead of a wrapper"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "what do you mean by build your own?"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "it's a jQuery library"}, {"timstamp": "2016-05-26 17:42", "user": "roadrunneratwast", "body": "and i could just ignore the custom directive"}, {"timstamp": "2016-05-26 17:43", "user": "sunimasuno", "body": "found something"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "o?"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "there's an update data event that it's watching for"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "line #256"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "yeah. i see that now"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:44", "user": "sunimasuno", "body": "so how do you proc it?"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "so just hook into that"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "i don't"}, {"timstamp": "2016-05-26 17:44", "user": "roadrunneratwast", "body": "but i should sent that event?"}, {"timstamp": "2016-05-26 17:45", "user": "sunimasuno", "body": "yeah"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "ok"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "you are the man"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "or woman"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "not sure"}, {"timstamp": "2016-05-26 17:45", "user": "roadrunneratwast", "body": "thanks"}, {"timstamp": "2016-05-26 17:45", "user": "sunimasuno", "body": "XD any time!"}, {"timstamp": "2016-05-26 17:46", "user": "sunimasuno", "body": "angularjs890: because you aren't including angularjs itself"}, {"timstamp": "2016-05-26 17:47", "user": "Jeroen2", "body": "Hmm sunimasuno one more thing? :)"}, {"timstamp": "2016-05-26 17:47", "user": "angularjs890", "body": "sunimasuno its build in jsfiddle"}, {"timstamp": "2016-05-26 17:47", "user": "angularjs890", "body": "sunimasuno built*"}, {"timstamp": "2016-05-26 17:47", "user": "Jeroen2", "body": "When I initiate this: ng-class=\"{open: $index==accordionActive, closed: $index!=accordionActive}\" it works, but when I click on a div that changes the accordionActive to another number it hides all dives instead of opening one."}, {"timstamp": "2016-05-26 17:47", "user": "sunimasuno", "body": "angularjs890: try it in this one"}, {"timstamp": "2016-05-26 17:49", "user": "sunimasuno", "body": "ok, Jeroen2 that's a little bit of an odd way, is that how accordion wants you do control it? Normally what we'd do is use ng-show or ng-if or a filter ont he repeat, prefereably the last one, to show things in a list"}, {"timstamp": "2016-05-26 17:49", "user": "angularjs890", "body": "sunimasuno I want to use the \"as\" syntax"}, {"timstamp": "2016-05-26 17:50", "user": "Jeroen2", "body": "sunimasuno: no I was just searching for a way I could make this."}, {"timstamp": "2016-05-26 17:50", "user": "Jeroen2", "body": "I'll look for it tomorrow. Thanks anyway."}, {"timstamp": "2016-05-26 17:51", "user": "angularjs890", "body": "sunimasuno I don't get why this example works in jsfiddle and not with my local browser"}, {"timstamp": "2016-05-26 17:52", "user": "sunimasuno", "body": "angularjs890: now try"}, {"timstamp": "2016-05-26 17:52", "user": "sunimasuno", "body": "the real trick here is look at the left for \"external sources\""}, {"timstamp": "2016-05-26 17:53", "user": "sunimasuno", "body": "you'll see I'm pulling in an old version of angular, you're not pulling in one"}, {"timstamp": "2016-05-26 17:53", "user": "angularjs890", "body": "sunimasuno so, the cdn link doesn't work?"}, {"timstamp": "2016-05-26 17:53", "user": "sunimasuno", "body": "just add a version of angular there and life should get better"}, {"timstamp": "2016-05-26 17:54", "user": "angularjs890", "body": "sunimasuno but in my local env?"}, {"timstamp": "2016-05-26 17:54", "user": "sunimasuno", "body": "I don't see it if it's there, and the console error is a lack of angularjs error"}, {"timstamp": "2016-05-26 17:55", "user": "angularjs890", "body": "sunimasuno Just try my code win your local machine and see"}, {"timstamp": "2016-05-26 17:55", "user": "angularjs890", "body": "sunimasuno I guess that I have to download the script itself instead using the cdn script link"}, {"timstamp": "2016-05-26 17:58", "user": "sunimasuno", "body": "angularjs890: where is your cdn script linnk?"}, {"timstamp": "2016-05-26 17:58", "user": "angularjs890", "body": "sunimasuno Iv'e tried it in two places. header and bottom of the body"}, {"timstamp": "2016-05-26 18:10", "user": "sunimasuno", "body": "yeah, angularjs890 no idea what's up with your fiddle"}, {"timstamp": "2016-05-26 18:11", "user": "angularjs890", "body": "sunimasuno synax error, wrote scr instead of src"}, {"timstamp": "2016-05-26 18:11", "user": "sunimasuno", "body": ">.<"}, {"timstamp": "2016-05-26 18:11", "user": "sunimasuno", "body": "Well... now we know"}, {"timstamp": "2016-05-26 18:12", "user": "sunimasuno", "body": "and I couldn't find it either, gonna have to live with that one"}], "label": "other"}
{"id": "0edea28b", "body": "", "comments": [{"timstamp": "03:45", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "03:45", "user": "CssNoob", "body": ""}, {"timstamp": "03:45", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}, {"timstamp": "06:02", "user": "CssNoob", "body": "Any articles like how I can send data with upload file function?"}, {"timstamp": "06:02", "user": "CssNoob", "body": ""}, {"timstamp": "06:02", "user": "CssNoob", "body": "I have that one but it's just sending a file to server."}], "label": "other"}
{"id": "93d59501", "body": "", "comments": [{"timstamp": "2019-02-07 12:18", "user": "stennowork", "body": "F#!"}, {"timstamp": "2019-02-07 12:18", "user": "mursu", "body": "ocaml is better"}, {"timstamp": "2019-02-07 12:18", "user": "mursu", "body": ":^)"}, {"timstamp": "2019-02-07 12:44", "user": "Elarcis", "body": "mursu: Rust is better :^)"}, {"timstamp": "2019-02-07 12:45", "user": "mursu", "body": "Elarcis: yeah if you like bad languages then I can see how you would say that"}, {"timstamp": "2019-02-07 12:45", "user": "mursu", "body": ":^)"}, {"timstamp": "2019-02-07 12:45", "user": "Elarcis", "body": "mursu: tonight I will bath in your blood."}, {"timstamp": "2019-02-07 12:46", "user": "stennowork", "body": "slaanesh approves"}, {"timstamp": "2019-02-07 12:59", "user": "Mylee", "body": "Elarcis, what is this fascination with Rust?"}, {"timstamp": "2019-02-07 13:00", "user": "Elarcis", "body": "Mylee: I like it"}, {"timstamp": "2019-02-07 13:00", "user": "Mylee", "body": "I see that"}, {"timstamp": "2019-02-07 13:00", "user": "Elarcis", "body": "And I like to jokingly put it everywhere"}, {"timstamp": "2019-02-07 13:00", "user": "Mylee", "body": "you told a joke?"}, {"timstamp": "2019-02-07 13:02", "user": "mursu", "body": "a programming language"}, {"timstamp": "2019-02-07 13:02", "user": "Mylee", "body": "let me google"}, {"timstamp": "2019-02-07 13:02", "user": "Mylee", "body": "like C#?"}, {"timstamp": "2019-02-07 13:03", "user": "mursu", "body": "they are both by microsoft and can use .net but they are totally different languages"}, {"timstamp": "2019-02-07 13:03", "user": "Mylee", "body": "ahhh"}, {"timstamp": "2019-02-07 13:05", "user": "anddam", "body": "Mylee: yes, that's \"the\" docs, and the page I was referring to"}], "label": "other"}
{"id": "93d59484", "body": "", "comments": [{"timstamp": "2017-08-23 11:27", "user": "Elarcis", "body": "Blehy"}, {"timstamp": "2017-08-23 11:27", "user": "SargoDarya", "body": "?"}, {"timstamp": "2017-08-23 11:28", "user": "Pyrrhus666", "body": "and a good morning to you to Elarcis ;)"}, {"timstamp": "2017-08-23 11:29", "user": "Elarcis", "body": "was meant to be bleh!"}, {"timstamp": "2017-08-23 11:35", "user": "Elarcis", "body": "sorry ;_;"}, {"timstamp": "2017-08-23 11:35", "user": "Elarcis", "body": "IM SO SOJJYYYY"}, {"timstamp": "2017-08-23 11:36", "user": "SargoDarya", "body": "I think you meant to say sorrz"}, {"timstamp": "2017-08-23 11:37", "user": "Elarcis", "body": "SargoDarya: I dud"}, {"timstamp": "2017-08-23 11:37", "user": "Pyrrhus666", "body": "yes, yes you are :P"}, {"timstamp": "2017-08-23 11:54", "user": "Elarcis", "body": "Pyrrhus666: How are you going?"}, {"timstamp": "2017-08-23 11:56", "user": "Pyrrhus666", "body": "Elarcis, coping with a severe case of extended monday-blues. prognosis is itll last until friday..."}, {"timstamp": "2017-08-23 11:57", "user": "Pyrrhus666", "body": "luckily the boss is still on vacation, so I can sort of get away with it because most stuff I need to do is done already ;)"}, {"timstamp": "2017-08-23 11:59", "user": "Pyrrhus666", "body": "Elarcis, and you ? is the PM away ? and the intern is gone ?"}, {"timstamp": "2017-08-23 11:59", "user": "SargoDarya", "body": "I feel like most people seem to forgot that this channel is logged xD"}, {"timstamp": "2017-08-23 12:00", "user": "Pyrrhus666", "body": "nothing connects my nick to my work, luckily ;)"}, {"timstamp": "2017-08-23 12:01", "user": "SargoDarya", "body": "I'm pretty sure it's possible to create a complete profile of my life with that nick."}, {"timstamp": "2017-08-23 12:02", "user": "Elarcis", "body": "me as well"}, {"timstamp": "2017-08-23 12:04", "user": "Pyrrhus666", "body": "private laptop at work, connected to a private vpn. paranoid much ? yeah..."}, {"timstamp": "2017-08-23 13:10", "user": "Elarcis", "body": "bleh!"}, {"timstamp": "2017-08-23 13:26", "user": "Elarcis", "body": "Lifes sad when iceboxs not around..."}, {"timstamp": "2017-08-23 13:49", "user": "Pyrrhus666", "body": "E1arcis, well have to manage for another week or so..."}, {"timstamp": "2017-08-23 15:42", "user": "lpapp", "body": "Elarcis: ok, thanks"}, {"timstamp": "2017-08-23 15:42", "user": "lpapp", "body": "I am new to angularjs, I can see that a controller function is called because I put a console.log inside it, but the directive does not get called at the \"same time\". Is this normal?"}, {"timstamp": "2017-08-23 15:49", "user": "Elarcis", "body": "lpapp: what do you mean by <unconvertable> same time?"}, {"timstamp": "2017-08-23 15:49", "user": "lpapp", "body": "loading a page"}, {"timstamp": "2017-08-23 15:52", "user": "lpapp", "body": "I am looking at this angular mode:"}, {"timstamp": "2017-08-23 15:52", "user": "lpapp", "body": "I tried to extend it with a directive next to the controller, but I do not seem to be able to get the code executed after adding that directive."}, {"timstamp": "2017-08-23 15:54", "user": "lpapp", "body": "Also, I am a bit confused that this html does not seem to refer to the previous angular js module..."}, {"timstamp": "2017-08-23 15:55", "user": "lpapp", "body": "still, as a newbie, I am confused."}, {"timstamp": "2017-08-23 15:56", "user": "lpapp", "body": "e.g. I cannot see ng-controller assignment, which I thought would be needed for an angular module controller..."}, {"timstamp": "2017-08-23 16:04", "user": "Elarcis", "body": "lpapp: you need to understand that before, after, <unconvertable> next to <unconvertable> are very generic terms and can mean anything without us looking at the same thing than you"}, {"timstamp": "2017-08-23 16:04", "user": "lpapp", "body": "sure, this is why I tried to provide context."}, {"timstamp": "2017-08-23 16:04", "user": "Elarcis", "body": "lpapp: ngController is pretty much obsolete. AngularJS is component-based since 1.5"}, {"timstamp": "2017-08-23 16:04", "user": "lpapp", "body": "let me know if you need more information."}, {"timstamp": "2017-08-23 16:05", "user": "Elarcis", "body": "lpapp: we have a plunker template you can use to toy with and share us examples, if that can help"}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "Elarcis: not sure I can do that today, sorry."}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "but I would appreciate help today, though."}, {"timstamp": "2017-08-23 16:13", "user": "lpapp", "body": "I feel I provided the source to the code, so who is willing to read that probably can tell me what is going on"}, {"timstamp": "2017-08-23 16:14", "user": "Elarcis", "body": "lpapp: you should probably ask the projects maintainer, who would be more apt to answer your question, since they seem to be having an exotic setup"}, {"timstamp": "2017-08-23 16:15", "user": "Elarcis", "body": "lpapp: at least to me, and having only quickly checked your links"}, {"timstamp": "2017-08-23 16:16", "user": "Elarcis", "body": "lpapp: whats certain is that declaring the controller isnt merely enough; theres probably someplace in the code where they link the controller to the template, probably on Javas side"}, {"timstamp": "2017-08-23 16:21", "user": "lpapp", "body": "Elarcis: ok, sent an email to their mailing list, thank you."}, {"timstamp": "2017-08-23 16:27", "user": "Elarcis", "body": "lpapp: np"}], "label": "other"}
{"id": "93d594d4", "body": "", "comments": [{"timstamp": "2018-05-14 11:19", "user": "dgo", "body": "Hi there. Currently, for every new app I write, I copy paste the structure of an older app and I modify the menu, remove some pages, change the navigation, etc. Is is a bit cumbersome. I was wondering how to build a \"webapp generator\" using Angular using a stucture I decide."}, {"timstamp": "2018-05-14 11:21", "user": "Pyrrhus666", "body": "dgo,"}, {"timstamp": "2018-05-14 11:21", "user": "dgo", "body": "thanks"}, {"timstamp": "2018-05-14 11:22", "user": "Pyrrhus666", "body": "dgo, yw. no experience though, I just read it was possible ;)"}, {"timstamp": "2018-05-14 11:23", "user": "dgo", "body": "Who are you using an 'external' theme (commercial or free) like an admin dashboard or something else ? I currently have Inspinia but it is no more supported (I suppose) and I am looking for a good advice here.. (core-ui theme ?)"}, {"timstamp": "2018-05-14 11:26", "user": "Pyrrhus666", "body": "for a theme Id go with angular material or ng-bootstrap. both do not provide a dashboard though."}, {"timstamp": "2018-05-14 11:27", "user": "icebox", "body": "dgo: you may give a look also at"}, {"timstamp": "2018-05-14 11:29", "user": "dgo", "body": "Thanks icebox"}, {"timstamp": "2018-05-14 11:30", "user": "dgo", "body": "Pyrrhus666 : I an using ngx-boostrap (boostrap 3 requirement) and I like it. I try angular material, but I didn't get the \"layout\" way using it. Should I give a try to flexbox ? It is a \"boostrap col-XX\" like ?"}, {"timstamp": "2018-05-14 11:31", "user": "Pyrrhus666", "body": "bootstrap 3 does not support flexbox, does it ? I only use bs4 nowadays."}, {"timstamp": "2018-05-14 11:36", "user": "dgo", "body": "Pyrrhus666 : I meant : What are you using as a \"layout\" for the apps with Angular material ?"}, {"timstamp": "2018-05-14 11:37", "user": "dgo", "body": "are you mixing BS4 layouts and angular material components ?"}, {"timstamp": "2018-05-14 11:38", "user": "Pyrrhus666", "body": "dgo, not using material, only bootstrap. and with both, I use (or would use) the librarys native layout stuff."}, {"timstamp": "2018-05-14 11:39", "user": "Pyrrhus666", "body": "dgo, so for bs4, lots of grid containers and flex stuff."}, {"timstamp": "2018-05-14 11:39", "user": "dgo", "body": "Ok , I miss read you."}, {"timstamp": "2018-05-14 11:39", "user": "Pyrrhus666", "body": "dgo, or I misunderstood you, it happens ;)"}, {"timstamp": "2018-05-14 12:00", "user": "Pyrrhus666", "body": "icebox, re: gnupg :"}], "label": "other"}
{"id": "8addb271", "body": "", "comments": [{"timstamp": "2017-08-14 23:46", "user": "lawd", "body": "hey all anyone know if it's possible to open an angular 2/4 route in new window and have it grab data from a service"}], "label": "feature"}
{"id": "0ec1e202", "body": "", "comments": [{"timstamp": "16:01", "user": "Booster2ooo", "body": "Is there any way to inject a variable via command line at runtime? For instance to increase the version number of an app ?"}, {"timstamp": "16:02", "user": "stennowork", "body": "Booster2ooo, that sounds really bizarre"}, {"timstamp": "16:03", "user": "stennowork", "body": "do you want to do code hotloading?"}, {"timstamp": "16:03", "user": "Booster2ooo", "body": "why's that ?"}, {"timstamp": "16:03", "user": "stennowork", "body": "is your goal basically to update your code without causing any downtime?"}, {"timstamp": "16:04", "user": "stennowork", "body": "oh wait frontend"}, {"timstamp": "16:04", "user": "ray02", "body": "stennowork: no i think he would just change the name of the project"}, {"timstamp": "16:05", "user": "ray02", "body": "to have project1.0 project.1.1 etc.."}, {"timstamp": "16:05", "user": "ray02", "body": "right ?"}, {"timstamp": "16:05", "user": "Booster2ooo", "body": "My goal is simply to inject the \"build version\" from the CI"}, {"timstamp": "16:11", "user": "ray02", "body": "Booster2ooo: i don't think is possible"}, {"timstamp": "16:11", "user": "stennowork", "body": "for what?"}, {"timstamp": "16:11", "user": "stennowork", "body": "or #buckbot :P"}, {"timstamp": "16:12", "user": "Pyrrhus666", "body": "more likely :)"}, {"timstamp": "16:40", "user": "Booster2ooo", "body": "[16:11:10] <ray02> Booster2ooo: i don't think is possible // thanks, that's my assumption as well"}, {"timstamp": "16:45", "user": "ray02", "body": "Booster2ooo: but if you look the build files they have their custom name all the time"}, {"timstamp": "16:46", "user": "ray02", "body": "Booster2ooo: here we have some script, out of angular cli, that use/ modify that name"}, {"timstamp": "16:46", "user": "Booster2ooo", "body": "ray02: yea but i can't easily link the file name to my build #"}, {"timstamp": "16:47", "user": "Booster2ooo", "body": "the easier would be to create a .js file in the CI process and import this file in the angular project so it get compiled"}], "label": "other"}
{"id": "73af7d04", "body": "", "comments": [{"timstamp": "11:32", "user": "Pyrrhus666", "body": "more like a choking stranglehold"}], "label": "other"}
{"id": "93d594f2", "body": "", "comments": [{"timstamp": "2017-02-17 10:49", "user": "arlekin", "body": "mornin'"}, {"timstamp": "2017-02-17 10:49", "user": "Pyrrhus666", "body": "morning arlekin"}, {"timstamp": "2017-02-17 10:53", "user": "arlekin", "body": "i think about writing few short pieces on common solutions / tricks in angular 1 (eg. channeling events via isolated scopes and passsing data by not breaking references from services) and i wonder if thats good idea + if that makes sense on the fall of the ng1 life + where to put it, is medium good enough for such content ? (i mean i'd need to embed some codepen or something)"}, {"timstamp": "2017-02-17 10:55", "user": "Pyrrhus666", "body": "arlekin, medium should probably do fine, it seems to have embed options. no idea on whether such pieces are a good idea, but you could probably get them linked from ngirc easily ;)"}, {"timstamp": "2017-02-17 10:55", "user": "arlekin", "body": "ngirc ?"}, {"timstamp": "2017-02-17 10:55", "user": "jarard075", "body": "I'm hoping to finish my modal today :)"}, {"timstamp": "2017-02-17 10:56", "user": "arlekin", "body": "jarard075: the bootstrap one from yesterday ?"}, {"timstamp": "2017-02-17 10:56", "user": "Pyrrhus666", "body": "arlekin,"}, {"timstamp": "2017-02-17 10:56", "user": "icebox", "body": "arlekin: hey"}, {"timstamp": "2017-02-17 10:56", "user": "arlekin", "body": "icebox: hi"}, {"timstamp": "2017-02-17 10:56", "user": "jarard075", "body": "yeah - I got it to work but I have a final question about calling a method on the submit button"}, {"timstamp": "2017-02-17 10:56", "user": "jarard075", "body": ""}, {"timstamp": "2017-02-17 10:57", "user": "arlekin", "body": "Pyrrhus666: how come it is the first time i hear about it ?"}, {"timstamp": "2017-02-17 10:57", "user": "icebox", "body": "arlekin: sure... you may contribute there... open to any PR :)"}, {"timstamp": "2017-02-17 10:57", "user": "Pyrrhus666", "body": "arlekin, youre not around often enough ;)"}, {"timstamp": "2017-02-17 10:57", "user": "Elarcis", "body": "arlekin: feel free to contribuet :D"}, {"timstamp": "2017-02-17 10:57", "user": "arlekin", "body": "Pyrrhus666: :( you wound me"}, {"timstamp": "2017-02-17 10:57", "user": "Elarcis", "body": "arlekin: WELL IT'S THE SECOND LINK IN THE TOPIC"}, {"timstamp": "2017-02-17 10:58", "user": "Elarcis", "body": "arlekin: TELLS A LOT ON YOU"}, {"timstamp": "2017-02-17 10:58", "user": "Elarcis", "body": "arlekin: :P"}, {"timstamp": "2017-02-17 10:58", "user": "arlekin", "body": "Elarcis: really ? come on... be serious... who reads the title"}, {"timstamp": "2017-02-17 10:58", "user": "arlekin", "body": "jarard075: well it seems to work fine... (?)"}, {"timstamp": "2017-02-17 10:59", "user": "jarard075", "body": "in my plunkr the 'ok' button calls line 65, can I instead call line 43"}, {"timstamp": "2017-02-17 10:59", "user": "Elarcis", "body": "Pyrrhus666: although I'm not sure I manage it as much as iceboxc"}, {"timstamp": "2017-02-17 10:59", "user": "jarard075", "body": "I guess my question is should there be a ModalInstanceCtrl for each modal I require"}, {"timstamp": "2017-02-17 11:00", "user": "jarard075", "body": "or is the ModalInstanceCtrl re-used, I would have thought so"}, {"timstamp": "2017-02-17 11:00", "user": "arlekin", "body": "jarard075: i guess you could pass it in resolve"}, {"timstamp": "2017-02-17 11:00", "user": "arlekin", "body": "or in some other way put it on$uibModalInstance"}, {"timstamp": "2017-02-17 11:00", "user": "arlekin", "body": "don't remember details right now"}, {"timstamp": "2017-02-17 11:01", "user": "jarard075", "body": "if the ModalInstanceCtrl is re-used it doesn't seem like a good approach to put specific logic there"}, {"timstamp": "2017-02-17 11:03", "user": "jarard075", "body": "arlekin, the resolve at line 22? it doesn't seme to be called"}, {"timstamp": "2017-02-17 11:04", "user": "arlekin", "body": "jarard075: should be"}, {"timstamp": "2017-02-17 11:05", "user": "arlekin", "body": "tho im no authority on bootstrap, i rather dislike the thing"}, {"timstamp": "2017-02-17 11:06", "user": "jarard075", "body": "the resolve is fired on the initial animate/popup - not the click"}, {"timstamp": "2017-02-17 11:07", "user": "jarard075", "body": "Pyrrhus666, can I ask your opinion on a general angular approach/structure"}, {"timstamp": "2017-02-17 11:08", "user": "Pyrrhus666", "body": "jarard075, sure. Im not the master-angularist around here, but I can try :)"}, {"timstamp": "2017-02-17 11:09", "user": "jarard075", "body": "it's more question about components and instance"}, {"timstamp": "2017-02-17 11:09", "user": "jarard075", "body": "see my plunker:"}, {"timstamp": "2017-02-17 11:09", "user": "jarard075", "body": "line 57 has ModalInstanceCtrl"}, {"timstamp": "2017-02-17 11:09", "user": "rand0m", "body": "sorry I was in a standup :)"}, {"timstamp": "2017-02-17 11:09", "user": "rand0m", "body": "haay icebox Pyrrhus666 Elarcis"}, {"timstamp": "2017-02-17 11:10", "user": "Pyrrhus666", "body": "morning rand0m"}, {"timstamp": "2017-02-17 11:10", "user": "jarard075", "body": "is that specific to my single modal, or sohuld all modals use this?"}, {"timstamp": "2017-02-17 11:10", "user": "icebox", "body": "rand0m: hey"}, {"timstamp": "2017-02-17 11:10", "user": "rand0m", "body": ":>"}, {"timstamp": "2017-02-17 11:10", "user": "rand0m", "body": "the BMW company let me know that they dont want me"}, {"timstamp": "2017-02-17 11:11", "user": "rand0m", "body": "their loss"}, {"timstamp": "2017-02-17 11:11", "user": "jarard075", "body": "obviously different modals will fire different logic, so does my logic for the click go in that ModalInstanceController or in my other main controller"}, {"timstamp": "2017-02-17 11:11", "user": "Pyrrhus666", "body": "jarard075, when not using components, you can assign the controller to anything you want, but that often doesnt make sense. in a component, you have one controller thats reused with every instance of that component."}, {"timstamp": "2017-02-17 11:12", "user": "Pyrrhus666", "body": "jarard075, so, if you make your prompt thing a module, the controller is used with every instance of it."}, {"timstamp": "2017-02-17 11:12", "user": "Pyrrhus666", "body": "s/module/component/"}, {"timstamp": "2017-02-17 11:12", "user": "Pyrrhus666", "body": "(using the wrong terms makes it very confusing :))"}, {"timstamp": "2017-02-17 11:13", "user": "jarard075", "body": "i'm so lost now"}, {"timstamp": "2017-02-17 11:13", "user": "Pyrrhus666", "body": "jarard075, have you read the components documentation yesterday ?"}, {"timstamp": "2017-02-17 11:13", "user": "jarard075", "body": "i'll read it now, it will further confuse me for sure"}, {"timstamp": "2017-02-17 11:14", "user": "jarard075", "body": "I am questioning the validity of me doing this though, it's crazy complex for such a simple feature don't you think?"}, {"timstamp": "2017-02-17 11:15", "user": "arlekin", "body": "jarard075: or you could just use mine modal service #shamelessPlug"}, {"timstamp": "2017-02-17 11:15", "user": "jarard075", "body": "arlekin, is that the thing you told me about?"}, {"timstamp": "2017-02-17 11:15", "user": "arlekin", "body": "on the plus side its dead simple, less than 100 LOC and you could always ask the author (me) on the other hand there are no UI goodies in it"}, {"timstamp": "2017-02-17 11:15", "user": "Pyrrhus666", "body": "jarard075, actually modals in and of itself are not as simple as they might seem ;)"}, {"timstamp": "2017-02-17 11:15", "user": "arlekin", "body": "yup"}, {"timstamp": "2017-02-17 11:16", "user": "jarard075", "body": "but you know I had my own logic actually working and doing all I required, I just couldn't close the modal"}, {"timstamp": "2017-02-17 11:16", "user": "arlekin", "body": "Pyrrhus666: well, ain't that hard neither - i made most of it in the space of one day more or less and so far im rather pleased with it"}, {"timstamp": "2017-02-17 11:16", "user": "jarard075", "body": "this bootstap approach that requires 2 controllers and component, really?"}, {"timstamp": "2017-02-17 11:17", "user": "jarard075", "body": "i don't care which language we are dealing with, that just doesn't square with me"}, {"timstamp": "2017-02-17 11:17", "user": "arlekin", "body": "bootstrap is bloated shit"}, {"timstamp": "2017-02-17 11:17", "user": "Pyrrhus666", "body": "jarard075, it requires one component, which is a bundle of controller and template."}, {"timstamp": "2017-02-17 11:17", "user": "jarard075", "body": "arlekin, what is the link pls"}, {"timstamp": "2017-02-17 11:17", "user": "arlekin", "body": "at least for me its usually faster to roll my own widget than to wade through all the weird things there"}, {"timstamp": "2017-02-17 11:17", "user": "Pyrrhus666", "body": "jarard075, the second controller you talk about is the controller in your app calling the modal."}, {"timstamp": "2017-02-17 11:18", "user": "arlekin", "body": "jarard075: for my modal ?"}, {"timstamp": "2017-02-17 11:18", "user": "jarard075", "body": "yeah so why can't it be a component and single controller"}, {"timstamp": "2017-02-17 11:18", "user": "Pyrrhus666", "body": "it _is_ a single component and a controller."}, {"timstamp": "2017-02-17 11:18", "user": "jarard075", "body": "instead there is a main controller, controlelr instance and a component"}, {"timstamp": "2017-02-17 11:19", "user": "Pyrrhus666", "body": "a component _is_ a controller plus a template."}, {"timstamp": "2017-02-17 11:19", "user": "jarard075", "body": "all for \"input some data, process, thanks close\""}, {"timstamp": "2017-02-17 11:20", "user": "jarard075", "body": "3 days :)"}, {"timstamp": "2017-02-17 11:20", "user": "icebox", "body": "jarard075: ng-simple-modal"}, {"timstamp": "2017-02-17 11:20", "user": "Pyrrhus666", "body": "jarard075, that it took you three days says more about you than it does about angularjs ;)"}, {"timstamp": "2017-02-17 11:21", "user": "arlekin", "body": "Pyrrhus666: no need to be harsh"}, {"timstamp": "2017-02-17 11:21", "user": "jarard075", "body": "clearly"}, {"timstamp": "2017-02-17 11:21", "user": "icebox", "body": "OT: \"it's\" vs. \"its\" typo (or not) is very annoying... I found it quite often in the techinical docs"}, {"timstamp": "2017-02-17 11:22", "user": "Pyrrhus666", "body": "sorry, but it seems theres some deep lack of understanding, and whining about it pisses me off."}, {"timstamp": "2017-02-17 11:22", "user": "jarard075", "body": "but it should be considered that this is the experience"}, {"timstamp": "2017-02-17 11:22", "user": "arlekin", "body": "icebox: i just don't notice it anymore really (shame on me) and go off the context"}, {"timstamp": "2017-02-17 11:22", "user": "arlekin", "body": "Pyrrhus666: whining in such cases stems from frustration caused by such lack of understanding"}, {"timstamp": "2017-02-17 11:22", "user": "icebox", "body": "arlekin: yep... but it is very serious grammar error"}, {"timstamp": "2017-02-17 11:23", "user": "Pyrrhus666", "body": "icebox, and then theres the <unconvertable> theyre their there <unconvertable> thing..."}, {"timstamp": "2017-02-17 11:23", "user": "arlekin", "body": "and unless someone isn't totally Indian about it there is no need to get pissed"}, {"timstamp": "2017-02-17 11:23", "user": "icebox", "body": "Pyrrhus666: yep... same source :)"}, {"timstamp": "2017-02-17 11:23", "user": "jarard075", "body": "arlekin, actually I came across your implementation when I researching"}, {"timstamp": "2017-02-17 11:23", "user": "jarard075", "body": "i think I passed on it as I didn't see a demo"}, {"timstamp": "2017-02-17 11:23", "user": "arlekin", "body": "jarard075: nice!"}, {"timstamp": "2017-02-17 11:23", "user": "Pyrrhus666", "body": "arlekin, I know. but we had this exact discussion yesterday."}, {"timstamp": "2017-02-17 11:24", "user": "arlekin", "body": "Pyrrhus666: then i guess you had it the wrong way"}, {"timstamp": "2017-02-17 11:24", "user": "Pyrrhus666", "body": "arlekin, que ?"}, {"timstamp": "2017-02-17 11:25", "user": "arlekin", "body": "jarard075: well there are some sample files, but there is no demo since the unopinionated-ness of the modal - there is no UI layer, no css whatsoever except for those related to positioning and stuff"}, {"timstamp": "2017-02-17 11:25", "user": "jarard075", "body": "what does it use for styling?"}, {"timstamp": "2017-02-17 11:25", "user": "arlekin", "body": "jarard075: css"}, {"timstamp": "2017-02-17 11:25", "user": "jarard075", "body": "but it's not bootstrap right?"}, {"timstamp": "2017-02-17 11:26", "user": "arlekin", "body": "jarard075: there are no dependencies, if you want to put bootstrap classes on whatever template you will have you are welcome to"}, {"timstamp": "2017-02-17 11:26", "user": "arlekin", "body": "jarard075:"}, {"timstamp": "2017-02-17 11:27", "user": "arlekin", "body": "jarard075: that's basically all html and css provided by lib, all other things come from user (or the css framework used by user obviously)"}, {"timstamp": "2017-02-17 11:33", "user": "arlekin", "body": "icebox: is there some resource for common usages of webpack - i'd like to bundle css but i don't know how, and webpacks docs don't really have it on hand"}, {"timstamp": "2017-02-17 11:34", "user": "icebox", "body": "arlekin: ehehe... I put on gist my config :)"}, {"timstamp": "2017-02-17 11:34", "user": "arlekin", "body": "icebox: nvm i just \"discovered\" code-splitting section ;)"}, {"timstamp": "2017-02-17 11:34", "user": "icebox", "body": "arlekin: :)"}, {"timstamp": "2017-02-17 11:36", "user": "icebox", "body": "arlekin: anyway you need to use ExtractTextPlugin, configured in plugins, and ExtractTextPlugin.extract, configured in loaders"}, {"timstamp": "2017-02-17 11:36", "user": "arlekin", "body": "icebox: thanks ^^"}, {"timstamp": "2017-02-17 11:44", "user": "arlekin", "body": "icebox: i have a 3 quesitons: 1) whats up with the module: {rules syntax ? how come js bundling has different syntax ? 2) i assume that code splitting css (taken from the docs) will just find all css files and put them in one bundle - but in which order ?"}, {"timstamp": "2017-02-17 11:44", "user": "arlekin", "body": "icebox: and 3) how does it work with the pattern of importing the css in .js files (and what for really"}, {"timstamp": "2017-02-17 11:53", "user": "icebox", "body": "arlekin:"}, {"timstamp": "2017-02-17 11:53", "user": "arlekin", "body": "icebox: and its webpack 2 ?"}, {"timstamp": "2017-02-17 11:54", "user": "icebox", "body": "arlekin: yep... a bit old... loaders is rules and loader is use :)"}, {"timstamp": "2017-02-17 11:54", "user": "arlekin", "body": "icebox: ok, and what about my questions #2 and #3 ?"}, {"timstamp": "2017-02-17 11:55", "user": "icebox", "body": "arlekin: in js... import \"./app.css\" or import \"bootstrap.css\""}, {"timstamp": "2017-02-17 11:56", "user": "icebox", "body": "arlekin: that is #3... does it make sense?"}, {"timstamp": "2017-02-17 11:57", "user": "arlekin", "body": "icebox: well the #3 was related to #2, i mean if i already bundled all of css, then why import them in .js ?"}, {"timstamp": "2017-02-17 11:58", "user": "icebox", "body": "arlekin: they are two different ways to bundle css files... it is nice in the component js file the reference import \"./mycomponent.css\""}, {"timstamp": "2017-02-17 11:58", "user": "icebox", "body": "arlekin: even if css is global :)"}, {"timstamp": "2017-02-17 11:59", "user": "arlekin", "body": "icebox: ok, but order of css' matters so what decides the order of em in the bundle ?"}, {"timstamp": "2017-02-17 12:00", "user": "icebox", "body": "arlekin: it is loaded in the order you call the requires"}, {"timstamp": "2017-02-17 12:00", "user": "arlekin", "body": "icebox: so the imports in js matters after all for other purposes than readablitiy ?"}, {"timstamp": "2017-02-17 12:01", "user": "icebox", "body": "arlekin: correct"}, {"timstamp": "2017-02-17 12:01", "user": "icebox", "body": "arlekin: I mean..."}, {"timstamp": "2017-02-17 12:02", "user": "icebox", "body": "arlekin: if you load css files via entries, you don't need to import them... otherwise import the css files is the way to bundle them"}, {"timstamp": "2017-02-17 12:02", "user": "arlekin", "body": "icebox: i didn't understand what you said just now"}, {"timstamp": "2017-02-17 12:03", "user": "icebox", "body": "arlekin: ok... how do you load css files?"}, {"timstamp": "2017-02-17 12:03", "user": "arlekin", "body": "icebox: by link tag"}, {"timstamp": "2017-02-17 12:03", "user": "icebox", "body": "arlekin: like app.bundle.css?"}, {"timstamp": "2017-02-17 12:03", "user": "arlekin", "body": "icebox: i wish"}, {"timstamp": "2017-02-17 12:03", "user": "icebox", "body": "arlekin: ok... how do you build that file?"}, {"timstamp": "2017-02-17 12:04", "user": "arlekin", "body": "icebox: currently i don't that's one of the reasons i decided to start using webpack"}, {"timstamp": "2017-02-17 12:04", "user": "arlekin", "body": "icebox: so i have several link tags with my css"}, {"timstamp": "2017-02-17 12:05", "user": "icebox", "body": "arlekin: ok... if you add... import \"./app.css\"... webpack bundles that css (based on some configuration)"}, {"timstamp": "2017-02-17 12:06", "user": "arlekin", "body": "icebox: so basically webpack looks in my js to learn how to bundle css ?"}, {"timstamp": "2017-02-17 12:06", "user": "icebox", "body": "arlekin: yes"}, {"timstamp": "2017-02-17 12:06", "user": "arlekin", "body": "icebox: so basically webpack cannot bundle css itself, without corresponding js"}, {"timstamp": "2017-02-17 12:06", "user": "icebox", "body": "arlekin: webpack reads \"imports\" and by configuration takes some action"}, {"timstamp": "2017-02-17 12:07", "user": "arlekin", "body": "icebox: but that action can be producing one bundled .css file ?"}, {"timstamp": "2017-02-17 12:07", "user": "icebox", "body": "arlekin: it can... this is the reason I asked how you bundled the css :)"}, {"timstamp": "2017-02-17 12:07", "user": "arlekin", "body": "icebox: ok, that's the point i don't get, how to differentiate between that two ways ?"}, {"timstamp": "2017-02-17 12:07", "user": "arlekin", "body": "i'd like to go with the import in js one cause it would fit nicely into app structure imho"}, {"timstamp": "2017-02-17 12:08", "user": "icebox", "body": "arlekin: vendor: [..., bootstrap.css, ...] vs. import \"boostrap.css\" :)"}, {"timstamp": "2017-02-17 12:08", "user": "icebox", "body": "arlekin: the first one is the config, the second one in js"}, {"timstamp": "2017-02-17 12:09", "user": "arlekin", "body": "icebox: ok, so i can either not mention .css in my vendor and go with imports, or make do without imports but then i'd need to specify all css in vendor ?"}, {"timstamp": "2017-02-17 12:09", "user": "icebox", "body": "arlekin: same result... bundle.css, if it is configured :)"}, {"timstamp": "2017-02-17 12:09", "user": "arlekin", "body": "icebox: i see, thanks"}, {"timstamp": "2017-02-17 12:10", "user": "icebox", "body": "arlekin: generally speaking, you use only one approach"}, {"timstamp": "2017-02-17 12:10", "user": "arlekin", "body": "icebox: obviously"}, {"timstamp": "2017-02-17 12:11", "user": "icebox", "body": "arlekin: but if you add the css in the list and then you import it, webpack bundles it only once, if it is configured correctly :)"}, {"timstamp": "2017-02-17 12:11", "user": "arlekin", "body": "icebox: that"}, {"timstamp": "2017-02-17 12:11", "user": "arlekin", "body": "*thats the catch - configured correctly"}, {"timstamp": "2017-02-17 12:11", "user": "icebox", "body": "arlekin: that is CommonsChunkPlugin part :)"}, {"timstamp": "2017-02-17 12:12", "user": "icebox", "body": "arlekin: does it make sense?"}, {"timstamp": "2017-02-17 12:12", "user": "arlekin", "body": "icebox: as much as anything i guess :D"}, {"timstamp": "2017-02-17 12:13", "user": "icebox", "body": "arlekin: imagine that configuration in the gist... angular is listed in vendor... then... import \"angular\"... angular in bundled in vendor.js only once... the same for a css resource"}, {"timstamp": "2017-02-17 12:14", "user": "icebox", "body": "*angular is bundled"}, {"timstamp": "2017-02-17 12:15", "user": "icebox", "body": "arlekin: webpack (or another bunlder) is highly confusing... you need a bit to be used and you need to give a few tries before grasping it"}, {"timstamp": "2017-02-17 12:15", "user": "arlekin", "body": "icebox: i realize that, more and more now, but well... i'll wade through it"}, {"timstamp": "2017-02-17 12:16", "user": "icebox", "body": "arlekin: and it is confusing because it needs to deal with a lot of use cases and edge cases out there... so great flexibility at the cost of high complexity"}, {"timstamp": "2017-02-17 12:17", "user": "arlekin", "body": "icebox: ain't nothin' in this world for free"}, {"timstamp": "2017-02-17 12:17", "user": "arlekin", "body": "also... ain't no rest for the wicked"}, {"timstamp": "2017-02-17 12:18", "user": "icebox", "body": "arlekin: for instance, when you have ES5 and ES2015 libs, minified and not minified libs, external libs, different resources and so on... the work of the bundler is hard :)"}, {"timstamp": "2017-02-17 12:19", "user": "arlekin", "body": "icebox: careful, don't freak me out ;)"}, {"timstamp": "2017-02-17 12:20", "user": "icebox", "body": ":P"}, {"timstamp": "2017-02-17 12:24", "user": "icebox", "body": "arlekin: usually the import approach is better, because the goal is reducing at minimum the configuration :)"}, {"timstamp": "2017-02-17 12:30", "user": "icebox", "body": "arlekin: where? general libs like boostrap, in app.module.js... while component css in foo.module.js"}], "label": "other"}
{"id": "93d59526", "body": "", "comments": [{"timstamp": "2016-09-21 21:12", "user": "ReScO", "body": "Can i use AngularJS to display realtime data?"}, {"timstamp": "2016-09-21 21:12", "user": "SaltyCatFish", "body": "ReScO: It won't be realtime"}, {"timstamp": "2016-09-21 21:12", "user": "SaltyCatFish", "body": "ReScO: Angular goes on a digest cycle"}, {"timstamp": "2016-09-21 21:13", "user": "SaltyCatFish", "body": "ReScO: id think it'd be accurate to a second or two"}, {"timstamp": "2016-09-21 21:13", "user": "ReScO", "body": "SaltyCatFish: i need realtime performance :("}, {"timstamp": "2016-09-21 21:14", "user": "jdummy", "body": "angular will not stop you from displaying realtime data"}, {"timstamp": "2016-09-21 21:15", "user": "jdummy", "body": "ReScO: where will the data come from?"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "angular wants to manage your view for you. If you're pushing data into your app without angular knowing, it will not update the view"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "the solution is simply to tell it to update the view"}, {"timstamp": "2016-09-21 21:16", "user": "ReScO", "body": "jdummy: a python script, it comes in randomly i guess."}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "but how will JavaScript get the data? polling http requests?"}, {"timstamp": "2016-09-21 21:16", "user": "jdummy", "body": "websockets?"}, {"timstamp": "2016-09-21 21:18", "user": "ReScO", "body": "websockets probably, if possible Redis?"}, {"timstamp": "2016-09-21 21:18", "user": "ReScO", "body": "could just pump WS data to AngularJS"}, {"timstamp": "2016-09-21 21:18", "user": "jdummy", "body": "yep, you just do it"}, {"timstamp": "2016-09-21 21:19", "user": "jdummy", "body": "if you're pushing new data onto a controller $scope *outside* of an angular event or async function, you'll just need to tell angular that something has changed. Usually $timeout works well for that purpose"}, {"timstamp": "2016-09-21 21:19", "user": "jdummy", "body": "in your controller: $timeout(function(){ // fetch some data and push it into a scope array })"}, {"timstamp": "2016-09-21 21:20", "user": "ReScO", "body": "I haven't ever worked with Angular yet, but i'm trying to decide what will give me a GUI for what i'm making"}, {"timstamp": "2016-09-21 21:20", "user": "ReScO", "body": "I saw React and Angular2 going head to head according to the internet, but i'm not even sure it's going to work for what i'm trying to do"}, {"timstamp": "2016-09-21 21:21", "user": "jdummy", "body": "my opinion is that angular experience will do well for you in the long run. but react is great engineering as well (I don't have experience with react though)"}, {"timstamp": "2016-09-21 21:21", "user": "ReScO", "body": "Basically, i'm trying to make a tradebot in python, but the GUI stuff from python is terrible, so i want to use something different, and \"real-time\" fast for when i push data from, i guess, the websocket"}], "label": "other"}
{"id": "93d594cb", "body": "", "comments": [{"timstamp": "2017-02-10 10:55", "user": "heartburn", "body": "\"The real programmers will say <unconvertable> Yeah it works but youre leaking memory everywhere. Perhaps we should fix that. <unconvertable> Ill just restart Apache every 10 requests.\""}, {"timstamp": "2017-02-10 10:56", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 10:58", "user": "Pyrrhus666", "body": "heartburn, a really lazy person makes apache do that itself."}, {"timstamp": "2017-02-10 10:58", "user": "heartburn", "body": "C R O N S U P R E M A C Y"}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, nah, apache has it builtin."}, {"timstamp": "2017-02-10 10:59", "user": "Pyrrhus666", "body": "heartburn, its actually very useful, due to all the other programmers making leaky stuff."}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: well... that post proves the opposite :)"}, {"timstamp": "2017-02-10 11:01", "user": "icebox", "body": "heartburn: what is the difference between Talent or Even Passion and Hard Work? :)"}, {"timstamp": "2017-02-10 11:02", "user": "heartburn", "body": "for hard work, you get paid."}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: in an interview the journalist said to a great violinist he had a great talent... the violinist replied for all the life he had been playing 12 hours per day"}, {"timstamp": "2017-02-10 11:04", "user": "heartburn", "body": "well, i don't see a contradiction. :o)"}, {"timstamp": "2017-02-10 11:04", "user": "icebox", "body": "heartburn: exactly... so the title is false :)"}, {"timstamp": "2017-02-10 11:06", "user": "Pyrrhus666", "body": "talent does play into it though, because not everybody can play the violin, not even after doing it 30 years 12 hours a day..."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "well, i used to code 8 hours a day for a few years."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "was it a passionate experience? fuck no."}, {"timstamp": "2017-02-10 11:06", "user": "heartburn", "body": "but hey, i did pretty well anyway. they wanted to promote me, but i quit instead."}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "what i learned from that is, what one calls 'an elegant abstraction' another would call 'over-engineering'."}, {"timstamp": "2017-02-10 11:08", "user": "Pyrrhus666", "body": "heartburn, so, talented..."}, {"timstamp": "2017-02-10 11:08", "user": "icebox", "body": "heartburn: X Doesnt Require Talent or Even Passion... you can say it for anything... and that statement is false until we define Talend and Passion :)"}, {"timstamp": "2017-02-10 11:08", "user": "heartburn", "body": "lol no."}, {"timstamp": "2017-02-10 11:09", "user": "Pyrrhus666", "body": "icebox, we can agree that theyre not the same, at least ?"}, {"timstamp": "2017-02-10 11:09", "user": "icebox", "body": "Pyrrhus666: agreed"}, {"timstamp": "2017-02-10 11:09", "user": "heartburn", "body": "don't go all philosophical on me m8."}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: :P"}, {"timstamp": "2017-02-10 11:10", "user": "icebox", "body": "heartburn: sorry... I am too \"meta\" :)"}, {"timstamp": "2017-02-10 11:11", "user": "icebox", "body": "*too much"}, {"timstamp": "2017-02-10 11:13", "user": "heartburn", "body": ""}, {"timstamp": "2017-02-10 11:16", "user": "heartburn", "body": "my loins are glowing with passion for programming."}, {"timstamp": "2017-02-10 11:18", "user": "heartburn", "body": "gonna put it in my cv."}], "label": "other"}
{"id": "93d59530", "body": "", "comments": [{"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:03", "user": "DD2_", "body": "??"}, {"timstamp": "2016-12-15 08:06", "user": "DD2_", "body": "hey guys i have to use one rfid listener so can you please help me out"}, {"timstamp": "2016-12-15 08:18", "user": "zomg", "body": "DD2_: what does that have to do with angular?"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "i mean"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "there is a machine and card to scan rfid"}, {"timstamp": "2016-12-15 08:19", "user": "DD2_", "body": "but how i will get that rfid code from scanner and i have to send http request to server"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "is it the way to send request??"}, {"timstamp": "2016-12-15 08:21", "user": "DD2_", "body": "and which plugin we need to use"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg_>"}, {"timstamp": "2016-12-15 08:24", "user": "DD2_", "body": "<zomg> r u there..??"}, {"timstamp": "2016-12-15 08:24", "user": "zomg", "body": "DD2_: so is this like a USB rfid scanner?"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "nope there is a machine like ATM screen"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "or we can say punch machine"}, {"timstamp": "2016-12-15 08:25", "user": "DD2_", "body": "and rfid card"}, {"timstamp": "2016-12-15 08:25", "user": "zomg", "body": "so do you know how to read the rfid card?"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "no i dont have any information about it"}, {"timstamp": "2016-12-15 08:27", "user": "DD2_", "body": "i just want to use one listener which will just watch on it"}, {"timstamp": "2016-12-15 08:28", "user": "zomg", "body": "right, and is this program you're writing going to run in a browser on that computer?"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "yeah"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "actuly we r just developing some angular phase which is going to implement into that machine"}, {"timstamp": "2016-12-15 08:30", "user": "DD2_", "body": "which windows base machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "okay"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we r just developing front end side"}, {"timstamp": "2016-12-15 08:31", "user": "DD2_", "body": "we have to complete this step"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "so what you would need to do is have some kind of a way to query the device on the machine"}, {"timstamp": "2016-12-15 08:31", "user": "zomg", "body": "browsers don't have direct access to devices like this"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "I know some USB-based barcode scanners basically are keyboards, as in they produce keyboard events when you scan a barcode"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "if your rfid scanner worked like this, that would be the easiest way to set it up"}, {"timstamp": "2016-12-15 08:32", "user": "zomg", "body": "but I'm guessing that isn't the case here, so what you would need to do is have some program running on the computer, which can access the device driver directly"}, {"timstamp": "2016-12-15 08:33", "user": "zomg", "body": "then, you set up the program to run a simple web server, and your angular application can just do an ajax request to it"}, {"timstamp": "2016-12-15 08:34", "user": "zomg", "body": "(or alternatively you could possibly embed webkit into a windows application, where you could provide a custom API for the device)"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "yeah u right ill write one api to call ajax but my question is"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "how it will continuously watch on it"}, {"timstamp": "2016-12-15 08:35", "user": "DD2_", "body": "there is rfid listener"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "plugin"}, {"timstamp": "2016-12-15 08:36", "user": "DD2_", "body": "i saw but m not getting how it will work and how to setup"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "well if you were to build an embedded webkit thing, then you could implement a custom API for it which can call a JS callback when the rfid listener sends data"}, {"timstamp": "2016-12-15 08:36", "user": "zomg", "body": "but if you can't / don't want to do that, then you'd probably use either polling on the web server, or a websocket"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "polling on the web server means what??"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "can u plz explain"}, {"timstamp": "2016-12-15 08:37", "user": "zomg", "body": "repeatedly sending an ajax request at specific intervals"}, {"timstamp": "2016-12-15 08:37", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": "i was talking abt this one"}, {"timstamp": "2016-12-15 08:39", "user": "DD2_", "body": ""}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "<zomg>"}, {"timstamp": "2016-12-15 08:40", "user": "DD2_", "body": "but i dont know what exactly he's doing]"}, {"timstamp": "2016-12-15 08:40", "user": "zomg", "body": "hard to say, none of the links in that seem to work so I can't look at the source :)"}, {"timstamp": "2016-12-15 08:41", "user": "zomg", "body": "you could try installing it I guess and seeing if you can make use of it"}, {"timstamp": "2016-12-15 08:41", "user": "wafflejock", "body": "DD2_, will always be specific to the hardware basically"}, {"timstamp": "2016-12-15 08:42", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "yeah, that's entirely possible unless there's some standard for it"}, {"timstamp": "2016-12-15 08:42", "user": "wafflejock", "body": "DD2_, there are various protocols used for two wire or serial communication but with stuff like this it varies a lot"}, {"timstamp": "2016-12-15 08:42", "user": "zomg", "body": "you might end up having to write a program in C# or such to deal with it tbh"}, {"timstamp": "2016-12-15 08:43", "user": "zomg", "body": "once upon a time I worked on some embedded JS stuff on phones, but thankfully we had another team which dealt with the device-specifics so we could just build to their api :P"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, on the making a web server side there are lots of built in node things to make that part simple"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "DD2_, the hard part will be reading the data out of the device"}, {"timstamp": "2016-12-15 08:43", "user": "wafflejock", "body": "well potentially hard"}, {"timstamp": "2016-12-15 08:44", "user": "wafflejock", "body": "sometimes it's cake just depends on the device and target audience"}, {"timstamp": "2016-12-15 08:45", "user": "DD2_", "body": "so that means its depend on hardware which we are using of we got details abt it then we can think about it right??"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "I've been messing around with at home PCB making lately, fun making your own hardware"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "DD2_, yeah or can make your hardware choices in part based on the software already there and how easy it'll be to integrate with"}, {"timstamp": "2016-12-15 08:45", "user": "wafflejock", "body": "depends on how big of a deal that is vs user experience and other features"}, {"timstamp": "2016-12-15 08:46", "user": "DD2_", "body": "ohk"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "so finally m going to send a mail to one of my frnd"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "first we need to fixed all this hardware solution"}, {"timstamp": "2016-12-15 08:47", "user": "DD2_", "body": "then we can think abt it"}, {"timstamp": "2016-12-15 08:48", "user": "wafflejock", "body": "yeah and while choosing hardware good to reach out to their support to see if they respond and can help answer questions since you may have to work with them to get answers if documentation isn't great on their site"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "yeah sure"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "thnk u soooooooooooooooooo muchhhhhhhhhh"}, {"timstamp": "2016-12-15 08:48", "user": "DD2_", "body": "(y)"}], "label": "other"}
{"id": "93d594f1", "body": "", "comments": [{"timstamp": "2019-03-26 11:32", "user": "Paradisee", "body": "is there any cool clock picker for angular?"}, {"timstamp": "2019-03-26 11:33", "user": "dennisd", "body": "yes"}, {"timstamp": "2019-03-26 11:33", "user": "dennisd", "body": "second"}, {"timstamp": "2019-03-26 11:33", "user": "dennisd", "body": "Paradisee, @mat-datetimepicker"}, {"timstamp": "2019-03-26 11:33", "user": "dennisd", "body": "I use that one"}, {"timstamp": "2019-03-26 11:34", "user": "Paradisee", "body": "is there any control on the input?"}, {"timstamp": "2019-03-26 11:35", "user": "dennisd", "body": "Paradisee, you mean like setting the value from ng?"}, {"timstamp": "2019-03-26 11:35", "user": "dennisd", "body": "or the format?"}, {"timstamp": "2019-03-26 11:35", "user": "Paradisee", "body": "like ppl cannot modify the value using the input"}, {"timstamp": "2019-03-26 11:36", "user": "Paradisee", "body": "or insert different formats or whatever"}, {"timstamp": "2019-03-26 11:36", "user": "dennisd", "body": "havent done that exactly, but I presume its safe to say that theres a way :p"}, {"timstamp": "2019-03-26 11:37", "user": "Paradisee", "body": "if i use yarn to install it"}, {"timstamp": "2019-03-26 11:37", "user": "Paradisee", "body": "will it be able using npm instlal?"}, {"timstamp": "2019-03-26 11:38", "user": "dennisd", "body": "I use npm, not sure about yarn... never used it"}, {"timstamp": "2019-03-26 11:38", "user": "Paradisee", "body": ""}, {"timstamp": "2019-03-26 11:38", "user": "Paradisee", "body": "it says to use yarn"}, {"timstamp": "2019-03-26 11:38", "user": "dennisd", "body": "I rarely listen"}, {"timstamp": "2019-03-26 11:38", "user": "dennisd", "body": "I just do"}], "label": "other"}
{"id": "73af7cfb", "body": "", "comments": [{"timstamp": "09:04", "user": "exonity01", "body": "how are you?"}, {"timstamp": "09:04", "user": "exonity01", "body": "morning"}], "label": "other"}
{"id": "93d59479", "body": "", "comments": [{"timstamp": "2019-02-07 13:07", "user": "d[10]", "body": "how i use jquery-ui in angular 7?"}, {"timstamp": "2019-02-07 13:07", "user": "d[10]", "body": "i installed it via npm install jquery-ui"}, {"timstamp": "2019-02-07 13:08", "user": "Elarcis", "body": "d[10]: don't mix jquery and angular, period."}, {"timstamp": "2019-02-07 13:08", "user": "d[10]", "body": "Elarcis i need a datepicker"}, {"timstamp": "2019-02-07 13:09", "user": "Elarcis", "body": "d[10]: they're both doing the same thing in different philosophies, it will only end up in troubles for you, and almost no one with experience in this channel will be able to help you with that"}, {"timstamp": "2019-02-07 13:09", "user": "d[10]", "body": "Elarcis ok"}, {"timstamp": "2019-02-07 13:11", "user": "Elarcis", "body": "d[10]: bold suggestion, but isn't the browser-provided date picker for input type=\"date\" enough?"}, {"timstamp": "2019-02-07 13:15", "user": "d[10]", "body": "Elarcis i now want html5 datepicker"}, {"timstamp": "2019-02-07 13:17", "user": "Elarcis", "body": "d[10]: that's what I'm saying, nowadays browsers provide native pickers for HTML5 date and time inputs"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": ";s"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "i'm using this"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": ""}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "but have no value property"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "only ngModel"}, {"timstamp": "2019-02-07 13:18", "user": "d[10]", "body": "i want not*"}, {"timstamp": "2019-02-07 13:19", "user": "d[10]", "body": "in my case i need value property"}, {"timstamp": "2019-02-07 13:26", "user": "Elarcis", "body": "\\me sadly throws his now-useless certiicate in the bin."}], "label": "other"}
{"id": "93d5948b", "body": "", "comments": [{"timstamp": "2016-09-08 11:19", "user": "bd-", "body": "performance is worse on ng2 for me so far"}, {"timstamp": "2016-09-08 11:20", "user": "Elarcis", "body": "bd-: you mean because you're making 1,000,000 loops in functions from the template? :D"}, {"timstamp": "2016-09-08 11:21", "user": "bd-", "body": "no"}, {"timstamp": "2016-09-08 11:21", "user": "arlekin", "body": "Elarcis: comments about deprecating replace"}, {"timstamp": "2016-09-08 11:21", "user": "bd-", "body": "in my actual app it was just the datepipe, i said that"}, {"timstamp": "2016-09-08 11:21", "user": "arlekin", "body": "Elarcis: and also, long story short, makes responsive design PITA"}, {"timstamp": "2016-09-08 11:21", "user": "bd-", "body": "but that wasn't even what i was talking about, it's when ng2 decides to zone change detection constantly"}, {"timstamp": "2016-09-08 11:22", "user": "bd-", "body": "so tab just sits using 25% cpu doing fuck all"}, {"timstamp": "2016-09-08 11:22", "user": "bd-", "body": "pretty difficult to find the cause of it other than commenting random shit and hope it stops"}, {"timstamp": "2016-09-08 11:22", "user": "Elarcis", "body": "zomg: I like it"}, {"timstamp": "2016-09-08 11:22", "user": "Elarcis", "body": "zomg: makes it clear what you have to put in it"}, {"timstamp": "2016-09-08 11:23", "user": "bd-", "body": "i thought ng1 method was fine"}, {"timstamp": "2016-09-08 11:23", "user": "bd-", "body": "dunno why they had to overcomplicate it"}, {"timstamp": "2016-09-08 11:23", "user": "Elarcis", "body": "bd-: ng1 method was that all attributes had the same syntax, regardless of what they expected"}, {"timstamp": "2016-09-08 11:23", "user": "zomg", "body": "yeah I guess the problem was it was unclear what was accepted"}, {"timstamp": "2016-09-08 11:23", "user": "bd-", "body": "yea and that was fine"}, {"timstamp": "2016-09-08 11:23", "user": "zomg", "body": "tbh it seems like it should just be an expression and that's it?"}, {"timstamp": "2016-09-08 11:23", "user": "Foxandxss", "body": "that wasn't fine"}, {"timstamp": "2016-09-08 11:23", "user": "Elarcis", "body": "bd-: not it's really easy to tell that (end) expects a function call"}, {"timstamp": "2016-09-08 11:23", "user": "zomg", "body": "Foxandxss: btw I've noticed a lot of peeps asking about unmet peer dependencies errors with ng2, not sure if this is a documentation issue :)"}, {"timstamp": "2016-09-08 11:24", "user": "Foxandxss", "body": "zomg: here?"}, {"timstamp": "2016-09-08 11:24", "user": "zomg", "body": "yeah"}, {"timstamp": "2016-09-08 11:24", "user": "Elarcis", "body": "bd-: and that [(fruit)] will do two ways binding"}, {"timstamp": "2016-09-08 11:24", "user": "Foxandxss", "body": "zomg: any example?"}, {"timstamp": "2016-09-08 11:24", "user": "zomg", "body": "> I've installed angularjs via npm but still get UNMET PEER DEPENDENCY @angular/core at 2 dot 0.0-rc.5"}, {"timstamp": "2016-09-08 11:24", "user": "Foxandxss", "body": "oh, that one sounds like an old NPM version"}, {"timstamp": "2016-09-08 11:24", "user": "zomg", "body": "someone was asking this before and he said something about npm v3 not installing peer deps by default"}, {"timstamp": "2016-09-08 11:24", "user": "zomg", "body": "and he ran npm install for it manually which fixed it"}, {"timstamp": "2016-09-08 11:25", "user": "Foxandxss", "body": "ping me if you see me here and I don't read"}, {"timstamp": "2016-09-08 11:25", "user": "Foxandxss", "body": "about [syntax]"}, {"timstamp": "2016-09-08 11:25", "user": "Foxandxss", "body": "when you had to maintain a library used by thousand of companies"}, {"timstamp": "2016-09-08 11:25", "user": "Foxandxss", "body": "you will start to love [syntax]"}, {"timstamp": "2016-09-08 11:25", "user": "zomg", "body": "heh"}, {"timstamp": "2016-09-08 11:25", "user": "Foxandxss", "body": "lot of issues everyday of \"this doesn't work, pls fix\" and you see people trying to use {{ }} where they shouldn't"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "people trying to use an string directly when they should use {{ }}"}, {"timstamp": "2016-09-08 11:26", "user": "Elarcis", "body": "^"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "people doing both at the same time <unconvertable> ?"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": "yeah that was the problem"}, {"timstamp": "2016-09-08 11:26", "user": "bd-", "body": "isn't that just they don't know what {{ }} does?"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "no"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "absolutely not"}, {"timstamp": "2016-09-08 11:26", "user": "bd-", "body": "how's that different to them misunderstanding what the new syntax does"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "no"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": "it seems like they'd probably confuse the different [](){} syntaxes too tbh"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": ":D"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": "well, I dunno"}, {"timstamp": "2016-09-08 11:26", "user": "Elarcis", "body": "bd-: no, sometimes you have to use \"{{ }}\" with '@' bindings"}, {"timstamp": "2016-09-08 11:26", "user": "Foxandxss", "body": "there is NO WAY of knowing if an attribute receives an string (a property in the scope) or an interpolation"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": "the whole expression thing wasn't explained very well"}, {"timstamp": "2016-09-08 11:26", "user": "bd-", "body": "well the docs usually say"}, {"timstamp": "2016-09-08 11:26", "user": "zomg", "body": "yeah, so why don't they just all accept an expression?"}, {"timstamp": "2016-09-08 11:26", "user": "Elarcis", "body": "^foxandxsss"}, {"timstamp": "2016-09-08 11:27", "user": "Foxandxss", "body": "bd-: sometimes it does, sometimes it doesn't"}, {"timstamp": "2016-09-08 11:27", "user": "Elarcis", "body": "bd-: well the docs also say what {{ }} does"}, {"timstamp": "2016-09-08 11:27", "user": "Elarcis", "body": ":D"}, {"timstamp": "2016-09-08 11:27", "user": "Foxandxss", "body": "if there is no doc, you need to look into the source YES OR YES to know what input it accepts"}, {"timstamp": "2016-09-08 11:27", "user": "bd-", "body": "or you just try it and if it doesn't work use the other one"}, {"timstamp": "2016-09-08 11:28", "user": "bd-", "body": "easy"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "and that is lovely"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "with [syntax] you don't need to \"just try\""}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "there is just one way"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "and only one"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "so you will never fail"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "you will never have to look at the docs"}, {"timstamp": "2016-09-08 11:28", "user": "bd-", "body": "no people will try it, get and error then change it"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "and you don't get angry users that doesn't know how to use it"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "I tell you that that isn't true bd-"}, {"timstamp": "2016-09-08 11:28", "user": "Foxandxss", "body": "I am sorry"}, {"timstamp": "2016-09-08 11:29", "user": "Foxandxss", "body": "the reality is hundred of people here and in the issue tracker doing stuff like"}, {"timstamp": "2016-09-08 11:29", "user": "Foxandxss", "body": "ng-click=\"{{foo()}}\""}, {"timstamp": "2016-09-08 11:29", "user": "Foxandxss", "body": "because they tried with \"foo()\" for some reason that didn't work so they try the other way"}, {"timstamp": "2016-09-08 11:29", "user": "Foxandxss", "body": "is like a pendrive"}, {"timstamp": "2016-09-08 11:29", "user": "Foxandxss", "body": "you try, no, it doesn't, you try the other way, no, it doesn't so you try again"}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "they try \"foo()\" for some reason it fails (wrong scope, they had foa instead of foo..."}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "so they try \"{{foo()}}\" and fails again"}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "so they ask"}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": ""}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "here I had to put badges in all the docs"}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "to say if that accepts something from the scope or a string"}, {"timstamp": "2016-09-08 11:30", "user": "Foxandxss", "body": "that is bad"}, {"timstamp": "2016-09-08 11:30", "user": "zomg", "body": "Yeah so is there some reason everything couldn't just accept an expression?"}, {"timstamp": "2016-09-08 11:31", "user": "zomg", "body": "(say like react does it)"}, {"timstamp": "2016-09-08 11:31", "user": "bd-", "body": "and what exactly prevents people fucking up the syntax in ng2 again?"}, {"timstamp": "2016-09-08 11:31", "user": "zomg", "body": "bd-: I dunno, to me it seems like they'll just try all the new syntaxes until one sticks :D"}, {"timstamp": "2016-09-08 11:31", "user": "Foxandxss", "body": "that is pretty clear of what an attribute does"}, {"timstamp": "2016-09-08 11:31", "user": "zomg", "body": "but I mean, I don't really know, the only reason it looks so weird to me is probably because I have absolutely no idea why it is there or what it does =)"}, {"timstamp": "2016-09-08 11:32", "user": "Foxandxss", "body": "so far people have been doing ok with the syntax"}, {"timstamp": "2016-09-08 11:32", "user": "Elarcis", "body": "Foxandxss, bd-: you're both discussing about two different things. Foxandxss is talking about intuitivity, and bd- is discussing about stupid coders"}, {"timstamp": "2016-09-08 11:32", "user": "Foxandxss", "body": "and I don't get people misusing them, which is nice"}, {"timstamp": "2016-09-08 11:32", "user": "bd-", "body": "yea i don't think most people will bother learning the differences"}, {"timstamp": "2016-09-08 11:32", "user": "Foxandxss", "body": "arnas: is pretty much about using an element when you want your directive to \"Create something\", say a calendar, a grid... and an attribute when it modifies the behavior of the element"}, {"timstamp": "2016-09-08 11:33", "user": "Foxandxss", "body": "stupid coders will always exist"}, {"timstamp": "2016-09-08 11:33", "user": "arnas", "body": "Foxandxss, but I was wondering what's the proper way to use component/directive, is it <hello-world></hello-world> or <h1 hello-world></h1>"}, {"timstamp": "2016-09-08 11:33", "user": "Foxandxss", "body": "but at least this time we are not giving them \"fuel\" to do it wrong"}, {"timstamp": "2016-09-08 11:33", "user": "Elarcis", "body": "Foxandxss, bd-: and I feel that bd- is always ranting about NG2 not fixing stupid developers"}, {"timstamp": "2016-09-08 11:33", "user": "Foxandxss", "body": "arnas: first one is an element directive, second one is an attribute directive, now go back to my sentence"}, {"timstamp": "2016-09-08 11:33", "user": "Elarcis", "body": "arnas: semantics"}, {"timstamp": "2016-09-08 11:33", "user": "Foxandxss", "body": "Elarcis: he was ranting about ng2 since day 1"}, {"timstamp": "2016-09-08 11:34", "user": "Elarcis", "body": "Foxandxss: day 1? really? :D"}, {"timstamp": "2016-09-08 11:34", "user": "bd-", "body": "and i'm a big proponent of ng1, once ng2 is better than ng1 i will stop complaining"}, {"timstamp": "2016-09-08 11:34", "user": "Foxandxss", "body": "yes"}, {"timstamp": "2016-09-08 11:34", "user": "Elarcis", "body": "bd-: you forgot to mention that 'better' is totally subjective"}, {"timstamp": "2016-09-08 11:35", "user": "bd-", "body": "yep, once i find it better, i will stop complaining"}, {"timstamp": "2016-09-08 11:35", "user": "Elarcis", "body": "bd-: and I feel like you'll always want to dislike something about it :D"}, {"timstamp": "2016-09-08 11:35", "user": "arnas", "body": "Foxandxss, oh, so if there's no DOM manipulation, we should use <hello-world></hello-world>, but if there's DOM manipulation, then we should add the attribute directive?"}, {"timstamp": "2016-09-08 11:35", "user": "Elarcis", "body": "bd-: like the other day where you purposely went to break it and ranted about it breaking while it didn't break angular 1.x :D"}, {"timstamp": "2016-09-08 11:35", "user": "bd-", "body": "what did i break?"}, {"timstamp": "2016-09-08 11:36", "user": "bd-", "body": "i don't recall"}, {"timstamp": "2016-09-08 11:36", "user": "Elarcis", "body": "arnas: quite"}, {"timstamp": "2016-09-08 11:36", "user": "Elarcis", "body": "bd-: the 1,000,000 loop"}, {"timstamp": "2016-09-08 11:36", "user": "arnas", "body": "ok, thx"}, {"timstamp": "2016-09-08 11:36", "user": "bd-", "body": "yes, a loop to simulate a slow running function for a plunkr"}, {"timstamp": "2016-09-08 11:36", "user": "Elarcis", "body": "arnas: also, dunno if Foxandxss is with me on that, but try to have the directive only do DOM edits"}, {"timstamp": "2016-09-08 11:36", "user": "bd-", "body": "how is that breaking it"}, {"timstamp": "2016-09-08 11:37", "user": "Foxandxss", "body": "Elarcis: you mean that all directives should do DOM edits?"}, {"timstamp": "2016-09-08 11:37", "user": "arnas", "body": "Foxandxss, directives for DOM manipulation and components for cases where there's no DOM manipulation"}, {"timstamp": "2016-09-08 11:38", "user": "Foxandxss", "body": "I have no idea about components, I left angular 1 before that happened"}, {"timstamp": "2016-09-08 11:38", "user": "zomg", "body": "arnas: that seems like a reasonable approach. Use components where you have... a component"}, {"timstamp": "2016-09-08 11:38", "user": "zomg", "body": ":)"}, {"timstamp": "2016-09-08 11:38", "user": "arnas", "body": "Foxandxss, so are you using ng2 now?"}, {"timstamp": "2016-09-08 11:38", "user": "icebox", "body": "arnas:"}, {"timstamp": "2016-09-08 11:38", "user": "Foxandxss", "body": "arnas: I work for the ng2 team, so yes"}, {"timstamp": "2016-09-08 11:39", "user": "Elarcis", "body": "Foxandxss: in angular 2, directives can't have templates, right?"}, {"timstamp": "2016-09-08 11:39", "user": "Foxandxss", "body": "right"}, {"timstamp": "2016-09-08 11:39", "user": "Elarcis", "body": "Foxandxss: so I guess it's better to not make them have templates in angularjs 1.x as well"}, {"timstamp": "2016-09-08 11:39", "user": "Elarcis", "body": "Foxandxss: to ease the upgrade"}, {"timstamp": "2016-09-08 11:39", "user": "arnas", "body": "Foxandxss, \"work for ng2 team\" as in you're the developer of ng2 or as in \"I work on a project that's using ng2\"?"}, {"timstamp": "2016-09-08 11:39", "user": "Foxandxss", "body": "sounds reasonable"}, {"timstamp": "2016-09-08 11:39", "user": "Foxandxss", "body": "arnas: I am part of the angular 2 team"}, {"timstamp": "2016-09-08 11:39", "user": "Foxandxss", "body": "that makes angular 2 possible"}, {"timstamp": "2016-09-08 11:39", "user": "lmatteis_", "body": "@Foxandxss ok"}, {"timstamp": "2016-09-08 11:39", "user": "Elarcis", "body": "Foxandxss: so if a directive doesn't have a template, it'll only add behaviorr and/or do DOM edits"}, {"timstamp": "2016-09-08 11:40", "user": "Elarcis", "body": "Foxandxss: components are layout, directives are behavior"}, {"timstamp": "2016-09-08 11:40", "user": "Foxandxss", "body": "sounds reasonable as well"}, {"timstamp": "2016-09-08 11:40", "user": "lmatteis_", "body": "Foxandxss: ok im getting this error: Uncaught (in promise) undefined"}, {"timstamp": "2016-09-08 11:42", "user": "arnas", "body": "Foxandxss, nice :)"}, {"timstamp": "2016-09-08 11:47", "user": "Foxandxss", "body": "Elarcis: 23\"? Or we back in the early 00s?"}, {"timstamp": "2016-09-08 11:47", "user": "Foxandxss", "body": "lmatteis_: that is not helpful either"}], "label": "other"}
{"id": "93d594e9", "body": "", "comments": [{"timstamp": "2016-07-12 10:46", "user": "mms_", "body": "some how with p its working fine"}, {"timstamp": "2016-07-12 10:46", "user": "mms_", "body": "not sure why with tr it fails"}, {"timstamp": "2016-07-12 10:46", "user": "Elarcis", "body": "mms_: IE, that's why :D"}, {"timstamp": "2016-07-12 10:46", "user": "icebox", "body": "mms_: we are waiting for your plunker :)"}, {"timstamp": "2016-07-12 10:47", "user": "Elarcis", "body": "mms_: have you tried ng-bind?"}, {"timstamp": "2016-07-12 10:52", "user": "icebox", "body": "Elarcis: interesting no?"}, {"timstamp": "2016-07-12 10:58", "user": "Elarcis", "body": "icebox: I also fall in the 25-50"}, {"timstamp": "2016-07-12 11:00", "user": "mms_", "body": "well since plunkr is more work I tried to test with <p> and it worked"}, {"timstamp": "2016-07-12 11:00", "user": "mms_", "body": "I have never used ng-bind so did not try"}, {"timstamp": "2016-07-12 11:02", "user": "icebox", "body": "mms_: up to you... no plunker, no party :) and really I don't think creating a plunker with the snippet you showed us is \"more work\""}, {"timstamp": "2016-07-12 11:06", "user": "Elarcis", "body": "When I say 'what I like about the software X is that Y', I feel like people don't read it that way"}, {"timstamp": "2016-07-12 11:07", "user": "Elarcis", "body": "judging by the answers I get, it's more like they read 'what I like about software X is that IF YOU USE ANYTHING ELSE YOU SUCK'"}, {"timstamp": "2016-07-12 11:08", "user": "icebox", "body": "Q: do you like to be a programmer? A: well, I like to design applications (fresh engineer) :)"}, {"timstamp": "2016-07-12 11:10", "user": "icebox", "body": "Elarcis: really? the point is the user experience... it is very hard to understand why people uses an app and not another one with similar features"}, {"timstamp": "2016-07-12 11:12", "user": "Elarcis", "body": "icebox: I dunno. People often get defensive about that for a reason I don't get"}, {"timstamp": "2016-07-12 11:12", "user": "icebox", "body": "Elarcis: with the financial apps, for instance, there is the old (and wrong) rule \"we always did it that way\""}, {"timstamp": "2016-07-12 11:12", "user": "Elarcis", "body": "icebox: not only financial apps :D"}, {"timstamp": "2016-07-12 11:12", "user": "icebox", "body": "Elarcis: but often they don't know the math details underlying the process or the business reasons of that approach"}, {"timstamp": "2016-07-12 11:14", "user": "mms_", "body": "{{ }} and ng-bind are equivalent"}, {"timstamp": "2016-07-12 11:15", "user": "icebox", "body": "Elarcis: for instance... in the last years banks offer a service, called advisoring, to optimize the customer portfolio... it is interesting notice every bank offers a different optimal (!) portfolio :)"}, {"timstamp": "2016-07-12 11:21", "user": "icebox", "body": "mms_: likely"}, {"timstamp": "2016-07-12 11:22", "user": "icebox", "body": "mms_: really without any plunker it is very hard to give you any concrete help... I tried that snippet locally and it works as expected"}, {"timstamp": "2016-07-12 11:27", "user": "Pyrrhus", "body": "icebox: now I know where I saw it. I cant $inject EventEmitter in a plunk, <unconvertable> cause it doesnt find a provider. in my test project it <unconvertable> just works. do you know if this is a version thing ? (I cant find hide nor hair of it in the angular docs)"}, {"timstamp": "2016-07-12 11:31", "user": "icebox", "body": "Pyrrhus: no sorry... I didn't test it... maybe you need to import it... import {EventEmitter} from 'angular2/core';"}, {"timstamp": "2016-07-12 11:32", "user": "icebox", "body": "Pyrrhus: ah no sorry... you are using angular 1"}, {"timstamp": "2016-07-12 11:33", "user": "Pyrrhus", "body": "fun thing : in my plunk, Im not even sure what version Im using... it could even be 2..."}, {"timstamp": "2016-07-12 11:39", "user": "Pyrrhus", "body": "ah ok. via System.js it seems to actually load 1.5.7, although I myself dont actually ask for a version (I just <unconvertable> import angular from angular"}, {"timstamp": "2016-07-12 11:41", "user": "Pyrrhus", "body": "and doing a grep -Ri on my node_modules seems to indicate that EventEmitter comes from events..."}, {"timstamp": "2016-07-12 11:48", "user": "icebox", "body": "Pyrrhus: nice catch"}, {"timstamp": "2016-07-12 11:49", "user": "Pyrrhus", "body": "yeah, but so far anything resembling import { EventEmitter } from events doesnt make my plunk work. although it _does_ load the module (System.js is kind of cool)"}, {"timstamp": "2016-07-12 11:53", "user": "Pyrrhus", "body": "ok, so even deeper down it loads nodelibs-events. which indeed exports EventEmitter... why cant I import it ?"}, {"timstamp": "2016-07-12 12:07", "user": "Pyrrhus", "body": "so, what could be wrong if I _can_ do em = new EventEmitter(); but _cannot_ do $inject[EventEmitter]; ?"}], "label": "other"}
{"id": "93d59507", "body": "", "comments": [{"timstamp": "2018-07-19 12:47", "user": "anddam", "body": "not IT but is there a channel for material design? I wasn't able to find one querying Alis and I'd like to switch a material icon I'm using to the \"outlined\" style"}, {"timstamp": "2018-07-19 13:13", "user": "SargoDarya", "body": "anddam: There is a gitter if I'm not mistaken which is semi-active"}, {"timstamp": "2018-07-19 13:13", "user": "SargoDarya", "body": "anddam:"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "SargoDarya: thanks, I dislike nowadays spread of communications for software project, gitter/slacks/whatelse"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "I ended registering to all, but it kinda sucks"}, {"timstamp": "2018-07-19 14:34", "user": "Limarson1", "body": "anddam: +1"}, {"timstamp": "2018-07-19 14:34", "user": "anddam", "body": "I figured I could just assign color: attribute to the material icon and have the desired effect"}, {"timstamp": "2018-07-19 14:35", "user": "Limarson1", "body": "Mailing lists are the worst in my opinion"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "but I figure there has to be a \"proper\" way of doing that, I've seen suggestions about appending -outline _outline using material-icons--outline class and the like"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "none of those did work"}, {"timstamp": "2018-07-19 14:35", "user": "anddam", "body": "Limarson1: ml have their own merit, but it's not for real-time communication"}, {"timstamp": "2018-07-19 14:36", "user": "SargoDarya", "body": "anddam: Funny you're coming to IRC then :P"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "SargoDarya: not really, IRC is my go-to chat platform"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "and has been for a long time, I mean I wished every project used just IRC"}, {"timstamp": "2018-07-19 14:40", "user": "anddam", "body": "not even on separate networks"}, {"timstamp": "2018-07-19 14:43", "user": "anddam", "body": "but it's just the \"Old Grumpy's attitude\""}, {"timstamp": "2018-07-19 14:43", "user": "Limarson1", "body": "anddam: :D"}, {"timstamp": "2018-07-19 14:45", "user": "Limarson1", "body": "anddam: I swallowed down some communist comment, where everyone drives one car, everyone uses one chat platform,... :D Diversity is not bad per se^^"}, {"timstamp": "2018-07-19 14:46", "user": "anddam", "body": "Limarson1: that's the dream"}, {"timstamp": "2018-07-19 14:47", "user": "anddam", "body": "I figure diversity is only bad when it's \"different from me\", as general rule"}, {"timstamp": "2018-07-19 14:47", "user": "Limarson1", "body": "anddam: I know that feeling xD"}, {"timstamp": "2018-07-19 14:47", "user": "Limarson1", "body": "anddam: If everyone was like me, the world would be a better place and so on ;-)"}, {"timstamp": "2018-07-19 14:55", "user": "anddam", "body": "even worse, it's on Google+"}], "label": "other"}
{"id": "8addb265", "body": "", "comments": [{"timstamp": "2017-03-20 13:59", "user": "jlebrech", "body": "I have a problem with angular-bootstrap and opening of modals, it seems when I open a modal after another modal that it opens below it, but i'd like the new modal to open above."}, {"timstamp": "2017-03-20 14:00", "user": "Pyrrhus666", "body": "jlebrech, probably because the both have the same z-index ? can you even control that from ng-bootstrap ?"}, {"timstamp": "2017-03-20 14:01", "user": "jlebrech", "body": "Pyrrhus666: there's no option to set a z-index when launching it, and I can see the new modal having a lower z-index. I don't want to hack the ui-modal code"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, lower... thats weird..."}, {"timstamp": "2017-03-20 14:02", "user": "jlebrech", "body": "i saw a few issues and SO, and they say wontfix because modal + modal is bad form"}, {"timstamp": "2017-03-20 14:02", "user": "Pyrrhus666", "body": "jlebrech, which is sort of true."}, {"timstamp": "2017-03-20 14:03", "user": "jlebrech", "body": "so it's anoying, it worked in a previous version ui-bootstrap"}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, cant you hack it via css ? (some custom class having z-index: 10000!important; or smh ?)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: but previous functionality should stay the same."}, {"timstamp": "2017-03-20 14:04", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-20 14:04", "user": "Pyrrhus666", "body": "jlebrech, but this was never meant as a functionality, it seems ;)"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: wouldn't that be nice, but then the overlay is fucked"}, {"timstamp": "2017-03-20 14:04", "user": "jlebrech", "body": "Pyrrhus666: yep, anoying"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, cant you do away with the second modal ?"}, {"timstamp": "2017-03-20 14:05", "user": "Pyrrhus666", "body": "jlebrech, if they say its bad form, theyll probably reject your PR..."}, {"timstamp": "2017-03-20 14:05", "user": "jlebrech", "body": "I could edit and try to PR it"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "Pyrrhus666: yeah, I can try. but sometimes it's a confirmation modal (i.e 'are you sure') or a userguide popup with and instructional video"}, {"timstamp": "2017-03-20 14:06", "user": "heartburn", "body": "why wouldn't you use system ones for that?"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "^ my idea"}, {"timstamp": "2017-03-20 14:06", "user": "Pyrrhus666", "body": "except for the video ones ;)"}, {"timstamp": "2017-03-20 14:06", "user": "jlebrech", "body": "because confirm box is ugly"}, {"timstamp": "2017-03-20 14:07", "user": "Pyrrhus666", "body": "jlebrech, <shrug> its functional as f*ck though ;)"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "wellthatslikejustyouropinionman.jpeg"}, {"timstamp": "2017-03-20 14:07", "user": "heartburn", "body": "they are ugly on windows mostly.)"}, {"timstamp": "2017-03-20 14:07", "user": "jlebrech", "body": "i have an option, to stop opening another video at the sametime, just hide and reopen it."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "Pyrrhus666: yeah, unfortunately it's not my product"}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "s/video/modal"}, {"timstamp": "2017-03-20 14:08", "user": "Pyrrhus666", "body": "jlebrech, that sounds like a logical option."}, {"timstamp": "2017-03-20 14:08", "user": "jlebrech", "body": "yeah, i'm doing that"}, {"timstamp": "2017-03-20 14:09", "user": "jlebrech", "body": "Pyrrhus666: modals where a short term passable solution anyways"}, {"timstamp": "2017-03-20 14:11", "user": "heartburn", "body": "seriously tho, confirm()'s are platform-consistent and truly modal, so there's nothing wrong about using them. they save you a lot of trouble."}, {"timstamp": "2017-03-20 14:12", "user": "heartburn", "body": "but yea, they go look ugly on windows."}, {"timstamp": "2017-03-20 14:14", "user": "Pyrrhus666", "body": "heartburn, they look alike on all OSs I use. browser-dependent of course"}, {"timstamp": "2017-03-20 14:49", "user": "heartburn", "body": "ngdoc: location"}, {"timstamp": "2017-03-20 14:54", "user": "jlebrech", "body": "Pyrrhus666: i've fixed my issue with modal using CSS but that'll assumes that there's always ever 2 levels of modal (which is probably for the best)"}, {"timstamp": "2017-03-20 14:55", "user": "Pyrrhus666", "body": "jlebrech, ah yes, if you fix all levels inc backdrop, thatll work :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "Pyrrhus666: I could give each level a class, and hardcode which height I want each to be. and two level of backdrop too :)"}, {"timstamp": "2017-03-20 14:56", "user": "jlebrech", "body": "shitty solution :D but will work"}, {"timstamp": "2017-03-20 14:57", "user": "Pyrrhus666", "body": "jlebrech, good enough in these circumstances :)"}, {"timstamp": "2017-03-20 14:58", "user": "jlebrech", "body": "i'll fix backdrop class if someone requests a backdrop, for now the first backdrop shows"}], "label": "feature"}
{"id": "93d59478", "body": "", "comments": [{"timstamp": "2017-02-22 15:19", "user": "Pyrrhus666", "body": "rejoice, a new soul has joined us !"}, {"timstamp": "2017-02-22 15:20", "user": "xhd", "body": "haha! thank you. i am glad this channel is active. ill swing by occasionally for the cult meetings."}, {"timstamp": "2017-02-22 15:20", "user": "uru", "body": "xhd: Leave your sizes with the receptionist and we'll get some robes ordered for you :)"}, {"timstamp": "2017-02-22 15:20", "user": "Pyrrhus666", "body": "xhd, please, bring cheese. Im sick of cookies."}, {"timstamp": "2017-02-22 15:21", "user": "xhd", "body": "ill bring wine and cheese for the tasting. @uru can't wait to try them on. have a good day. :)"}, {"timstamp": "2017-02-22 15:21", "user": "Pyrrhus666", "body": "well that was odd."}, {"timstamp": "2017-02-22 15:22", "user": "icebox", "body": "agreed"}, {"timstamp": "2017-02-22 15:22", "user": "uru", "body": "lol yea"}, {"timstamp": "2017-02-22 15:22", "user": "uru", "body": "Better than the usual though"}, {"timstamp": "2017-02-22 15:25", "user": "Pyrrhus666", "body": "this should probably be on bash.org"}, {"timstamp": "2017-02-22 15:27", "user": "icebox", "body": "Pyrrhus666: anyway the dev experience to build angular or vue is the same: a failure"}, {"timstamp": "2017-02-22 15:28", "user": "icebox", "body": "Pyrrhus666: rm -rf angular; rm -rf vue"}, {"timstamp": "2017-02-22 15:28", "user": "Pyrrhus666", "body": "icebox, just go full native ;)"}, {"timstamp": "2017-02-22 15:28", "user": "Elarcis", "body": "icebox: wut"}, {"timstamp": "2017-02-22 15:29", "user": "icebox", "body": "Pyrrhus666: angular doesn't support node 7... and vue because path problems"}, {"timstamp": "2017-02-22 15:29", "user": "Pyrrhus666", "body": "icebox, sounds like me trying to build a linux kernel in 1999"}, {"timstamp": "2017-02-22 15:29", "user": "icebox", "body": "Pyrrhus666: sometimes I miss c compiler times"}, {"timstamp": "2017-02-22 15:29", "user": "Pyrrhus666", "body": "I certainly dont ;)"}, {"timstamp": "2017-02-22 15:30", "user": "icebox", "body": "Pyrrhus666: exactly... compiling linux kernel is easier than that"}, {"timstamp": "2017-02-22 15:30", "user": "Elarcis", "body": "sometimes I miss thinking computers are magic"}, {"timstamp": "2017-02-22 15:30", "user": "Pyrrhus666", "body": "icebox, it wasnt back then, at least for me :)"}, {"timstamp": "2017-02-22 15:30", "user": "icebox", "body": "sometimes I think people is lazy and pretend all the world is on linux"}, {"timstamp": "2017-02-22 15:31", "user": "Pyrrhus666", "body": "although building gnome 0.9x was also a pretty horrific experience..."}, {"timstamp": "2017-02-22 15:31", "user": "icebox", "body": "ok.. but that is gnome :)"}, {"timstamp": "2017-02-22 15:31", "user": "Pyrrhus666", "body": "icebox, well, they should be ;)"}, {"timstamp": "2017-02-22 15:31", "user": "icebox", "body": "no no and no :)"}, {"timstamp": "2017-02-22 15:31", "user": "Pyrrhus666", "body": "icebox, ok. openbsd then ?"}, {"timstamp": "2017-02-22 15:32", "user": "icebox", "body": "solaris 4"}, {"timstamp": "2017-02-22 15:33", "user": "Pyrrhus666", "body": "icebox, dunno that too well. sunOS 4 otoh... also, IRIX was nice."}, {"timstamp": "2017-02-22 15:33", "user": "icebox", "body": "agreed"}, {"timstamp": "2017-02-22 15:33", "user": "icebox", "body": "Windows NT parents... VAX"}], "label": "other"}
{"id": "93d594be", "body": "", "comments": [{"timstamp": "2016-07-20 18:05", "user": "fullstack", "body": "Whats the event when a page is ready?"}, {"timstamp": "2016-07-20 18:06", "user": "Elarcis", "body": "fullstack: it's absolutely not angular-wise, though"}, {"timstamp": "2016-07-20 18:06", "user": "fullstack", "body": "thats not angular"}, {"timstamp": "2016-07-20 18:06", "user": "Elarcis", "body": "fullstack: so you might be searching for the run() block"}, {"timstamp": "2016-07-20 18:06", "user": "fullstack", "body": "Whats the angular $scope.$on('<what's dis>', f(){})"}, {"timstamp": "2016-07-20 18:06", "user": "Elarcis", "body": "fullstack: $(document).ready()"}, {"timstamp": "2016-07-20 18:07", "user": "Elarcis", "body": "fullstack: it is an expression that's evaluated against the scope"}, {"timstamp": "2016-07-20 18:07", "user": "Elarcis", "body": "fullstack: it is similar to the expressions you can find in the template"}, {"timstamp": "2016-07-20 18:07", "user": "Elarcis", "body": "fullstack: like 'myProperty.getElements' equals $scope.myProperty.getElements, etc."}, {"timstamp": "2016-07-20 18:10", "user": "fullstack", "body": "Ok, actually, I need to clarify that I am using UI Router and I am looking for the event when a page is done loading --meaning a view is done rendering"}, {"timstamp": "2016-07-20 18:10", "user": "fullstack", "body": "$stateChangeSuccess"}, {"timstamp": "2016-07-20 18:20", "user": "ngbot", "body": "[angular.js] gkalpak pushed 2 new commits to v1.2.x:"}, {"timstamp": "2016-07-20 18:20", "user": "ngbot", "body": "angular.js/v1.2.x f35f334 Raphael Jamet: fix($compile): secure `link[href]` as a `RESOURCE_URL`s in `$sce`...."}, {"timstamp": "2016-07-20 18:20", "user": "ngbot", "body": "angular.js/v1.2.x f2fa1ed Igor Minar: fix($compile): properly sanitize xlink:href attribute interoplation..."}], "label": "other"}
{"id": "8addb26a", "body": "", "comments": [{"timstamp": "2017-07-26 10:25", "user": "User___", "body": "is there a way to download an angular website for offline viewing?"}, {"timstamp": "2017-07-26 10:26", "user": "icebox", "body": "User___: no"}, {"timstamp": "2017-07-26 10:26", "user": "icebox", "body": "User___: unless 3rd party tools to web scraping a site"}], "label": "feature"}
{"id": "93d594e2", "body": "", "comments": [{"timstamp": "2017-06-16 08:25", "user": "platowork", "body": "is there a simple way to check if a file in the local project folder exists?"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: sure... but not from the browser :)"}, {"timstamp": "2017-06-16 08:26", "user": "platowork", "body": "like \"show this div only if there is a \"./assets/something.txt\" file"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: and it is not related to angularjs or angular :)"}, {"timstamp": "2017-06-16 08:26", "user": "icebox", "body": "platowork: only in the backend"}, {"timstamp": "2017-06-16 08:27", "user": "platowork", "body": "even if that file is part of the angular project?"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: it is the same... it doesn't game the change"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: fetch that resource and act accordingly"}, {"timstamp": "2017-06-16 08:27", "user": "platowork", "body": "well I want to do something like this"}, {"timstamp": "2017-06-16 08:27", "user": "icebox", "body": "platowork: but it is not a check \"if a file exists\""}, {"timstamp": "2017-06-16 08:28", "user": "platowork", "body": "render \"text-de.md\" if this file exists"}, {"timstamp": "2017-06-16 08:28", "user": "platowork", "body": "else fallback to \"text-en.md\""}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: that is another use case... rendering conditionally different resources... it seems related to i18n"}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: anyway you cannot render markdonw without any lib"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "thats not part of the problem"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "the markdown rendering already works :)"}, {"timstamp": "2017-06-16 08:29", "user": "icebox", "body": "platowork: nice"}, {"timstamp": "2017-06-16 08:29", "user": "platowork", "body": "with ng2-markdown"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: generally speaking, you may give a look at"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: you said angularjs"}, {"timstamp": "2017-06-16 08:30", "user": "platowork", "body": "I just want to catch the case when there is no localized file"}, {"timstamp": "2017-06-16 08:30", "user": "platowork", "body": "and fallback to the standard english file"}, {"timstamp": "2017-06-16 08:30", "user": "icebox", "body": "platowork: or angular?"}, {"timstamp": "2017-06-16 08:31", "user": "platowork", "body": "angular 2+"}, {"timstamp": "2017-06-16 08:31", "user": "icebox", "body": "ok"}, {"timstamp": "2017-06-16 08:31", "user": "icebox", "body": "platowork: see i18n solutions for angular"}, {"timstamp": "2017-06-16 08:33", "user": "platowork", "body": "well I already have localization for text in the project"}, {"timstamp": "2017-06-16 08:33", "user": "platowork", "body": "and conditionally choosing the right markdown file also works"}, {"timstamp": "2017-06-16 08:34", "user": "platowork", "body": "I just want to fallback to the standard language file when the localized one does not exist yet"}, {"timstamp": "2017-06-16 08:34", "user": "platowork", "body": "just as simple as an ngIf or so :D"}, {"timstamp": "2017-06-16 08:34", "user": "icebox", "body": "platowork: perfect... usually i18n solutions provide a default language (\"catch all\", fallback)"}, {"timstamp": "2017-06-16 08:34", "user": "icebox", "body": "platowork: are you saying you have not fallback?"}, {"timstamp": "2017-06-16 08:35", "user": "platowork", "body": "not for the markdown rendering"}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "terrible... fix it"}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "it should be the first use case to implement"}, {"timstamp": "2017-06-16 08:35", "user": "platowork", "body": "well I thought it's just a simple as \"check if this file is there, if not, use another\""}, {"timstamp": "2017-06-16 08:35", "user": "icebox", "body": "platowork: is it a custom solution or you use a lib?"}, {"timstamp": "2017-06-16 08:36", "user": "icebox", "body": "it seemd weirdly a i18n solution doesn't provide a fallback"}, {"timstamp": "2017-06-16 08:36", "user": "icebox", "body": "*seems"}, {"timstamp": "2017-06-16 08:37", "user": "icebox", "body": "platowork: if it is a custom solution, follow the same approach you used to load the other resources"}, {"timstamp": "2017-06-16 08:44", "user": "icebox", "body": "platowork: if you are fetching the resources, I would check for 404... is it feasible?"}, {"timstamp": "2017-06-16 09:15", "user": "platowork", "body": "well that could work, icebox"}], "label": "other"}
{"id": "93d59474", "body": "", "comments": [{"timstamp": "2016-08-01 22:15", "user": "lacrymology", "body": "I have two attributes in a directive that are doubly linked. They're an array of objects, and an array of ids. There's watches on both fields, and if either gets updated the other one is updated accordingly. My problem is that the watches are called at the very beginning and if at setup one of the fields is empty and the other one isn't, if the empty field's called second then it override the one"}, {"timstamp": "2016-08-01 22:15", "user": "lacrymology", "body": "that was instantiated with values"}, {"timstamp": "2016-08-01 22:16", "user": "lacrymology", "body": "so, I guess the questions are two: is there a better way to handle this, and if not, what's a good way of recognizing the first call to a watcher to ignore it?"}], "label": "other"}
{"id": "93d594a4", "body": "", "comments": [{"timstamp": "2017-02-07 08:30", "user": "zomg", "body": "well what can you expect when they're actually trying to sell something"}, {"timstamp": "2017-02-07 08:30", "user": "zomg", "body": ":P"}, {"timstamp": "2017-02-07 08:30", "user": "icebox", "body": ":P"}, {"timstamp": "2017-02-07 08:31", "user": "icebox", "body": "anyway those comparisons are welcome because they highlight the vision and the foundation of each lib/framework"}, {"timstamp": "2017-02-07 08:32", "user": "icebox", "body": "and actually comparing angularjs (1.x) and something else, it is a bit of waste of time :)"}, {"timstamp": "2017-02-07 08:32", "user": "icebox", "body": "another time, another space"}, {"timstamp": "2017-02-07 09:02", "user": "icebox", "body": "Angular ngFor, <template> and the compiler -"}, {"timstamp": "2017-02-07 09:04", "user": "Snugglebash", "body": "icebox: oooOooOoOO ngFor is my favourite! :D"}, {"timstamp": "2017-02-07 09:05", "user": "icebox", "body": "Snugglebash: that is a great post"}, {"timstamp": "2017-02-07 09:05", "user": "Snugglebash", "body": "icebox: I am reading it! :)"}, {"timstamp": "2017-02-07 09:27", "user": "icebox", "body": "Elarcis: hey"}, {"timstamp": "2017-02-07 09:27", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2017-02-07 09:28", "user": "Pyrrhus666", "body": "morning icebox"}, {"timstamp": "2017-02-07 09:28", "user": "Snugglebash", "body": "icebox: Why does he use | async?"}, {"timstamp": "2017-02-07 09:30", "user": "icebox", "body": "Snugglebash:"}, {"timstamp": "2017-02-07 09:30", "user": "Snugglebash", "body": "icebox: thanks I forgot about 'pipes'"}, {"timstamp": "2017-02-07 09:31", "user": "icebox", "body": "Snugglebash: well... but \"why\"? :) don't forget how angular detetcs changes and how it gives to the dev the control of everything"}, {"timstamp": "2017-02-07 09:33", "user": "Snugglebash", "body": "icebox: There is a list of variables it is watching and checks in the main event loop right?"}, {"timstamp": "2017-02-07 09:33", "user": "icebox", "body": "Snugglebash: try that example, removing the async pipe"}, {"timstamp": "2017-02-07 09:33", "user": "icebox", "body": "Snugglebash: read the error in the console... it is awesome"}, {"timstamp": "2017-02-07 09:34", "user": "icebox", "body": "Snugglebash: \"NgFor only supports binding to Iterables such as Arrays.\""}, {"timstamp": "2017-02-07 09:35", "user": "icebox", "body": "Snugglebash: for promises or observables you need that pipe :)"}, {"timstamp": "2017-02-07 09:35", "user": "Snugglebash", "body": "icebox: so nothing loads :("}, {"timstamp": "2017-02-07 09:35", "user": "icebox", "body": "Snugglebash: see the console log"}, {"timstamp": "2017-02-07 09:36", "user": "Snugglebash", "body": "icebox: unhandled promise rejection"}, {"timstamp": "2017-02-07 09:36", "user": "icebox", "body": "Snugglebash: before that error you have another one: \"NgFor only supports binding to Iterables such as Arrays.\""}, {"timstamp": "2017-02-07 09:37", "user": "icebox", "body": "Snugglebash: so we need async pipe to unwrap a value from an asynchronous primitive"}, {"timstamp": "2017-02-07 09:37", "user": "icebox", "body": "Snugglebash: \" The async pipe subscribes to an Observable or Promise and returns the latest value it has emitted. When a new value is emitted, the async pipe marks the component to be checked for changes. When the component gets destroyed, the async pipe unsubscribes automatically to avoid potential memory leaks.\""}, {"timstamp": "2017-02-07 09:37", "user": "icebox", "body": "Snugglebash: and I highlight \" When the component gets destroyed, the async pipe unsubscribes automatically to avoid potential memory leaks.\""}, {"timstamp": "2017-02-07 09:38", "user": "icebox", "body": "Snugglebash: Now compare this approach with angularjs one :)"}, {"timstamp": "2017-02-07 09:38", "user": "icebox", "body": "Snugglebash: a few details,"}, {"timstamp": "2017-02-07 09:39", "user": "Snugglebash", "body": "icebox: Ahhhh ok I got it now! :D Man you are pretty hardcore ;)"}, {"timstamp": "2017-02-07 09:39", "user": "icebox", "body": "Snugglebash: read about \"Performance Benefits\""}, {"timstamp": "2017-02-07 09:42", "user": "icebox", "body": "Snugglebash: generally speaking, angular is a \"confusing\" framework due to its flexibility :) With Great Power Comes Great Responsibility"}, {"timstamp": "2017-02-07 09:43", "user": "Elarcis", "body": "icebox: wow, you got the 'hardcore' compliment"}, {"timstamp": "2017-02-07 09:43", "user": "Elarcis", "body": ":D"}, {"timstamp": "2017-02-07 09:43", "user": "FatNoLife", "body": "Geoffrey wants to be hardcore but his mom won't let him"}, {"timstamp": "2017-02-07 09:43", "user": "Snugglebash", "body": "icebox: I can agree with that, I spent quite a lot of time just using the material directives and am now taking a few steps back to understand how it fits together... I am not a web dev whatsoever but I like the technology! :)"}, {"timstamp": "2017-02-07 09:43", "user": "icebox", "body": "Snugglebash: you can control a lot of details, fitting the app to the business requirements and architecture... that kind of flexibility is mandatory in an enterprise project... it is not like \"fire and forget\" lib or framework"}, {"timstamp": "2017-02-07 09:45", "user": "icebox", "body": "Snugglebash: for me, the nice part of angular is that it is compelling myself to learn something new every day :) your mileage may vary"}, {"timstamp": "2017-02-07 09:46", "user": "Elarcis", "body": "icebox: ^"}, {"timstamp": "2017-02-07 09:46", "user": "Elarcis", "body": "I love asking myself \"hey, is there a cool way to handle X\" and I find a cool fact about the framework, or a super-nice pattern to do it"}, {"timstamp": "2017-02-07 09:46", "user": "Elarcis", "body": "it's like an experience catalyze"}, {"timstamp": "2017-02-07 09:46", "user": "Elarcis", "body": "catalyzer"}, {"timstamp": "2017-02-07 09:48", "user": "icebox", "body": "it is like in SapirWhorf hypothesis: language determines thought :)"}, {"timstamp": "2017-02-07 09:50", "user": "Snugglebash", "body": "icebox: Well ideally it would be nice to use it for some business projects, but that will also require more effort to improve my knowledge of development in general including security etc etc."}, {"timstamp": "2017-02-07 10:20", "user": "Elarcis", "body": "icebox: your Sapir-Whorf hypothesis reminds me of newspeak :P"}, {"timstamp": "2017-02-07 10:23", "user": "icebox", "body": "Elarcis: I didn't know it, but it is the main point in Arrival movie :)"}, {"timstamp": "2017-02-07 10:24", "user": "Snugglebash", "body": "icebox: thanks for that link was really interesting"}, {"timstamp": "2017-02-07 10:25", "user": "Elarcis", "body": "icebox: didn't see the mohvee"}, {"timstamp": "2017-02-07 10:25", "user": "icebox", "body": "Snugglebash: you are welcom"}, {"timstamp": "2017-02-07 10:26", "user": "icebox", "body": "Elarcis: it is a recent movie... and now it is my favourite movie!"}], "label": "other"}
{"id": "93d594d3", "body": "", "comments": [{"timstamp": "2017-06-08 10:23", "user": "AndrewIsh", "body": "Hey guys, Angular 1.x question. I've a directive (D2) that calls a service method. However, depending on where it is being used, it may or may not need to include a property from an ancestor directive's (D1) controller. I'm using 'require' to access D1's controller, however, that will obviously crash and burn if D2 isn't being used as an descendant D1. Does anyone know if it's possible to determine if D1 exists before trying to require it?"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "> an ancestor directive's (D1) controller"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "that's your problem right there"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "use services for shared data"}, {"timstamp": "2017-06-08 10:25", "user": "heartburn", "body": "~ isolate all the scopes ~"}, {"timstamp": "2017-06-08 10:27", "user": "AndrewIsh", "body": "heartburn: Wow, excellent point. I'm actually needing to access a service property, I was just going to go via the ancestor directive (which injects the service) to get it, man, what an idiot. Thanks for that!"}, {"timstamp": "2017-06-08 10:27", "user": "heartburn", "body": "the scopes should never talk to each other by $parent or any similar means."}, {"timstamp": "2017-06-08 10:28", "user": "heartburn", "body": "they can have inputs via scope bindings but that still doesn't always cut it/is possible"}, {"timstamp": "2017-06-08 10:29", "user": "AndrewIsh", "body": "Indeed, my directive has isolated scope and is only being passed a single object, but the additional property I need is way above that scope. But it's in a service, so I just need to inject that. I can't believe I was overcomplicating it so much!"}, {"timstamp": "2017-06-08 10:30", "user": "heartburn", "body": "AndrewIsh: for further reading:"}, {"timstamp": "2017-06-08 10:31", "user": "AndrewIsh", "body": "heartburn: Heh heh, thanks, I've been working with Angular for a couple of years, it was just one of those brain fart moments, glad you brought some sanity to the rabbit hole I was disappearing down... ;-)"}, {"timstamp": "2017-06-08 10:35", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective?'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: require: '?^ancestordirective'"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "sorry, typo"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "heartburn: true that with components, this should ideally not be used"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Yes, but that will fail if the directive is not being used as a descendant of ancestordirective"}, {"timstamp": "2017-06-08 10:36", "user": "Elarcis", "body": "AndrewIsh: no, see the question mark"}, {"timstamp": "2017-06-08 10:36", "user": "AndrewIsh", "body": "Elarcis: Ahhhh!"}, {"timstamp": "2017-06-08 10:37", "user": "Elarcis", "body": "heartburn: however, with directives without scope, this can be debated, as directives often are DOM-related, so it makes sense that some directive just requires a parent directive to exist for a systematic behavior, rather than having the dev always passing parameters by hand."}], "label": "other"}
{"id": "8addb275", "body": "", "comments": [{"timstamp": "2017-03-23 05:42", "user": "Anish__", "body": "Is there any provision to built in Auth functionality in Angular 2?"}], "label": "feature"}
{"id": "93d5950b", "body": "", "comments": [{"timstamp": "2018-03-19 18:51", "user": "HeartMeeple", "body": "Is there any cookie management baked into angular 2+?"}], "label": "other"}
{"id": "0ec1e2f1", "body": "", "comments": [{"timstamp": "16:49", "user": "ilhami", "body": "catch me when I jump from the bridge :P hehe"}, {"timstamp": "16:50", "user": "ilhami", "body": "first fix your backend response"}], "label": "other"}
{"id": "93d594ed", "body": "", "comments": [{"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "i just want to know the current system date and it should prompt on window based on client system"}, {"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "is there any way sir"}, {"timstamp": "2017-07-01 07:46", "user": "praveen", "body": "if it is like 01/12/2017 on client system we should see same on window too"}, {"timstamp": "2017-07-01 07:54", "user": "praveen", "body": "please guys do respond"}, {"timstamp": "2017-07-01 07:54", "user": "praveen", "body": "it is urgent"}, {"timstamp": "2017-07-01 08:05", "user": "praveen", "body": "no one is there to help me out"}], "label": "other"}
{"id": "93d594c5", "body": "", "comments": [{"timstamp": "2016-05-20 19:01", "user": "Hravula", "body": "hi there!"}, {"timstamp": "2016-05-20 19:01", "user": "Hravula", "body": "can someone help if there is an equivalent of $.active of jQuery in angularJS?"}], "label": "other"}
{"id": "73af7cd4", "body": "", "comments": [{"timstamp": "09:48", "user": "Pyrrhus666", "body": "doing some more serious doctrine stuff for the first time, and struggling a bit. but hey, vacation starts tomorrow afternoon :)"}], "label": "other"}
{"id": "0ec1e3ec", "body": "", "comments": [{"timstamp": "09:47", "user": "pupskuchen", "body": "use an email input and validate the email address in the backend"}], "label": "other"}
{"id": "93d59544", "body": "", "comments": [{"timstamp": "2016-09-27 11:40", "user": "Pyrrhus666", "body": "what are you guys reading ?"}, {"timstamp": "2016-09-27 11:41", "user": "icebox", "body": "Pyrrhus666:"}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "> Load only what's needed."}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "lies?"}, {"timstamp": "2016-09-27 11:41", "user": "icebox", "body": "bd-: marketing? :)"}, {"timstamp": "2016-09-27 11:41", "user": "bd-", "body": "i'm not sure how a giant 4mb .js file can be considered only loading what's needed"}, {"timstamp": "2016-09-27 11:42", "user": "Pyrrhus666", "body": "icebox: ah, thx :)"}, {"timstamp": "2016-09-27 11:44", "user": "Pyrrhus666", "body": "wow, those statistics are thoroughly unimpressive indeed..."}, {"timstamp": "2016-09-27 11:46", "user": "Pyrrhus666", "body": "that conclusion : <unconvertable> the way it _feels_ faster than the alternatives. yeah good metric you got there...."}, {"timstamp": "2016-09-27 11:49", "user": "bd-", "body": "certainly doesn't feel faster here"}], "label": "other"}
{"id": "93d594fb", "body": "", "comments": [{"timstamp": "2016-05-26 15:44", "user": "anbujs", "body": "how to start angular js"}, {"timstamp": "2016-05-26 15:44", "user": "anbujs", "body": "pls give some adice"}, {"timstamp": "2016-05-26 15:44", "user": "arlekin", "body": "well, there should be plenty of tutorials"}, {"timstamp": "2016-05-26 15:45", "user": "arlekin", "body": "the guide on angularjs page isn't bad"}, {"timstamp": "2016-05-26 15:45", "user": "arlekin", "body": "anbujs: personally i adore \"understanding angularjs\" on udemy by anthony alicea"}, {"timstamp": "2016-05-26 15:46", "user": "arlekin", "body": "also this course first 3 or 4 hours are on YT for free"}], "label": "other"}
{"id": "8addb260", "body": "", "comments": [{"timstamp": "2017-04-06 16:44", "user": "eGr00g", "body": "Hey guys, first time on here, I have a question about loading two version of angular into the same page. I have a Web Application that provides Web Forms, it's called Laserfiche Forms, it uses a very old version of angular, I am adding a module to it but i really would like to use the newer version but can't update the version that gets loaded into the Laserfiche Forms page. Is there a way that I can load the newer angular versio"}, {"timstamp": "2017-04-06 16:47", "user": "Elarcis", "body": "eGr00g: no"}, {"timstamp": "2017-04-06 16:49", "user": "eGr00g", "body": "Elarcis: ok thanks, i had read a couple articles about people doing this but it doesn't seem to want to work"}, {"timstamp": "2017-04-06 16:51", "user": "Elarcis", "body": "same"}], "label": "feature"}
{"id": "73af7d29", "body": "", "comments": [{"timstamp": "09:11", "user": "SargoDarya", "body": "Heyo folks o/"}], "label": "other"}
{"id": "93d594da", "body": "", "comments": [{"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "How do I passdatafrom one controller to the other in angular 1.6?"}, {"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "I make a json request and I don't want to make the request again from the other controller"}, {"timstamp": "2017-03-02 06:18", "user": "j4f-shredder_", "body": "angular-datatables makes me create an extra controller to fetch ajax data from the server"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "I'm using a service"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "to fetch the data"}, {"timstamp": "2017-03-02 06:19", "user": "j4f-shredder_", "body": "but calling the service again won't make the request again?="}, {"timstamp": "2017-03-02 06:20", "user": "heartbur1", "body": "what does it mean, calling the service again?"}, {"timstamp": "2017-03-02 06:21", "user": "j4f-shredder_", "body": "I have a dashboard, I use a dashboard controller, now I integrated angular-datatables"}, {"timstamp": "2017-03-02 06:21", "user": "j4f-shredder_", "body": "I need to use the json data to fill the table and to draw a graphic as well"}, {"timstamp": "2017-03-02 06:22", "user": "j4f-shredder_", "body": "I need to know how to be able to use that data for both tasks without making the request twice"}, {"timstamp": "2017-03-02 06:22", "user": "j4f-shredder_", "body": "the graphic and the datatables are both in different controllers"}, {"timstamp": "2017-03-02 06:23", "user": "j4f-shredder_", "body": "not because I want it that way, but because in angular-datatables docssays to create a new controller"}, {"timstamp": "2017-03-02 06:23", "user": "heartbur1", "body": "where are you storing the json data?"}, {"timstamp": "2017-03-02 06:24", "user": "heartbur1", "body": "once you fetched it, where do you keep it?"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "I'm keeping it"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "on the scope of DashboardController"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "dashboardService.getDashboardData() .then(function(dashboardData) { console.log(dashboardData); $scope.global_clicks = dashboardData.global_clicks; $scope.global_users_reached = dashboardData.global_users_reached; $scope.global_money_raised = dashboardData.global_money_raised; $scope.ads_statistics = dashboardData.ads_statistics; },"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "cause I'm a noob"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "I would like to know"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "the best place"}, {"timstamp": "2017-03-02 06:37", "user": "j4f-shredder_", "body": "to store that"}, {"timstamp": "2017-03-02 06:38", "user": "j4f-shredder_", "body": "so, should I do one service to get data from server and one to keep the data in memory?"}, {"timstamp": "2017-03-02 06:39", "user": "j4f-shredder_", "body": "one more question, I want to do real time updates and I will be calling the server every 5 minutes...should I update this service everytime I fetch the data???"}, {"timstamp": "2017-03-02 06:40", "user": "heartburn", "body": "that's entirely up to you. do what best fits in your current architecture."}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "I don't have an architecture, I need some advice to be honest"}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "I just make an ajax request"}, {"timstamp": "2017-03-02 06:41", "user": "j4f-shredder_", "body": "and diplay a chart and a datatable"}, {"timstamp": "2017-03-02 06:42", "user": "heartburn", "body": "alright, if i were you, here's how i'd organize it."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "i'd create a separate service for every data source."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "say, stuffService."}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "stuffService has a method, .fetchStuff"}, {"timstamp": "2017-03-02 06:43", "user": "heartburn", "body": "it fetches json from the backend."}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "yes, I already have that method"}, {"timstamp": "2017-03-02 06:44", "user": "heartburn", "body": "every time it gets called, it caches the response as a property. say ._stuff"}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "and it works"}, {"timstamp": "2017-03-02 06:44", "user": "j4f-shredder_", "body": "that's the part that I don't know how to do it"}, {"timstamp": "2017-03-02 06:44", "user": "heartburn", "body": "and returns a promise."}, {"timstamp": "2017-03-02 06:45", "user": "j4f-shredder_", "body": "I mean, I don't know where to store it, on a simple variable or services have $scope as well?"}, {"timstamp": "2017-03-02 06:45", "user": "heartburn", "body": "then i add a getter method, stuffService.getStuff = function () { return this._stuff; }"}, {"timstamp": "2017-03-02 06:45", "user": "j4f-shredder_", "body": "do you have any example?"}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": ""}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": "that is my actual service code"}, {"timstamp": "2017-03-02 06:46", "user": "heartburn", "body": "then in the controller, i do stuffService.fetchStuff().then(function () { ctrl.stuff = stuffService.getStuff(); })"}, {"timstamp": "2017-03-02 06:46", "user": "j4f-shredder_", "body": "ohh I see, in that way you have a unique source of truth"}, {"timstamp": "2017-03-02 06:47", "user": "j4f-shredder_", "body": "could you indicate me on that codeshare how to define a property that holds this data?"}, {"timstamp": "2017-03-02 06:52", "user": "j4f-shredder_", "body": ""}, {"timstamp": "2017-03-02 06:52", "user": "j4f-shredder_", "body": "is that ok?"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "I did it"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "it works"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "thanks"}, {"timstamp": "2017-03-02 06:54", "user": "j4f-shredder_", "body": "xD"}], "label": "other"}
{"id": "93d594f3", "body": "", "comments": [{"timstamp": "2019-03-26 11:07", "user": "dennisd", "body": "sounds confluencing"}, {"timstamp": "2019-03-26 11:24", "user": "dennisd", "body": "The adverb to be precise"}, {"timstamp": "2019-03-26 11:26", "user": "Pyrrhus666", "body": "it's an ad alright :P"}, {"timstamp": "2019-03-26 11:26", "user": "dennisd", "body": "I meant adjective :("}, {"timstamp": "2019-03-26 11:26", "user": "dennisd", "body": "still an ad"}, {"timstamp": "2019-03-26 11:27", "user": "dennisd", "body": "the capsaicin rush is taking its toll"}, {"timstamp": "2019-03-26 11:29", "user": "Pyrrhus666", "body": "stay away from the multi-million scoville peppers ;)"}, {"timstamp": "2019-03-26 11:31", "user": "dennisd", "body": "please, I use pepper spray for my bad breadth"}, {"timstamp": "2019-03-26 11:31", "user": "Pyrrhus666", "body": "haha :)"}, {"timstamp": "2019-03-26 11:32", "user": "dennisd", "body": "I doesnt really help :("}], "label": "other"}
{"id": "93d594f7", "body": "", "comments": [{"timstamp": "2016-10-07 21:54", "user": "TrentonDAdams", "body": "Angular is an MVC framework, not a scripting language"}, {"timstamp": "2016-10-07 21:56", "user": "TrentonDAdams", "body": "It does a lot of the boilerplate stuff for you. Things that would require you to write a bunch of jQuery code are now done for you."}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "[angular.js] Narretz pushed 1 new commit to master:"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "angular.js/master f41bd76 Martin Staffa: docs(changelog): add missing commit and remove empty lines"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "[angular.js] Narretz pushed 1 new commit to v1.5.x:"}, {"timstamp": "2016-10-07 22:14", "user": "ngbot", "body": "angular.js/v1.5.x 5395573 Martin Staffa: docs(changelog): add missing commit and remove empty lines"}, {"timstamp": "2016-10-07 22:15", "user": "Scooby", "body": "<ngbot> Could I ask you a quick question?"}, {"timstamp": "2016-10-07 22:19", "user": "Scooby", "body": "Can someone tell me is ther a popular Angular 2, forum site that I could be pointed to for questions?"}], "label": "other"}
{"id": "73af7d2f", "body": "", "comments": [{"timstamp": "12:21", "user": "jlebrech", "body": "what's buckbot?"}, {"timstamp": "12:27", "user": "trampi", "body": "jlebrech: join #buckbot"}, {"timstamp": "12:41", "user": "jlebrech", "body": "ok, that's fun"}], "label": "other"}
{"id": "93d594d2", "body": "", "comments": [{"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "trying to use select onchange to pass the ng-options to controller function"}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": ""}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "see pastebin"}, {"timstamp": "2016-10-19 16:56", "user": "zorph", "body": "thx for help"}, {"timstamp": "2016-10-19 16:56", "user": "senayar", "body": "required is enough zorph"}, {"timstamp": "2016-10-19 16:56", "user": "senayar", "body": "required=\"\""}, {"timstamp": "2016-10-19 16:58", "user": "zorph", "body": "I want to save the value and label - when the select changes.."}, {"timstamp": "2016-10-19 16:58", "user": "senayar", "body": "what does changeDuration zorph"}, {"timstamp": "2016-10-19 16:58", "user": "senayar", "body": "d.value and d.label are sure undefined inside the ng-change"}], "label": "other"}
{"id": "93d5947c", "body": "", "comments": [{"timstamp": "2017-02-21 19:55", "user": "loZio", "body": "Hello everyone...I have a qestion...I want to disable every input or button during http call...How can do it? I see that I can do it with fieldset but it's not supported explorer 9 to up...do you have advice? thanks!"}, {"timstamp": "2017-02-21 19:56", "user": "andrcmdr", "body": "You can use ng-disabled"}, {"timstamp": "2017-02-21 19:58", "user": "loZio", "body": "andrcmdr: yes I can't use ng-disable on fieldset"}, {"timstamp": "2017-02-21 19:58", "user": "loZio", "body": "I can't use ng-disable on every input or buttons in my view"}, {"timstamp": "2017-02-21 19:58", "user": "andrcmdr", "body": ""}, {"timstamp": "2017-02-21 19:58", "user": "andrcmdr", "body": "does that work?"}, {"timstamp": "2017-02-21 19:59", "user": "loZio", "body": "andrcmdr: yes, it works but don't support all browser"}, {"timstamp": "2017-02-21 19:59", "user": "loZio", "body": "It's a good tip, though unfortunately the disabled attribute on a fieldset is not supported in IE or Safari"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "What about `disabled`"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "fieldset has that attr by default but it's HTML5"}, {"timstamp": "2017-02-21 20:03", "user": "andrcmdr", "body": "so..."}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "idk about those browsers"}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "but it's baseling HTML"}, {"timstamp": "2017-02-21 20:04", "user": "andrcmdr", "body": "baseline*"}, {"timstamp": "2017-02-21 20:05", "user": "andrcmdr", "body": ""}, {"timstamp": "2017-02-21 20:06", "user": "andrcmdr", "body": "also fieldset seems to imply that it will disable all descendants"}, {"timstamp": "2017-02-21 20:07", "user": "andrcmdr", "body": "(not sure if that's desired)"}, {"timstamp": "2017-02-21 20:19", "user": "loZio", "body": "andrcmdr: yes..I want to disable all discendants"}, {"timstamp": "2017-02-21 20:20", "user": "andrcmdr", "body": "Does `disabled` work?"}, {"timstamp": "2017-02-21 20:20", "user": "andrcmdr", "body": "As opposed to `ng-disabled`"}, {"timstamp": "2017-02-21 20:24", "user": "loZio", "body": "andrcmdr: tomorrow I can do it...now thanks man"}, {"timstamp": "2017-02-21 20:25", "user": "andrcmdr", "body": "word"}], "label": "other"}
{"id": "93d59498", "body": "", "comments": [{"timstamp": "2016-05-26 18:21", "user": "angularjs890", "body": "Why can't I use the tab key in js files with sublime?"}, {"timstamp": "2016-05-26 18:22", "user": "sunimasuno", "body": "angularjs890: you'll wanna run over to ##sublimetext and ask them"}, {"timstamp": "2016-05-26 18:23", "user": "angularjs890", "body": "sunimasuno tnx I didn't know this channel exists"}, {"timstamp": "2016-05-26 18:24", "user": "sunimasuno", "body": "^_^ sooooo many channels"}], "label": "other"}
{"id": "93d5954c", "body": "", "comments": [{"timstamp": "2017-08-07 15:52", "user": "brnrnd", "body": "hi all"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": "does anyone hear me?"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": "Have a little question"}, {"timstamp": "2017-08-07 15:53", "user": "brnrnd", "body": ":)"}, {"timstamp": "2017-08-07 15:54", "user": "xhd", "body": "hi brnrnd :)"}, {"timstamp": "2017-08-07 15:54", "user": "brnrnd", "body": "hi xhd"}, {"timstamp": "2017-08-07 15:54", "user": "xhd", "body": "brnrnd: is it for angularjs or angular? :)"}, {"timstamp": "2017-08-07 15:54", "user": "brnrnd", "body": "question about ng-repeat, so angularjs i guess?"}, {"timstamp": "2017-08-07 15:55", "user": "xhd", "body": "go right ahead. i am old school. so i can probably help if its angular 1.6.6 and before."}, {"timstamp": "2017-08-07 15:55", "user": "brnrnd", "body": "my question is simple"}, {"timstamp": "2017-08-07 15:55", "user": "brnrnd", "body": "working on a contacts list and mail app"}, {"timstamp": "2017-08-07 15:56", "user": "brnrnd", "body": "Is it possible to convert a ng-repeat result in a concatanated variable?"}, {"timstamp": "2017-08-07 15:57", "user": "brnrnd", "body": "For example: a mails ng-repeat into one line text"}, {"timstamp": "2017-08-07 15:57", "user": "xhd", "body": "brnrnd: could you perhaps make a plunker? then I can help you there. you should be able to"}, {"timstamp": "2017-08-07 16:01", "user": "SuperTyp", "body": "brnrnd: sounds trivial, what is the problem?"}, {"timstamp": "2017-08-07 16:19", "user": "brnrnd", "body": "here is the plunker"}, {"timstamp": "2017-08-07 16:19", "user": "brnrnd", "body": ""}], "label": "other"}
{"id": "93d594b7", "body": "", "comments": [{"timstamp": "2016-05-26 19:29", "user": "Gandalf84", "body": "is there any way to print an attribute only if a value is bool?"}, {"timstamp": "2016-05-26 19:29", "user": "Gandalf84", "body": "in my case I want to use routerLink directive only if the variable has a value"}, {"timstamp": "2016-05-26 19:30", "user": "sunimasuno", "body": "Gandalf84: if(typeof var === \"boolean\")"}, {"timstamp": "2016-05-26 19:30", "user": "Gandalf84", "body": "in the view?"}, {"timstamp": "2016-05-26 19:30", "user": "Gandalf84", "body": "in the html?"}, {"timstamp": "2016-05-26 19:33", "user": "Gandalf84", "body": "my problem is that all the <a> without href defined has class router-link-active"}, {"timstamp": "2016-05-26 19:34", "user": "Gandalf84", "body": "i was thinking to remove the href (empty)"}, {"timstamp": "2016-05-26 19:34", "user": "Gandalf84", "body": "not sure this can solve tho"}], "label": "other"}
{"id": "0edea285", "body": "", "comments": [{"timstamp": "19:07", "user": "Ben_1", "body": "is it possible to have multiple projects which will work as blackbox in a single parent application without using any third party library? I just wanna show multiple apps on the right side and navigate through them on the left side navigation."}, {"timstamp": "19:07", "user": "Ben_1", "body": "is this possible by using the parent applications router in combination with the router of each child app?"}], "label": "feature"}
{"id": "93d5952c", "body": "", "comments": [{"timstamp": "2017-08-06 16:47", "user": "TCero", "body": "Hi! a little question. There's a mapper to extract a mysql model and do the interfaces in angular?"}, {"timstamp": "2017-08-06 16:47", "user": "TCero", "body": "I'am searching a mapper to do that."}, {"timstamp": "2017-08-06 16:51", "user": "bs0d", "body": "TCero I didn't use mysql myself, but I am pretty sure such a mapper exists"}, {"timstamp": "2017-08-06 16:53", "user": "TCero", "body": "bs0d, mmm, ok. Thank you. Maybe I need to search more."}, {"timstamp": "2017-08-06 17:35", "user": "bs0d", "body": "When I inject a service, can it be considered as a 'child' of the component? If such a service has an event emitter, can the components, which inject this service, subscribe to emitted events?"}, {"timstamp": "2017-08-06 17:41", "user": "sadme", "body": "i don't know what you mean by child in that case, but yes, you can subscribe to emitted events from a service"}, {"timstamp": "2017-08-06 17:59", "user": "bs0d", "body": "a behaviorsubject contains an array of elements. In order to add a new array, I do 3 steps: 1) get the currentValue using .getValue() and store in a temporary array, 2) add a new entry to the temporary array, 3) push the updated array into a subject"}, {"timstamp": "2017-08-06 17:59", "user": "bs0d", "body": "this process looks pretty ugly to me - is there any better way to do this?"}, {"timstamp": "2017-08-06 18:06", "user": "sadme", "body": "what's wrong with what you're doing atm?"}, {"timstamp": "2017-08-06 18:07", "user": "sadme", "body": "wouldn't it work if you just did .getValue().push(foo) ?"}, {"timstamp": "2017-08-06 18:11", "user": "bs0d", "body": "subject.next(subject.getValue().push(foo)) ?"}, {"timstamp": "2017-08-06 18:11", "user": "bs0d", "body": "hmm .. looks better to me :)"}, {"timstamp": "2017-08-06 18:13", "user": "bs0d", "body": "no - it wont work, as push() returns void"}, {"timstamp": "2017-08-06 18:19", "user": "sadme", "body": "ah, of course"}, {"timstamp": "2017-08-06 21:59", "user": "varadero", "body": "bs0d, what about subject.next([...subject.getValue(), foo]);"}, {"timstamp": "2017-08-06 22:54", "user": "bs0d", "body": "maybe a stupid question - what is Angular 4? I have seen AngularJS and Angular (2+) so far"}, {"timstamp": "2017-08-06 22:57", "user": "da_wunder", "body": "bs0d: angularjs === 1.x and angular 2+"}, {"timstamp": "2017-08-06 22:58", "user": "bs0d", "body": "da_wunder and angular 4, is it 2+ as well, or something different?"}, {"timstamp": "2017-08-06 22:58", "user": "da_wunder", "body": "bs0d: it's angular"}, {"timstamp": "2017-08-06 22:58", "user": "bs0d", "body": "I understand 2+ as 2,3,4,5,..."}, {"timstamp": "2017-08-06 22:59", "user": "da_wunder", "body": "bs0d: and that is what angular is"}, {"timstamp": "2017-08-06 23:01", "user": "bs0d", "body": "da_wunder and the website angular.io - it contains tutorials for angular 2, right?"}, {"timstamp": "2017-08-06 23:01", "user": "da_wunder", "body": "bs0d: that contains tutorials for angular"}, {"timstamp": "2017-08-06 23:02", "user": "bs0d", "body": "da_wunder angular is very general term. I googled for articles on how to upgrade angular 2 app to angular 4 app. Now I am puzzled which angular I was using all this time, maybe it is outdated? o_O"}, {"timstamp": "2017-08-06 23:02", "user": "da_wunder", "body": "bs0d: once again angular === angular 2+, angularjs === 1.x"}, {"timstamp": "2017-08-06 23:03", "user": "da_wunder", "body": "bs0d: and 2+ contains 2, 4, etc."}, {"timstamp": "2017-08-06 23:03", "user": "da_wunder", "body": "bs0d: they skipped 3 totally"}, {"timstamp": "2017-08-06 23:04", "user": "da_wunder", "body": "bs0d: to upgrade from angular 2 to 4 should not be a issue at all, eg. i have done ~10 those upgrades without any problems"}, {"timstamp": "2017-08-06 23:05", "user": "da_wunder", "body": "bs0d: and for breaking changes you should look that changelog"}, {"timstamp": "2017-08-06 23:06", "user": "bs0d", "body": "da_wunder on the code-level it makes no difference at all as far as I understand. The 'upgrade' is done on the CLI level, and both run the same code exactly the same way"}, {"timstamp": "2017-08-06 23:06", "user": "bs0d", "body": "so I should not worry about that I learn outdated syntax :)"}, {"timstamp": "2017-08-06 23:08", "user": "da_wunder", "body": "bs0d: angular.io docs are quite correct"}, {"timstamp": "2017-08-06 23:08", "user": "bs0d", "body": "I had once such an occasion, when I was learning opengl. Lots of tutorials out there are outdated, I invested quite a lot of time into learning outdated syntax for the fixed pipeline, which is not used any more now"}, {"timstamp": "2017-08-06 23:12", "user": "bs0d", "body": "da_wunder do you develop front-ends specifically, or you do more general programming, backend, etc?"}, {"timstamp": "2017-08-06 23:14", "user": "da_wunder", "body": "bs0d: both sides"}, {"timstamp": "2017-08-06 23:14", "user": "bs0d", "body": "da_wunder: which side do you like the most?"}, {"timstamp": "2017-08-06 23:14", "user": "da_wunder", "body": "50/50"}, {"timstamp": "2017-08-06 23:16", "user": "bs0d", "body": "da_wunder: are all developers in your enterprise universal like you? So they can program front-end and back-end"}, {"timstamp": "2017-08-06 23:16", "user": "da_wunder", "body": "bs0d: hmm, about 70%"}, {"timstamp": "2017-08-06 23:17", "user": "bs0d", "body": "da_wunder wow, I didnt expect too see this high percentage"}, {"timstamp": "2017-08-06 23:17", "user": "bs0d", "body": "Is it good for a dev nowadays not to specialize in any particular area, but be universal?"}, {"timstamp": "2017-08-06 23:17", "user": "da_wunder", "body": "and that rest 30% i'm quite sure that 90% can do both"}, {"timstamp": "2017-08-06 23:18", "user": "da_wunder", "body": "term \"universal\" is quite \"wide\""}, {"timstamp": "2017-08-06 23:23", "user": "bs0d", "body": "da_wunder which IDE are you using for Angular development? Can you recommend any free/open-source IDE which could be used for development of Node.js backend together with Angular front-end?"}, {"timstamp": "2017-08-06 23:24", "user": "da_wunder", "body": "bs0d: personally i would recommend webstorm"}, {"timstamp": "2017-08-06 23:24", "user": "da_wunder", "body": "and that one is not free, so just buy it"}, {"timstamp": "2017-08-06 23:25", "user": "bs0d", "body": "da_wunder its licenced I guess. I am not a developer, and do coding occasionally, some prototyping only, never anything for production. I would be happy with some free or open-source IDE. Do you know any?"}, {"timstamp": "2017-08-06 23:26", "user": "da_wunder", "body": "bs0d: again, i would just buy webstorm"}, {"timstamp": "2017-08-06 23:35", "user": "bs0d", "body": "da_wunder how long have you been working as a dev?"}, {"timstamp": "2017-08-06 23:35", "user": "da_wunder", "body": "bs0d: for living since 2003"}], "label": "other"}
{"id": "93d59514", "body": "", "comments": [{"timstamp": "2018-06-20 12:57", "user": "SuperTyp", "body": "ping"}, {"timstamp": "2018-06-20 12:57", "user": "Pyrrhus666", "body": "pong"}, {"timstamp": "2018-06-20 12:57", "user": "SuperTyp", "body": "how is your day?"}, {"timstamp": "2018-06-20 12:58", "user": "Pyrrhus666", "body": "that sucks."}, {"timstamp": "2018-06-20 12:58", "user": "icebox", "body": "not so good"}, {"timstamp": "2018-06-20 12:58", "user": "icebox", "body": "personally and professionaly"}, {"timstamp": "2018-06-20 12:59", "user": "SuperTyp", "body": "whats wrong ice?"}, {"timstamp": "2018-06-20 13:13", "user": "Limarson", "body": "icebox: Sorry to hear that"}, {"timstamp": "2018-06-20 13:14", "user": "Pyrrhus666", "body": "OT, wtf ? :"}, {"timstamp": "2018-06-20 13:14", "user": "icebox", "body": "Limarson: well... a bad day can happen >("}, {"timstamp": "2018-06-20 13:14", "user": "icebox", "body": ":)"}, {"timstamp": "2018-06-20 13:14", "user": "Pyrrhus666", "body": "(found via"}, {"timstamp": "2018-06-20 13:15", "user": "Limarson", "body": "Pyrrhus666: lol"}, {"timstamp": "2018-06-20 13:15", "user": "Pyrrhus666", "body": "Limarson, the <unconvertable> I dont want to live on this planet anymore <unconvertable> feels better than lol in this case..."}, {"timstamp": "2018-06-20 13:16", "user": "Limarson", "body": "Yup"}, {"timstamp": "2018-06-20 13:26", "user": "Pyrrhus666", "body": "icebox, hope tomorrow will be better ;)"}, {"timstamp": "2018-06-20 13:27", "user": "icebox", "body": "Pyrrhus666: or like in Edge of Tomorrow :)"}, {"timstamp": "2018-06-20 13:28", "user": "Pyrrhus666", "body": "icebox, I have that film on my recorder, havent seen it yet ;)"}, {"timstamp": "2018-06-20 13:29", "user": "Pyrrhus666", "body": "icebox, got the gist of it. lets hope not..."}, {"timstamp": "2018-06-20 13:29", "user": "icebox", "body": "Pyrrhus666: it is nice to watch :)"}, {"timstamp": "2018-06-20 13:33", "user": "icebox", "body": "magic worked... at least in the tests... now test it in the app :)"}, {"timstamp": "2018-06-20 13:35", "user": "Pyrrhus666", "body": "icebox, are you just playing around while at work now ? ;)"}, {"timstamp": "2018-06-20 13:36", "user": "icebox", "body": "Pyrrhus666: no break today"}, {"timstamp": "2018-06-20 13:37", "user": "Pyrrhus666", "body": "icebox, ah :)"}, {"timstamp": "2018-06-20 13:39", "user": "Pyrrhus666", "body": "OT, java humor :"}, {"timstamp": "2018-06-20 13:45", "user": "dhoelzer", "body": "@pyrrhus666: That is funny"}, {"timstamp": "2018-06-20 13:45", "user": "krisfremen", "body": "Pyrrhus666: heh, one of the many Java annoyances"}, {"timstamp": "2018-06-20 13:55", "user": "Pyrrhus666", "body": "only if you do it wrong (afaik ?)"}, {"timstamp": "2018-06-20 13:55", "user": "Pyrrhus666", "body": "something something injectors"}], "label": "other"}
{"id": "73af7cd7", "body": "", "comments": [{"timstamp": "10:15", "user": "ray02", "body": "how is going?"}, {"timstamp": "10:18", "user": "storkme", "body": "meh!"}, {"timstamp": "10:18", "user": "ray02", "body": "boring project?"}, {"timstamp": "10:19", "user": "Pyrrhus666", "body": "morning ray02 storkme"}, {"timstamp": "10:19", "user": "ray02", "body": "hey hey Pyrrhus666"}, {"timstamp": "10:21", "user": "storkme", "body": "not even that boring - i'm just very unmotivated"}, {"timstamp": "10:22", "user": "ray02", "body": "storkme: why is that?"}, {"timstamp": "10:22", "user": "storkme", "body": "personal problems"}, {"timstamp": "10:25", "user": "ray02", "body": "storkme: ah oks"}, {"timstamp": "10:26", "user": "ray02", "body": "storkme: sorry to hear that"}, {"timstamp": "10:26", "user": "storkme", "body": "thanks ray02"}, {"timstamp": "10:27", "user": "SargoDarya", "body": "Morning ray02"}, {"timstamp": "10:30", "user": "ray02", "body": "hey hey SargoDarya"}], "label": "other"}
{"id": "93d594b3", "body": "", "comments": [{"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Is this really the best way to create my dto with the date?"}, {"timstamp": "2019-01-22 14:16", "user": "exonity01", "body": "Looks a bit \"inconvenient\""}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "so hard :/"}, {"timstamp": "2019-01-22 14:22", "user": "Paradisee", "body": "i don't understand these observable things."}, {"timstamp": "2019-01-22 14:23", "user": "Paradisee", "body": "they said to make an Interface, but how can i make an interface? i mean, based on what? i just wanna see the xml i gets from the url. (for the moment)"}, {"timstamp": "2019-01-22 14:23", "user": "pupskuchen", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:26", "user": "Elarcis", "body": "Paradisee: you don't need an interface per se, it's just a helpful element to help the compiler to know the structure of what you got (should just be a string anyway since it's XML)"}, {"timstamp": "2019-01-22 14:26", "user": "Paradisee", "body": "ok, but it wants an observable anyway."}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:27", "user": "Paradisee", "body": "that's my service"}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "i have to use this service from my main app."}, {"timstamp": "2019-01-22 14:28", "user": "Paradisee", "body": "to show the output somehow"}, {"timstamp": "2019-01-22 14:29", "user": "exonity01", "body": "myService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i don't have RssFeedService in my app."}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "i just included it"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "import { RssFeedService } from './rss-feed.service';"}, {"timstamp": "2019-01-22 14:32", "user": "Paradisee", "body": "but the instance it's not present yet."}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:34", "user": "Paradisee", "body": "that'is the app.component"}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:35", "user": "Paradisee", "body": "^"}, {"timstamp": "2019-01-22 14:35", "user": "exonity01", "body": "this.rssFeedService.getFeed().subscribe(...)"}, {"timstamp": "2019-01-22 14:42", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:47", "user": "SuperTyp", "body": "Paradisee:"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": "SuperTyp: please format your flippin code"}, {"timstamp": "2019-01-22 14:48", "user": "Elarcis", "body": ":P"}, {"timstamp": "2019-01-22 14:48", "user": "SuperTyp", "body": ":D"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "I pressed tab and the textarea lost focus"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: also don't show the use of 'any' to newcomers, please"}, {"timstamp": "2019-01-22 14:49", "user": "SuperTyp", "body": "right"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: it's enough of a bad practice without people using it in examples"}, {"timstamp": "2019-01-22 14:49", "user": "Elarcis", "body": "SuperTyp: you can however use 'unknown'"}, {"timstamp": "2019-01-22 14:50", "user": "SuperTyp", "body": "nice didn't know that"}, {"timstamp": "2019-01-22 14:52", "user": "Paradisee", "body": ""}, {"timstamp": "2019-01-22 14:55", "user": "Elarcis", "body": "Paradisee: congrats, your server is blocking requests coming from web pages outside of its domain whitelist"}, {"timstamp": "2019-01-22 14:55", "user": "Paradisee", "body": "mmm"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's a server issue though, nothing much you can do from Angular"}, {"timstamp": "2019-01-22 14:56", "user": "Paradisee", "body": "but im able to see the xml if i go to the page"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: that's because you're making a \"root\" GET request, but requests made from JS are identified through some domain (in your case localhost), and the server blocks that"}, {"timstamp": "2019-01-22 14:56", "user": "Elarcis", "body": "Paradisee: when you do a \"root\" GET request, it gets the domain of the URL you're calling (feed.com)"}, {"timstamp": "2019-01-22 14:57", "user": "Elarcis", "body": "Paradisee: if you were making the request from a web page located on feed.com, it would work"}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "how do i solve the problem?"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "Changing the server rules ;-)"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "On server side."}, {"timstamp": "2019-01-22 14:58", "user": "Paradisee", "body": "its not mine."}, {"timstamp": "2019-01-22 14:58", "user": "Elarcis", "body": "Paradisee: that eiter means that you must configure the RSS server to accept requests from other domains, or if you can't configure it (e.g. it's not yours), you need a back-end app to do the request for you and act as a proxy so you can call it from Angular"}, {"timstamp": "2019-01-22 14:58", "user": "exonity01", "body": "So you can do nothing."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: they can"}, {"timstamp": "2019-01-22 14:59", "user": "pupskuchen", "body": "Elarcis: not feed.com, url.com"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Who can?"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "pupskuchen: sorry"}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "url.com is a dummy one."}, {"timstamp": "2019-01-22 14:59", "user": "Paradisee", "body": "i can't say the url here in chat."}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "exonity01: see my answer. CORS only applies to JS scripts located on web pages, not on regular apps like back-end"}, {"timstamp": "2019-01-22 14:59", "user": "exonity01", "body": "Yes, but you post the cors error in your log"}, {"timstamp": "2019-01-22 14:59", "user": "Elarcis", "body": "Paradisee: I had figured that out"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "me too :D"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Elarcis: I know his problem"}, {"timstamp": "2019-01-22 15:00", "user": "exonity01", "body": "Thats why I said, it's a server side \"problem\""}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "Paradisee: you could try using the angular CLI proxy"}, {"timstamp": "2019-01-22 15:00", "user": "pupskuchen", "body": "with changeOrigin"}, {"timstamp": "2019-01-22 15:00", "user": "Paradisee", "body": "isnt there a way to see if this is the actual problem?"}, {"timstamp": "2019-01-22 15:00", "user": "Elarcis", "body": "exonity01: yes, if the server isn't theirs they have to proxy through a server-app of their own, ergo they can do something about it"}, {"timstamp": "2019-01-22 15:01", "user": "exonity01", "body": "Ah okay"}, {"timstamp": "2019-01-22 15:02", "user": "Paradisee", "body": "i just saw the xml, and it has an empty line as first line. and the xml isn't valid that way. could be that the problem?"}, {"timstamp": "2019-01-22 15:04", "user": "exonity01", "body": ""}, {"timstamp": "2019-01-22 15:11", "user": "Elarcis", "body": "Paradisee: no, your problem resides in the request, you're not even up to the point where your client can read the response"}, {"timstamp": "2019-01-22 15:22", "user": "Paradisee", "body": "Elarcis: so its my problem?"}, {"timstamp": "2019-01-22 15:24", "user": "Elarcis", "body": "Paradisee: CORS is your problem, yes"}, {"timstamp": "2019-01-22 15:25", "user": "Elarcis", "body": "Paradisee: but don't worry, it's bitten almost every beginner, even though it's a fondamental security aspect of webdev"}, {"timstamp": "2019-01-22 15:25", "user": "Paradisee", "body": "Elarcis: id like to know how to solve it too"}, {"timstamp": "2019-01-22 15:27", "user": "Elarcis", "body": "Paradisee: since you don't own the target server: you need a back-end, an app that runs on the same server that will be delivering your app. That back-end will act as a proxy to get that RSS. Regular out-of-browser apps aren't subject to CORS policies, so that will work. Your Angular app would then request that RSS through your back-end"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: yes, that might be quite an overhead. Is there another solution than a back-end proxy? I'm very afraid there isn'tc"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "Paradisee: mind you, that's not specific to AngularJS. You could try in VanillaJS and would run into the same issue"}, {"timstamp": "2019-01-22 15:28", "user": "Elarcis", "body": "*ANgular, not AngularJS"}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "can't i just ask to the server's owner about this problem?"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: oh well if you have a mean of contact, you can indeed ask"}, {"timstamp": "2019-01-22 15:29", "user": "Elarcis", "body": "Paradisee: but it'd be their decision that matters in the end"}, {"timstamp": "2019-01-22 15:29", "user": "SargoDarya", "body": "Paradisee: If you don't have access to the application running on the server you will have a problem with CORS unless running a local proxy."}, {"timstamp": "2019-01-22 15:29", "user": "Paradisee", "body": "yes i can, but i don't really know what to ask :D"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: ask them if it's possible to tweak their RSS's CORS settings so that other domains can request it"}, {"timstamp": "2019-01-22 15:30", "user": "Elarcis", "body": "Paradisee: it should be done on the web server providing the RSS endpoint"}], "label": "other"}
{"id": "93d594cd", "body": "", "comments": [{"timstamp": "2016-10-14 14:01", "user": "antiPoP", "body": "I'm going to give a try to"}, {"timstamp": "2016-10-14 14:02", "user": "antiPoP", "body": "can try"}, {"timstamp": "2016-10-14 14:11", "user": "antiPoP", "body": "that does not support ng2, trying"}], "label": "other"}
{"id": "93d5952f", "body": "", "comments": [{"timstamp": "2018-04-19 06:34", "user": "haweh", "body": ""}, {"timstamp": "2018-04-19 06:35", "user": "RhinoLance", "body": "ta haweh, I'll take a quick loock"}, {"timstamp": "2018-04-19 06:39", "user": "RhinoLance", "body": "haweh, can you paste a sample token so that I can stick it in my localStorage to test with?"}, {"timstamp": "2018-04-19 06:39", "user": "RhinoLance", "body": "As in a raw token"}, {"timstamp": "2018-04-19 06:40", "user": "haweh", "body": "{\"userName\":\"berine at gmail dot com\",\"password\":\"Password12\"} is a token when printing out with getItem"}, {"timstamp": "2018-04-19 06:41", "user": "RhinoLance", "body": "have you configured the whitelistedDomains option?"}, {"timstamp": "2018-04-19 06:44", "user": "CssNoOb", "body": "RhinoLance where I put the array.filters?"}, {"timstamp": "2018-04-19 06:44", "user": "CssNoOb", "body": "will*"}, {"timstamp": "2018-04-19 06:45", "user": "RhinoLance", "body": "haweh, that's not a valid token though."}, {"timstamp": "2018-04-19 06:45", "user": "RhinoLance", "body": "You need something like \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o\""}, {"timstamp": "2018-04-19 06:45", "user": "RhinoLance", "body": "See"}, {"timstamp": "2018-04-19 06:45", "user": "RhinoLance", "body": "If I use that token, it decodes perfectly"}, {"timstamp": "2018-04-19 06:47", "user": "haweh", "body": "Ok so how do I fix login to decode properly then"}, {"timstamp": "2018-04-19 06:48", "user": "RhinoLance", "body": "haweh, you need to look at the JWT spec and make sure that you're encoding a valid token to save. Your issue is that you've saved an invalid token, so it's impossible to decode it."}, {"timstamp": "2018-04-19 06:49", "user": "RhinoLance", "body": "CssNoOb, in a search function? And it won't be array.filter, it will be transactions.filter(...)"}, {"timstamp": "2018-04-19 06:50", "user": "haweh", "body": "I am no idea can you show me a working example"}, {"timstamp": "2018-04-19 06:51", "user": "CssNoOb", "body": "RhinoLance hmm"}, {"timstamp": "2018-04-19 06:51", "user": "CssNoOb", "body": "VM?"}, {"timstamp": "2018-04-19 06:52", "user": "RhinoLance", "body": "virtual machine. My mac died last week :("}, {"timstamp": "2018-04-19 06:52", "user": "RhinoLance", "body": "haweh,"}, {"timstamp": "2018-04-19 06:53", "user": "RhinoLance", "body": "You're trying to use JWT tokens. They have a predefined format that you must follow. You can't create your own format and tokens."}, {"timstamp": "2018-04-19 06:54", "user": "RhinoLance", "body": "And you get a token from an OAuth provider. You can't just create some JSON and use that as your token."}, {"timstamp": "2018-04-19 06:55", "user": "RhinoLance", "body": "can I suggest you have a read of"}, {"timstamp": "2018-04-19 06:56", "user": "haweh", "body": "Is there any way to decode it in login"}, {"timstamp": "2018-04-19 06:57", "user": "RhinoLance", "body": "yes, by using the helper function you're already using. Did you look at the blitz I sent you?"}, {"timstamp": "2018-04-19 07:00", "user": "haweh", "body": "Sorry encode it"}, {"timstamp": "2018-04-19 07:01", "user": "RhinoLance", "body": "Not easily. There are a bunch of libraries around to let you do it, but I don't know of any client side ones for the web."}, {"timstamp": "2018-04-19 07:02", "user": "haweh", "body": "That's the problem how due I get it to pass the string from jwt when using it in login?"}, {"timstamp": "2018-04-19 07:04", "user": "RhinoLance", "body": "When you're logging in, where are you authenticating the username and password?"}, {"timstamp": "2018-04-19 07:05", "user": "haweh", "body": "In that code it returns this return this.teamsApi.post<any>(`${this.url}login`, credentials);"}, {"timstamp": "2018-04-19 07:07", "user": "haweh", "body": "One second I think I am being a idiot here"}, {"timstamp": "2018-04-19 07:07", "user": "RhinoLance", "body": "Ahh, ok. So if that's an OAuth provider, it should return a valid JWT token."}, {"timstamp": "2018-04-19 07:08", "user": "RhinoLance", "body": "sudo xcode -license"}, {"timstamp": "2018-04-19 07:08", "user": "RhinoLance", "body": "whoops, wrong window :D"}, {"timstamp": "2018-04-19 07:11", "user": "haweh", "body": "What's the easiest way to get my auth code here to be set to a object login(credentials: Credentials): Observable<any> { // Uncomment if you want to see the passed-in credentials // console.log(credentials); // Attempt to login return this.teamsApi.post<any>(`${this.url}login`, credentials); }"}, {"timstamp": "2018-04-19 07:17", "user": "CssNoOb", "body": "RhinoLance"}, {"timstamp": "2018-04-19 07:20", "user": "haweh", "body": "RhinoLance what is the easiest way to get this back { \"message\": \"login successful\", \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1YWQ3Yjg0MTkwODJlZjAwMTQ5ZmI5NWIiLCJ1c2VyTmFtZSI6ImJlcmluZUBnbWFpbC5jb20iLCJmdWxsTmFtZSI6IkJlcmluZSBXaXR0ZWsiLCJyb2xlIjoiVGVzdHIiLCJpYXQiOjE1MjQxMTQ0MTV9.NA3Fvz-tZyb5EUAzQo9zRUPHwrIW0jx4R4r_7V6ZmKs\" } from login when it returns this in the auth-service method for authenicating"}, {"timstamp": "2018-04-19 07:23", "user": "RhinoLance", "body": "haweh, I'll taka look in a moment. Working on something that needs some concentration atm."}, {"timstamp": "2018-04-19 07:23", "user": "haweh", "body": "Ok that's fine"}, {"timstamp": "2018-04-19 07:39", "user": "CssNoOb", "body": "RhinoLance | TransactionsComponent.html:21 ERROR TypeError: Cannot read property 'map' of undefined"}, {"timstamp": "2018-04-19 07:39", "user": "CssNoOb", "body": "from my project | private getTransactionNanmes() {"}, {"timstamp": "2018-04-19 07:39", "user": "CssNoOb", "body": "return this.transaction.map(v => v.id);"}, {"timstamp": "2018-04-19 07:39", "user": "CssNoOb", "body": "}"}, {"timstamp": "2018-04-19 07:41", "user": "Peppa_Swine", "body": "brochacho."}, {"timstamp": "2018-04-19 07:41", "user": "Peppa_Swine", "body": "why wouldn't you read through the error messages? they're very informative."}, {"timstamp": "2018-04-19 07:41", "user": "CssNoOb", "body": ""}, {"timstamp": "2018-04-19 07:41", "user": "CssNoOb", "body": "this one is working"}, {"timstamp": "2018-04-19 07:41", "user": "CssNoOb", "body": "but from my proj folder, not"}, {"timstamp": "2018-04-19 07:41", "user": "Peppa_Swine", "body": "i wonder why."}, {"timstamp": "2018-04-19 07:43", "user": "Peppa_Swine", "body": "maybe because you've got a typo somewhere?"}, {"timstamp": "2018-04-19 07:44", "user": "Peppa_Swine", "body": "(actually two, but only one of them breaks the thing)"}, {"timstamp": "2018-04-19 07:44", "user": "CssNoOb", "body": "ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '2,3,12,5'. Current value: '5,2,3,12'."}, {"timstamp": "2018-04-19 07:44", "user": "CssNoOb", "body": "ERROR"}, {"timstamp": "2018-04-19 07:45", "user": "Peppa_Swine", "body": "you see, you started asking questions a few days ago, that made some sense."}, {"timstamp": "2018-04-19 07:45", "user": "Peppa_Swine", "body": "now you're becoming notoriously lazy."}, {"timstamp": "2018-04-19 07:46", "user": "CssNoOb", "body": ":|"}, {"timstamp": "2018-04-19 07:46", "user": "Peppa_Swine", "body": "pay some attention to what you're writing, at this point you're just copypasting stuff and waiting for someone to think for you."}, {"timstamp": "2018-04-19 07:47", "user": "Peppa_Swine", "body": "your map doesnt work because the property is `transactions` and you're addressing `transaction` which doesn't exist."}, {"timstamp": "2018-04-19 07:48", "user": "CssNoOb", "body": "Expression has changed after it was checked. Previous value:"}, {"timstamp": "2018-04-19 07:50", "user": "Peppa_Swine", "body": "google up this very line. i bet you aren't the first person to come across this issue, and you'll find the solution in the first three results."}, {"timstamp": "2018-04-19 07:51", "user": "Peppa_Swine", "body": "it's much quicker than waiting until someone on irc does some guesswork and gives you the answer."}, {"timstamp": "2018-04-19 07:51", "user": "Peppa_Swine", "body": "it's productive."}, {"timstamp": "2018-04-19 07:51", "user": "CssNoOb", "body": ":)"}, {"timstamp": "2018-04-19 07:58", "user": "RhinoLance", "body": "haweh, use this library. It will make dealing with OAuth a whole lot easier thatn trying to roll your own."}, {"timstamp": "2018-04-19 07:59", "user": "RhinoLance", "body": "Or read some docco, and have a crack at"}, {"timstamp": "2018-04-19 08:00", "user": "haweh", "body": "Rhinolab I figured it out but am unsure of the syntax. The login method in the autho service does return it but how do I assign it from the observable return as it doesn't declare the type"}, {"timstamp": "2018-04-19 08:01", "user": "haweh", "body": "because post itself returns a token and that's all it's doing like this \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1YWQ3Yjg0MTkwODJlZjAwMTQ5ZmI5NWIiLCJ1c2VyTmFtZSI6ImJlcmluZUBnbWFpbC5jb20iLCJmdWxsTmFtZSI6IkJlcmluZSBXaXR0ZWsiLCJyb2xlIjoiVGVzdHIiLCJpYXQiOjE1MjQxMTc2OTF9.8Ci68BSuQzdkDFLl8SWlCq9ik9GQfVE2GZsKb3JngwQ\""}, {"timstamp": "2018-04-19 08:03", "user": "CssNoOb", "body": "return this.transaction.map(v => v.id); RhinoLance"}, {"timstamp": "2018-04-19 08:03", "user": "CssNoOb", "body": "from my proj folder"}, {"timstamp": "2018-04-19 08:03", "user": "CssNoOb", "body": "I did set this already | private transaction: Transaction[];"}, {"timstamp": "2018-04-19 08:03", "user": "haweh", "body": "so how do I get it to be assigned to a variable in onSubmit for my login component"}, {"timstamp": "2018-04-19 08:04", "user": "CssNoOb", "body": "public id: number;"}, {"timstamp": "2018-04-19 08:05", "user": "RhinoLance", "body": "haweh, it's returning an observable, os you need to .subscribe(...) it. Subscribe takes a next, error and complete argument. You'll need to read up on Obsrvables, and how you get access to returned values. It's all async."}, {"timstamp": "2018-04-19 08:07", "user": "CssNoOb", "body": "RhinoLance ?"}, {"timstamp": "2018-04-19 08:07", "user": "RhinoLance", "body": "?"}, {"timstamp": "2018-04-19 08:08", "user": "haweh", "body": "I know how they work but how do I return this as a obserable return this.teamsApi.post<any>(`${this.url}login`, credentials); as there is no type or direct varable"}, {"timstamp": "2018-04-19 08:08", "user": "CssNoOb", "body": "why is RhinoLance , return this.transaction.map(v => v.id); not working on my proj folder"}, {"timstamp": "2018-04-19 08:09", "user": "CssNoOb", "body": "Cannot read property 'map' of undefined"}, {"timstamp": "2018-04-19 08:09", "user": "RhinoLance", "body": "CssNoOb, that's why ^"}, {"timstamp": "2018-04-19 08:10", "user": "RhinoLance", "body": "haweh, just do return this.team... As in just return the post method."}, {"timstamp": "2018-04-19 08:10", "user": "CssNoOb", "body": "return this.transaction.map(v=> v.id);"}, {"timstamp": "2018-04-19 08:10", "user": "RhinoLance", "body": "That will return an observable"}, {"timstamp": "2018-04-19 08:10", "user": "CssNoOb", "body": "this.transaction is already set"}, {"timstamp": "2018-04-19 08:10", "user": "CssNoOb", "body": "private transaction: Transaction[];"}, {"timstamp": "2018-04-19 08:10", "user": "RhinoLance", "body": "CssNoOb, read the error again, and tell me what you think it could mean."}, {"timstamp": "2018-04-19 08:12", "user": "CssNoOb", "body": "cannot read property 'map' of undefiend"}, {"timstamp": "2018-04-19 08:12", "user": "CssNoOb", "body": "which is the transaction"}, {"timstamp": "2018-04-19 08:12", "user": "CssNoOb", "body": "private transaction: Transaction[];"}, {"timstamp": "2018-04-19 08:12", "user": "haweh", "body": "Ok I am confused by that do you return this.teams do you have a example as returning post directly shouldn't work"}, {"timstamp": "2018-04-19 08:13", "user": "icebox", "body": "haweh:"}, {"timstamp": "2018-04-19 08:15", "user": "RhinoLance", "body": "CssNoOb, something is making it undefined. You need to figure out what."}, {"timstamp": "2018-04-19 08:15", "user": "CssNoOb", "body": "RhinoLance Maybe I'm not calling the http service?"}, {"timstamp": "2018-04-19 08:16", "user": "CssNoOb", "body": "getTransactionNanmes() {"}, {"timstamp": "2018-04-19 08:16", "user": "CssNoOb", "body": "return this.transaction.map(v=> v.id);} // this.adminService."}, {"timstamp": "2018-04-19 08:16", "user": "CssNoOb", "body": "this.adminService.transaction :|"}, {"timstamp": "2018-04-19 08:16", "user": "CssNoOb", "body": "not?"}, {"timstamp": "2018-04-19 08:19", "user": "CssNoOb", "body": "Your JSON response content is an object - not an array - and objects don't have a map method. ?"}, {"timstamp": "2018-04-19 08:21", "user": "haweh", "body": "icebox that confuses me even more as this is Observable<any> of any and therefore that does not work due to me not knowing the type."}, {"timstamp": "2018-04-19 08:21", "user": "icebox", "body": "CssNoOb: no... JSON.parse(\"[1,2,3]\"); // [1,2,3]"}, {"timstamp": "2018-04-19 08:22", "user": "CssNoOb", "body": "oh boy"}, {"timstamp": "2018-04-19 08:22", "user": "icebox", "body": "CssNoOb: typeof [1,2,3]; // \"object\""}, {"timstamp": "2018-04-19 08:22", "user": "CssNoOb", "body": "json.parse map?"}, {"timstamp": "2018-04-19 08:22", "user": "haweh", "body": "My code is here"}, {"timstamp": "2018-04-19 08:22", "user": "icebox", "body": "CssNoOb: no idea what you are trying to do :)"}, {"timstamp": "2018-04-19 08:23", "user": "CssNoOb", "body": ""}, {"timstamp": "2018-04-19 08:23", "user": "CssNoOb", "body": "RhinoLance helped for that one, and I tried to implement that from my project"}, {"timstamp": "2018-04-19 08:23", "user": "CssNoOb", "body": "and the error is Cannot read property 'map' of undefined"}, {"timstamp": "2018-04-19 08:24", "user": "RhinoLance", "body": "yep, you need to figure out why transaction is undefined."}, {"timstamp": "2018-04-19 08:24", "user": "CssNoOb", "body": "Yes, How come, tables are working"}, {"timstamp": "2018-04-19 08:24", "user": "CssNoOb", "body": "from our transactions"}, {"timstamp": "2018-04-19 08:25", "user": "icebox", "body": "debug, debug and debug :)"}, {"timstamp": "2018-04-19 08:25", "user": "CssNoOb", "body": "console.log(this.transaction);"}, {"timstamp": "2018-04-19 08:25", "user": "CssNoOb", "body": "datas are displayed"}, {"timstamp": "2018-04-19 08:25", "user": "CssNoOb", "body": "return this.transaction.map(v => v.id);"}, {"timstamp": "2018-04-19 08:26", "user": "RhinoLance", "body": "debug \"this\". If you're in a callback, it won't be set to the correct thing. Use arrow functions if so."}, {"timstamp": "2018-04-19 08:27", "user": "CssNoOb", "body": "hmm"}, {"timstamp": "2018-04-19 08:27", "user": "CssNoOb", "body": "arrow func"}, {"timstamp": "2018-04-19 08:27", "user": "icebox", "body": "haweh: do you mean a simple post?"}, {"timstamp": "2018-04-19 08:28", "user": "icebox", "body": "haweh: don't use the type :)"}, {"timstamp": "2018-04-19 08:28", "user": "haweh", "body": "I am really confused as to how so an example would be better"}, {"timstamp": "2018-04-19 08:29", "user": "icebox", "body": "haweh: return this.http.post(this.heroesUrl, hero, httpOptions)"}, {"timstamp": "2018-04-19 08:30", "user": "icebox", "body": "haweh: you can play with a live example of Tour of Heroes... there is the link at the beginning of that doc page"}, {"timstamp": "2018-04-19 08:31", "user": "haweh", "body": "No what I am asking is in my code here I am trying to get this function auth-service, login to return a observable into my login component as it returns a obserable with the decoding string so how do I do this?"}, {"timstamp": "2018-04-19 08:31", "user": "icebox", "body": "haweh: that is your job :)"}, {"timstamp": "2018-04-19 08:32", "user": "icebox", "body": "haweh: I am too lazy to fix it"}, {"timstamp": "2018-04-19 08:33", "user": "icebox", "body": "haweh: but last summer I visited Canada... so I will try to spend some time on it :)"}, {"timstamp": "2018-04-19 08:33", "user": "icebox", "body": "CssNoOb: come on :P"}, {"timstamp": "2018-04-19 08:33", "user": "icebox", "body": "haweh: is that stackblitz working?"}, {"timstamp": "2018-04-19 08:33", "user": "haweh", "body": "Yes it is"}, {"timstamp": "2018-04-19 08:34", "user": "icebox", "body": "haweh: which file should I give a look at?"}, {"timstamp": "2018-04-19 08:35", "user": "haweh", "body": "login.component.ts in submit. It needs to return the auth-service'"}, {"timstamp": "2018-04-19 08:35", "user": "haweh", "body": "s login into a variable"}, {"timstamp": "2018-04-19 08:36", "user": "icebox", "body": "haweh: ah... but there is not any http post call involved there"}, {"timstamp": "2018-04-19 08:37", "user": "icebox", "body": "haweh: and why do you should return anything in onSubmit?"}, {"timstamp": "2018-04-19 08:37", "user": "haweh", "body": "my auth-service has a method called login that returns this return this.teamsApi.post<any>(`${this.url}login`, credentials);. So how do I get the service injected to be able to return into a variable. And for that it's for checking user accounts for certian resources"}, {"timstamp": "2018-04-19 08:40", "user": "icebox", "body": "haweh: I understand you want to use the AuthService in onSubmit... and I think you spotted that because you injected it"}, {"timstamp": "2018-04-19 08:41", "user": "icebox", "body": "haweh: then I read you call this.a.login(...)"}, {"timstamp": "2018-04-19 08:41", "user": "icebox", "body": "haweh: now I understand you want to return something"}, {"timstamp": "2018-04-19 08:41", "user": "haweh", "body": "yes I want to use it's login(credentials: Credentials): Observable<any> to return it into a variable if possible"}, {"timstamp": "2018-04-19 08:42", "user": "haweh", "body": "because it returns a JWT string I need for decoding"}, {"timstamp": "2018-04-19 08:43", "user": "icebox", "body": "haweh: basically that call returns an observable... where would you use that info? in that component or in another one?"}, {"timstamp": "2018-04-19 08:44", "user": "haweh", "body": "it's used by the token component and other's later for checking user permissions."}, {"timstamp": "2018-04-19 08:44", "user": "icebox", "body": "haweh: ok... so you need to share that info via a service"}, {"timstamp": "2018-04-19 08:45", "user": "haweh", "body": "Yes but I need to get into a variable due it being used for decoding by the token class when I set it to localStorage"}, {"timstamp": "2018-04-19 08:45", "user": "haweh", "body": "If it comes into a variable I will just set it to localStorage for sharing so I just need it returning in the one component into a variable"}, {"timstamp": "2018-04-19 08:46", "user": "icebox", "body": "haweh: ah ok... you need the value not the observable... subscribe the observable"}, {"timstamp": "2018-04-19 08:46", "user": "haweh", "body": "I am asking how to do that as I have no idea"}, {"timstamp": "2018-04-19 08:47", "user": "icebox", "body": "haweh: this.a.login(this.credentials).subscribe(...); // be aware it is async"}, {"timstamp": "2018-04-19 08:47", "user": "haweh", "body": "what goes in the subscribe through for putting into a variable is my point"}, {"timstamp": "2018-04-19 08:48", "user": "icebox", "body": "haweh: .subscribe(data => handleData(data));"}, {"timstamp": "2018-04-19 08:48", "user": "icebox", "body": "haweh:"}, {"timstamp": "2018-04-19 08:50", "user": "haweh", "body": "I am even more confused now how does that even work"}, {"timstamp": "2018-04-19 08:50", "user": "icebox", "body": "haweh: (generally speaking that stackblitz doesn't work, you should mock the http call)"}, {"timstamp": "2018-04-19 08:50", "user": "icebox", "body": "haweh: I am afraid you are confused because you don't grasp the observables :)"}, {"timstamp": "2018-04-19 08:51", "user": "icebox", "body": "haweh: better with Promises?"}, {"timstamp": "2018-04-19 08:51", "user": "haweh", "body": "No just an example that works"}, {"timstamp": "2018-04-19 08:53", "user": "icebox", "body": "haweh: no, it doesn't, because the login part, it doesn't work... anyway for your understanding you need to give a look at only a few lines about rxjs stuff..."}, {"timstamp": "2018-04-19 08:54", "user": "icebox", "body": "haweh: there are many resources explaining how to use observables"}, {"timstamp": "2018-04-19 08:54", "user": "haweh", "body": "that doesn't help an example does of working code"}, {"timstamp": "2018-04-19 08:54", "user": "icebox", "body": "haweh: ?"}, {"timstamp": "2018-04-19 08:54", "user": "haweh", "body": "I have looked throug those resources and they really don't code"}, {"timstamp": "2018-04-19 08:54", "user": "haweh", "body": "*help"}, {"timstamp": "2018-04-19 08:55", "user": "icebox", "body": "haweh: I am afraid I said all... I tried to modify that stackblitz, but without mocking the http call, the login part doesn't work... I provided you a simple example how to use \".subscribe\"... if all this is not enough, I am sorry, but I am out"}], "label": "other"}
{"id": "93d59556", "body": "", "comments": [{"timstamp": "2016-06-01 08:50", "user": "Elarcis", "body": "Hi!"}, {"timstamp": "2016-06-01 08:58", "user": "icebox", "body": "Elarcis: hey"}, {"timstamp": "2016-06-01 08:59", "user": "icebox", "body": "OT... sometimes I re-read Paul Graham's essays..."}, {"timstamp": "2016-06-01 09:07", "user": "Elarcis", "body": "I just read this:"}, {"timstamp": "2016-06-01 09:07", "user": "Elarcis", "body": "does it mean we could deport the template compiling on a server, or any other platform?"}, {"timstamp": "2016-06-01 09:12", "user": "icebox", "body": "Elarcis: yes, monomorphic is a feature for isomorphic code :)"}, {"timstamp": "2016-06-01 09:12", "user": "Elarcis", "body": "sounds nice"}, {"timstamp": "2016-06-01 09:15", "user": "icebox", "body": "Elarcis: anyway monomorphic feature is related to detection changes... mono- or poly- is likely related to the shape of the objects in the AST"}, {"timstamp": "2016-06-01 09:16", "user": "Elarcis", "body": "You're just making my brain melt, I have absolutely no knowledge in that domain"}, {"timstamp": "2016-06-01 09:17", "user": "icebox", "body": "Elarcis: ok... an example..."}, {"timstamp": "2016-06-01 09:18", "user": "icebox", "body": "Elarcis: function f1(o) { console.log(o.prop1); console.log(o.prop2); } o1 = { prop1: 'prop1', prop2: 'prop2' }; o2 = { prop1: 'prop1', prop2: 'prop2', prop3: 'prop3' }; f1(o1); f2(o); // The following example is valid javascript, but the argument o to function f1 is NOT monomorphic, because the VM needs to handle two differently shaped objects being passed in."}, {"timstamp": "2016-06-01 09:19", "user": "icebox", "body": "Elarcis: credits to"}, {"timstamp": "2016-06-01 09:19", "user": "Elarcis", "body": "icebox: oh, ok"}, {"timstamp": "2016-06-01 09:20", "user": "Elarcis", "body": "but what's the relation with AST?"}, {"timstamp": "2016-06-01 09:21", "user": "Elarcis", "body": "(and does that mean that TS-generated code is more monomorphic, thus faster?)"}, {"timstamp": "2016-06-01 09:21", "user": "icebox", "body": "Elarcis: if you create an AST (read, if you create a parser), handling the object shape in a monomorphic way (read, handling objects with different structure with the same meta structure), change detection is faster than in polymorphic case"}, {"timstamp": "2016-06-01 09:22", "user": "Elarcis", "body": "seems legit"}], "label": "other"}
{"id": "93d594ae", "body": "", "comments": [{"timstamp": "2016-11-04 11:34", "user": "loZio", "body": "Hello, I'm building a google maps with ng-map (AngularJS) and I want to customize infowindow...Do you have advices or examples? Thanks!"}], "label": "other"}
{"id": "93d5948f", "body": "", "comments": [{"timstamp": "2017-03-17 18:49", "user": "d[10]", "body": ""}, {"timstamp": "2017-03-17 18:49", "user": "d[10]", "body": "give no error, but does not work"}, {"timstamp": "2017-03-17 18:49", "user": "d[10]", "body": "can anyone help ?"}, {"timstamp": "2017-03-17 18:59", "user": "wafflejock", "body": "d[10], row 9 data.rows.lenght"}, {"timstamp": "2017-03-17 18:59", "user": "wafflejock", "body": "same on line 8"}, {"timstamp": "2017-03-17 19:11", "user": "d[10]", "body": "wafflejock: thanksman"}, {"timstamp": "2017-03-17 19:25", "user": "d[10]", "body": "wafflejock: this.database.presentToast(this.configDB); only loja here:"}, {"timstamp": "2017-03-17 19:26", "user": "d[10]", "body": "return only loja*"}], "label": "other"}
{"id": "93d594d0", "body": "", "comments": [{"timstamp": "2018-04-16 10:21", "user": "cart_man", "body": "Hi. Is there anyway to fix this issue that was not a while ago. When running ng serve -> Module build failed: Error: Node Sass does not yet support your current environement: Linux 64-bit with Unsupported runtime (57)"}, {"timstamp": "2018-04-16 10:22", "user": "icebox", "body": "cart_man: did you fill an issue in github repo?"}, {"timstamp": "2018-04-16 10:22", "user": "icebox", "body": "cart_man: sass repo :)"}, {"timstamp": "2018-04-16 10:22", "user": "cart_man", "body": "No cause I didnt have it a while ago .. I use to work on this OS all the time and I also dont really have the time to try and figure out where I should go for this."}, {"timstamp": "2018-04-16 10:27", "user": "cart_man", "body": "icebox : I didnt know that your OS needs to have some specific things for SASS to work? I thouhts it was just an interpretation of css ?"}, {"timstamp": "2018-04-16 10:28", "user": "icebox", "body": "cart_man: ask to sass folks :)"}, {"timstamp": "2018-04-16 10:28", "user": "Pyrrhus666", "body": "cart_man, node-sass needs to be compiled when its installed, so it depends on your runtime a lot..."}, {"timstamp": "2018-04-16 10:29", "user": "Pyrrhus666", "body": "cart_man, I see linux-x64-57 is supported in the newest version though."}, {"timstamp": "2018-04-16 10:29", "user": "icebox", "body": "cart_man: indeed sass is a \"compiler\", an executable program, you need to build... unlees you download the binaries compatible for your os"}, {"timstamp": "2018-04-16 10:29", "user": "Pyrrhus666", "body": "see"}, {"timstamp": "2018-04-16 10:30", "user": "cart_man", "body": "hahah all the sudden a simple css tinker became a full blown OS update ... OMG -.-"}, {"timstamp": "2018-04-16 10:30", "user": "cart_man", "body": "Thanks guys"}, {"timstamp": "2018-04-16 10:31", "user": "cart_man", "body": "Will report back"}, {"timstamp": "2018-04-16 10:31", "user": "icebox", "body": "cart_man: that because you are using sass :)"}, {"timstamp": "2018-04-16 10:32", "user": "icebox", "body": "cart_man: sass is not \"an interpretation of css\""}, {"timstamp": "2018-04-16 10:32", "user": "icebox", "body": "cart_man: it is a dsl producing css"}, {"timstamp": "2018-04-16 10:34", "user": "icebox", "body": "cart_man: basically you are adding a layer of abstraction (the DSL vs. the \"native\" CSS) at the price of adding a build step in the dev workflow and the compilation of the tool"}, {"timstamp": "2018-04-16 10:34", "user": "icebox", "body": "cart_man: it depends on your context if that is good move or not :)"}, {"timstamp": "2018-04-16 10:38", "user": "icebox", "body": "mandarinaduck site made with angularjs minified with closure and integrated with jquery :)"}, {"timstamp": "2018-04-16 10:38", "user": "icebox", "body": ""}, {"timstamp": "2018-04-16 10:38", "user": "ray02", "body": "OT: isn't sad a future like this?"}, {"timstamp": "2018-04-16 10:39", "user": "cart_man", "body": "icebox I would LOVE to just dodge it really"}, {"timstamp": "2018-04-16 10:40", "user": "Elarcis", "body": "ray02: just because you see it through a negative filter of FUD, I think this is cool!"}, {"timstamp": "2018-04-16 10:42", "user": "ray02", "body": "Elarcis i don't know i think that AR has much more sense, insted of VR"}, {"timstamp": "2018-04-16 10:43", "user": "Elarcis", "body": "ray02: one could argue that AR is much more insidious than VR, both are an awesome way of entertainment and creativity :)"}, {"timstamp": "2018-04-16 10:44", "user": "ray02", "body": "moving randomly in a real space it's to me looks wired"}, {"timstamp": "2018-04-16 10:44", "user": "Elarcis", "body": "ray02: well this tweets system isnt wired at all :P"}, {"timstamp": "2018-04-16 10:44", "user": "Pyrrhus666", "body": "ray02, its step 1 on the long road to the matrix ;)"}, {"timstamp": "2018-04-16 10:45", "user": "ray02", "body": "ahah yes i feel like this"}, {"timstamp": "2018-04-16 10:45", "user": "ray02", "body": "the firs step to the matrix :)"}, {"timstamp": "2018-04-16 10:46", "user": "icebox", "body": "in that site, in angularjs (1.5.6) code, I spotted no component approach, using \"var vm = this;\" approach, using .success.error pattern (vs. .catch.error one), using $defer object with $http call (instead of returing directly the $http object)"}, {"timstamp": "2018-04-16 10:47", "user": "icebox", "body": "and clicking on the products to show the details, it doesn't work with FF"}, {"timstamp": "2018-04-16 10:47", "user": "Elarcis", "body": "ray02, Pyrrhus666: beware of the slippery slope fallacy!"}, {"timstamp": "2018-04-16 10:47", "user": "icebox", "body": "sigh"}, {"timstamp": "2018-04-16 10:47", "user": "Pyrrhus666", "body": "icebox, that site is rife with mixed-content and csp errors"}, {"timstamp": "2018-04-16 10:47", "user": "Pyrrhus666", "body": "Elarcis, people are lazy pigs, theyll go for the matrix."}, {"timstamp": "2018-04-16 10:48", "user": "icebox", "body": "Pyrrhus666: terrible"}, {"timstamp": "2018-04-16 10:49", "user": "icebox", "body": "Pyrrhus666: I was wondering if it would be appreciated (intending paid) sending an assessment report highlighting the improvements... (I think it wouldn't)"}, {"timstamp": "2018-04-16 10:49", "user": "Elarcis", "body": "icebox: dont forget extensive mixing of jquery/external scope accesses :P"}, {"timstamp": "2018-04-16 10:50", "user": "Elarcis", "body": "icebox: \"But it WorksTM\""}, {"timstamp": "2018-04-16 10:50", "user": "icebox", "body": "Elarcis: I don't think so... with FF it doesn't work"}, {"timstamp": "2018-04-16 10:50", "user": "Pyrrhus666", "body": "itym <unconvertable> it works here <unconvertable> ;)"}, {"timstamp": "2018-04-16 10:50", "user": "icebox", "body": "but maybe they have 0.1% of users using FF"}, {"timstamp": "2018-04-16 10:51", "user": "icebox", "body": "apart about 9mb to load the site :)"}, {"timstamp": "2018-04-16 10:51", "user": "icebox", "body": "terrible"}, {"timstamp": "2018-04-16 10:52", "user": "Elarcis", "body": "icebox: even my app, which is a mountain of code, is thrice as light"}, {"timstamp": "2018-04-16 10:59", "user": "icebox", "body": "developers K-commerce inside by Keros Digital -"}, {"timstamp": "2018-04-16 10:59", "user": "icebox", "body": "\"The Challenge of Successful E-Commerce at Enterprise Level.\""}, {"timstamp": "2018-04-16 11:01", "user": "ray02", "body": "\"Enterprise Level\" doesn't mean nothing right?"}, {"timstamp": "2018-04-16 11:02", "user": "Pyrrhus666", "body": "double negatives are dangerous ray02"}, {"timstamp": "2018-04-16 11:03", "user": "icebox", "body": "ray02: mainly it means mainstream in that business sector"}, {"timstamp": "2018-04-16 11:04", "user": "ray02", "body": "yes i see, but is like when you read \"we are ninja dev\""}, {"timstamp": "2018-04-16 11:04", "user": "icebox", "body": "it would be interesting to create an indipendent (human) assessment study (or site) of commercial sites"}, {"timstamp": "2018-04-16 11:05", "user": "icebox", "body": "ray02: agree"}, {"timstamp": "2018-04-16 11:06", "user": "icebox", "body": "like a human version and app oriented of chrome lighthouse"}, {"timstamp": "2018-04-16 11:08", "user": "Pyrrhus666", "body": "I find the most commercial sites a drama. I try to get to the specs asap, and sometimes thats very hard to do..."}, {"timstamp": "2018-04-16 11:08", "user": "icebox", "body": "Pyrrhus666: agreed"}, {"timstamp": "2018-04-16 11:09", "user": "Pyrrhus666", "body": "often its even ridiculously hard to find the prices of stuff (esp. in the saas department)"}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "Pyrrhus666: that is a common sin in commercial departments... because every salesman wants \"their\" prices and discounts"}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "Pyrrhus666: here, in finance, it is the same for the fee plans"}, {"timstamp": "2018-04-16 11:11", "user": "Pyrrhus666", "body": "icebox, I kind of understand that, but from a prospective buyers perspective, its insane."}, {"timstamp": "2018-04-16 11:11", "user": "icebox", "body": "it should be insane also for the company"}, {"timstamp": "2018-04-16 11:12", "user": "icebox", "body": "Pyrrhus666: here we have thousands (sic!) of plans... and it doesn't make sense"}, {"timstamp": "2018-04-16 11:13", "user": "icebox", "body": "almost a plan per customer :)"}, {"timstamp": "2018-04-16 11:13", "user": "Pyrrhus666", "body": "icebox, well, in the cases Im talking about, there often _are_ prices to be found, theyre just ridiculously hidden :)"}, {"timstamp": "2018-04-16 11:13", "user": "Pyrrhus666", "body": "icebox, yeah, Ive heard similar stuff from corporate telco sales and corporate insurance sales..."}, {"timstamp": "2018-04-16 11:14", "user": "icebox", "body": "Pyrrhus666: yep... that is the other face of the same ill... \"no prices\" means you can write reports with the figures you like :)"}, {"timstamp": "2018-04-16 11:16", "user": "icebox", "body": "a few years ago I applied a clustering technique to review the fee plans... I reduced them for one factor... but anyway they are a \"beast\""}, {"timstamp": "2018-04-16 11:17", "user": "icebox", "body": "also because if you change the plan, there are a lot of legal details involved"}, {"timstamp": "2018-04-16 11:17", "user": "Pyrrhus666", "body": "icebox, I can imagine..."}, {"timstamp": "2018-04-16 11:27", "user": "icebox", "body": "the usual italians :)"}], "label": "other"}
{"id": "93d59521", "body": "", "comments": [{"timstamp": "2017-12-01 11:53", "user": "jparker", "body": "Hello! I would like to use percentage in a simple math test e.g. <p>{{ 300 - 1% }}</p> How do I go about doing this?"}, {"timstamp": "2017-12-01 12:02", "user": "icebox", "body": "jparker: what do you mean? the calculation or adding the symbol?"}, {"timstamp": "2017-12-01 12:02", "user": "icebox", "body": "jparker: for the symbol you need to move it out of the interpolation <p>{{ 300 - 1}}%</p>"}, {"timstamp": "2017-12-01 12:03", "user": "icebox", "body": "jparker: if you are asking how to calculate 1% of an amount... well... really?"}, {"timstamp": "2017-12-01 12:03", "user": "icebox", "body": "off for a break... see you later"}, {"timstamp": "2017-12-01 12:40", "user": "jparker", "body": "thank you for the reply. But, I am getting this error"}], "label": "other"}
{"id": "8addb274", "body": "", "comments": [{"timstamp": "2017-02-10 19:55", "user": "kas84", "body": "Id like to calculate a ng-style based on some dom of the page, but the ng-style fires some time before angular finished manipulating the dom"}, {"timstamp": "2017-02-10 19:56", "user": "kas84", "body": "is there a way to do a timeout or something like that to wait for changes?"}], "label": "feature"}
{"id": "93d5951d", "body": "", "comments": [{"timstamp": "2016-08-08 15:15", "user": "Firo", "body": "Does the scope really contain loadData fn?"}], "label": "other"}
{"id": "73af7cf6", "body": "", "comments": [{"timstamp": "20:18", "user": "optikalmouse", "body": "is stackblitz.com the new codepen/jsbin/gist spot to post angular code snippets?"}], "label": "other"}
{"id": "8addb269", "body": "", "comments": [{"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "is there a dropdown menu or something?"}, {"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "How much of the HTML do I have to reproduce?"}, {"timstamp": "2017-02-11 00:58", "user": "colonel-panic", "body": "this thing I'm working on is pieced together out of templates"}, {"timstamp": "2017-02-11 00:59", "user": "wafflejock", "body": "colonel-panic,"}, {"timstamp": "2017-02-11 01:18", "user": "colonel-panic", "body": "wafflejock, thanks for that plunker."}, {"timstamp": "2017-02-11 01:18", "user": "colonel-panic", "body": "That's how it's supposed to work, but for some reason I can't seem to pass this variable from my controller into the template"}, {"timstamp": "2017-02-11 01:19", "user": "colonel-panic", "body": "My code looks very similar to that, except that the color-changing code is embedded inside a function that invalidates the form if a certain button is not clicked"}], "label": "feature"}
{"id": "0ec1e3a6", "body": "", "comments": [{"timstamp": "08:42", "user": "Pyrrhus666", "body": "morning #angularjs"}, {"timstamp": "08:54", "user": "icebox", "body": "Pyrrhus666: traces of blood in sneezing... today we go to the vet, but it should be a quite common case when you get a kitten from a shelter... aniway it eats and plays ;)"}, {"timstamp": "08:55", "user": "icebox", "body": "*anyway"}, {"timstamp": "08:56", "user": "Pyrrhus666", "body": "icebox, some of the mist important properties of kittens :)"}], "label": "other"}
{"id": "93d59542", "body": "", "comments": [{"timstamp": "2016-08-03 15:05", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g. /msg NickServ identify <password>. ) Does Angular 2 use bluebird as the Promise library ?"}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "in angular 2, you can use Promises. (e.g."}, {"timstamp": "2016-08-03 15:06", "user": "fiddo", "body": "...as I don't know how to tell"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: wow, you /almost/ pasted sensitive data, good job :D"}, {"timstamp": "2016-08-03 15:11", "user": "Elarcis", "body": "fiddo: (also, I don't know)"}, {"timstamp": "2016-08-03 15:11", "user": "icebox", "body": "fiddo: no"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "i know im an idiot"}, {"timstamp": "2016-08-03 15:12", "user": "fiddo", "body": "...anyway, i want to use the same Promise library when i code in node as per the Promise library in Angular 2"}, {"timstamp": "2016-08-03 15:13", "user": "icebox", "body": "fiddo: perfect"}, {"timstamp": "2016-08-03 15:13", "user": "fiddo", "body": "when Angular 2 installss, there seems to be alot of Promise libraries in there - which one is it ?"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: no need to use a lib... Promise is native :)"}, {"timstamp": "2016-08-03 15:14", "user": "icebox", "body": "fiddo: AngularJS 2.0 Promise Design Doc"}, {"timstamp": "2016-08-03 15:15", "user": "fiddo", "body": "what do u mean by 'native' ? Do u mean the Angular 2 comes with it's 'own' Promise library? (i.e. written by Angular team?)"}, {"timstamp": "2016-08-03 15:15", "user": "icebox", "body": "fiddo: open devtools console and type: Promise"}, {"timstamp": "2016-08-03 15:16", "user": "fiddo", "body": "devtools?!? sorry Im developing on a windows box"}, {"timstamp": "2016-08-03 15:16", "user": "icebox", "body": "fiddo: devtools is in the browser :)"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "fiddo: f12 in your browser"}, {"timstamp": "2016-08-03 15:16", "user": "uru", "body": "(usually)"}, {"timstamp": "2016-08-03 15:18", "user": "celuidufond", "body": "icebox: looks nice. Just a question : as it's a memory db : means no storage for non connecter people without an adapter ?"}, {"timstamp": "2016-08-03 15:19", "user": "icebox", "body": "celuidufond: yep... but I suppose it is simple like localStorage.set(myDb); // or something like that"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: or start node (6.x) console and at the prompt type... Promise... and you have your Promises :) without require any lib :)"}, {"timstamp": "2016-08-03 15:20", "user": "fiddo", "body": "icebox: great thanks. yes i've read that. so it's an Angular2-specific library. If I want to use that Promise library, say in Node, then I can't. I'll use another one. Is that right?"}, {"timstamp": "2016-08-03 15:20", "user": "icebox", "body": "fiddo: without requiring any lib"}, {"timstamp": "2016-08-03 15:21", "user": "icebox", "body": "fiddo: about node, read above"}, {"timstamp": "2016-08-03 15:21", "user": "uru", "body": "fiddo: They are built in to JS, you don't need to do anything to start using them other than start using them"}, {"timstamp": "2016-08-03 15:22", "user": "icebox", "body": "fiddo: Promises are a defacto standard within JavaScript community and is part of the ECMAScript Standard."}, {"timstamp": "2016-08-03 15:25", "user": "fiddo", "body": "Yes I'm on Node >=6. I see. If wanting to use Promises using Typescript in Node, I'll need a library though, right?"}, {"timstamp": "2016-08-03 15:25", "user": "icebox", "body": "fiddo: no :)"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "oh dear im confused. theres no beginners guide for this for a newbie hehe. I can use Promises in Typescript in Angular 2 just fine. Now I want to use Promises in Typescript in Node. My understanding is that when Typescript transpiles to Javascript to run on Node, it needs a Promise library. Otherwise how would Typescript resolve the 'Promise' keywo"}, {"timstamp": "2016-08-03 15:29", "user": "fiddo", "body": "rd?"}, {"timstamp": "2016-08-03 15:32", "user": "icebox", "body": "fiddo: I am afraid you are confusing the lib with the type definitions"}, {"timstamp": "2016-08-03 15:33", "user": "icebox", "body": "fiddo:"}, {"timstamp": "2016-08-03 15:33", "user": "fiddo", "body": "ok will read :)"}, {"timstamp": "2016-08-03 15:34", "user": "icebox", "body": "fiddo: ignore \"Promises are not in Node yet\"... they are there"}, {"timstamp": "2016-08-03 15:35", "user": "icebox", "body": "fiddo: the last answers are relevant"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "So.... recent versions of Node has Promises built-in. If u code in Javascript, you have immediate access to Promises with no problem. If u code in Typescript, Typescript will need the Promise declaration file in order for the Transpiler to 'see' the 'Promise' keyword you have written in Typescript. Thus the emitted Javacript code will be able to th"}, {"timstamp": "2016-08-03 15:48", "user": "fiddo", "body": "en access the Promise features built-in to Node. Is that right ?"}, {"timstamp": "2016-08-03 15:52", "user": "icebox", "body": "fiddo: yes and no"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: your backend is Node.js (Javascript), your frontend is Typescript (compiled to Javascript)"}, {"timstamp": "2016-08-03 15:54", "user": "icebox", "body": "fiddo: unless you want to use Typescript also in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "yes. using Typescript in the backend"}, {"timstamp": "2016-08-03 15:55", "user": "icebox", "body": "fiddo: so... your above statement is correct"}, {"timstamp": "2016-08-03 15:55", "user": "fiddo", "body": "my issue is with Node, NOT the browser"}, {"timstamp": "2016-08-03 15:56", "user": "fiddo", "body": "icebox: thanks. i think i get it"}, {"timstamp": "2016-08-03 15:56", "user": "icebox", "body": "fiddo: cool!"}, {"timstamp": "2016-08-03 15:59", "user": "icebox", "body": "fiddo: no... you need to add type definitions with \"typings\""}, {"timstamp": "2016-08-03 15:59", "user": "fiddo", "body": "As Node uses es6 Promises natively, I just need the es6-shim. That way Typescript will understand the Promise keyword"}, {"timstamp": "2016-08-03 16:00", "user": "icebox", "body": "fiddo: es6-shim is use to add Promise feature to enviroments without that feature"}, {"timstamp": "2016-08-03 16:08", "user": "fiddo", "body": "icebox: oh. the shim is for a browser that doesn't support Promises. is that right?"}, {"timstamp": "2016-08-03 16:09", "user": "icebox", "body": "fiddo: correct"}], "label": "other"}
{"id": "93d59486", "body": "", "comments": [{"timstamp": "2017-02-10 08:05", "user": "icebox", "body": "Setting up your first Angular (2) Project Using Angular Material2 -"}, {"timstamp": "2017-02-10 08:12", "user": "rand0m", "body": "oi icebox :D"}, {"timstamp": "2017-02-10 08:12", "user": "rand0m", "body": "morning"}, {"timstamp": "2017-02-10 08:12", "user": "icebox", "body": "rand0m: hey"}, {"timstamp": "2017-02-10 08:12", "user": "rand0m", "body": "what are you doing here this early :p"}, {"timstamp": "2017-02-10 08:18", "user": "icebox", "body": "rand0m: local time about 08.00"}, {"timstamp": "2017-02-10 08:36", "user": "rand0m", "body": "hay its 7:30am here"}, {"timstamp": "2017-02-10 08:37", "user": "icebox", "body": "rand0m: yep... GMT vs. GMT+1 :)"}, {"timstamp": "2017-02-10 08:37", "user": "rand0m", "body": "oic"}, {"timstamp": "2017-02-10 08:37", "user": "rand0m", "body": "guten morgen to you too :D"}, {"timstamp": "2017-02-10 08:37", "user": "pLaTo0n", "body": ":)"}, {"timstamp": "2017-02-10 08:37", "user": "rand0m", "body": "ohaio gozaimasu"}, {"timstamp": "2017-02-10 08:37", "user": "rand0m", "body": "shubodaya"}, {"timstamp": "2017-02-10 08:37", "user": "rand0m", "body": "buenos dias"}, {"timstamp": "2017-02-10 08:38", "user": "rand0m", "body": "thats the only thing i know :>"}, {"timstamp": "2017-02-10 08:39", "user": "rand0m", "body": "i start work in 2 hours"}, {"timstamp": "2017-02-10 08:39", "user": "rand0m", "body": "they want me to bring my laptop :s"}, {"timstamp": "2017-02-10 08:40", "user": "icebox", "body": "rand0m: good luck! :)"}, {"timstamp": "2017-02-10 08:40", "user": "rand0m", "body": "thanks icebox"}, {"timstamp": "2017-02-10 08:43", "user": "icebox", "body": "rand0m: don't forget to bring your preferred editor :)"}, {"timstamp": "2017-02-10 08:44", "user": "rand0m", "body": "I work on a java based cms which costs millions of pounds in licensing"}, {"timstamp": "2017-02-10 08:44", "user": "rand0m", "body": "and the company is giving away a copy of that cms for me and others to work on ??"}, {"timstamp": "2017-02-10 08:44", "user": "rand0m", "body": "isn't that dumb? I could actually rewrite some classes and make sure that it doesnt check for authenticity and use the cms for myself"}, {"timstamp": "2017-02-10 08:45", "user": "rand0m", "body": "whats there to stop me?"}, {"timstamp": "2017-02-10 08:45", "user": "rand0m", "body": "ofcourse I won't be doing that, but I think its dumb to give away a new employee the keys to your safe"}, {"timstamp": "2017-02-10 08:50", "user": "rand0m", "body": "hay icebox I'll pm you a link to my app"}], "label": "other"}
{"id": "93d594fa", "body": "", "comments": [{"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "Hey guys. I have just ran into a flex bug with material css"}, {"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "in Safari of course <:/"}, {"timstamp": "2016-08-12 11:05", "user": "DarkStar1", "body": "has anyone got a solution for this or a hackable work around?"}, {"timstamp": "2016-08-12 11:07", "user": "Elarcis", "body": "DarkStar1: is not using Safari a viable option?"}, {"timstamp": "2016-08-12 11:08", "user": "DarkStar1", "body": "You know, The hipster movement is in force and they want safari"}, {"timstamp": "2016-08-12 11:08", "user": "DarkStar1", "body": "So no :)"}, {"timstamp": "2016-08-12 11:08", "user": "Elarcis", "body": "too bad hipster don't have to work with Safari"}, {"timstamp": "2016-08-12 11:08", "user": "Elarcis", "body": "they'd stop using it and would create a Xth hyped browser"}, {"timstamp": "2016-08-12 11:09", "user": "DarkStar1", "body": "Well we didn't want IE for years but created workarounds for that. So we can also tolerate Safari for all its quirks too"}, {"timstamp": "2016-08-12 11:10", "user": "ngWalrus", "body": "IE is still shit :("}, {"timstamp": "2016-08-12 11:11", "user": "DarkStar1", "body": "I take it the absence of answers means there is no solution/way-around this"}, {"timstamp": "2016-08-12 11:11", "user": "ngWalrus", "body": "even edge is pretty shit"}, {"timstamp": "2016-08-12 11:11", "user": "ngWalrus", "body": "but not as shit as IE 9 and downwards"}, {"timstamp": "2016-08-12 11:12", "user": "DarkStar1", "body": "Edge = IE. It's just a name change to fool the next generation of upcoming web devs who have not suffered the IE near monopoly"}, {"timstamp": "2016-08-12 11:15", "user": "ngWalrus", "body": "I like how at university microsoft shill lecture the guy was like \"IE 8(this was back in 2011 iirc) is going to be the best browser. It's so blazingly fast that sometimes it works faster than sites do\""}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "what he meant is that it ignores document.readys and shit like that and triees to run js and do dom shit before the dom is ready"}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "or was it ie 9"}, {"timstamp": "2016-08-12 11:16", "user": "ngWalrus", "body": "I forget"}, {"timstamp": "2016-08-12 11:16", "user": "B3nd3r", "body": "I'm trying to apply conditionnal classes with ngClass, on angular 1.x, I made it like this :"}, {"timstamp": "2016-08-12 11:16", "user": "B3nd3r", "body": "`<span ng-class=\"{'OK': 'label label-success', 'NOK': 'label label-danger', 'Missing': 'label label-danger', 'OFF': 'label label-warning'}[event.status]\"`"}, {"timstamp": "2016-08-12 11:17", "user": "B3nd3r", "body": "now with angular 2, I have to do :"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "`<span [ngClass]=\"{'label': event.status, 'label-success': event.status === 'OK', 'label-danger': event.status === 'NOK', 'label-warning': event.status === 'Missing', 'label-info': event.status === 'OFF' }\">`"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "so the first 'label' thing (bootstrap 3) have to be outside"}, {"timstamp": "2016-08-12 11:18", "user": "B3nd3r", "body": "any way to shorten that?"}, {"timstamp": "2016-08-12 11:20", "user": "Elarcis", "body": "B3nd3r: didn't even know the {values}[variable] was valid"}, {"timstamp": "2016-08-12 11:20", "user": "B3nd3r", "body": "on ng 1?"}, {"timstamp": "2016-08-12 11:20", "user": "Elarcis", "body": "yes"}, {"timstamp": "2016-08-12 11:20", "user": "B3nd3r", "body": "had to search for days for that xD"}, {"timstamp": "2016-08-12 11:21", "user": "Elarcis", "body": "B3nd3r: I guess you might want to have a labelClasses getter in your component that makes the switch"}, {"timstamp": "2016-08-12 11:22", "user": "B3nd3r", "body": "that's the easy solution of course, think there isn't another way yet"}, {"timstamp": "2016-08-12 11:22", "user": "B3nd3r", "body": "and between 1 & 2, tests are inverted"}, {"timstamp": "2016-08-12 11:23", "user": "B3nd3r", "body": "in 1 it's test:class in 2 it's class:test"}, {"timstamp": "2016-08-12 11:23", "user": "B3nd3r", "body": "or maybe I'm using it badly :/"}, {"timstamp": "2016-08-12 11:23", "user": "Elarcis", "body": "B3nd3r: they're inverted because you're making a switch, but in 1.x I'm also used to class:test"}, {"timstamp": "2016-08-12 11:26", "user": "B3nd3r", "body": "ok"}], "label": "other"}
{"id": "93d594de", "body": "", "comments": [{"timstamp": "2017-02-17 10:23", "user": "lgfinfo", "body": "JOIN"}, {"timstamp": "2017-02-17 10:24", "user": "Pyrrhus666", "body": "lgfinfo, step 1 succeeded."}, {"timstamp": "2017-02-17 10:25", "user": "lgfinfo", "body": "is there real people?"}, {"timstamp": "2017-02-17 10:25", "user": "Pyrrhus666", "body": "I seem real enough"}, {"timstamp": "2017-02-17 10:26", "user": "lgfinfo", "body": "nice to meet you"}, {"timstamp": "2017-02-17 10:28", "user": "Pyrrhus666", "body": "lgfinfo, in this channel, you can just ask away. if anyone is available and has an answer, theyll tell you ;)"}, {"timstamp": "2017-02-17 10:29", "user": "ngbot", "body": "[angular.js] gkalpak pushed 2 new commits to master:"}, {"timstamp": "2017-02-17 10:29", "user": "ngbot", "body": "angular.js/master 9a2efb7 Georgios Kalpakas: fix($animate): improve detection on `ng-animate` in `classNameFilter` RegExp..."}, {"timstamp": "2017-02-17 10:29", "user": "ngbot", "body": "angular.js/master b55637a Georgios Kalpakas: fix($animate): reset `classNameFilter` to `null` when a disallowed RegExp is used..."}, {"timstamp": "2017-02-17 10:34", "user": "ngbot", "body": "[angular.js] gkalpak pushed 2 new commits to v1.6.x:"}, {"timstamp": "2017-02-17 10:34", "user": "ngbot", "body": "angular.js/v1.6.x 1f13313 Georgios Kalpakas: fix($animate): improve detection on `ng-animate` in `classNameFilter` RegExp..."}, {"timstamp": "2017-02-17 10:34", "user": "ngbot", "body": "angular.js/v1.6.x a584fb6 Georgios Kalpakas: fix($animate): reset `classNameFilter` to `null` when a disallowed RegExp is used..."}, {"timstamp": "2017-02-17 10:35", "user": "FatNoLife", "body": "does ngbot do that everytime someone commits to angular 1.x/2.x?"}, {"timstamp": "2017-02-17 10:38", "user": "Pyrrhus666", "body": "FatNoLife, only when pushed to master, I think"}], "label": "other"}
{"id": "93d59499", "body": "", "comments": [{"timstamp": "2016-05-26 15:54", "user": "Paladice", "body": "re-hello :) if I want to delete a line in my database, I must do $http.put ?"}, {"timstamp": "2016-05-26 15:55", "user": "icebox", "body": "Paladice: no... use a sql statement :)"}, {"timstamp": "2016-05-26 15:55", "user": "Paladice", "body": "icebox, ok thanks i'll search about it"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: no... it is a joke (half joke) :)"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: read again your question"}, {"timstamp": "2016-05-26 15:56", "user": "icebox", "body": "Paladice: generally speaking database and frontend are not connectect"}, {"timstamp": "2016-05-26 15:57", "user": "icebox", "body": "Paladice: in the midlle there is the backend... and I would call a backend api (with a get) to delete manny rows"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": ":) yes I know it :) but if I want to spell a webservice which will delete my line, I can spell it with put ?"}, {"timstamp": "2016-05-26 15:58", "user": "icebox", "body": "Paladice: so there is not any relation between how to call a backend api (get, post, put, delete) and how to remove a row in the db"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": "okok"}, {"timstamp": "2016-05-26 15:58", "user": "Paladice", "body": "thanks :)"}], "label": "other"}
{"id": "73af7cfd", "body": "", "comments": [{"timstamp": "10:03", "user": "trampi", "body": "morning everyone!"}, {"timstamp": "10:04", "user": "Pyrrhus666", "body": "morning trampi"}], "label": "other"}
{"id": "93d594fc", "body": "", "comments": [{"timstamp": "2016-09-22 18:37", "user": "xochilpili", "body": "im trying to make an uniq array from another array, but i just having this issue that last item is always repeated"}, {"timstamp": "2016-09-22 18:37", "user": "xochilpili", "body": "any help?"}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "im just tired of this, i cant see what am i doing wrong"}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "or ..."}, {"timstamp": "2016-09-22 18:38", "user": "xochilpili", "body": "wtf is going on"}, {"timstamp": "2016-09-22 18:39", "user": "mst", "body": "xochilpili: how can anybody help if you don't even show us the code or the output? :("}, {"timstamp": "2016-09-22 18:39", "user": "xochilpili", "body": ""}, {"timstamp": "2016-09-22 18:39", "user": "xochilpili", "body": "mst, i was finish the plnkr"}, {"timstamp": "2016-09-22 18:40", "user": "xochilpili", "body": "finishing*"}, {"timstamp": "2016-09-22 18:40", "user": "xochilpili", "body": "results in the console"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "this code is illegible"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "duplicated .push with identical arguments instead of a function"}, {"timstamp": "2016-09-22 18:41", "user": "mst", "body": "random mixture of forEach and for() for no apparent reason"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "it's no wonder you can't debug this"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "I can barely read it"}, {"timstamp": "2016-09-22 18:42", "user": "mst", "body": "refactor it until it's (a) decomposed into function (b) at least vaguely consistent"}, {"timstamp": "2016-09-22 18:43", "user": "mst", "body": "should be rather easier to debug at that point"}, {"timstamp": "2016-09-22 18:43", "user": "xochilpili", "body": "mst, what? i havent found a different way to loop into the array, im not making this json it came for some f** API"}, {"timstamp": "2016-09-22 18:43", "user": "mst", "body": "what's wrong with forEach"}, {"timstamp": "2016-09-22 18:44", "user": "xochilpili", "body": "mst, what?"}, {"timstamp": "2016-09-22 18:44", "user": "mst", "body": "for(var i=0;i<tmpRates.length;i++){"}, {"timstamp": "2016-09-22 18:44", "user": "mst", "body": "^^ why are you doing that the hard way?"}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "because i want an uniq array based on boardName of each rate in the room then the only differences on each, is the number of adults, etc"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "and?"}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "i need some better ideas"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "how is that relevant to my question \"why are you not using forEach to iterate that?\""}, {"timstamp": "2016-09-22 18:47", "user": "xochilpili", "body": "foreach in the tmpRates?"}, {"timstamp": "2016-09-22 18:47", "user": "mst", "body": "exactly"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "C-style for is generally a footgun"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "that's why angular provides a foreach"}, {"timstamp": "2016-09-22 18:48", "user": "xochilpili", "body": "no reason"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "so clean it up. and then factor out functions. and *then* try and debug it."}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "your logic is obscured by the messiness of the code"}, {"timstamp": "2016-09-22 18:48", "user": "xochilpili", "body": "well, the main issue is that i cant make this array unique"}, {"timstamp": "2016-09-22 18:48", "user": "mst", "body": "..."}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "i have no logic right now, i have spent almost a day in this, really, that's why im here, for help"}, {"timstamp": "2016-09-22 18:49", "user": "mst", "body": "yes, and now you're refusing the help."}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "mst, what you mean?"}, {"timstamp": "2016-09-22 18:49", "user": "xochilpili", "body": "let me change the c-style"}, {"timstamp": "2016-09-22 18:49", "user": "mst", "body": "clean up the code until the logic is clearer, *then* we can try and debug the logic"}, {"timstamp": "2016-09-22 18:50", "user": "xochilpili", "body": "that's the help \"im refusing\"?"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "yes. your code is currently shit. if we make it less shit, it will be easier to find and fix the problem."}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "no, it bounces back and forth between forEach and for with copypasta in the middle"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "I've written code like this too"}, {"timstamp": "2016-09-22 18:50", "user": "mst", "body": "and I couldn't debug mine without refactoring it to be sane first either"}, {"timstamp": "2016-09-22 18:51", "user": "xochilpili", "body": "mst, copypasta?"}, {"timstamp": "2016-09-22 18:51", "user": "mst", "body": "the duplicated push"}, {"timstamp": "2016-09-22 18:52", "user": "xochilpili", "body": "mst, i could not make this in other way, how can i push and item that isnt there?"}, {"timstamp": "2016-09-22 18:53", "user": "xochilpili", "body": "mst, how can i push an item that isnt there? that's why i had to push twice, once when newRates is empty, and the other when isnt"}, {"timstamp": "2016-09-22 18:54", "user": "mst", "body": "xochilpili: wha?"}, {"timstamp": "2016-09-22 18:55", "user": "mst", "body": "xochilpili: why not set an empty thing to [] and then push onto it normally?"}, {"timstamp": "2016-09-22 18:56", "user": "xochilpili", "body": "mst, newRates is empty = []"}, {"timstamp": "2016-09-22 18:56", "user": "xochilpili", "body": "i dont understand what you mean, (also english issues);"}, {"timstamp": "2016-09-22 18:57", "user": "mst", "body": "xochilpili: then I don't understand the problem"}, {"timstamp": "2016-09-22 18:57", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 18:58", "user": "mst", "body": "xochilpili: still has a duplicated push()"}, {"timstamp": "2016-09-22 18:59", "user": "mst", "body": "xochilpili: 24 and 42 are the same code, copypasted"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, i have even 5 \"rates\" per room, then, what i need is to create an unique array from those rates and add the values of each"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, that part i cant figure it out how to \"avoid\""}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "have you ever seen the output?"}, {"timstamp": "2016-09-22 18:59", "user": "xochilpili", "body": "mst, in the console?"}, {"timstamp": "2016-09-22 18:59", "user": "mst", "body": "xochilpili: what's wrong with turning it into a function like I suggested?"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "I'm not looking at the console until I can actually read the code"}, {"timstamp": "2016-09-22 19:00", "user": "xochilpili", "body": "mst, what function?"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "xochilpili: what?"}, {"timstamp": "2016-09-22 19:00", "user": "xochilpili", "body": "mst, maybe if you see the console, can get a better idea, i cant express myself in english as i wanted to"}, {"timstamp": "2016-09-22 19:00", "user": "mst", "body": "addRateTo(newRates, tmpRate, rate);"}, {"timstamp": "2016-09-22 19:01", "user": "xochilpili", "body": "mst, oks"}, {"timstamp": "2016-09-22 19:01", "user": "mst", "body": "make that function. call it twice."}, {"timstamp": "2016-09-22 19:01", "user": "mst", "body": "copypasta is not easy to debug. javascript has functions for a reason."}, {"timstamp": "2016-09-22 19:02", "user": "xochilpili", "body": "mst, im on it"}, {"timstamp": "2016-09-22 19:04", "user": "xochilpili", "body": "mst, updated :"}, {"timstamp": "2016-09-22 19:06", "user": "mst", "body": "xochilpili: ok. and the console only has one entry per 'code'"}, {"timstamp": "2016-09-22 19:06", "user": "xochilpili", "body": "mst, are u there?"}, {"timstamp": "2016-09-22 19:07", "user": "mst", "body": "xochilpili: dude, it took that long for the plunker to reload"}, {"timstamp": "2016-09-22 19:07", "user": "mst", "body": "so, what's the problem?"}, {"timstamp": "2016-09-22 19:07", "user": "xochilpili", "body": "mst, yes, then check open room tree, then in the first index, check the \"rates\" and \"newRates\", you will notice that the last item in \"newRates\" is repeated twice"}, {"timstamp": "2016-09-22 19:08", "user": "xochilpili", "body": "and all this stuff was (unsuccessfully created) to make an unique array of \"rates\" add the num of adults, children, net, dailyRates, and so on"}, {"timstamp": "2016-09-22 19:08", "user": "mst", "body": "xochilpili: you're testing rateKey with .indexOf"}, {"timstamp": "2016-09-22 19:08", "user": "mst", "body": "xochilpili: but rateKey is an array"}, {"timstamp": "2016-09-22 19:09", "user": "xochilpili", "body": "mst, everything i googling about \"find item in array\" returns indexOf <<"}, {"timstamp": "2016-09-22 19:09", "user": "mst", "body": "xochilpili: ah, javascript, there's an array version as well as a string version"}, {"timstamp": "2016-09-22 19:10", "user": "xochilpili", "body": "zomg, what you mean?"}, {"timstamp": "2016-09-22 19:11", "user": "xochilpili", "body": "i tried with foo.indexOf ==-1"}, {"timstamp": "2016-09-22 19:11", "user": "xochilpili", "body": "zomg, i have used == -1 and i got and never got anything"}, {"timstamp": "2016-09-22 19:12", "user": "zomg", "body": "xochilpili: then you probably wanted to have != -1"}, {"timstamp": "2016-09-22 19:12", "user": "zomg", "body": "indexOf returns -1 if the result is not found, so which one you want depends on whether you want to check if something exists or does not exist"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "zomg, no, sorry, typo here, i want that, not found"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": ""}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "zomg, ^"}, {"timstamp": "2016-09-22 19:13", "user": "xochilpili", "body": "mst, any idea?"}, {"timstamp": "2016-09-22 19:14", "user": "mst", "body": "xochilpili: I think you should log the input you're iterating over, and try and match things up"}, {"timstamp": "2016-09-22 19:14", "user": "mst", "body": "I have a meeting to be in now"}, {"timstamp": "2016-09-22 19:15", "user": "xochilpili", "body": "mst, i tried that, but i cant believe is too complicated to make an unique array from other array!"}, {"timstamp": "2016-09-22 19:16", "user": "mst", "body": "xochilpili: it normally isn't."}, {"timstamp": "2016-09-22 19:16", "user": "mst", "body": "xochilpili: I'd've used lodash's uniqby"}, {"timstamp": "2016-09-22 19:16", "user": "xochilpili", "body": "mst, then i want that \"isn't\" im off ideas"}, {"timstamp": "2016-09-22 19:17", "user": "xochilpili", "body": "mst, lodash uniqby ?"}, {"timstamp": "2016-09-22 19:17", "user": "mst", "body": "xochilpili: yes."}, {"timstamp": "2016-09-22 19:17", "user": "xochilpili", "body": "googling"}, {"timstamp": "2016-09-22 19:18", "user": "xochilpili", "body": "mst, loadash can also add (rate.net+=tmpRate.net) ???"}, {"timstamp": "2016-09-22 19:19", "user": "mst", "body": "xochilpili: no, but that's not 'make a unique array'"}, {"timstamp": "2016-09-22 19:19", "user": "mst", "body": "xochilpili: if you're trying to do that as well, then you probably wanted groupBy and then a sum()"}, {"timstamp": "2016-09-22 19:19", "user": "xochilpili", "body": "mst, i think lodash wont work for this"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "xochilpili: ok, then good luck with your code"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "if you won't debug it, and you won't write it a simpler way"}, {"timstamp": "2016-09-22 19:20", "user": "mst", "body": "I can't help any further"}, {"timstamp": "2016-09-22 19:21", "user": "xochilpili", "body": "mst, i lost more time trying to make the \"code more readable\" in order to get any help"}, {"timstamp": "2016-09-22 19:21", "user": "mst", "body": "and still didn't finish making the readability changes we suggested"}, {"timstamp": "2016-09-22 19:21", "user": "mst", "body": "so I'm bored of wasting my time now."}, {"timstamp": "2016-09-22 19:22", "user": "xochilpili", "body": "mst, i did the changes, also i have changed what zomg said about indexOF"}, {"timstamp": "2016-09-22 19:22", "user": "xochilpili", "body": "maybe u didnt see the link"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "for(var k=0;k<newRates.length;k++){"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "xochilpili: is still in the code"}, {"timstamp": "2016-09-22 19:25", "user": "mst", "body": "actually, I think that's the bug"}, {"timstamp": "2016-09-22 19:25", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 19:26", "user": "xochilpili", "body": "mst, what's the bug?"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "I think you're adding the tmpRate to more than one element of newRates"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "which would explain everything"}, {"timstamp": "2016-09-22 19:26", "user": "mst", "body": "this would be much clearer written as groupBy with a final sum() step"}, {"timstamp": "2016-09-22 19:27", "user": "xochilpili", "body": "mst, let me make this json more clear to you, please wait"}, {"timstamp": "2016-09-22 19:27", "user": "mst", "body": "I'm in a meeting now. either try and fix the code. or rewrite it sensibly with lodash."}, {"timstamp": "2016-09-22 19:28", "user": "mst", "body": "I'm not looking at this further, it's obviously better suited to a functional approach with lodash"}, {"timstamp": "2016-09-22 19:32", "user": "xochilpili", "body": "mst,"}, {"timstamp": "2016-09-22 19:33", "user": "xochilpili", "body": "mst, mm, i think loadsh wont work in this"}, {"timstamp": "2016-09-22 19:33", "user": "xochilpili", "body": "anyone else, please?"}, {"timstamp": "2016-09-22 19:36", "user": "mst", "body": "xochilpili: why won't it work?"}, {"timstamp": "2016-09-22 19:37", "user": "mst", "body": "groupBy to get basically a dictionary of rateKey -> array[rate]"}, {"timstamp": "2016-09-22 19:37", "user": "mst", "body": "then you can sum each one together"}, {"timstamp": "2016-09-22 19:41", "user": "xochilpili", "body": "mst, i dont know how lodash works"}, {"timstamp": "2016-09-22 19:42", "user": "mst", "body": "xochilpili: did you read tyhe documentation for groupBy ?"}, {"timstamp": "2016-09-22 19:42", "user": "xochilpili", "body": "mst, im on it"}, {"timstamp": "2016-09-22 19:43", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, tmpRate.boardName) ; console.log(ss); Object {undefined; array[5]};"}, {"timstamp": "2016-09-22 19:47", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, function(b){ console.log(b); }); >> output : Object {undefined: Array[5]}"}, {"timstamp": "2016-09-22 19:47", "user": "xochilpili", "body": "what the fuck supposed to mean that undefined!!"}, {"timstamp": "2016-09-22 19:48", "user": "mst", "body": "you'd have to check what's in tmpRates"}, {"timstamp": "2016-09-22 19:49", "user": "mst", "body": "looks to me like _.groupBy(whatever, 'rateKey') would be a start"}, {"timstamp": "2016-09-22 19:53", "user": "xochilpili", "body": "mst, is it possible to groupBy(whatever, 'rateKey','another') ???"}, {"timstamp": "2016-09-22 19:53", "user": "xochilpili", "body": "var ss = _.groupBy(tmpRates, ['boardName','rateClass']); << no"}, {"timstamp": "2016-09-22 19:55", "user": "xochilpili", "body": "zomg, you're right, i know that, but really i went to far using this for and another for and another... and also, in this way, the last item appears twice"}, {"timstamp": "2016-09-22 19:56", "user": "xochilpili", "body": "zomg, any idea, what could be ?"}, {"timstamp": "2016-09-22 19:57", "user": "xochilpili", "body": "or you're saying \"no\" just because?"}], "label": "other"}
{"id": "93d594a6", "body": "", "comments": [{"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "hi everyone"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "i have a doubt"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "which is there is an array and i have some text fileds with firstname and lastname"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "ok now i am pusihing them every time"}, {"timstamp": "2016-08-29 14:14", "user": "Praveen", "body": "into array with help of object"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "but it is overiding the previous object"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "i want it to be stored like objects in array"}, {"timstamp": "2016-08-29 14:15", "user": "Praveen", "body": "which should not override by previous object"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "yeah when i push them in every submit"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "it should be unique"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "First Name:<input type=\"text\" ng-model=\"store.fname\"><br> Last Name:<input type=\"text\" ng-model=\"store.lname\"><br> Address:<input type=\"text\" ng-model=\"store.add\"> <button ng-click=\"submit(store)\">Submit</button>"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "function TodoCtrl($scope) { $scope.arr = []; $scope.store={}; $scope.submit = function(store){ $scope.store2={}; $scope.store2=$scope.store; console.log($scope.store2,'22'); $scope.arr.push($scope.store); console.log($scope.arr,'com'); }"}, {"timstamp": "2016-08-29 14:16", "user": "Praveen", "body": "here is the code"}, {"timstamp": "2016-08-29 14:17", "user": "z3r0_", "body": "Praveen: Use pastebin or PLunker"}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": "ok"}, {"timstamp": "2016-08-29 14:17", "user": "senayar", "body": "!help"}, {"timstamp": "2016-08-29 14:17", "user": "uru|away", "body": "senayar: I am not a bot! (promise)"}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": ""}, {"timstamp": "2016-08-29 14:17", "user": "Praveen", "body": "this is mine"}, {"timstamp": "2016-08-29 14:20", "user": "senayar", "body": ""}, {"timstamp": "2016-08-29 14:20", "user": "Praveen", "body": "<senayar> it is overiding previous object"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "yes"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "it's because you are pushing $scope.arr.push($scope.store); and not store2"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "it shouldnt be i enter new details it shuld be in"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "anothere object"}, {"timstamp": "2016-08-29 14:21", "user": "Praveen", "body": "like that"}, {"timstamp": "2016-08-29 14:21", "user": "senayar", "body": "but what do you want exactly ?"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "see if i enter fname lastname"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "it takes one object in that array"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "again if i enter new fname lname"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "then it should be next object"}, {"timstamp": "2016-08-29 14:22", "user": "Praveen", "body": "in same array"}, {"timstamp": "2016-08-29 14:22", "user": "senayar", "body": "I wrote it why upper Praveen"}, {"timstamp": "2016-08-29 14:23", "user": "senayar", "body": "it's because you are pushing $scope.store and not $scope.store2 into your array"}, {"timstamp": "2016-08-29 14:23", "user": "Praveen", "body": "can you make changes in that"}, {"timstamp": "2016-08-29 14:23", "user": "Praveen", "body": "please"}, {"timstamp": "2016-08-29 14:24", "user": "senayar", "body": "do you understand what are you doing Praveen :("}, {"timstamp": "2016-08-29 14:24", "user": "Praveen", "body": "yeah"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "i think you didnt get my idea"}, {"timstamp": "2016-08-29 14:25", "user": "senayar", "body": ""}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "senayar"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "perfect"}, {"timstamp": "2016-08-29 14:25", "user": "Praveen", "body": "tanq so mcuh"}, {"timstamp": "2016-08-29 14:25", "user": "senayar", "body": "but you still don't understand :P"}, {"timstamp": "2016-08-29 14:26", "user": "Praveen", "body": "no no i just need this"}, {"timstamp": "2016-08-29 14:26", "user": "lalu", "body": "senayar can you help me?"}, {"timstamp": "2016-08-29 14:26", "user": "Praveen", "body": "you helped me"}, {"timstamp": "2016-08-29 14:27", "user": "Praveen", "body": "tanq z3ro_"}, {"timstamp": "2016-08-29 14:27", "user": "senayar", "body": "just saying is not working does not help lalu :o"}, {"timstamp": "2016-08-29 14:29", "user": "lalu", "body": "senayar , so is there any other browser where i can run my program?"}, {"timstamp": "2016-08-29 14:29", "user": "senayar", "body": "Safari ? IE ?"}, {"timstamp": "2016-08-29 14:30", "user": "lalu", "body": "IE sucks bro"}, {"timstamp": "2016-08-29 14:30", "user": "lalu", "body": "senayar where you run your ang programs?"}, {"timstamp": "2016-08-29 14:32", "user": "z3r0_", "body": "lalu: I use Chromium, and angular animate seems to work. have you checked in the JS Console if everything is loaded without errors ?"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "ya everything is fine"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "i tried many times"}, {"timstamp": "2016-08-29 14:33", "user": "z3r0_", "body": "What are you animating ?"}, {"timstamp": "2016-08-29 14:33", "user": "lalu", "body": "its just hide and show thing"}, {"timstamp": "2016-08-29 14:34", "user": "z3r0_", "body": "with ng-show and ng-hide ?"}, {"timstamp": "2016-08-29 14:38", "user": "senayar", "body": "ng-display-none"}], "label": "other"}
{"id": "93d594b8", "body": "", "comments": [{"timstamp": "2017-05-26 01:40", "user": "deadlyninja", "body": "in angular, ive got an array of values [4, 23.20, 34.12, true] surely there is a convenient way to convert it into an instance of a class? ie Banana{id:Number; x:23.20; y:34.12; rotten:true};"}, {"timstamp": "2017-05-26 01:40", "user": "deadlyninja", "body": "well my example class is inconsistent, but you get the idea"}, {"timstamp": "2017-05-26 01:45", "user": "deadlyninja", "body": "i know if the array is instead an Object you can just use 'as' to kinda cast it, but is there anything to map array indices to values?"}, {"timstamp": "2017-05-26 01:50", "user": "zomg", "body": "deadlyninja: it's more of a javascript concern, and the answer is no"}, {"timstamp": "2017-05-26 01:50", "user": "zomg", "body": "you can certainly do var stuff = { a: arr[0], b: arr[1] } and so forth"}, {"timstamp": "2017-05-26 01:50", "user": "zomg", "body": "but that's about it"}, {"timstamp": "2017-05-26 01:51", "user": "deadlyninja", "body": "i guess thats alright, i was thinking about java's jackson indexing annotations"}, {"timstamp": "2017-05-26 01:52", "user": "zomg", "body": "no idea what that is"}, {"timstamp": "2017-05-26 01:52", "user": "zomg", "body": "but at least if you were to use TypeScript you could possibly do something similar with annotations"}, {"timstamp": "2017-05-26 01:52", "user": "zomg", "body": "however whether a builtin annotation exists for that is somewhat unlikely I think"}, {"timstamp": "2017-05-26 01:54", "user": "deadlyninja", "body": "in java's Spring framework, which uses Jackson json library, you can annotate a class with JsonPropertyOrder({\"id\", \"x\", \"y\"....}) and then when you serialize to json array it comes out in the right order"}, {"timstamp": "2017-05-26 01:54", "user": "deadlyninja", "body": "i was hoping on the javascript side there was something that reverses that process"}, {"timstamp": "2017-05-26 02:05", "user": "WhatTheDilly", "body": "well the problem is"}, {"timstamp": "2017-05-26 02:05", "user": "WhatTheDilly", "body": "once an object"}, {"timstamp": "2017-05-26 02:05", "user": "WhatTheDilly", "body": "there is no \"order\""}, {"timstamp": "2017-05-26 02:18", "user": "zomg", "body": "deadlyninja: yeah in general you wouldn't serialize stuff into arrays unless they were arrays in the first place"}, {"timstamp": "2017-05-26 02:18", "user": "zomg", "body": "if you serialize something that is an object or a key-value map, then you'd serialize it into an object"}, {"timstamp": "2017-05-26 02:19", "user": "zomg", "body": "in such a case it's fairly trivial to \"map it back\" as you can basically just assign directly"}, {"timstamp": "2017-05-26 02:19", "user": "deadlyninja", "body": "WhatTheDilly, im sending down 100 points, so i prefer not to name every X,Y, that is why it is serialized to an array of values"}, {"timstamp": "2017-05-26 02:19", "user": "zomg", "body": "gzip compression \\_()_/"}, {"timstamp": "2017-05-26 02:19", "user": "deadlyninja", "body": "so i have [[id, x, y], [id, x, y], ... ]"}, {"timstamp": "2017-05-26 02:20", "user": "deadlyninja", "body": "and im currently doing new MyClass(arr[0], arr[1], arr[2]);"}, {"timstamp": "2017-05-26 02:20", "user": "deadlyninja", "body": "was just hoping there was something as simple as 'as' but with array types"}, {"timstamp": "2017-05-26 02:21", "user": "zomg", "body": "you could probably do a function for it fairly easily"}, {"timstamp": "2017-05-26 02:21", "user": "WhatTheDilly", "body": "deadlyninja: zomg's recommendation is probably a much better recommendation"}, {"timstamp": "2017-05-26 02:21", "user": "WhatTheDilly", "body": "and it makes it transparent and works just about everywhere and is way better compression than just removing the labels from the data"}, {"timstamp": "2017-05-26 02:22", "user": "deadlyninja", "body": "i dunno, its slower, uglier and wastes bandwidth"}, {"timstamp": "2017-05-26 02:22", "user": "deadlyninja", "body": "i think to each his own"}, {"timstamp": "2017-05-26 02:23", "user": "WhatTheDilly", "body": "wastesd bw?"}, {"timstamp": "2017-05-26 02:23", "user": "zomg", "body": "function arrayToProps(arr, propOrder) { propOrder.reduce((obj, propName, idx) => obj[propName] = arr[idx]) }"}, {"timstamp": "2017-05-26 02:23", "user": "zomg", "body": "something like that :P"}, {"timstamp": "2017-05-26 02:23", "user": "WhatTheDilly", "body": "gziop is gonna be way less bw than just removing labels"}, {"timstamp": "2017-05-26 02:24", "user": "deadlyninja", "body": "you can gzip any stream my friend"}, {"timstamp": "2017-05-26 02:24", "user": "zomg", "body": "yeah if you use gzip compression it pretty much eliminates the extra from the object"}, {"timstamp": "2017-05-26 02:24", "user": "deadlyninja", "body": "i guarantee my stream will use less bandwidth"}, {"timstamp": "2017-05-26 02:24", "user": "deadlyninja", "body": "after gzip"}, {"timstamp": "2017-05-26 02:25", "user": "zomg", "body": "most likely an amount that's so small it makes no difference :P"}, {"timstamp": "2017-05-26 02:25", "user": "zomg", "body": "anyway the function I listed above should do the trick for array -> object conversion"}, {"timstamp": "2017-05-26 02:25", "user": "zomg", "body": "you just do `var mappedObject = arrayToProps(someArray, ['id', 'x', 'y'])`"}, {"timstamp": "2017-05-26 02:26", "user": "deadlyninja", "body": "normally i wouldnt care about a few bytes, but these are map points on the home page of a site so im trying to make it somewhat optimal"}, {"timstamp": "2017-05-26 02:26", "user": "zomg", "body": "or if it needs to be assigned into a class' members, Object.assign(this, arrayToProps(...))"}, {"timstamp": "2017-05-26 02:26", "user": "zomg", "body": ":)"}, {"timstamp": "2017-05-26 02:26", "user": "deadlyninja", "body": "zomg, i do like the arrayToProps function"}, {"timstamp": "2017-05-26 02:57", "user": "deadlyninja", "body": "im trying to see some values by logging them, console.log(`{{dateStart | date: 'yyyy-MM-dd'}}`);"}, {"timstamp": "2017-05-26 02:57", "user": "deadlyninja", "body": "however in the log, i see `{{dateStart | date: 'yyyy-MM-dd'}}` instead of the values"}, {"timstamp": "2017-05-26 02:58", "user": "deadlyninja", "body": "is that type of formatting only valid inside templates?"}, {"timstamp": "2017-05-26 03:12", "user": "zomg", "body": "deadlyninja: yeah that stuff is only valid in angular"}, {"timstamp": "2017-05-26 03:13", "user": "zomg", "body": "angular's expressions are kinda like JS but parts of it are not :P"}, {"timstamp": "2017-05-26 03:13", "user": "deadlyninja", "body": "but im calling that from an angular typescript function"}, {"timstamp": "2017-05-26 03:13", "user": "zomg", "body": "and by \"valid in angular\" I mean directive parameters or templates"}, {"timstamp": "2017-05-26 03:14", "user": "deadlyninja", "body": "hmm"}, {"timstamp": "2017-05-26 03:14", "user": "zomg", "body": "you can probably do console.log($scope.dateStart)"}, {"timstamp": "2017-05-26 03:14", "user": "zomg", "body": "or something"}, {"timstamp": "2017-05-26 03:14", "user": "zomg", "body": "and it'll ~mostly do what you wanted"}, {"timstamp": "2017-05-26 03:15", "user": "deadlyninja", "body": "{DatePipe} from \"@angular/common\" does the trick"}, {"timstamp": "2017-05-26 03:15", "user": "deadlyninja", "body": "just a little verbose"}, {"timstamp": "2017-05-26 03:16", "user": "deadlyninja", "body": "hey im having an issue where my search parameters are being passed in the get, any idea what could be causing that?"}, {"timstamp": "2017-05-26 03:16", "user": "deadlyninja", "body": "are *not* being passed"}, {"timstamp": "2017-05-26 03:16", "user": "zomg", "body": "example?"}, {"timstamp": "2017-05-26 03:16", "user": "deadlyninja", "body": "lemme paste it somewhere"}, {"timstamp": "2017-05-26 03:18", "user": "deadlyninja", "body": "man all the paste sites are horrible these days"}, {"timstamp": "2017-05-26 03:18", "user": "zomg", "body": "gist.github.com is probably not so bad =)"}, {"timstamp": "2017-05-26 03:20", "user": "deadlyninja", "body": ""}, {"timstamp": "2017-05-26 03:21", "user": "deadlyninja", "body": "in chrome, the GET shows no query parameters"}, {"timstamp": "2017-05-26 03:21", "user": "deadlyninja", "body": "even though they are being set"}, {"timstamp": "2017-05-26 03:23", "user": "zomg", "body": "I forget if the search part actually gets sent at all"}, {"timstamp": "2017-05-26 03:23", "user": "deadlyninja", "body": "does everyone just manually append strings all day in angular"}, {"timstamp": "2017-05-26 03:24", "user": "zomg", "body": "I mean I don't think it gets sent in a http request"}, {"timstamp": "2017-05-26 03:24", "user": "deadlyninja", "body": "seems like things are not much easier than just doing it yourself"}, {"timstamp": "2017-05-26 03:24", "user": "zomg", "body": "I don't recall there even being a `search` parameter for $http"}, {"timstamp": "2017-05-26 03:24", "user": "deadlyninja", "body": "i read that the search generated query parameters"}, {"timstamp": "2017-05-26 03:25", "user": "zomg", "body": "that's `params` iirc"}, {"timstamp": "2017-05-26 03:25", "user": "deadlyninja", "body": "i was looking at this"}, {"timstamp": "2017-05-26 03:26", "user": "deadlyninja", "body": "no not that one, a different one"}, {"timstamp": "2017-05-26 03:26", "user": "deadlyninja", "body": "i dunno"}, {"timstamp": "2017-05-26 03:26", "user": "zomg", "body": "uh are you trying to send ?foo=bar&baz=bar ?"}, {"timstamp": "2017-05-26 03:26", "user": "zomg", "body": "if so at least it used to be `params` and not `search`"}, {"timstamp": "2017-05-26 03:26", "user": "zomg", "body": "or maybe `data`"}, {"timstamp": "2017-05-26 03:27", "user": "deadlyninja", "body": "yea thats what im trying to send"}, {"timstamp": "2017-05-26 03:27", "user": "deadlyninja", "body": "lemme see"}, {"timstamp": "2017-05-26 03:31", "user": "deadlyninja", "body": "it does have both a search and a params field, but neither seem to work"}, {"timstamp": "2017-05-26 03:31", "user": "deadlyninja", "body": "no data field though"}, {"timstamp": "2017-05-26 03:32", "user": "zomg", "body": "you could try sending a plain object instead of URLSearchParams"}, {"timstamp": "2017-05-26 03:32", "user": "zomg", "body": "tbh not sure with angular 2"}, {"timstamp": "2017-05-26 03:36", "user": "deadlyninja", "body": "oh but you are right about 'params': \"/** @deprecated from 4.0.0. Use params instead. */\""}], "label": "other"}
{"id": "93d5949c", "body": "", "comments": [{"timstamp": "2016-08-18 21:02", "user": "patrick99e99", "body": "is there a way to access the controller of a directive from the scope? Like I am getting a dom element $('.foo').scope() -- so I have the directive scope, but I want to get access to the controller..."}, {"timstamp": "2016-08-18 21:02", "user": "patrick99e99", "body": "is that possible?"}, {"timstamp": "2016-08-18 21:04", "user": "CanyonMan", "body": "because I have noticed in angular 1.5 at least if you have 'controllerAs \"foo\"'"}, {"timstamp": "2016-08-18 21:04", "user": "CanyonMan", "body": "that you can get to it by $scope.foo"}, {"timstamp": "2016-08-18 21:04", "user": "CanyonMan", "body": "yes"}, {"timstamp": "2016-08-18 21:04", "user": "CanyonMan", "body": "are you using 'controller as' syntax by chance?"}, {"timstamp": "2016-08-18 21:18", "user": "patrick99e99", "body": "CanyonMan: ahh yeah.. that worked.. thanks!"}, {"timstamp": "2016-08-18 21:19", "user": "CanyonMan", "body": "patrick99e99: I'm not an authority here so I don't know for sure that doing it that way is 'proper' ... it's just something I have noticed. At a higher level I wonder if you have some kind of design impropriety that you have to do this"}, {"timstamp": "2016-08-18 21:20", "user": "CanyonMan", "body": "patrick99e99: like for instance why do you need to start with the DOM element, your directive can get access to its element a couple of different ways if you could redesign it to work from the controller up rather than the other way around"}], "label": "other"}
{"id": "93d594e8", "body": "", "comments": [{"timstamp": "2017-01-05 01:12", "user": "herax", "body": "i started a nodejs express project all works fine i added angular through bower but i doesn't reflect on the web page, i have script all pointing to bower_comp folder so i saw this line 7"}, {"timstamp": "2017-01-05 01:32", "user": "graingert", "body": "herax: use yarn"}, {"timstamp": "2017-01-05 01:35", "user": "herax", "body": "graingert is yarn replacement for bower?"}, {"timstamp": "2017-01-05 01:35", "user": "graingert", "body": "herax: it's a replacement for npm"}, {"timstamp": "2017-01-05 01:35", "user": "graingert", "body": "herax: you don't need bower"}, {"timstamp": "2017-01-05 01:36", "user": "graingert", "body": "herax: angular2 is only available on npm"}, {"timstamp": "2017-01-05 01:36", "user": "graingert", "body": "herax: don't start a new project on angular 1"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: look at cli.angular.io and universal.angular.io"}, {"timstamp": "2017-01-05 01:37", "user": "herax", "body": "graingert my project is a node express project"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: cool you can use webpack to make it universal"}, {"timstamp": "2017-01-05 01:37", "user": "graingert", "body": "herax: don't use bower"}, {"timstamp": "2017-01-05 01:40", "user": "herax", "body": "if angular 2 is only available on npm how's yarn helpin"}, {"timstamp": "2017-01-05 01:41", "user": "graingert", "body": "herax: yarn installs from npm"}, {"timstamp": "2017-01-05 01:43", "user": "graingert", "body": "herax: in conclusion don't use angular 1 or bower in projects"}, {"timstamp": "2017-01-05 01:43", "user": "herax", "body": "can i add angular 2 to node express project?"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: yeah express isn't anything special"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: look at universal.angular.io"}, {"timstamp": "2017-01-05 01:44", "user": "graingert", "body": "herax: that lets you render your angular stuff on the server"}, {"timstamp": "2017-01-05 01:58", "user": "herax", "body": "graingert i got angular through yarn but still no change on the web page even though i get all the ng code completion in the html"}, {"timstamp": "2017-01-05 01:59", "user": "graingert", "body": "herax: you using cli.angular.io?"}, {"timstamp": "2017-01-05 02:00", "user": "herax", "body": "yes started a new project that way"}, {"timstamp": "2017-01-05 02:00", "user": "graingert", "body": "herax: yeah that should just work"}, {"timstamp": "2017-01-05 02:01", "user": "graingert", "body": "herax: when you save your files the page will reload"}, {"timstamp": "2017-01-05 02:01", "user": "herax", "body": "whats the equivalent of app.js in a cli.angular?"}, {"timstamp": "2017-01-05 02:15", "user": "graingert", "body": "herax: what's app.js?"}, {"timstamp": "2017-01-05 02:16", "user": "herax", "body": "server.js"}, {"timstamp": "2017-01-05 02:17", "user": "herax", "body": "or the project fro angular.cli is just front end and to back involved like the non make a node express pjoect?"}, {"timstamp": "2017-01-05 02:17", "user": "herax", "body": "*no back"}], "label": "other"}
{"id": "8addb270", "body": "", "comments": [{"timstamp": "2016-10-25 17:53", "user": "anotheryou", "body": "Hi, I want to do an ng-if for if a filtered list is empty. Now how do i build the equivalent to something like \"| filter: {property:true}\" in the ng-repeat to something like \"contains\" for the ng-if?"}, {"timstamp": "2016-10-25 17:54", "user": "anotheryou", "body": "I simply want to show a pretty empty state if there is nothing to show"}, {"timstamp": "2016-10-25 17:58", "user": "anotheryou", "body": "(ng 1.5.x)"}], "label": "feature"}
{"id": "0ec1e4a8", "body": "", "comments": [{"timstamp": "20:08", "user": "Ben_1", "body": "is it possible to use the service of an application in all of its sub projects?"}], "label": "feature"}
{"id": "73af7cdb", "body": "", "comments": [{"timstamp": "05:38", "user": "_genuser_", "body": "hello people. I have a question. When I hit the back button (in browser) on an angular app, the CanDeactivate route guard kicks off. But only the first time. Subsequent times, it doens't."}, {"timstamp": "05:38", "user": "_genuser_", "body": "is this something that is known, not known, is my app doing something different from what should happen?"}], "label": "other"}
{"id": "93d594dd", "body": "", "comments": [{"timstamp": "2017-02-17 12:34", "user": "rand0m", "body": "I hope lenovo mobile division fails badly"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "ThinkPad X1 Carbon is nice"}, {"timstamp": "2017-02-17 12:35", "user": "icebox", "body": "but it is not mobile :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "I mean mobile mobile"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "aka Motorola"}, {"timstamp": "2017-02-17 12:36", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:36", "user": "rand0m", "body": "since they bought the brand, the sales weren't that good. The company ceo said theyre rebuilding the team so next year they're expecting to break even"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "really I see only two smartphones: by apple or by google"}, {"timstamp": "2017-02-17 12:37", "user": "rand0m", "body": "but theyre software manufacturers :o"}, {"timstamp": "2017-02-17 12:37", "user": "icebox", "body": "iphone or pixel :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "I still use Xperia Z3"}, {"timstamp": "2017-02-17 12:38", "user": "icebox", "body": "if you choose another option, good luck :)"}, {"timstamp": "2017-02-17 12:38", "user": "rand0m", "body": "still kicks iphone7s ass today"}, {"timstamp": "2017-02-17 12:39", "user": "Pyrrhus666", "body": "icebox, nah, my $150 chinaphone with lineageOS does fine ;)"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "Pyrrhus666: ok... you are lucky :)"}, {"timstamp": "2017-02-17 12:39", "user": "rand0m", "body": "check this icebox:"}, {"timstamp": "2017-02-17 12:39", "user": "icebox", "body": "rand0m: nowadays a smartphone is not only \"specs\""}, {"timstamp": "2017-02-17 12:40", "user": "Pyrrhus666", "body": "icebox, nah, just pick a phone that has a stable lineageOS build and buy it. its all good :)"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "durability? software? support?"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "what is it"}, {"timstamp": "2017-02-17 12:40", "user": "icebox", "body": "it doesn't make sense comparing (only) those details"}, {"timstamp": "2017-02-17 12:40", "user": "rand0m", "body": "idk"}, {"timstamp": "2017-02-17 12:41", "user": "icebox", "body": "off for a break... see you later"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "make sense to me, I need faster processor, more ram, good screen size and display (dpi), longer battery and connectivity"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "my os of choice would be android everytime"}, {"timstamp": "2017-02-17 12:41", "user": "Pyrrhus666", "body": "support from vendors generally always sucks. hence lineageOS :)"}, {"timstamp": "2017-02-17 12:41", "user": "rand0m", "body": "Pyrrhus666, I can't use lineage :("}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "well I could, but only older versions"}, {"timstamp": "2017-02-17 12:42", "user": "Pyrrhus666", "body": "rand0m, buy a supported phone then ;)"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "rand0m: use case? imagine the difference of user experience between monster-in-law of mine and myself? :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "monster in law???"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "do you mean mother in law?"}, {"timstamp": "2017-02-17 12:42", "user": "icebox", "body": "yep :)"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "lolol"}, {"timstamp": "2017-02-17 12:42", "user": "rand0m", "body": "can't afford to atm Pyrrhus666"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "nougat comes with vulkan support baked in and my phones doesnt support that"}, {"timstamp": "2017-02-17 12:43", "user": "rand0m", "body": "and i've heard that there would be issues"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "I have a question; not offtopic I swear"}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:44", "user": "rand0m", "body": "you'll see a loading page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "I've used to see that on facebook and some other sites"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "I see a login page"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "is that react specific?"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "oh you must be logged in Pyrrhus666"}, {"timstamp": "2017-02-17 12:45", "user": "Pyrrhus666", "body": "rand0m, ah, cant help you there, dont do all that shite."}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "basically before content is loaded onto the page, the page has placeholder divs"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "where the content gets loaded"}, {"timstamp": "2017-02-17 12:45", "user": "rand0m", "body": "and the placeholder shimmers like loading effect"}, {"timstamp": "2017-02-17 12:46", "user": "rand0m", "body": "linked in is not shite. is it?"}, {"timstamp": "2017-02-17 12:46", "user": "Pyrrhus666", "body": "its all shite to me, that social crap"}, {"timstamp": "2017-02-17 12:47", "user": "Pyrrhus666", "body": "rand0m, btw there seem to be unofficial lineage 14.1 builds around for your z3"}, {"timstamp": "2017-02-17 12:47", "user": "rand0m", "body": ":/"}, {"timstamp": "2017-02-17 12:48", "user": "rand0m", "body": "dont want to use unofficial builds"}, {"timstamp": "2017-02-17 12:48", "user": "Pyrrhus666", "body": "rand0m, I used unofficial cyanogenmods for years, most are fine, but read the reviews on xda ;)"}, {"timstamp": "2017-02-17 12:49", "user": "Pyrrhus666", "body": "most had better support than from vendors."}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "I used to use XDA 24/7 when I bought my first gti9000"}, {"timstamp": "2017-02-17 12:49", "user": "rand0m", "body": "galaxy s"}, {"timstamp": "2017-02-17 12:50", "user": "Pyrrhus666", "body": "I started there when I bought an xperia sola. sony sucked so hard with android 5 I took to cyanogen. when I gave the phone away, it was happily running android 6 :)"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "sony did improve a lot since xperia z series"}, {"timstamp": "2017-02-17 12:54", "user": "rand0m", "body": "they have their own dev team in sweden for sony asop project"}, {"timstamp": "2017-02-17 12:55", "user": "rand0m", "body": ""}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "rand0m, I have trust issues after being let down by vendors. also, I hate vendor roms with all their crap."}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "sony themselves will never release a lineage mod"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "your source should be"}, {"timstamp": "2017-02-17 12:55", "user": "Pyrrhus666", "body": "(but its not there, yet)"}, {"timstamp": "2017-02-17 12:56", "user": "rand0m", "body": ":( yeah"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "you know the feeing you have when you start a new job"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and you're the only guy who specialises in the tech the project is using"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "and everyone around you sees you like you're come kind of freak coding god"}, {"timstamp": "2017-02-17 12:57", "user": "rand0m", "body": "thats me now :D"}, {"timstamp": "2017-02-17 12:57", "user": "Pyrrhus666", "body": "never had that, there were always other coders around ;)"}, {"timstamp": "2017-02-17 12:58", "user": "rand0m", "body": ":("}, {"timstamp": "2017-02-17 13:00", "user": "Pyrrhus666", "body": "rand0m, btw this seems stable and supported (but old)"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "Version: 5.1.x"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "LOL"}, {"timstamp": "2017-02-17 13:01", "user": "rand0m", "body": "I run 6.0.1"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I know :) but then again, as long as it works and is stable, I wouldnt really mind. seems the 14.1 build is very much a work in progress"}, {"timstamp": "2017-02-17 13:02", "user": "Pyrrhus666", "body": "I run 7.1.1 :P"}, {"timstamp": "2017-02-17 13:02", "user": "rand0m", "body": "I still havent come across a device which I think would be nice for me"}, {"timstamp": "2017-02-17 13:03", "user": "Pyrrhus666", "body": "rand0m, I dont really care. I just need lineage, an sd card of 64GB or more, and enough mem and cpu to run candycrush. the rest is bonus."}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": ":|"}, {"timstamp": "2017-02-17 13:03", "user": "rand0m", "body": "you kidding?"}, {"timstamp": "2017-02-17 13:04", "user": "Pyrrhus666", "body": "currently on a xiaomi redmi note 3 special edition, picked up for $150, 3GB mem, 32GB flash, 64GB sd, 4g."}, {"timstamp": "2017-02-17 13:05", "user": "Elarcis", "body": "Pyrrhus666: \"CyenogenMod\""}, {"timstamp": "2017-02-17 13:05", "user": "Pyrrhus666", "body": "rand0m, not kidding. why would I want more as long as it does what I want ?"}, {"timstamp": "2017-02-17 13:05", "user": "rand0m", "body": "didn't think you as someone who plays cc"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "rand0m, everybody plays cc."}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "else theyre liars."}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: Got a OnePlus One for 2.5 years now. Still kickin', real pleasure to use, very solid and reliable, battery's still very good"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I never played CC :D"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, those where nice :)"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "Elarcis, liar !"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "me either"}, {"timstamp": "2017-02-17 13:06", "user": "Pyrrhus666", "body": "more liars !"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "Pyrrhus666: I avoid King's games as much as possible"}, {"timstamp": "2017-02-17 13:06", "user": "Elarcis", "body": "rand0m: *neither"}, {"timstamp": "2017-02-17 13:06", "user": "rand0m", "body": "also, why trust chinese companies?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "I play them all. I just give them no permission to do anything :)"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: why trust any company?"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "rand0m, all phones are chinese"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "yeah"}, {"timstamp": "2017-02-17 13:07", "user": "rand0m", "body": "but"}, {"timstamp": "2017-02-17 13:07", "user": "Elarcis", "body": "rand0m: for all I know, american phonemaker are even less reliable than chinese ones :D"}, {"timstamp": "2017-02-17 13:07", "user": "Pyrrhus666", "body": "buy them there just means its cheaper for me :)"}, {"timstamp": "2017-02-17 13:08", "user": "Elarcis", "body": "Pyrrhus666: it just means I wanted a good first smartphone :D"}, {"timstamp": "2017-02-17 13:08", "user": "Pyrrhus666", "body": "Elarcis, the newer ones are also nice. and run lineage :)"}, {"timstamp": "2017-02-17 13:09", "user": "Pyrrhus666", "body": "Elarcis, been on xiaomi for3 or 4 years now. no ragrets."}, {"timstamp": "2017-02-17 13:10", "user": "Elarcis", "body": "Pyrrhus666: what is lineage?"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "its the fork of cynaogenmod"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "cmod split into 2 companies"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaah"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "lineage and some other name"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:12", "user": "rand0m", "body": "and cyno is dead"}, {"timstamp": "2017-02-17 13:12", "user": "Elarcis", "body": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "lineageOS is a continuation of the original cyanogenMOD (not cyanogenOS)"}, {"timstamp": "2017-02-17 13:13", "user": "Pyrrhus666", "body": "by the original guy, even."}, {"timstamp": "2017-02-17 13:14", "user": "Elarcis", "body": "CyanogenOS is dead?"}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "Elarcis, al but, yes."}, {"timstamp": "2017-02-17 13:15", "user": "Pyrrhus666", "body": "*all"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: dammit, this explains why I haven't had any update in a while"}, {"timstamp": "2017-02-17 13:15", "user": "Elarcis", "body": "Pyrrhus666: will switch to LineageOS then"}, {"timstamp": "2017-02-17 13:16", "user": "Elarcis", "body": "Pyrrhus666: as long as it has adaptative light coloration, I'm game!"}, {"timstamp": "2017-02-17 13:16", "user": "Pyrrhus666", "body": "Elarcis, ah, you were on cyanogen ?"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "Pyrrhus666: yiss"}, {"timstamp": "2017-02-17 13:17", "user": "Pyrrhus666", "body": "Elarcis, 14.1 has that for all models, I think. mine too."}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "CyanogenMod, then Oxygen, then CyanogenOS"}, {"timstamp": "2017-02-17 13:17", "user": "Elarcis", "body": "OxygenOS sucks as hell, it's like almost barebone Android"}, {"timstamp": "2017-02-17 13:18", "user": "rand0m", "body": "you should try this:"}, {"timstamp": "2017-02-17 13:19", "user": "Pyrrhus666", "body": "Elarcis,"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "honestly I don't care much about free software on my phone, since I'm using Google services extensively"}, {"timstamp": "2017-02-17 13:20", "user": "Elarcis", "body": "Pyrrhus666: Yes, I've seen that :)"}, {"timstamp": "2017-02-17 13:21", "user": "Pyrrhus666", "body": "Elarcis, I dont really care either, I just dont want vendor bloat. and lineage has better app privacy management"}, {"timstamp": "2017-02-17 13:21", "user": "Elarcis", "body": "^"}], "label": "other"}
{"id": "93d594d8", "body": "", "comments": [{"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "tfw you wanna get home, but sammich."}, {"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "seriously, what kind of a moron thought that'd be a good idea to call a sandwich chain subway."}, {"timstamp": "2018-07-18 13:55", "user": "Peppa_Sw1ne", "body": "but something tells its on purpose."}, {"timstamp": "2018-07-18 13:59", "user": "Elarcis", "body": "Peppa_Sw1ne: the first Subway was created in 1965, I doubt it was to confuse people using Google Maps :P"}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "guess it was even worse back in the 60s then."}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "hey how do i get to the subway?"}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "oh, right this way sir."}, {"timstamp": "2018-07-18 14:00", "user": "Peppa_Sw1ne", "body": "*gets to a sandwich place*"}, {"timstamp": "2018-07-18 14:01", "user": "Peppa_Sw1ne", "body": "i dislike it a lot tho."}], "label": "other"}
{"id": "93d5950e", "body": "", "comments": [{"timstamp": "2016-12-15 08:49", "user": "zomg", "body": "One of my ex coworkers has a business building industrial petrol pumps, they were looking for someone to build a web based management gui for it"}, {"timstamp": "2016-12-15 08:49", "user": "zomg", "body": "I overpriced myself out of it I'm pretty sure, but would've been an interesting project :)"}, {"timstamp": "2016-12-15 08:49", "user": "wafflejock", "body": "zomg, petrol pumps aren't they rolling in cash?"}, {"timstamp": "2016-12-15 08:50", "user": "zomg", "body": "they're still going to pick the cheapest offer I'm sure, that's just how these things roll :P"}, {"timstamp": "2016-12-15 08:50", "user": "wafflejock", "body": "yah I guess pumps are pumps"}, {"timstamp": "2016-12-15 08:50", "user": "zomg", "body": "I mean pumps like in a gas station"}, {"timstamp": "2016-12-15 08:50", "user": "zomg", "body": ":)"}, {"timstamp": "2016-12-15 08:50", "user": "wafflejock", "body": "maybe margins not so good"}, {"timstamp": "2016-12-15 08:50", "user": "wafflejock", "body": "yeah I hear ya"}, {"timstamp": "2016-12-15 08:50", "user": "wafflejock", "body": "I have some work with some pump people but water pumps"}, {"timstamp": "2016-12-15 08:51", "user": "zomg", "body": "heh, I actually worked with some water pump stuff in the past"}, {"timstamp": "2016-12-15 08:51", "user": "zomg", "body": "I built a web GUI for some analytics data the pumps send on water quality etc."}, {"timstamp": "2016-12-15 08:55", "user": "zomg", "body": "ahh, CSS"}, {"timstamp": "2016-12-15 08:55", "user": "zomg", "body": "two pages, two ~same html structures, same CSS"}, {"timstamp": "2016-12-15 08:55", "user": "zomg", "body": "different result >_>"}, {"timstamp": "2016-12-15 08:56", "user": "wafflejock", "body": "yeah CSS there to keep you on your toes"}, {"timstamp": "2016-12-15 08:57", "user": "wafflejock", "body": "if it made sense think of how bored you'd be"}, {"timstamp": "2016-12-15 08:57", "user": "zomg", "body": "yep"}, {"timstamp": "2016-12-15 08:57", "user": "wafflejock", "body": "looking forward to some of the CSS isolation stuff with ng2 but haven't started changing anything serious over yet"}, {"timstamp": "2016-12-15 09:02", "user": "DD2_", "body": "<zomg>, <wafflejock> my last question"}, {"timstamp": "2016-12-15 09:02", "user": "DD2_", "body": "actually i want to do some part time work remotely"}, {"timstamp": "2016-12-15 09:03", "user": "DD2_", "body": "can u help me any link where ill get some kind of information except freelancer"}, {"timstamp": "2016-12-15 09:03", "user": "zomg", "body": "what sort of info are you looking for?"}, {"timstamp": "2016-12-15 09:04", "user": "DD2_", "body": "i means i am ready to work partime remotely"}, {"timstamp": "2016-12-15 09:04", "user": "DD2_", "body": "on angularjs"}, {"timstamp": "2016-12-15 09:04", "user": "zomg", "body": "if you're looking for job postings, there's www.weworkremotely.com, and Stack Overflow Careers also has jobs"}, {"timstamp": "2016-12-15 09:04", "user": "wafflejock", "body": "DD2_, sorry not sure what the best job sites are really, there is an angularjobs twitter I think but not sure they tweet, can post your stuff on LinkedIn I get a lot of recruiters asking for work through there"}, {"timstamp": "2016-12-15 09:04", "user": "DD2_", "body": "actly m from india"}, {"timstamp": "2016-12-15 09:05", "user": "zomg", "body": "I don't usually get any recruiters even though I'm semi-prominent as I post stuff on websites like sitepoint"}, {"timstamp": "2016-12-15 09:05", "user": "zomg", "body": "I think they get scared away by \"Finland\" (high wage expectation) and my current position being CTO (also a high wage expectatin...) lol"}, {"timstamp": "2016-12-15 09:05", "user": "wafflejock", "body": "zomg, yeah could be I get a lot of local to Chicago stuff"}, {"timstamp": "2016-12-15 09:06", "user": "zomg", "body": "yeah"}, {"timstamp": "2016-12-15 09:06", "user": "zomg", "body": "When I do get something it's typically in Helsinki and I don't really feel like moving =)"}, {"timstamp": "2016-12-15 09:06", "user": "zomg", "body": "then they're like \"can we contact you if we get something in the future\""}, {"timstamp": "2016-12-15 09:06", "user": "zomg", "body": "and I'm like sure"}, {"timstamp": "2016-12-15 09:06", "user": "DD2_", "body": "so no other option??"}, {"timstamp": "2016-12-15 09:07", "user": "zomg", "body": "and then they contact me again about Helsinki even though I specifically told them I'm not moving"}, {"timstamp": "2016-12-15 09:07", "user": "wafflejock", "body": "DD2_, if you just google angular jobs lots of sites"}, {"timstamp": "2016-12-15 09:07", "user": "zomg", "body": ":p"}, {"timstamp": "2016-12-15 09:07", "user": "wafflejock", "body": "DD2_, just not sure what's good and what's garbage"}, {"timstamp": "2016-12-15 09:07", "user": "wafflejock", "body": "hehe"}, {"timstamp": "2016-12-15 09:07", "user": "wafflejock", "body": "yeah had someone asking if I wanted to move to nebraska"}, {"timstamp": "2016-12-15 09:07", "user": "zomg", "body": "heh"}, {"timstamp": "2016-12-15 09:07", "user": "zomg", "body": "that's kinda like the opposite of moving to Helsinki tbh"}, {"timstamp": "2016-12-15 09:07", "user": "zomg", "body": "on a finnish scale anyway"}, {"timstamp": "2016-12-15 09:08", "user": "DD2_", "body": "ok"}, {"timstamp": "2016-12-15 09:08", "user": "DD2_", "body": "thnks for help"}, {"timstamp": "2016-12-15 09:09", "user": "wafflejock", "body": "zomg, yeah nothing really against nebraska but think if I'm moving would want to go west or somewhere warmer, I still like Chicago despite it's problems but am pretty much over the winter... ruins electric skateboard time"}, {"timstamp": "2016-12-15 09:10", "user": "wafflejock", "body": "DD2_, no prob good luck on the job hunt too"}, {"timstamp": "2016-12-15 09:12", "user": "zomg", "body": "heh"}, {"timstamp": "2016-12-15 09:12", "user": "zomg", "body": "oh I was actually in Chicago for a couple of days earlier this year"}, {"timstamp": "2016-12-15 09:12", "user": "zomg", "body": "we visited Chicago Tribune and another company for some business stuff"}, {"timstamp": "2016-12-15 09:12", "user": "zomg", "body": "or Tronc, as it's now called (what were they thinking?)"}, {"timstamp": "2016-12-15 09:12", "user": "wafflejock", "body": "ah cool I worked as an IT guy at the Wrigley building across the street from there for a while"}, {"timstamp": "2016-12-15 09:13", "user": "wafflejock", "body": "yeah city is full of name fails now"}, {"timstamp": "2016-12-15 09:14", "user": "zomg", "body": "I get why it's called the windy city now"}, {"timstamp": "2016-12-15 09:15", "user": "zomg", "body": "the other meeting we had was a bit outside the downtown area and we were at this big parking lot and it was so freaking windy you had to walk at like an angle towards the wind.. :D"}, {"timstamp": "2016-12-15 09:15", "user": "zomg", "body": "(not to mention the landing at the airport, that was also fun)"}, {"timstamp": "2016-12-15 09:16", "user": "zomg", "body": "where I live is next to the sea so it gets windy here too but not that much :P"}, {"timstamp": "2016-12-15 09:16", "user": "wafflejock", "body": "yeah some places next to the buildings can get crazy, being able to go underground some places helps a lot"}, {"timstamp": "2016-12-15 09:19", "user": "wafflejock", "body": "just learned about this recently pretty crazy engineering project"}, {"timstamp": "2016-12-15 09:21", "user": "wafflejock", "body": "we have Lower and Upper Wacker that confuses the hell out of GPS systems,"}, {"timstamp": "2016-12-15 10:00", "user": "zomg", "body": "wafflejock: yeah I remember reading about the raising at some point :) Pretty crazy"}], "label": "other"}
{"id": "93d5950d", "body": "", "comments": [{"timstamp": "2017-05-30 15:16", "user": "jlebrech", "body": "should services be monadic? if you want to use something more than once but query only once?"}, {"timstamp": "2017-05-30 15:17", "user": "Elarcis", "body": "jlebrech: you have entered black magic realm"}, {"timstamp": "2017-05-30 15:18", "user": "jlebrech", "body": "like this?"}, {"timstamp": "2017-05-30 15:19", "user": "jlebrech", "body": "Restangular returns a promise already so I could return that, but is 'suggestions' exists I want it to be a promise too."}, {"timstamp": "2017-05-30 15:21", "user": "Pyrrhus666", "body": "someone once said <unconvertable> if you use $q.defer() youre doing it wrong. in the instances I use(d) restangular, I always returnd its promises directly."}, {"timstamp": "2017-05-30 15:22", "user": "jlebrech", "body": "but I have to return the precached variable as a promise?"}, {"timstamp": "2017-05-30 15:23", "user": "jlebrech", "body": "or I could return {then: function(){return suggestions}}"}, {"timstamp": "2017-05-30 15:23", "user": "Pyrrhus666", "body": "if its cached, restangular has already taken care of it, no ?"}, {"timstamp": "2017-05-30 15:24", "user": "jlebrech", "body": "not cached that way, but if the variable exists"}, {"timstamp": "2017-05-30 15:24", "user": "Pyrrhus666", "body": "I must admit, its been a while. I used $http caching combined with restangular."}, {"timstamp": "2017-05-30 15:24", "user": "jlebrech", "body": "i feel like Restangular has a out of the box way of doing this"}, {"timstamp": "2017-05-30 15:24", "user": "Pyrrhus666", "body": "then you can return a new promise with the data and not bother with restangular, is that what you mean ?"}, {"timstamp": "2017-05-30 15:25", "user": "Pyrrhus666", "body": "that promise will resolve immediately on <unconvertable> the other side."}, {"timstamp": "2017-05-30 15:26", "user": "jlebrech", "body": "yup"}, {"timstamp": "2017-05-30 15:28", "user": "jlebrech", "body": "restangular is another thing I want to ditch"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "jlebrech: if your promise is already resolve, you can always return it, it'll be resolved immediately"}, {"timstamp": "2017-05-30 15:28", "user": "Pyrrhus666", "body": "OT : deep cloning with JSON.parse(JSON.stringify(obj)) as the fastest way to do it still baffles me (barring cyclic stuff)"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "jlebrech: each then() returns a new promise, so you won't break the initial promise by appending more then()"}, {"timstamp": "2017-05-30 15:28", "user": "Elarcis", "body": "Pyrrhus666: angular.copy() :P"}, {"timstamp": "2017-05-30 15:29", "user": "Elarcis", "body": "Pyrrhus666: also yes, it's awfully hack-looking"}, {"timstamp": "2017-05-30 15:29", "user": "Pyrrhus666", "body": "Elarcis, many many times slower (but handles cyclic)"}, {"timstamp": "2017-05-30 15:29", "user": "Elarcis", "body": "Pyrrhus666: yeah, well... JSON.stringify doesn't handle functions or advanced info, it only works with base JS objects"}, {"timstamp": "2017-05-30 15:30", "user": "Pyrrhus666", "body": "Elarcis, yup. there should be a recursive Object.assign or something..."}, {"timstamp": "2017-05-30 15:31", "user": "jlebrech", "body": "I still need to do: if (a == null) { Restangular.one('foo').get().then(function(r){ a = r }) } else { defer.resolve(a) }"}, {"timstamp": "2017-05-30 15:32", "user": "jlebrech", "body": "or should there be a way for restangular to return a promise and set the return to a var at the same time"}, {"timstamp": "2017-05-30 15:32", "user": "jlebrech", "body": "I can I also try something with getList"}, {"timstamp": "2017-05-30 15:32", "user": "Elarcis", "body": "Pyrrhus666: Object.doMagic()"}, {"timstamp": "2017-05-30 15:33", "user": "Elarcis", "body": "jlebrech: where is that defer coming from?"}, {"timstamp": "2017-05-30 15:33", "user": "jlebrech", "body": "$q :P"}, {"timstamp": "2017-05-30 15:33", "user": "Pyrrhus666", "body": "Elarcis, please make sure thats a thing in the next ES update..."}, {"timstamp": "2017-05-30 15:33", "user": "Elarcis", "body": "what"}, {"timstamp": "2017-05-30 15:34", "user": "jlebrech", "body": "it's basically this"}, {"timstamp": "2017-05-30 15:34", "user": "Pyrrhus666", "body": "jlebrech, if (a) { return a } else { return restangular.one(foo).get() }"}, {"timstamp": "2017-05-30 15:34", "user": "Elarcis", "body": "jlebrech: but isn't a already a promise?"}, {"timstamp": "2017-05-30 15:34", "user": "Pyrrhus666", "body": "assuming a is a previously resolved promise"}, {"timstamp": "2017-05-30 15:34", "user": "jlebrech", "body": "a is a list that restangular populates"}, {"timstamp": "2017-05-30 15:35", "user": "jlebrech", "body": "but I only want to populate it once"}, {"timstamp": "2017-05-30 15:35", "user": "Pyrrhus666", "body": "just return the same promise every time then."}, {"timstamp": "2017-05-30 15:35", "user": "jlebrech", "body": "oh"}, {"timstamp": "2017-05-30 15:36", "user": "Elarcis", "body": "jlebrech:"}, {"timstamp": "2017-05-30 15:36", "user": "Pyrrhus666", "body": "^^ like so"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "shiiiiiiit"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "store to promise as var"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "duh"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "*slowclap*"}, {"timstamp": "2017-05-30 15:36", "user": "jlebrech", "body": "the*"}, {"timstamp": "2017-05-30 15:37", "user": "Pyrrhus666", "body": "*ding* there goes the light :)"}, {"timstamp": "2017-05-30 15:37", "user": "jlebrech", "body": "nice"}, {"timstamp": "2017-05-30 15:38", "user": "Elarcis", "body": "jlebrech: updated because I'm an asshole"}, {"timstamp": "2017-05-30 15:38", "user": "Elarcis", "body": "jlebrech: why though? if you're using typescript or babel, you can write { suggestions } and the :suggestions will be inferred"}, {"timstamp": "2017-05-30 15:39", "user": "Elarcis", "body": "*because if"}, {"timstamp": "2017-05-30 15:39", "user": "Elarcis", "body": "jlebrech: if you're using typescript or babel, you should use services and classes anyway :P"}, {"timstamp": "2017-05-30 15:39", "user": "jlebrech", "body": "ok"}, {"timstamp": "2017-05-30 15:40", "user": "jlebrech", "body": "I realised I needed a junkdrawer service :)"}, {"timstamp": "2017-05-30 15:41", "user": "jlebrech", "body": "this service writing style will really clean stuff up"}, {"timstamp": "2017-05-30 15:41", "user": "Pyrrhus666", "body": "jlebrech, just make a ServiceService to encapsulate all services and inject it everywhere :P"}, {"timstamp": "2017-05-30 15:42", "user": "jlebrech", "body": "yeah, well I thought of having a initial view service with all the crap I need to first show the page"}], "label": "other"}
{"id": "93d59485", "body": "", "comments": [{"timstamp": "2018-09-04 16:42", "user": "d0x1", "body": "Hello guys!"}, {"timstamp": "2018-09-04 16:42", "user": "d0x1", "body": "I need help, i cant refill $scope.name_model when clear this same ng-model."}, {"timstamp": "2018-09-04 16:43", "user": "SargoDarya", "body": "d0x1: I don't even get what your problem is."}, {"timstamp": "2018-09-04 16:43", "user": "d0x1", "body": "1o $scope.name_model = '' (WORK) 2o $scope.name_model = 'hello' (doesn't work);"}, {"timstamp": "2018-09-04 16:45", "user": "icebox", "body": "d0x1: behaviour expected"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "I need tag RFID card"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "i have 1o $rootScope.tagID = hextagid;"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "i need refill this same ng-model=\"tagID\", and i cant fill"}, {"timstamp": "2018-09-04 16:45", "user": "d0x1", "body": "refill*"}, {"timstamp": "2018-09-04 16:47", "user": "icebox", "body": "d0x1: \"By default, ngModel watches the model by reference, not value.\" -"}, {"timstamp": "2018-09-04 17:00", "user": "BORSCHT", "body": "d0x1: post some context. how are you getting the hextagid? is there any async logic involved?"}], "label": "other"}
{"id": "93d594aa", "body": "", "comments": [{"timstamp": "2016-08-29 10:53", "user": "Elyoukey", "body": "hello, i am working on a message service and component and i struggle to whire it properly, could someone help me ?"}, {"timstamp": "2016-08-29 10:53", "user": "arlekin", "body": "Elyoukey: yup, someone could i guess"}, {"timstamp": "2016-08-29 10:54", "user": "Elyoukey", "body": "i am looking for the proper way to have the messages sent to service displayed in the component"}, {"timstamp": "2016-08-29 10:54", "user": "Elyoukey", "body": "arlekin, you helped me with the basic architecture last week"}, {"timstamp": "2016-08-29 10:54", "user": "arlekin", "body": "Elyoukey: i did ? how nice of me"}, {"timstamp": "2016-08-29 10:55", "user": "Elyoukey", "body": "arlekin: yes, unless your account is being used by someone else"}, {"timstamp": "2016-08-29 10:55", "user": "arlekin", "body": "anyway, when you say things like messages, services and components you mean in common meaning, or angular-wise ?"}, {"timstamp": "2016-08-29 10:55", "user": "Elyoukey", "body": "arlekin: saervices and component in angular way, but messages is more my feature"}, {"timstamp": "2016-08-29 10:56", "user": "arlekin", "body": "Elyoukey: so basically you have angular .components and angular .serivce and you want to pass some informations between the two ?"}, {"timstamp": "2016-08-29 10:57", "user": "Elyoukey", "body": "arlekin: no, this part work i guess, but i want now another component to pass some informations to the service, so the message.component will display them"}, {"timstamp": "2016-08-29 10:57", "user": "arlekin", "body": "Elyoukey: ok, so therefore you want communication between your components (through service), is that right ?"}, {"timstamp": "2016-08-29 10:58", "user": "Elyoukey", "body": "arlekin: exactelly"}, {"timstamp": "2016-08-29 10:58", "user": "arlekin", "body": "*honestly given how hard it is to nail down sometimes what exactly needs to be the result, most solutions are trivial in comparison*"}, {"timstamp": "2016-08-29 10:58", "user": "Elyoukey", "body": "arlekin: the service should handle a list of messages if possible"}, {"timstamp": "2016-08-29 10:58", "user": "arlekin", "body": "ok, im quite sure we did have something in bot about that"}, {"timstamp": "2016-08-29 10:58", "user": "arlekin", "body": "!commands"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "!command"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "damn"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "!tiarx"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "well... bot is down"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "fuck, we need to retreat and regroup"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "*kshhh* bot hawk down *kshhh*"}, {"timstamp": "2016-08-29 10:59", "user": "Elyoukey", "body": "i don't know where the closest rally point is ... :/"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "srsly yho"}, {"timstamp": "2016-08-29 10:59", "user": "arlekin", "body": "*tho"}, {"timstamp": "2016-08-29 11:00", "user": "arlekin", "body": "we had some good link in it about intercomponent communication there"}, {"timstamp": "2016-08-29 11:00", "user": "arlekin", "body": "anyways, i'll try to explain"}, {"timstamp": "2016-08-29 11:00", "user": "arlekin", "body": "so, you know you can inject services into components/directives ?"}, {"timstamp": "2016-08-29 11:00", "user": "arlekin", "body": "and therefore have access to their methods and data"}, {"timstamp": "2016-08-29 11:00", "user": "Elyoukey", "body": "yes, i did so with the message.component"}, {"timstamp": "2016-08-29 11:01", "user": "arlekin", "body": "gr8"}, {"timstamp": "2016-08-29 11:01", "user": "Elyoukey", "body": "i used a private variable"}, {"timstamp": "2016-08-29 11:01", "user": "Elyoukey", "body": "private _messagehandlerService: MessagehandlerService"}, {"timstamp": "2016-08-29 11:01", "user": "arlekin", "body": "so you should by now be able to take some message list from service to display into component, right ?"}, {"timstamp": "2016-08-29 11:01", "user": "Elyoukey", "body": "yes, this part is working"}, {"timstamp": "2016-08-29 11:01", "user": "arlekin", "body": "pretty sure js dont have private keyword"}, {"timstamp": "2016-08-29 11:02", "user": "arlekin", "body": "Elyoukey: good, now, the other part, you want to have in the other component (the one generating / adding messages)"}, {"timstamp": "2016-08-29 11:02", "user": "arlekin", "body": "also injected this service"}, {"timstamp": "2016-08-29 11:02", "user": "Elyoukey", "body": "we are talking ts here ? aren't we ?"}, {"timstamp": "2016-08-29 11:02", "user": "arlekin", "body": "Elyoukey: idk, are we ?"}, {"timstamp": "2016-08-29 11:02", "user": "arlekin", "body": "chill tho, that doesn't really matter"}, {"timstamp": "2016-08-29 11:02", "user": "Elyoukey", "body": "\"idk\" ?"}, {"timstamp": "2016-08-29 11:02", "user": "arlekin", "body": "I Don't Know"}, {"timstamp": "2016-08-29 11:03", "user": "arlekin", "body": "its JS all the way down in the end"}, {"timstamp": "2016-08-29 11:03", "user": "Elyoukey", "body": "ok so yes, my code is typescript"}, {"timstamp": "2016-08-29 11:03", "user": "arlekin", "body": "Elyoukey: anyway"}, {"timstamp": "2016-08-29 11:04", "user": "arlekin", "body": "do you have said service injected in the component generating the messages ?"}, {"timstamp": "2016-08-29 11:04", "user": "Elyoukey", "body": "yes, i did the same as for the message.component"}, {"timstamp": "2016-08-29 11:04", "user": "Elyoukey", "body": "private _mhS: MessagehandlerService"}, {"timstamp": "2016-08-29 11:05", "user": "Elyoukey", "body": "and used a setMEssage() function"}, {"timstamp": "2016-08-29 11:05", "user": "arlekin", "body": "Elyoukey: good, so now, your precise issue i venture, lies in how to make the receiving component refresh its data from the service when the posting component changes messages list in service, amiright"}, {"timstamp": "2016-08-29 11:06", "user": "Elyoukey", "body": "arlekin: exaxctelly"}, {"timstamp": "2016-08-29 11:06", "user": "arlekin", "body": "Elyoukey: great, so here is the neat trick you can do"}, {"timstamp": "2016-08-29 11:06", "user": "arlekin", "body": "Elyoukey: its this proverbial \"one weird trick\" to solve such problem"}, {"timstamp": "2016-08-29 11:07", "user": "arlekin", "body": "as icebox likes to put it \"don't break reference\""}, {"timstamp": "2016-08-29 11:07", "user": "arlekin", "body": "so as we all know objects in javascript are passed by reference, not by value"}, {"timstamp": "2016-08-29 11:07", "user": "Elyoukey", "body": "yes"}, {"timstamp": "2016-08-29 11:07", "user": "arlekin", "body": "(not sure about arrays, but apparently not)"}, {"timstamp": "2016-08-29 11:08", "user": "arlekin", "body": "so, say you wrapp your messages array in object"}, {"timstamp": "2016-08-29 11:08", "user": "arlekin", "body": "kinda like var data = {messages: []};"}, {"timstamp": "2016-08-29 11:08", "user": "Elyoukey", "body": "arlekin: ok i already have this"}, {"timstamp": "2016-08-29 11:09", "user": "arlekin", "body": "and now if you use directly serviceName.data.messages in, say, your view it will be... well.. reffered by refference to the service"}, {"timstamp": "2016-08-29 11:09", "user": "arlekin", "body": "so if you change the list in one component, the change will be propagated to the other one"}, {"timstamp": "2016-08-29 11:10", "user": "arlekin", "body": "by the virtue of being only one instance of messages list"}, {"timstamp": "2016-08-29 11:10", "user": "arlekin", "body": "to which both components refer"}, {"timstamp": "2016-08-29 11:10", "user": "Elyoukey", "body": "arlekin: i am pretty sure i already made this and it did not work, i will try again"}, {"timstamp": "2016-08-29 11:11", "user": "arlekin", "body": "Elyoukey: well, since it is harnessing just basic properties of language itself, and not doing some magic with framework there is no possible way that you did that and it doesnt work"}, {"timstamp": "2016-08-29 11:11", "user": "arlekin", "body": "Elyoukey: you did broke reference at some point for sure"}, {"timstamp": "2016-08-29 11:12", "user": "Elyoukey", "body": "arlekin: then i probably messed with some declaration somewhere, but as you said it is the good way to go i will go farther"}, {"timstamp": "2016-08-29 11:12", "user": "arlekin", "body": "Elyoukey: so either put on your thinking cap and solve it, or paste code into something reasonable and gimme a link"}, {"timstamp": "2016-08-29 11:12", "user": "Elyoukey", "body": "arlekin: thanks"}, {"timstamp": "2016-08-29 11:12", "user": "arlekin", "body": "Elyoukey: np"}, {"timstamp": "2016-08-29 11:16", "user": "arlekin", "body": "ok guys, gotta go to the grocery, Elyoukey i'll be back soon"}, {"timstamp": "2016-08-29 11:35", "user": "Elyoukey", "body": "arlekin: sorry, it is me again ...i did a plunker with my problem"}, {"timstamp": "2016-08-29 11:35", "user": "Elyoukey", "body": "here:"}, {"timstamp": "2016-08-29 11:35", "user": "arlekin", "body": "Elyoukey: dont be sorry"}, {"timstamp": "2016-08-29 11:35", "user": "Elyoukey", "body": "i tried to clean up and remove non relevent parts"}, {"timstamp": "2016-08-29 11:36", "user": "arlekin", "body": "Elyoukey: wait a minute, is this angular 2 ?"}, {"timstamp": "2016-08-29 11:36", "user": "Elyoukey", "body": "arlekin: yes"}, {"timstamp": "2016-08-29 11:36", "user": "arlekin", "body": "oh well, the whole soultion i mentioned was adressed for angular one"}, {"timstamp": "2016-08-29 11:36", "user": "arlekin", "body": "i mean, it should work similarly for ng 2"}, {"timstamp": "2016-08-29 11:36", "user": "arlekin", "body": "but i don't really know, since im not doing ng2 as of yet"}, {"timstamp": "2016-08-29 11:37", "user": "Elyoukey", "body": "arlekin: ok thanks for your help anyway then. Do you know where i could find a bit more help on ng2 ?"}, {"timstamp": "2016-08-29 11:37", "user": "arlekin", "body": "Elyoukey: although, it seems like you didn't wrap message in object as i told you to, so maybe there is a glimpse of hope"}, {"timstamp": "2016-08-29 11:37", "user": "arlekin", "body": "Elyoukey: well, other than here, not really"}, {"timstamp": "2016-08-29 11:38", "user": "Elyoukey", "body": "arlekin: the service being already an object the wrapping thing does not really stand i guess (?)"}, {"timstamp": "2016-08-29 11:39", "user": "arlekin", "body": "it does, i have no idea how ng2 does injection"}], "label": "other"}
{"id": "93d5949f", "body": "", "comments": [{"timstamp": "2016-10-18 14:44", "user": "LIERO", "body": ""}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "is there any reason the code in the <unconvertable> else if <unconvertable> or even the else doesnt ever execute?"}, {"timstamp": "2016-10-18 14:45", "user": "LIERO", "body": "basically, the api either returns a string (the condition of the if statement..) or an empty object -> {}"}, {"timstamp": "2016-10-18 14:49", "user": "Elarcis", "body": "LIERO: if first condition doesn't crash, then the else if will never be true"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "if the object is empty, its still truthy?"}, {"timstamp": "2016-10-18 14:50", "user": "LIERO", "body": "oh, wait"}, {"timstamp": "2016-10-18 14:50", "user": "Elarcis", "body": "LIERO: your if() assumes that res already has keys, if results is undefined or is not an array, you JS code will throw an exception"}, {"timstamp": "2016-10-18 14:51", "user": "Elarcis", "body": "LIERO: if it throws an exception, the code stops there. if it doesn't, that means res.results is a non-empty array, etc."}, {"timstamp": "2016-10-18 14:51", "user": "Pyrrhus666", "body": "Elarcis: that sounds highly plausible in this case."}, {"timstamp": "2016-10-18 14:52", "user": "icebox", "body": "LIERO: empty object is true... :) you should \"guard\" that \"if\"..."}, {"timstamp": "2016-10-18 14:52", "user": "Elarcis", "body": "LIERO: I recommend to sanitize your res object. check that it has a non-empty result array that has a non-empty alternatives array"}, {"timstamp": "2016-10-18 14:53", "user": "Elarcis", "body": "icebox: didn't know it was called like that :D"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "empty object is true but it's not testing against empty object, so it's not that"}, {"timstamp": "2016-10-18 14:53", "user": "bd-", "body": "i'll be doing if(undefined)"}, {"timstamp": "2016-10-18 14:54", "user": "icebox", "body": "bd-: agreed... the point was... check that \"if\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: that's why I'd love to, but won't for this project, start using TS's --strictNullChecks"}, {"timstamp": "2016-10-18 14:55", "user": "bd-", "body": "maybe just reorder it and swap the if and the elseif"}, {"timstamp": "2016-10-18 14:55", "user": "icebox", "body": "Elarcis: sorry... \"I know\" :)"}, {"timstamp": "2016-10-18 14:55", "user": "Elarcis", "body": "icebox: YOU."}, {"timstamp": "2016-10-18 14:56", "user": "LIERO", "body": "if I put <unconvertable> Object.keys(res).length > 0 <unconvertable> as the initial if condition, still nothing executes after that"}, {"timstamp": "2016-10-18 14:56", "user": "icebox", "body": "bd-: maybe using intermediate variables :)"}, {"timstamp": "2016-10-18 14:57", "user": "icebox", "body": "LIERO: if you debug that code, you get the answer in seconds"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "^"}, {"timstamp": "2016-10-18 14:57", "user": "Elarcis", "body": "LIERO you can trust JS, it means that Object.keys(res).length is always more than 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "Elarcis, its not, it says its 0"}, {"timstamp": "2016-10-18 15:07", "user": "LIERO", "body": "also, works the same with if(typeof res.results[0].alternatives[0].transcript === \"string\"), which cant be true if res is an empty object"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "also, on invalid input it doesnt execute the code in the initial if as well"}, {"timstamp": "2016-10-18 15:08", "user": "Elarcis", "body": "LIERO: there's definitely an issue with your code, Object.keys() is native and cannot lie"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "but then doesnt do anything if I only have an else (no else if)"}, {"timstamp": "2016-10-18 15:08", "user": "LIERO", "body": "if Im getting an empty object that means the promise is returned for sure, right?"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO: you're in a promise chain?"}, {"timstamp": "2016-10-18 15:09", "user": "LIERO", "body": "the callback*"}, {"timstamp": "2016-10-18 15:09", "user": "Elarcis", "body": "LIERO... if you're using promise and not using any catch() block, your if just throws an exception that is swallowed by the promise chain"}, {"timstamp": "2016-10-18 15:10", "user": "LIERO", "body": "Im not in a promise chain, my mistake"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: guard your object's content, not with typeof"}, {"timstamp": "2016-10-18 15:10", "user": "Elarcis", "body": "LIERO: this way you can debug more easily, and will have an easier time figuring out what's wrong"}], "label": "other"}
{"id": "0edea393", "body": "", "comments": [{"timstamp": "15:19", "user": "jlebrech", "body": "tagging, and moving them to appropriate folders"}], "label": "other"}
{"id": "93d594df", "body": "", "comments": [{"timstamp": "2019-02-07 13:26", "user": "d[10]", "body": "HEHAEeiuahuie"}, {"timstamp": "2019-02-07 13:27", "user": "ray02", "body": "ahah"}, {"timstamp": "2019-02-07 13:27", "user": "ray02", "body": "let's throws all away :d"}], "label": "other"}
{"id": "93d59524", "body": "", "comments": [{"timstamp": "2017-02-10 10:43", "user": "amharris", "body": "hey, icebox. pm? got a couple of quick questions"}, {"timstamp": "2017-02-10 10:44", "user": "icebox", "body": "amharris: no pm, please... here in the channel... so other users may help"}, {"timstamp": "2017-02-10 10:44", "user": "amharris", "body": "icebox: sure thing, sorry."}, {"timstamp": "2017-02-10 10:44", "user": "icebox", "body": "amharris: no problem"}, {"timstamp": "2017-02-10 10:45", "user": "amharris", "body": "so, a while back I was working on some bits for an Angular modal, if you recall. I fixed that but revisiting the project, I still need to make it dynamic/relevant for content."}, {"timstamp": "2017-02-10 10:45", "user": "amharris", "body": "I'm using ngDialog"}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "I can seem to use {{foo.bar}} within the ngDialog <script> modal inclusions."}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "can't*"}, {"timstamp": "2017-02-10 10:46", "user": "amharris", "body": "they don't render"}, {"timstamp": "2017-02-10 10:47", "user": "amharris", "body": "I did a fair bit of digging and am somewhat confident that I may need to set up a controller to pull the data into the scope, but am having trouble doing this."}, {"timstamp": "2017-02-10 10:47", "user": "amharris", "body": "the data is a JSON API endpoint and always at a particular URL (for this page); so do I need to somehow feed that into $rootScope; and if so, how?"}, {"timstamp": "2017-02-10 10:48", "user": "icebox", "body": "amharris: ok... I don't use ngDialog... but it seems you are on the right path... it seems you need to pass \"some var\" to the dialog"}, {"timstamp": "2017-02-10 10:48", "user": "icebox", "body": "amharris: root scope is out of question... forget it :)"}, {"timstamp": "2017-02-10 10:49", "user": "icebox", "body": "amharris: I see you can pass a controller"}, {"timstamp": "2017-02-10 10:50", "user": "amharris", "body": "icebox: so I can pass values to render _from_ the ngDialog usage controller I've written, but I need to get my data to that."}, {"timstamp": "2017-02-10 10:51", "user": "amharris", "body": "icebox: I would've just prefered if it could render {{foo.bar}} as usual. I assume being in a <script> within a template is the problem and is preventing that?"}, {"timstamp": "2017-02-10 10:52", "user": "icebox", "body": "amharris: you use case should be a common case"}, {"timstamp": "2017-02-10 10:52", "user": "amharris", "body": "icebox: common case?"}, {"timstamp": "2017-02-10 10:52", "user": "icebox", "body": "amharris: your use case should not be so inusual"}, {"timstamp": "2017-02-10 10:53", "user": "icebox", "body": "amharris: try to provide a plunker reproducing your use case and we may give a look at it"}, {"timstamp": "2017-02-10 10:57", "user": "amharris", "body": "icebox: it's just a bit awkward to, given the data coming from a headless Drupal instance in real-time"}, {"timstamp": "2017-02-10 10:57", "user": "amharris", "body": "icebox: basically, recreating how that works isn't the quickest thing"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: no problem... you can use $http in plunker to fetch data"}, {"timstamp": "2017-02-10 10:58", "user": "amharris", "body": "icebox: though I can happily ping you the front-end code and explain what doesn't work"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: or simply you cam mock them"}, {"timstamp": "2017-02-10 10:58", "user": "icebox", "body": "amharris: really I would not prefer to debug the whole app :) I think ten lines of code should reproduce your use case"}, {"timstamp": "2017-02-10 10:59", "user": "icebox", "body": "amharris: no plunker, no party :)"}, {"timstamp": "2017-02-10 11:02", "user": "amharris", "body": "icebox: I didn't mean the entire thing. ;-) I meant the usage of ngDialog controller script and the relevant section of my template :P"}], "label": "other"}
{"id": "73af7cd8", "body": "", "comments": [{"timstamp": "10:25", "user": "icebox", "body": "re"}, {"timstamp": "10:26", "user": "ray02", "body": "hey hey icebox"}], "label": "other"}
{"id": "93d59472", "body": "", "comments": [{"timstamp": "2018-02-12 16:06", "user": "mnms_", "body": "guys is there any way to pass object as param with httpclient?"}, {"timstamp": "2018-02-12 16:07", "user": "SuperTyp", "body": "mnms_: use post and add a payload"}, {"timstamp": "2018-02-12 16:07", "user": "SuperTyp", "body": "mnms_: see"}, {"timstamp": "2018-02-12 16:08", "user": "mnms_", "body": "I need to make a GET request"}, {"timstamp": "2018-02-12 16:08", "user": "mnms_", "body": "SuperTyp: ^^"}, {"timstamp": "2018-02-12 16:08", "user": "icebox", "body": "mnms_: ?"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "mnms_: get da fuck outa here"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "just kidding :D"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: HTTP doesnt support a body in GET requests"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: at least in the sense youre implying"}, {"timstamp": "2018-02-12 16:09", "user": "mnms_", "body": "I know that I would like to pass params as an object to GET request"}, {"timstamp": "2018-02-12 16:09", "user": "SuperTyp", "body": "ah"}, {"timstamp": "2018-02-12 16:09", "user": "icebox", "body": "?"}, {"timstamp": "2018-02-12 16:09", "user": "Elarcis", "body": "mnms_: any example?"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "something like /endpoint?object=something ?"}, {"timstamp": "2018-02-12 16:10", "user": "mnms_", "body": "something like that: .get(url, {params, headers})"}, {"timstamp": "2018-02-12 16:10", "user": "icebox", "body": "mnms_: do you mean you want to transform an object to query params?"}, {"timstamp": "2018-02-12 16:10", "user": "mnms_", "body": "Exactly"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "you want to add query params"}, {"timstamp": "2018-02-12 16:10", "user": "SuperTyp", "body": "yes"}, {"timstamp": "2018-02-12 16:11", "user": "mnms_", "body": "It was possible with http but it looks like not with httpclient"}, {"timstamp": "2018-02-12 16:11", "user": "SuperTyp", "body": "something like this he?"}, {"timstamp": "2018-02-12 16:12", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:13", "user": "mnms_", "body": "I would like to create HttpParams from object"}, {"timstamp": "2018-02-12 16:13", "user": "mnms_", "body": "not by using set for each property"}, {"timstamp": "2018-02-12 16:13", "user": "Elarcis", "body": "mnms_: Object.entries()"}, {"timstamp": "2018-02-12 16:16", "user": "icebox", "body": "mnms_: in angular 5 see \"fromObject\" in HttpParams"}, {"timstamp": "2018-02-12 16:16", "user": "mnms_", "body": "Look at the type"}, {"timstamp": "2018-02-12 16:16", "user": "Elarcis", "body": "icebox:"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "mnms_: who are you talking to, and about what?"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "icebox: ah yes, in the constructor options"}, {"timstamp": "2018-02-12 16:17", "user": "Elarcis", "body": "icebox: my bad"}, {"timstamp": "2018-02-12 16:18", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:18", "user": "icebox", "body": "mnms_: hope that helps"}, {"timstamp": "2018-02-12 16:19", "user": "mnms_", "body": "icebox: I seen that and it doesnt allow to put objects which has key of type number"}, {"timstamp": "2018-02-12 16:19", "user": "mnms_", "body": "it expects strings"}, {"timstamp": "2018-02-12 16:20", "user": "icebox", "body": "mnms_: I don't think so... Object.keys(options.fromObject)"}, {"timstamp": "2018-02-12 16:21", "user": "icebox", "body": "mnms_: read the source code... it seems it is what you are asking for"}, {"timstamp": "2018-02-12 16:22", "user": "icebox", "body": "mnms_:"}, {"timstamp": "2018-02-12 16:25", "user": "mnms_", "body": "icebox Yes.. You right it should work"}, {"timstamp": "2018-02-12 16:26", "user": "icebox", "body": "mnms_: if you provide a minimal working stackblitz reproducing your use case, we may give a look at it"}, {"timstamp": "2018-02-12 16:27", "user": "icebox", "body": "here it works"}, {"timstamp": "2018-02-12 16:28", "user": "mnms_", "body": "icebox:"}], "label": "other"}
{"id": "93d594b5", "body": "", "comments": [{"timstamp": "2019-01-16 11:18", "user": "jlebrech", "body": "i'd tidy up a few bugs and maintain the old code base then rewrite it all in Vue, it depends on existing code size tho."}, {"timstamp": "2019-01-16 11:19", "user": "SargoDarya", "body": "jlebrech: Vue master race \\o/"}, {"timstamp": "2019-01-16 11:19", "user": "jlebrech", "body": "directives need to burn, switch those to components at the very least"}, {"timstamp": "2019-01-16 11:20", "user": "Elarcis", "body": "or MVW"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "MadnessVitriolCurses"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "Vue is just the"}, {"timstamp": "2019-01-16 11:20", "user": "jlebrech", "body": "real angularjs 2"}, {"timstamp": "2019-01-16 11:21", "user": "jlebrech", "body": "Directives are like using hotglue in an electronics project"}, {"timstamp": "2019-01-16 11:24", "user": "Elarcis", "body": "jlebrech: directives are the basis for AngularJS's almost-everything, but it's like manually soldering dozens of transistors when a microprocessor is proposed to you"}, {"timstamp": "2019-01-16 11:25", "user": "jlebrech", "body": "Yep, jumpwires"}, {"timstamp": "2019-01-16 11:26", "user": "SuperTyp", "body": "ping"}, {"timstamp": "2019-01-16 11:26", "user": "jlebrech", "body": "when AngularJS fails as a framework you're then told, it's \"a framework to build frameworks dummy\""}, {"timstamp": "2019-01-16 11:28", "user": "pdobrogost", "body": "Elarcis: As I have '<main-dir my-attr=\"xxx\">` in html and scope: { myAttr: '=' } in the code I would suspect that scope.myAttr should be 'xxx'."}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost:"}, {"timstamp": "2019-01-16 11:29", "user": "Elarcis", "body": "pdobrogost: when you use =, it is expected that xxx is an expression, not a hardcoded string"}, {"timstamp": "2019-01-16 11:31", "user": "pdobrogost", "body": "Elarcis: ok, thanks"}, {"timstamp": "2019-01-16 11:41", "user": "Elarcis", "body": "pdobrogost: just in case, this is how you'd do what you tried to do in modern AngularJS (regardless of the organisation of your files, etc.)"}, {"timstamp": "2019-01-16 11:42", "user": "pdobrogost", "body": "Elarcis: Thanks a lot!"}, {"timstamp": "2019-01-16 11:48", "user": "pdobrogost", "body": "Elarcis: Although I'm not sure why you have \"my-input\" attribute declared also in <sub-dir> as in the original case it was defined only in <main-dir> and the task was just to get its value inside <sub-dir>?"}, {"timstamp": "2019-01-16 11:49", "user": "Elarcis", "body": "pdobrogost: because it is now considered good practice, if you want an input to \"flow down\" the children of a component, to declare it explicitely in the parent rather than have the children manually require it"}, {"timstamp": "2019-01-16 11:50", "user": "Elarcis", "body": "pdobrogost: the mindset is \"always have the container decide what the children get\", and not the opposite, this way the flow of data and logic is always down the DOM, and not two-ways"}, {"timstamp": "2019-01-16 11:50", "user": "pdobrogost", "body": "react style :)"}, {"timstamp": "2019-01-16 11:51", "user": "pdobrogost", "body": "By input you mean also \"configuration\"?"}, {"timstamp": "2019-01-16 11:52", "user": "Elarcis", "body": "pdobrogost: yes. see components as functions. they take parameters in, get events out. It is desirable to have as few side effects as possible, aka stuff that doesn't go through inputs and outputs"}, {"timstamp": "2019-01-16 11:55", "user": "Elarcis", "body": "pdobrogost: if you need \"side effects\" (caching data, making something available through the whole app, etc.) AngularJS services can be used to share data and logic without overloading inputs and outputs (or if it's even too complicated to synchronise data between parent and children via inputs/outputs)"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "pdobrogost: even if you know a bit of AngularJS, I recommend you check out the official tutorial, it evolved a lot these years and now fully explains how to get the better from components"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "*the best"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: how can this be so hard"}, {"timstamp": "2019-01-16 11:56", "user": "berz3rk", "body": "Elarcis: this is realy hard programming rite"}, {"timstamp": "2019-01-16 11:56", "user": "Elarcis", "body": "berz3rk: not sure the answer would make you feel better :P"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": ":-)"}, {"timstamp": "2019-01-16 11:57", "user": "berz3rk", "body": "i make a STACKBLITZ(krieg)"}, {"timstamp": "2019-01-16 11:58", "user": "Elarcis", "body": "berz3rk: can we see it? is it \"working\"?"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "Here guys"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "theres a textbox with ngmodel onto the value and a checkbox"}, {"timstamp": "2019-01-16 12:06", "user": "berz3rk", "body": "its not working as intended (yet)"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "i cant use ngmodel because ngmodel uses true/false. I need 1/0 tho for my data model"}, {"timstamp": "2019-01-16 12:07", "user": "berz3rk", "body": "if you modify bottom text you notice it doesnt check or uncheck properly, and initial state is not working as intented as well"}, {"timstamp": "2019-01-16 12:09", "user": "berz3rk", "body": "Elarcis: .: - T_T - :."}, {"timstamp": "2019-01-16 12:09", "user": "pdobrogost", "body": "Elarcis: Thanks for tips"}, {"timstamp": "2019-01-16 12:10", "user": "Pyrrhus666", "body": "berz3rk, you initialize MYVALUE as 1, so the initial state is wrong. also : wtf are you even trying to do ?"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "what do you mean the inital state is wrong"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "there can be a state with 1"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "All I want is ngmodel for MYVALUE"}, {"timstamp": "2019-01-16 12:11", "user": "berz3rk", "body": "but ngmodel for checkbox is true/false, my values i need is 1/0 tho."}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "so it takes 1/0 converts it to true/false (caus javascript)"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "but writes back true and false instead of 0 and 1"}, {"timstamp": "2019-01-16 12:12", "user": "berz3rk", "body": "isnt that obvious )"}, {"timstamp": "2019-01-16 12:12", "user": "Pyrrhus666", "body": "the (change) is not fired on initial render. so the checkbox is not checked. also, youre going about it wrong, imho"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "i thought [value] would be the thing for that"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "or is that [checked] ?"}, {"timstamp": "2019-01-16 12:13", "user": "berz3rk", "body": "checked doesnt give me the right effect either"}, {"timstamp": "2019-01-16 12:15", "user": "Pyrrhus666", "body": "[checked] is an input binding, it doesnt work two-ways. reap the mat-checkbox api and use the properties and methods provided."}, {"timstamp": "2019-01-16 12:17", "user": "Pyrrhus666", "body": "*read, although reap is quite applicable too"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "hm"}, {"timstamp": "2019-01-16 12:18", "user": "berz3rk", "body": "i dont even want it two ways because the format is wrong"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "I think i got it working now"}, {"timstamp": "2019-01-16 12:26", "user": "berz3rk", "body": "forgot i had to send event after i change the value not before"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "wasnt in the example tho"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": "If anyone is curios"}, {"timstamp": "2019-01-16 12:27", "user": "berz3rk", "body": ""}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "theres a syntax tho to access the curent elemtn right?"}, {"timstamp": "2019-01-16 12:28", "user": "berz3rk", "body": "so i dont need #check ?"}], "label": "other"}
{"id": "93d594a9", "body": "", "comments": [{"timstamp": "2016-08-29 14:13", "user": "moldy", "body": "\"<span href=\"#\" ng-click=\"show = !show\">(toggle)</span>\" this element works fine, but it stops working if i move it into a <th> element. what am i doing wrong?"}, {"timstamp": "2016-08-29 14:13", "user": "moldy", "body": "eh, scratch the href, of course"}], "label": "other"}
{"id": "93d59504", "body": "", "comments": [{"timstamp": "2017-03-14 16:18", "user": "intgr", "body": "Hi! I'm using AngularJS 1.5 and I'm wondering how to do cache-busting for component templateUrl. If I could add a suffix (e.g. build ID) to the template name Angular intends to load, then it would be very easy. But it seems Angular doesn't support anything like that dynamically."}, {"timstamp": "2017-03-14 16:20", "user": "Elarcis", "body": "intgr: hm, cache-busting for what purpose? you mean by build ID?"}, {"timstamp": "2017-03-14 16:20", "user": "icebox", "body": "intgr:"}, {"timstamp": "2017-03-14 16:20", "user": "intgr", "body": "I want the tepmlates to be cacheble, but also some sane way to do cache invalidation."}, {"timstamp": "2017-03-14 16:21", "user": "Elarcis", "body": "intgr: yes, but by deployment, or at any time in the app's lifecycle?"}, {"timstamp": "2017-03-14 16:21", "user": "Elarcis", "body": "icebox: first use I ever see of decorator(), nice :D"}, {"timstamp": "2017-03-14 16:22", "user": "intgr", "body": "If that's your question"}, {"timstamp": "2017-03-14 16:22", "user": "icebox", "body": "Elarcis: and ProLoser is an angularjs dev :)"}, {"timstamp": "2017-03-14 16:22", "user": "intgr", "body": "icebox: Thanks, I'll try it out"}, {"timstamp": "2017-03-14 16:22", "user": "Elarcis", "body": "intgr: then what icebox gave you should do the trick, you just need to define the value of cacheBustVersion"}, {"timstamp": "2017-03-14 16:22", "user": "Elarcis", "body": "icebox: nice"}, {"timstamp": "2017-03-14 16:22", "user": "icebox", "body": "Elarcis: decorators are powerful"}, {"timstamp": "2017-03-14 16:22", "user": "intgr", "body": "Well cache should only be invalidated when deploying a new version"}, {"timstamp": "2017-03-14 16:24", "user": "intgr", "body": "I'm really surprised that this isn't a first-class feature in Angular, surely pretty much every application must do something like this."}, {"timstamp": "2017-03-14 16:25", "user": "Pyrrhus666", "body": "intgr, dunno, Ive never had the need actually. regular 302 checks mostly seem to do their work"}, {"timstamp": "2017-03-14 16:25", "user": "Pyrrhus666", "body": "then again, I dont deploy very often."}, {"timstamp": "2017-03-14 16:26", "user": "icebox", "body": "nice -"}, {"timstamp": "2017-03-14 16:26", "user": "intgr", "body": "Depends on how much you care about page load times and how good connection your users have."}, {"timstamp": "2017-03-14 16:26", "user": "Pyrrhus666", "body": "intgr, in short : I dont, its not meant for mobile or anything."}, {"timstamp": "2017-03-14 16:27", "user": "intgr", "body": "<unconvertable>"}, {"timstamp": "2017-03-14 16:27", "user": "icebox", "body": "intgr: because usually cache busting is a \"component\" of change management process (in large enterprise)"}, {"timstamp": "2017-03-14 16:27", "user": "Pyrrhus666", "body": "wtf is that ? a pile of poo ?"}, {"timstamp": "2017-03-14 16:28", "user": "Elarcis", "body": "intgr: never had to bust my cache :D"}, {"timstamp": "2017-03-14 16:28", "user": "Pyrrhus666", "body": "Elarcis, wanna bust a cache ? wink wink, nudge nudge, say no more !"}, {"timstamp": "2017-03-14 16:28", "user": "Elarcis", "body": "Pyrrhus666: Your cache? Does he go? Heh? wink wink, nudge nudge?"}, {"timstamp": "2017-03-14 16:29", "user": "Pyrrhus666", "body": "classic MP :)"}, {"timstamp": "2017-03-14 16:34", "user": "Pyrrhus666", "body": "that aliasing of this... brrr..."}, {"timstamp": "2017-03-14 16:35", "user": "Pyrrhus666", "body": "its a horrible practice testament to a horrible language :)"}, {"timstamp": "2017-03-14 16:36", "user": "icebox", "body": ":P"}, {"timstamp": "2017-03-14 16:38", "user": "porsche944", "body": "Pyrrhus666: I'm not doing standard JS storing of this"}, {"timstamp": "2017-03-14 16:38", "user": "porsche944", "body": "it's for controller-as syntax"}, {"timstamp": "2017-03-14 16:39", "user": "porsche944", "body": "which is objectively cleaner than using $scope"}, {"timstamp": "2017-03-14 16:39", "user": "Pyrrhus666", "body": "var vm = this; <-- wots this then :P"}, {"timstamp": "2017-03-14 16:39", "user": "porsche944", "body": "the controller"}, {"timstamp": "2017-03-14 16:39", "user": "Pyrrhus666", "body": "no, its aliasing this."}, {"timstamp": "2017-03-14 16:39", "user": "porsche944", "body": "sure"}, {"timstamp": "2017-03-14 16:39", "user": "porsche944", "body": "I guess I see your point"}, {"timstamp": "2017-03-14 16:40", "user": "porsche944", "body": "but it's not like ES6 doesn't give you work-arounds for cleaning up the context issues"}, {"timstamp": "2017-03-14 16:40", "user": "Pyrrhus666", "body": "I know its a common practice, and it serves some purpose, but it feels horrible imho."}, {"timstamp": "2017-03-14 16:40", "user": "Pyrrhus666", "body": "arrow functions and/or bind()."}, {"timstamp": "2017-03-14 16:40", "user": "porsche944", "body": "right"}, {"timstamp": "2017-03-14 16:41", "user": "Pyrrhus666", "body": "far from perfect, I agree ;)"}, {"timstamp": "2017-03-14 16:41", "user": "Elarcis", "body": "Pyrrhus666: I just miss plain functions references"}, {"timstamp": "2017-03-14 16:41", "user": "Elarcis", "body": "Pyrrhus666: I'd like syntaxic sugar for .bind()"}, {"timstamp": "2017-03-14 16:42", "user": "Pyrrhus666", "body": "Elarcis, the what with who now ?"}, {"timstamp": "2017-03-14 16:42", "user": "Elarcis", "body": "Pyrrhus666: like myArray.forEach(this::processItem)"}, {"timstamp": "2017-03-14 16:42", "user": "Pyrrhus666", "body": "Elarcis, thats almost php :P"}, {"timstamp": "2017-03-14 16:42", "user": "Elarcis", "body": "Pyrrhus666: in js you'd do myArray.forEach(processItem), provided that processItem doesn't use 'this'"}], "label": "other"}
{"id": "93d59480", "body": "", "comments": [{"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "GDIAF"}, {"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "Use feature modules my friend."}, {"timstamp": "2018-12-04 11:23", "user": "SargoDarya", "body": "Go die in a fire xD"}, {"timstamp": "2018-12-04 11:25", "user": "SargoDarya", "body": "imho that leads to overblown modules but it's your choice."}], "label": "other"}
{"id": "93d5949d", "body": "", "comments": [{"timstamp": "2016-12-17 19:22", "user": "mrk____", "body": "hi. i'm new to angular2 and I'm trying to wireup the dependency injection. i have all my services in the module providers array. later I wanted to use a ReflectiveInjector in order to instantiate stuff with get. Going to the Car => Wheel, doors example say doors has a dependency on DoorService which is declared in the module level. my injector is created with ReflectiveInjector.resolveAndCreate and knows nothing about the module"}, {"timstamp": "2016-12-17 19:22", "user": "mrk____", "body": "how can i make my injector aware of the module providers? I want the module providers but in the car fashion when i do \"get\" the cars should be new instances"}, {"timstamp": "2016-12-17 19:26", "user": "mrk____", "body": "here it the code:"}], "label": "other"}
{"id": "93d59508", "body": "", "comments": [{"timstamp": "2016-05-22 06:45", "user": "Narfinger", "body": "hiho, i have a md-autocomplete which has a new scope and fills a variable in its scope but I want to fill the variable in the root scope, how do i do this?"}, {"timstamp": "2016-05-22 06:54", "user": "Narfinger", "body": "ah i think i solved it"}], "label": "other"}
{"id": "93d59539", "body": "", "comments": [{"timstamp": "2019-04-17 14:39", "user": "zalem-developer", "body": "have an issue here. have a group of material radio buttons. i want to set the checked property based on a value. Seems like there something weird going on. like caching or something. the checked property is 0 but it's still checked."}, {"timstamp": "2019-04-17 14:39", "user": "zalem-developer", "body": ""}, {"timstamp": "2019-04-17 14:39", "user": "zalem-developer", "body": ""}, {"timstamp": "2019-04-17 14:40", "user": "Elarcis", "body": "zalem-developer: are you changing the value programmatically?"}, {"timstamp": "2019-04-17 14:41", "user": "zalem-developer", "body": "yes"}, {"timstamp": "2019-04-17 14:45", "user": "zalem-developer", "body": "sorry...i wish i had more information...that app was dumped on me"}, {"timstamp": "2019-04-17 14:48", "user": "Elarcis", "body": "zalem-developer: are you having a ExpressionWasChangedAfterItWasChecked error when developing?"}, {"timstamp": "2019-04-17 14:49", "user": "zalem-developer", "body": "i don't know...i never heard of that..."}, {"timstamp": "2019-04-17 14:49", "user": "zalem-developer", "body": "sorry"}, {"timstamp": "2019-04-17 14:49", "user": "zalem-developer", "body": "noob here"}, {"timstamp": "2019-04-17 14:49", "user": "Elarcis", "body": "zalem-developer: ok, then you're not getting one :P"}, {"timstamp": "2019-04-17 14:49", "user": "Elarcis", "body": "zalem-developer: ok, the (click) event seems very wrong. Try replacing it with (change)"}, {"timstamp": "2019-04-17 14:50", "user": "zalem-developer", "body": "ok...will do."}, {"timstamp": "2019-04-17 14:50", "user": "Elarcis", "body": "zalem-developer: long story short: use events that really mean what you want. You want to execute code when the value changes, not only when a user clicks on the radio button (they could use the keyboard, or... the value could change programmatically)"}, {"timstamp": "2019-04-17 14:51", "user": "Elarcis", "body": "zalem-developer: this _might_ solve your issue, but there are chances it might not"}, {"timstamp": "2019-04-17 14:52", "user": "zalem-developer", "body": "yeah...i changed it to change and the app blew up somewhat..."}, {"timstamp": "2019-04-17 14:53", "user": "zalem-developer", "body": "the data comes from an api...and i just want to set the check property based on a specific value...."}, {"timstamp": "2019-04-17 14:54", "user": "zalem-developer", "body": "i don't now if it's a bug or caching issue"}, {"timstamp": "2019-04-17 14:54", "user": "Elarcis", "body": "zalem-developer: no cache."}, {"timstamp": "2019-04-17 14:54", "user": "Elarcis", "body": "zalem-developer: it's just (sorry, no offense) that the data flow is badly designed"}, {"timstamp": "2019-04-17 14:55", "user": "zalem-developer", "body": "none taken"}, {"timstamp": "2019-04-17 14:55", "user": "zalem-developer", "body": "i'm probably not explaining it right as well"}, {"timstamp": "2019-04-17 14:56", "user": "Elarcis", "body": "zalem-developer: you may have an infinite loop somewhere caused by change A triggering change B trigerring change n ... triggering change A"}, {"timstamp": "2019-04-17 14:56", "user": "zalem-developer", "body": "ok"}, {"timstamp": "2019-04-17 14:56", "user": "zalem-developer", "body": "i'll have to dig more"}, {"timstamp": "2019-04-17 14:56", "user": "zalem-developer", "body": "been stuck on this for days"}, {"timstamp": "2019-04-17 14:57", "user": "Elarcis", "body": "zalem-developer: yep, you need to really take a sheet of paper and write what you understand of the data flow and what happens when you load the component/change a value"}, {"timstamp": "2019-04-17 14:58", "user": "Elarcis", "body": "zalem-developer: I'm sorry, it's going to be hard, especially for a newbie, because I really assume the app is poorly designed (since it's been \"dumped\" on you, usually that tells things)"}, {"timstamp": "2019-04-17 14:58", "user": "zalem-developer", "body": "yeah...and it was in angular 5 as well. i had to beg them to let me upgrade it to 7"}, {"timstamp": "2019-04-17 14:58", "user": "zalem-developer", "body": "all that did was introduce more issues as well"}, {"timstamp": "2019-04-17 14:58", "user": "Elarcis", "body": "zalem-developer: oh, 5 is not that far away"}, {"timstamp": "2019-04-17 14:59", "user": "Elarcis", "body": "zalem-developer: it could be 2 :3c"}, {"timstamp": "2019-04-17 14:59", "user": "zalem-developer", "body": "thanks for trying to help...i'm sure i'll be back later"}], "label": "other"}
{"id": "73af7d23", "body": "", "comments": [{"timstamp": "10:21", "user": "murii", "body": "In order to safely use an observable to not cause memory leaks I should use the async pipe in the HTML template?"}], "label": "other"}
{"id": "93d59510", "body": "", "comments": [{"timstamp": "2018-12-11 19:54", "user": "maxy_86_dev", "body": "please I have to update an AngularJS project from 1.5.8 to 1.6.1 I have a deadline, then my application will stop to work"}, {"timstamp": "2018-12-11 19:54", "user": "maxy_86_dev", "body": "I need support via skype"}, {"timstamp": "2018-12-11 19:55", "user": "maxy_86_dev", "body": "or something else"}, {"timstamp": "2018-12-11 19:55", "user": "maxy_86_dev", "body": "I tried on .codementor.io but I didn't find anyone"}, {"timstamp": "2018-12-11 19:57", "user": "SuperTyp", "body": "but we told you already what to do?"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "yes, I cannot do without angularfire"}, {"timstamp": "2018-12-11 19:57", "user": "SuperTyp", "body": "otherwise, hire a IT Consulting company to help you"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "and I cannot use stackbliz"}, {"timstamp": "2018-12-11 19:57", "user": "maxy_86_dev", "body": "of course, I need a professional"}, {"timstamp": "2018-12-11 19:58", "user": "maxy_86_dev", "body": "expert on migration"}, {"timstamp": "2018-12-11 19:58", "user": "maxy_86_dev", "body": "but I don't know where to ask"}], "label": "other"}
{"id": "93d59551", "body": "", "comments": [{"timstamp": "2016-07-19 10:00", "user": "blizzzard", "body": "What are your thoughts on using the same directive for the header and footer?"}, {"timstamp": "2016-07-19 10:09", "user": "blizzzard", "body": "has anyone tried using the same directive for the footer and header?"}, {"timstamp": "2016-07-19 10:09", "user": "blizzzard", "body": "is it even possible to do that?"}, {"timstamp": "2016-07-19 10:11", "user": "Pyrrhus", "body": "blizzzard: havent done it, but its possbile. and if header and footer are functionally the same, why not ?"}, {"timstamp": "2016-07-19 10:11", "user": "blizzzard", "body": "yeah exactly, Pyyrhus because I need to update meta information and do a few ajax calls in the footer since it's outside the ng-view"}, {"timstamp": "2016-07-19 10:11", "user": "blizzzard", "body": "and doing that enables me to minimize ajax calls :)"}, {"timstamp": "2016-07-19 10:12", "user": "blizzzard", "body": "The only issue is I'm trying to find how I would find what part to render from the template file"}, {"timstamp": "2016-07-19 10:12", "user": "icebox", "body": "blizzzard: use services to share data or to refactor common methods"}, {"timstamp": "2016-07-19 10:12", "user": "Pyrrhus", "body": "if the footer is outside of angular, how could it be a directive ? or am I missing something here ?"}, {"timstamp": "2016-07-19 10:12", "user": "icebox", "body": "blizzzard: I second Pyrrhus's concern"}, {"timstamp": "2016-07-19 10:12", "user": "blizzzard", "body": "like ng-if(cond) - > render div.footer or div.header"}, {"timstamp": "2016-07-19 10:13", "user": "blizzzard", "body": "Hello icebox, I'm using promise based factories for all ajax calls but every time I reference it , it will make a new call right?"}, {"timstamp": "2016-07-19 10:14", "user": "icebox", "body": "blizzzard: what do you mean for \"reference it\"? calling it?"}, {"timstamp": "2016-07-19 10:14", "user": "blizzzard", "body": "Yeah I mean calling it"}, {"timstamp": "2016-07-19 10:14", "user": "icebox", "body": "blizzzard: yes"}, {"timstamp": "2016-07-19 10:15", "user": "blizzzard", "body": "like ajaxFactory.fetch().then(function(something){}) -> I want to minimize these calls"}, {"timstamp": "2016-07-19 10:15", "user": "icebox", "body": "blizzzard: when a promise is resolved, it is resolved"}, {"timstamp": "2016-07-19 10:15", "user": "blizzzard", "body": "so I have a directive for the meta part of my page and a lot of deal specific info which is pulled into the footer(it's the same json that both need to call)"}, {"timstamp": "2016-07-19 10:16", "user": "blizzzard", "body": "@icebox: Even if it's called from another part of the application?"}, {"timstamp": "2016-07-19 10:17", "user": "icebox", "body": "blizzzard: yes"}, {"timstamp": "2016-07-19 10:17", "user": "icebox", "body": "blizzzard: but I think we are talking about two different things"}, {"timstamp": "2016-07-19 10:18", "user": "blizzzard", "body": "<Pyrrhus>Yeah it's just outside the ng-view so it doesn't have access to $scope when initialized."}, {"timstamp": "2016-07-19 10:19", "user": "icebox", "body": "blizzzard: I am talking about promises, you about ajax calls... if you have... getFoo() { return $http... }... every time calling getFoo, an ajax call is done"}, {"timstamp": "2016-07-19 10:19", "user": "blizzzard", "body": "@icebox: possibly, what I'm trying to understand is when we make an ajax call from a factory in 3 different places(directive, controller etc.) , my understanding is that it's called 3 times"}, {"timstamp": "2016-07-19 10:20", "user": "blizzzard", "body": "Yes I'm also talking about promises, so it keeps to once, that's awesome!"}, {"timstamp": "2016-07-19 10:20", "user": "blizzzard", "body": "I'm going to check the trace"}, {"timstamp": "2016-07-19 10:23", "user": "icebox", "body": "blizzzard: yes... it is called three times... but if you have getFoo() { return myPromise; } and another method callBar() { myPromise = $http... }... you can call callBar once and many times getFoo"}, {"timstamp": "2016-07-19 10:25", "user": "icebox", "body": "blizzzard: basically if you can load that constant value when the component is activated and then you can use the promise resolved (or rejected)"}, {"timstamp": "2016-07-19 10:25", "user": "icebox", "body": "blizzzard: does it make sense?"}, {"timstamp": "2016-07-19 10:27", "user": "blizzzard", "body": "Hmm yes makes sense as I just checked the trace and it's being called multiple times"}, {"timstamp": "2016-07-19 10:28", "user": "icebox", "body": "blizzzard: bottom line, the reference you use in the service, it might be also a \"normal\" reference, not a promise... getFoo() { return foo; } ... callBar() { $http...then(function (res) { angular.extend(foo, res.data); }); }"}, {"timstamp": "2016-07-19 10:29", "user": "icebox", "body": "blizzzard: the trick is using a default value for foo"}, {"timstamp": "2016-07-19 10:30", "user": "icebox", "body": "blizzzard: that is a common pattern, splitting how to access to the reference and how to update the reference"}, {"timstamp": "2016-07-19 10:31", "user": "blizzzard", "body": ""}, {"timstamp": "2016-07-19 10:34", "user": "blizzzard", "body": "@icebox will read up on angular.extend or store the json in localstorage and access it from there?"}, {"timstamp": "2016-07-19 10:34", "user": "blizzzard", "body": "This is how I call stuff in my factory"}, {"timstamp": "2016-07-19 10:34", "user": "icebox", "body": "blizzzard: why do ask for this now? I don't follow you"}, {"timstamp": "2016-07-19 10:50", "user": "blizzzard", "body": "@icebox: I'm showing you my factory which is returning $q.defer().promise at the end, extending that gives me an error"}, {"timstamp": "2016-07-19 10:50", "user": "blizzzard", "body": "because it could be called in places when it's not resolved when initialized(why I used promise to begin with("}, {"timstamp": "2016-07-19 10:53", "user": "icebox", "body": "blizzzard: ah ok... you need to apply \"extend\" to the object reference you returned, for instance, to the controller... you use that factory in callBar and in \".then\" part you can use \"extend\"... as in the pseudo example I provided"}, {"timstamp": "2016-07-19 10:54", "user": "mdk", "body": "icebox: Hum in the"}, {"timstamp": "2016-07-19 10:55", "user": "mdk", "body": "icebox: is that just to avoid using underscores?"}, {"timstamp": "2016-07-19 10:57", "user": "icebox", "body": "mdk: there are a few ways to accomplish the same task... experiment it :)"}], "label": "other"}
{"id": "93d59497", "body": "", "comments": [{"timstamp": "2017-06-21 09:22", "user": "ahoo", "body": "oh my god hi"}, {"timstamp": "2017-06-21 09:22", "user": "ahoo", "body": "i know my way around A BIT with angular 1"}, {"timstamp": "2017-06-21 09:22", "user": "ahoo", "body": "now i wanna migrate myself to the current version"}, {"timstamp": "2017-06-21 09:22", "user": "ahoo", "body": "is it better first to completely understand 1 and then migrate to current"}, {"timstamp": "2017-06-21 09:22", "user": "ahoo", "body": "or should i go straigt to current (from the start)"}, {"timstamp": "2017-06-21 09:23", "user": "ahoo", "body": "oh my god thanks"}, {"timstamp": "2017-06-21 09:26", "user": "icebox", "body": "ahoo: you should follow best practices with angularjs before migrating to angular"}, {"timstamp": "2017-06-21 09:27", "user": "icebox", "body": "ahoo: generally speaking,"}, {"timstamp": "2017-06-21 09:27", "user": "ahoo", "body": "with \"migrate\" i didnt mean to migrate my apps but to migrate myself (learn)"}, {"timstamp": "2017-06-21 09:28", "user": "icebox", "body": "ahoo: ah ok :)"}, {"timstamp": "2017-06-21 09:28", "user": "icebox", "body": "ahoo: no, it is not mandatory to learn firstly angularjs... if you are not exposed to angularjs, you can start using angular from the beginning"}, {"timstamp": "2017-06-21 09:29", "user": "ahoo", "body": "i'm confused"}, {"timstamp": "2017-06-21 09:29", "user": "icebox", "body": "ahoo: what is your concern?"}, {"timstamp": "2017-06-21 09:29", "user": "ahoo", "body": "what is the difference with angular and angularjs?"}, {"timstamp": "2017-06-21 09:29", "user": "icebox", "body": "ahoo: they are two different frameworks"}, {"timstamp": "2017-06-21 09:29", "user": "ahoo", "body": "holy shit."}, {"timstamp": "2017-06-21 09:29", "user": "icebox", "body": "ahoo: the only thing in common is the name"}, {"timstamp": "2017-06-21 09:30", "user": "ahoo", "body": "get outta here"}, {"timstamp": "2017-06-21 09:30", "user": "ahoo", "body": "which one is the one google runs?"}, {"timstamp": "2017-06-21 09:30", "user": "icebox", "body": "ahoo: both"}, {"timstamp": "2017-06-21 09:30", "user": "icebox", "body": "ahoo: generally speaking the latest, angular"}, {"timstamp": "2017-06-21 09:31", "user": "icebox", "body": "ahoo: this is a worthy reading"}, {"timstamp": "2017-06-21 09:45", "user": "ahoo", "body": "thx"}, {"timstamp": "2017-06-21 09:47", "user": "icebox", "body": "ahoo: you are welcome"}], "label": "other"}
{"id": "93d594c6", "body": "", "comments": [{"timstamp": "2016-05-15 13:07", "user": "CoderAbsolute", "body": "Hi all, I have a question to ask.... Am developing a mobile app using Ionic2 which is based on Angular2"}, {"timstamp": "2016-05-15 13:08", "user": "CoderAbsolute", "body": "When the user taps on a list item, I have a click event fired (i could see the object data being displayed in the console log)."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "But, how do I store this data globally which means if the user navigates to other page, the data should still be available..."}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "This is more like a shopping cart"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStore?"}, {"timstamp": "2016-05-15 13:09", "user": "CoderAbsolute", "body": "Maybe, use a localStorage?"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "Right after posting the question, I did manage to google and wrote something like this and it works for me.. I think"}, {"timstamp": "2016-05-15 13:14", "user": "CoderAbsolute", "body": "dishTapped(event, dish) { var dataToStore = JSON.stringify(dish); localStorage.setItem(\"basket\", dataToStore); console.log(dish); }"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "and move it to a service"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Thanks Ashe! =)"}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Exactly. I was thinking about Service."}, {"timstamp": "2016-05-15 13:15", "user": "CoderAbsolute", "body": "Sorry, I can paste the code nicely if you prefer?"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "nah it's fine as it is"}, {"timstamp": "2016-05-15 13:15", "user": "Ashe", "body": "it's just that you'll likely want to split that logic from the component"}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "So, that this service should be accessible from other Pages as well."}, {"timstamp": "2016-05-15 13:16", "user": "CoderAbsolute", "body": "Let me google the Service explanation and an example..."}, {"timstamp": "2016-05-15 13:19", "user": "CoderAbsolute", "body": "Maybe, another question... Where does the services should reside? In a separate folder?"}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": "I think this link should answer my question.."}, {"timstamp": "2016-05-15 13:20", "user": "CoderAbsolute", "body": ""}, {"timstamp": "2016-05-15 13:21", "user": "Ashe", "body": "personally I use something close to method 2 in that page"}, {"timstamp": "2016-05-15 13:22", "user": "Ashe", "body": "or more like a mix of 2 and 3 I suppose"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "I thought to have a dedicated folder as \"shared\" and have \"services\" underneath... which is close to 3"}, {"timstamp": "2016-05-15 13:23", "user": "CoderAbsolute", "body": "If i need to do something about services anywhere in the app I would go to just one folder and should be able to find things easily.. Hopefully in future... Just a thought."}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "dunno, I'd just call it \"shoppingcart\" rather than \"shared\", and components related to the shopping cart in there as well"}, {"timstamp": "2016-05-15 13:24", "user": "Ashe", "body": "but these things are often a mix of rationale/taste/project size/etc"}, {"timstamp": "2016-05-15 13:24", "user": "CoderAbsolute", "body": "Right."}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "You know am loving Angular2"}, {"timstamp": "2016-05-15 13:25", "user": "Lecht", "body": "CoderAbsolute: Me as well"}, {"timstamp": "2016-05-15 13:25", "user": "CoderAbsolute", "body": "This is my first mobile app and JS development and"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "But the local storage method should work in the real app as well right? I mean when my users download the app on their Android or iOS?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "not doing typescript?"}, {"timstamp": "2016-05-15 13:26", "user": "Ashe", "body": "yeah localstorage will work"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "Thanks for answering about the local storage, Ashe!"}, {"timstamp": "2016-05-15 13:26", "user": "CoderAbsolute", "body": "I come from the C# background, I appreciate the concept of typescript."}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "But the tutorial of Ionic2 is in ES6 I think."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "then you can probably even stick to Visual Studio"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Yeah I can do that but am using sublime now...."}, {"timstamp": "2016-05-15 13:27", "user": "Ashe", "body": "although when getting started it's nicer to avoid letting the IDE do everything for you, at least that way you know what's going on"}, {"timstamp": "2016-05-15 13:27", "user": "CoderAbsolute", "body": "Right..."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "So, I have downloaded the ES6 template and started to enhance it."}, {"timstamp": "2016-05-15 13:28", "user": "CoderAbsolute", "body": "Not sure why Ionic documentation is using ES6 but not typescript.."}, {"timstamp": "2016-05-15 13:29", "user": "Ashe", "body": "the syntax would likely be the same"}, {"timstamp": "2016-05-15 13:30", "user": "CoderAbsolute", "body": "Okies.."}], "label": "other"}
{"id": "93d59533", "body": "", "comments": [{"timstamp": "2016-07-06 13:10", "user": "Elarcis", "body": "I want to sleep so bad"}], "label": "other"}
{"id": "73af7d32", "body": "", "comments": [{"timstamp": "13:28", "user": "trampi", "body": "I'll be off for today. Wish everyone a short friday and a nice weekend!"}, {"timstamp": "13:30", "user": "SargoDarya", "body": "trampi: Have fun, enjoy bodensee"}, {"timstamp": "13:35", "user": "jlebrech", "body": "have fun trampi"}], "label": "other"}
{"id": "0edea3f9", "body": "", "comments": [{"timstamp": "04:50", "user": "duvnell1", "body": "I have a component which renders the data provided by a service. The service requires a URL when it is created (to know where to get its data from). I made the component have a DI constructor parameter for the service. But is there a way to specify that URL when the service is instantiated? Is that in the configuration somewhere? Also, ATM this is a test app.. I'm hoping to make a reusable FeatureModule out of the component a"}, {"timstamp": "04:50", "user": "duvnell1", "body": "ervice to be used in other apps. Can a module be given a parameter (the URL in this case) when it's imported?"}], "label": "feature"}
{"id": "8addb26f", "body": "", "comments": [{"timstamp": "2017-05-30 14:25", "user": "Eduard_Munteanu", "body": "I have a login screen. Should I use Location instead of Router to redirect people to it, assuming my app already uses a router outlet?"}, {"timstamp": "2017-05-30 15:15", "user": "Eduard_Munteanu", "body": "This is annoying. I have my app structured as /login and / { /foo, /bar, /baz }, where '/' contains a navbar and a router outlet for those tabs."}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Well, web dev kinds sucks all around, really. :("}, {"timstamp": "2017-05-30 15:16", "user": "Eduard_Munteanu", "body": "Is there some way I can avoid using secondary routes for login and those tabs?"}], "label": "feature"}
{"id": "93d5952b", "body": "", "comments": [{"timstamp": "2016-07-05 13:35", "user": "Raj_", "body": "I have a question?"}, {"timstamp": "2016-07-05 13:35", "user": "Raj_", "body": "si it good to use jquery in angularjs"}, {"timstamp": "2016-07-05 13:35", "user": "Raj_", "body": "?"}, {"timstamp": "2016-07-05 13:36", "user": "Raj_", "body": "is it good to use jquery in angularjs?"}, {"timstamp": "2016-07-05 13:36", "user": "grug", "body": "no"}, {"timstamp": "2016-07-05 13:36", "user": "Elarcis", "body": "Raj_: it is, but it's discouraged"}, {"timstamp": "2016-07-05 13:37", "user": "Raj_", "body": "Why?"}, {"timstamp": "2016-07-05 13:37", "user": "grug", "body": "Elarcis: it is not good AND it is discouraged"}, {"timstamp": "2016-07-05 13:37", "user": "Elarcis", "body": "Raj_: mainly because it's highly useless if you want to do things right :D"}, {"timstamp": "2016-07-05 13:37", "user": "Elarcis", "body": "grug: angularjs uses a lite version of jQuery anyway"}, {"timstamp": "2016-07-05 13:38", "user": "Elarcis", "body": "grug: sometimes you still need it, especially if you're using a jQuery plugin that doesn't exist in angularjs"}, {"timstamp": "2016-07-05 13:38", "user": "grug", "body": "Elarcis: my point was that you claimed that it's good to use jquery in angularjs, which isn't correct :)"}, {"timstamp": "2016-07-05 13:38", "user": "Raj_", "body": "but angularjs jqlite doesn't provide all the methods and flexibility of Jquery"}, {"timstamp": "2016-07-05 13:38", "user": "Elarcis", "body": "grug: although yes, I admit doing DOM manipulations is tricky"}, {"timstamp": "2016-07-05 13:39", "user": "Elarcis", "body": "grug: my point is that it is, it's just not very useful because the range of operations that aren't discouraged can be as well accomplished with vanilla JS or the lite version provided with angularjs"}, {"timstamp": "2016-07-05 13:39", "user": "Elarcis", "body": "Raj_: yes, that means you're basically working around angularjs and not with it"}, {"timstamp": "2016-07-05 13:42", "user": "Elarcis", "body": "Raj_: as I said, most features provided by jQuery are either available in vanillaJS, or provided by an angularjs mechanism you should use"}, {"timstamp": "2016-07-05 13:42", "user": "Elarcis", "body": "Raj_: (except you're indeed working with a jQuery plugin, in which case you must be careful not to interfere with angularjs)"}, {"timstamp": "2016-07-05 13:51", "user": "Raj_", "body": "<unconvertable>"}, {"timstamp": "2016-07-05 13:55", "user": "Foxandxss", "body": "grug: good like not good. You can use it, why not"}, {"timstamp": "2016-07-05 13:57", "user": "grug", "body": "Foxandxss: sure - you can do a lot of things - i've definitely been burned by doing it in the past on earlier projects so i tend to not advocate doing it unless you absolutely must"}, {"timstamp": "2016-07-05 13:57", "user": "Foxandxss", "body": "Yes, better not to do it"}, {"timstamp": "2016-07-05 13:57", "user": "Foxandxss", "body": "but yes, you can use it nonetheless and won't really bite you"}, {"timstamp": "2016-07-05 13:58", "user": "grug", "body": "yeah fair enough :)"}, {"timstamp": "2016-07-05 14:00", "user": "Foxandxss", "body": "there is still nice jquery stuff out there. We hope that web components can change that in the future"}, {"timstamp": "2016-07-05 14:04", "user": "grug", "body": "Foxandxss: i assume that someone has already pointed out but you are 7 days away from a full github block of contributions"}, {"timstamp": "2016-07-05 14:05", "user": "grug", "body": "i described that poorly -"}, {"timstamp": "2016-07-05 14:06", "user": "Foxandxss", "body": "grug: yeah, tuesday is the day. Shame that the \"contribution streak\" is gone :("}, {"timstamp": "2016-07-05 14:07", "user": "grug", "body": "yeah that's a bit of a bummer, haha"}, {"timstamp": "2016-07-05 14:07", "user": "Foxandxss", "body": "has its pros and its cons to be honest"}, {"timstamp": "2016-07-05 14:08", "user": "Foxandxss", "body": "is a bit hard to keep writing contributions every day but luckily my work is open source so what I do for a living counts for contribution"}, {"timstamp": "2016-07-05 14:08", "user": "Foxandxss", "body": "but that also changed recently when private contributions counts for the graph now"}, {"timstamp": "2016-07-05 14:08", "user": "grug", "body": "yeah i've been freelancing for the last few months now so all my stuff goes up on github"}, {"timstamp": "2016-07-05 14:08", "user": "grug", "body": "i spent a bit over a year working for Moodle (www.moodle.org) who were open source so that was also all up on github"}, {"timstamp": "2016-07-05 14:09", "user": "Foxandxss", "body": "that is awesome. My girlfriend use that project everyday at work"}, {"timstamp": "2016-07-05 14:10", "user": "grug", "body": "Foxandxss: oh that's great to hear - they're an amazing team (based in my hometown - Perth, Western Australia) run by a pretty cool guy"}, {"timstamp": "2016-07-05 14:10", "user": "Foxandxss", "body": "brb, lunch"}, {"timstamp": "2016-07-05 14:10", "user": "grug", "body": "it was such a unique environment to work in - a massive open source project with full time core developers and so many community contributions"}, {"timstamp": "2016-07-05 14:11", "user": "MikiSoft", "body": "oh, what's the purpose of this channel if no one is helping"}, {"timstamp": "2016-07-05 14:11", "user": "MikiSoft", "body": "i would make plunkr if someone wants to offer me assistance"}, {"timstamp": "2016-07-05 14:12", "user": "grug", "body": "MikiSoft: people will help if they can/want to - you can't expect strangers to help you for free and get grumpy because nobody responds for 8 minutes"}, {"timstamp": "2016-07-05 14:12", "user": "MikiSoft", "body": "grug so far nobody helped me here"}, {"timstamp": "2016-07-05 14:12", "user": "MikiSoft", "body": "and i asked X tiems"}, {"timstamp": "2016-07-05 14:12", "user": "MikiSoft", "body": "*times"}, {"timstamp": "2016-07-05 14:12", "user": "dav", "body": "shit"}, {"timstamp": "2016-07-05 14:13", "user": "sakustar", "body": "MikiSoft: step 1: post plunk step 2: wait"}, {"timstamp": "2016-07-05 14:13", "user": "angrybacon", "body": "MikiSoft If you want motivated people to answer your questions just go to stackoverflow or something. There people battle for Internet points so you should get away with asking and be impatient about it as well"}, {"timstamp": "2016-07-05 14:18", "user": "MikiSoft", "body": "good point, i'll try to ask there"}, {"timstamp": "2016-07-05 14:20", "user": "angrybacon", "body": "MikiSoft On a more general note, ask and try on your own while waiting. This channel is not a free AngularJS consulting service :D"}, {"timstamp": "2016-07-05 14:23", "user": "Foxandxss", "body": "grug: yes, angular is also like that, massive community and lot of work"}, {"timstamp": "2016-07-05 14:25", "user": "grug", "body": "Foxandxss: yeah i bet! it's cool though and very rewarding (at least that's what i found)"}, {"timstamp": "2016-07-05 14:25", "user": "Foxandxss", "body": "yes, it is"}, {"timstamp": "2016-07-05 14:25", "user": "Foxandxss", "body": "and the money is good :P"}, {"timstamp": "2016-07-05 14:26", "user": "grug", "body": "that too!"}, {"timstamp": "2016-07-05 14:26", "user": "Foxandxss", "body": "here in Spain moodle is used for online education"}, {"timstamp": "2016-07-05 14:26", "user": "grug", "body": "yeah it's pretty big in spain - quite a few of the core developers are spanish"}, {"timstamp": "2016-07-05 14:26", "user": "Foxandxss", "body": "and even \"normal\" education uses moodle for the \"online academy\""}, {"timstamp": "2016-07-05 14:26", "user": "Foxandxss", "body": "when I studied, it was all moodle"}, {"timstamp": "2016-07-05 14:26", "user": "grug", "body": "it's come so far over the years"}, {"timstamp": "2016-07-05 14:27", "user": "grug", "body": "it used to be /terrible/"}, {"timstamp": "2016-07-05 14:27", "user": "Foxandxss", "body": "and my gf (works at the univ) they use moodle for tasks and stuff"}, {"timstamp": "2016-07-05 14:27", "user": "Foxandxss", "body": "I used it for real like 10 years ago or 8"}, {"timstamp": "2016-07-05 14:27", "user": "Foxandxss", "body": "I don't remember"}, {"timstamp": "2016-07-05 14:28", "user": "grug", "body": "it's pretty fantastic now to be honest"}, {"timstamp": "2016-07-05 14:30", "user": "Foxandxss", "body": "Wasn't moodle bought?"}, {"timstamp": "2016-07-05 14:31", "user": "grug", "body": "no"}, {"timstamp": "2016-07-05 14:31", "user": "grug", "body": "martin dougiamas would never sell the company"}, {"timstamp": "2016-07-05 14:31", "user": "grug", "body": "he's had some massive offers for it too"}, {"timstamp": "2016-07-05 14:35", "user": "Foxandxss", "body": "grug: there was a company that was buying all education solutions, years ago"}, {"timstamp": "2016-07-05 14:35", "user": "grug", "body": "oh i know who you are talking about but the name evades me - they didnt get their hands on moodle (fortunately for moodle, imo)"}, {"timstamp": "2016-07-05 14:36", "user": "Foxandxss", "body": "I see"}, {"timstamp": "2016-07-05 14:58", "user": "Foxandxss", "body": "never used $resource so I don't know what it expects"}, {"timstamp": "2016-07-05 15:08", "user": "Foxandxss", "body": "50% chance it is a bad plunker"}], "label": "other"}
{"id": "93d594cc", "body": "", "comments": [{"timstamp": "2017-04-24 11:27", "user": "icebox", "body": "E1arcis: hey"}, {"timstamp": "2017-04-24 11:27", "user": "icebox", "body": "Pyrrhus666: hey"}, {"timstamp": "2017-04-24 11:27", "user": "Pyrrhus666", "body": "icebox, hey ! werent you supposed to be off until wednesday ?"}, {"timstamp": "2017-04-24 11:28", "user": "icebox", "body": "yep... indeed I am at sea house :)"}, {"timstamp": "2017-04-24 11:28", "user": "icebox", "body": "but at the moment it is my \"single\" time :)"}, {"timstamp": "2017-04-24 11:29", "user": "Pyrrhus666", "body": "icebox, ah ok :) and you spend single time like youre at work ? tsk ;)"}, {"timstamp": "2017-04-24 11:29", "user": "icebox", "body": "well... just to see if E1arcis was ok :)"}, {"timstamp": "2017-04-24 11:29", "user": "SargoDarya", "body": "Oh hey, icebox. Awaken from the dead?"}, {"timstamp": "2017-04-24 11:29", "user": "Pyrrhus666", "body": "icebox, hehe :)"}, {"timstamp": "2017-04-24 11:30", "user": "icebox", "body": "Pyrrhus666: well... played chess until now, in a few minutes I need to go, because the \"boss\" gave me a few urgent \"tasks\""}, {"timstamp": "2017-04-24 11:30", "user": "icebox", "body": "SargoDarya: hey"}, {"timstamp": "2017-04-24 11:32", "user": "Pyrrhus666", "body": "icebox, enjoy your precious single time ;)"}, {"timstamp": "2017-04-24 11:35", "user": "E1arcis", "body": "icebox: I'm touched, really :)"}, {"timstamp": "2017-04-24 11:35", "user": "E1arcis", "body": "icebox: I'm fine, and you?"}, {"timstamp": "2017-04-24 12:17", "user": "icebox", "body": "Elarc1s: have a bath in the sun :)"}, {"timstamp": "2017-04-24 12:17", "user": "icebox", "body": "tasks completed"}, {"timstamp": "2017-04-24 12:19", "user": "icebox", "body": "OT: Introducing a faster BBC News front page -"}, {"timstamp": "2017-04-24 12:34", "user": "iprime", "body": "icebox, meh, that's react :| :D"}], "label": "other"}
{"id": "8addb25b", "body": "", "comments": [{"timstamp": "2016-08-24 11:32", "user": "Mo0O", "body": "the question is quite simple, is there a way to tell a directive in which transclude slot I want to put transcluded content?"}, {"timstamp": "2016-08-24 11:32", "user": "Mo0O", "body": "Elarcis: I don't ash for design expertise, I ash for feature"}, {"timstamp": "2016-08-24 11:33", "user": "Pyrrhus666", "body": "Mo0O: I dont think its possible."}, {"timstamp": "2016-08-24 11:34", "user": "ngWalrus", "body": "Mo0O"}, {"timstamp": "2016-08-24 11:34", "user": "ngWalrus", "body": "read the docs"}, {"timstamp": "2016-08-24 11:34", "user": "Elarcis", "body": "Mo0O: THERE IS, AS YET, INSUFFICIENT DATA FOR A MEANINGFUL ANSWER"}, {"timstamp": "2016-08-24 11:34", "user": "Elarcis", "body": "(not shouting, just adding formatting style)"}, {"timstamp": "2016-08-24 11:36", "user": "ngWalrus", "body": "but to answer your question(it's also in the docs), you can have named transclusion slots"}], "label": "feature"}
{"id": "93d59536", "body": "", "comments": [{"timstamp": "2017-02-17 11:57", "user": "sunny", "body": "Hello randOm please check this code"}, {"timstamp": "2017-02-17 11:57", "user": "sunny", "body": ""}, {"timstamp": "2017-02-17 11:58", "user": "sunny", "body": "i want to use scotchApp.controller('contactController', function($scope) { $scope.message = 'Contact us! JK. This is just a demo.'; }); in contact.html file"}, {"timstamp": "2017-02-17 11:58", "user": "sunny", "body": "how ?"}, {"timstamp": "2017-02-17 11:59", "user": "Elarcis", "body": "sunny: have you read any angular tutorial? this is usually the first step"}, {"timstamp": "2017-02-17 11:59", "user": "icebox", "body": "sunny: don't put code in the template... a few days saying this :)"}, {"timstamp": "2017-02-17 11:59", "user": "Elarcis", "body": "sunny: ng-controller."}, {"timstamp": "2017-02-17 11:59", "user": "sunny", "body": "send link ng-controller"}, {"timstamp": "2017-02-17 12:00", "user": "icebox", "body": "sunny:"}, {"timstamp": "2017-02-17 12:00", "user": "icebox", "body": "sunny: I am sure google is out of order there, isn't it?"}], "label": "other"}
{"id": "73af7cfe", "body": "", "comments": [{"timstamp": "10:09", "user": "ray02", "body": "hello hello"}, {"timstamp": "10:09", "user": "ray02", "body": "morning folks"}], "label": "other"}
{"id": "93d5954d", "body": "", "comments": [{"timstamp": "2017-06-29 16:12", "user": "SargoDarya", "body": "I could need a designer for my game xD"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: I have to warn you: I use Comic Sans everywhere"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: So we have a deal?"}, {"timstamp": "2017-06-29 16:13", "user": "Elarcis", "body": "SargoDarya: damn, my repellant failed"}, {"timstamp": "2017-06-29 16:13", "user": "SargoDarya", "body": "Elarcis: Jokes on you, I'm a firm believer in dogecoin. Comic sans is my favorite font!"}, {"timstamp": "2017-06-29 16:16", "user": "Elarcis", "body": "zomg: sounds like our computation api"}], "label": "other"}
{"id": "0edea35e", "body": "", "comments": [{"timstamp": "17:40", "user": "anddam", "body": "howdy"}, {"timstamp": "17:41", "user": "anddam", "body": "in template-driven form can I a built-in validator that is only applied if there is data?"}, {"timstamp": "17:41", "user": "anddam", "body": "namely I have an optional birth-date field where I want the DD/MM/YYYY format"}, {"timstamp": "17:41", "user": "ray02", "body": "yep"}, {"timstamp": "17:42", "user": "ray02", "body": "anddam: with is required"}, {"timstamp": "17:42", "user": "anddam", "body": "with?"}, {"timstamp": "17:42", "user": "ray02", "body": "\"is required\""}, {"timstamp": "17:42", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:42", "user": "anddam", "body": "I figured Validators.pattern fits the bill but I want it to only be checked if there is actual data"}, {"timstamp": "17:43", "user": "anddam", "body": "but that would always return ValidationErrors if the field is empty"}, {"timstamp": "17:43", "user": "ray02", "body": "Validators.required,"}, {"timstamp": "17:44", "user": "ray02", "body": "is not enough ?"}, {"timstamp": "17:52", "user": "anddam", "body": "well, that seems the opposite of what I wanted"}, {"timstamp": "17:52", "user": "anddam", "body": "it will mark as non-valid an empty field"}, {"timstamp": "17:55", "user": "anddam", "body": "I want the field to be optional, but _if_ filled then match a pattern"}, {"timstamp": "17:55", "user": "anddam", "body": "I figure I need a custom validator for that, is that right?"}, {"timstamp": "17:58", "user": "ray02", "body": "anddam: sorry it's not totally clear, with pattern you check if what is typed inside respect a pattern"}, {"timstamp": "17:58", "user": "ray02", "body": "is't this what you want?"}, {"timstamp": "17:59", "user": "ray02", "body": "*isn't"}, {"timstamp": "18:01", "user": "anddam", "body": "ok, but I'd like the field to be valid if a) it is empty or b) it has a content and this content is DD/MM/YYYY"}, {"timstamp": "18:02", "user": "anddam", "body": "the pattern can obviously be expressed in regex"}, {"timstamp": "18:02", "user": "anddam", "body": "but I'm asking if I can combine built-in validators with logical operators"}, {"timstamp": "18:05", "user": "ray02", "body": "ahh now i get it, umm i think yes you are right you need a custom validator where you can add some personal logic"}, {"timstamp": "18:07", "user": "anddam", "body": "I see, thanks"}, {"timstamp": "18:12", "user": "ray02", "body": "because as you can notice, the validator is an array so no logic inside"}, {"timstamp": "18:25", "user": "anddam", "body": "yep, and no function to act on those as operators"}, {"timstamp": "18:25", "user": "anddam", "body": "I'm having a bit of hard time understanding this (control: AbstractControl): { [key: string]: any } | null => { ... }"}, {"timstamp": "18:25", "user": "anddam", "body": "the ellipsis are mine, that's a fat-arrow function accepting one argument of type AbastractControl and returning... what?"}, {"timstamp": "18:25", "user": "anddam", "body": "either null or an object"}, {"timstamp": "18:26", "user": "anddam", "body": "but the object has [key: string] as property, that I do not get"}, {"timstamp": "18:26", "user": "anddam", "body": "why the array notation?"}, {"timstamp": "18:26", "user": "anddam", "body": "does it allow for multiple properties as long as their \"name\" is a string?"}, {"timstamp": "18:26", "user": "anddam", "body": "ng generate directives blahblablah"}, {"timstamp": "18:27", "user": "anddam", "body": "no sorry"}, {"timstamp": "18:27", "user": "anddam", "body": ""}], "label": "feature"}
{"id": "93d59537", "body": "", "comments": [{"timstamp": "2017-05-31 07:42", "user": "juria_roberts", "body": "How do I convert a string \"false\" to boolean false inside link function of directives?"}, {"timstamp": "2017-05-31 07:45", "user": "juria_roberts", "body": "zomg: is there a way through $parse or someother angular service?"}, {"timstamp": "2017-05-31 07:46", "user": "zomg", "body": "not sure what would the point of that other than to make it more complicated =)"}, {"timstamp": "2017-05-31 07:47", "user": "juria_roberts", "body": "zomg: just for my knowledge :) $parse returns a function. Not sure how to get a boolean from it"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "yeah I forget what that does tbh"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "if it returns a function, try calling it"}, {"timstamp": "2017-05-31 07:47", "user": "juria_roberts", "body": "hmm didn't think of that"}, {"timstamp": "2017-05-31 07:47", "user": "zomg", "body": "iirc it might be something like var fn = $parse('stuff');, and then fn($scope)"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "so basically it gives you a function which will parse some expression in context of the scope you pass it"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "assuming I remember correctly anyway"}, {"timstamp": "2017-05-31 07:48", "user": "juria_roberts", "body": "ohhhh"}, {"timstamp": "2017-05-31 07:48", "user": "juria_roberts", "body": "Thanks a lot...will give it a shot"}, {"timstamp": "2017-05-31 07:48", "user": "zomg", "body": "the docs for $parse probably have more info :)"}, {"timstamp": "2017-05-31 07:50", "user": "juria_roberts", "body": "your explanation clarified the docs for me..Thank you"}, {"timstamp": "2017-05-31 08:33", "user": "Elarcis", "body": "zomg, juria_roberts: $parse(expression) returns a function that's the JS equivalent of the given expression. The function must be called with the scope against which it will be evaluated as an argument"}, {"timstamp": "2017-05-31 08:34", "user": "Elarcis", "body": "zomg, juria_roberts: e.g. $parse('value = 4')(scope) where scope is {value: null} will sets its value property to 4"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "zomg, juria_roberts: to remember it easily, see $parse() as a service that parses stringified code to a runable function, but the function still needs to be ran against some context"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: today I discovered ng-if-start and ng-if-end"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: t'is the end of many forced divs just to group visibility checks"}, {"timstamp": "2017-05-31 08:36", "user": "Elarcis", "body": "icebox: also works on many structural directives"}, {"timstamp": "2017-05-31 08:37", "user": "icebox", "body": "interesting"}, {"timstamp": "2017-05-31 08:37", "user": "Elarcis", "body": "icebox:"}, {"timstamp": "2017-05-31 08:39", "user": "icebox", "body": ":P"}, {"timstamp": "2017-05-31 08:45", "user": "SargoDarya", "body": "Good morning Elarcis icebox and the whole other gang"}, {"timstamp": "2017-05-31 08:46", "user": "icebox", "body": "hey"}, {"timstamp": "2017-05-31 08:48", "user": "Elarcis", "body": "trying GitKraken for a GUI git client"}, {"timstamp": "2017-05-31 08:48", "user": "Elarcis", "body": "you pals have any preference?"}, {"timstamp": "2017-05-31 08:48", "user": "zomg", "body": "I just use the git cli :P"}, {"timstamp": "2017-05-31 08:49", "user": "Elarcis", "body": "zomg: too predictable"}, {"timstamp": "2017-05-31 08:49", "user": "zomg", "body": "I've not really found any reason to not use the cli one"}, {"timstamp": "2017-05-31 08:50", "user": "Elarcis", "body": "zomg: a window can show me the most useful data without me having to type anything"}, {"timstamp": "2017-05-31 08:50", "user": "zomg", "body": "Elarcis: such as?"}, {"timstamp": "2017-05-31 08:52", "user": "Elarcis", "body": "zomg: the list of commits with their dates, the global graph of branches and commits, the status of my files, how many pulls/push differ from the origin remote..."}, {"timstamp": "2017-05-31 08:52", "user": "Elarcis", "body": "zomg: as well indeed as graphic diff tools"}, {"timstamp": "2017-05-31 08:52", "user": "zomg", "body": "why do you need to see that info all the time?"}, {"timstamp": "2017-05-31 08:54", "user": "SargoDarya", "body": "neat Node 8.0.0"}, {"timstamp": "2017-05-31 08:55", "user": "Elarcis", "body": "zomg: not all the time, when I want an overview of my repo. It's all available in a window, all those commands concentrated in one compact and well structured and cleartype(TM) display"}, {"timstamp": "2017-05-31 08:56", "user": "Elarcis", "body": "SourceTree devs are amateurs. I don't understand how they can implement so many issues with mercurial at each release"}, {"timstamp": "2017-05-31 08:56", "user": "zomg", "body": "yeah was just wondering since you said you can then see that stuff without typing anything"}, {"timstamp": "2017-05-31 08:57", "user": "zomg", "body": "but at least for me I don't really need to see that unless I'm doing something specific with that info, and in that case you'd probably have to click around the GUI a bit anyway or so I would imagine"}, {"timstamp": "2017-05-31 08:57", "user": "Elarcis", "body": "zomg: though I agree that using a GUI is likely to keep me oblivious of git's advanced features or easy possibilities"}, {"timstamp": "2017-05-31 09:12", "user": "icebox", "body": "Elarcis: git cli comes with git-gui"}], "label": "other"}
{"id": "93d594ad", "body": "", "comments": [{"timstamp": "2017-07-18 15:30", "user": "lyxthe", "body": "is this possible to ask questions in here ?"}, {"timstamp": "2017-07-18 15:30", "user": "icebox", "body": "lyxthe: sure"}, {"timstamp": "2017-07-18 15:31", "user": "icebox", "body": "lyxthe: you had one free question... sorry, consumed"}, {"timstamp": "2017-07-18 15:31", "user": "SargoDarya", "body": "lyxthe: Depends, does your question have anything to do with angular?"}, {"timstamp": "2017-07-18 15:31", "user": "lyxthe", "body": "yep it does :)"}, {"timstamp": "2017-07-18 15:31", "user": "SargoDarya", "body": "Wrong channel then, we only have fun here."}, {"timstamp": "2017-07-18 15:32", "user": "lyxthe", "body": "arf ... should leave then... or maybe I could ask my question and see if anyone find fun in it :p"}, {"timstamp": "2017-07-18 15:33", "user": "lyxthe", "body": "it concerns this module"}, {"timstamp": "2017-07-18 15:33", "user": "icebox", "body": "lyxthe:"}, {"timstamp": "2017-07-18 15:33", "user": "SargoDarya", "body": "Damn, looks like we got a smart one. lyxthe, in general for all of IRC, always just ask and wait for an answer."}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "ok did not know that..."}, {"timstamp": "2017-07-18 15:34", "user": "SargoDarya", "body": "No worries, just remember it for the next time ;)"}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "yep"}, {"timstamp": "2017-07-18 15:34", "user": "lyxthe", "body": "I see a plunkr could help so I make one then I return :p"}], "label": "other"}
{"id": "93d59527", "body": "", "comments": [{"timstamp": "2017-06-13 23:34", "user": "j4f-shredder", "body": "Hello, I'm doing an angular 4 app and I need to know when I check for the authenticated state of the user with the backend, what shoudl I do on my auth service?? cause I have some componentes that I need to hide based on user auth status"}, {"timstamp": "2017-06-13 23:34", "user": "j4f-shredder", "body": "I don't want to go to the backend everytime to check if the user is logged in"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "I would like to cache the auth state of the user"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "and make it expire or something"}, {"timstamp": "2017-06-13 23:35", "user": "j4f-shredder", "body": "which is the best way to accomplish that?"}, {"timstamp": "2017-06-13 23:45", "user": "j4f-shredder", "body": "but I need to hide a sidebar"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "only viewable on a dashboard"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "if the user is logged in"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: so if you already sent the app, they have access to everything... your backend should not allow them to touch any end points until they login"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: use an auth-guard then"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "I am"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "and it's working fine"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "but I want to avoid going to the backend"}, {"timstamp": "2017-06-13 23:46", "user": "Snugglebash", "body": "j4f-shredder: but it doesnt stop them using your whole app"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "for every request"}, {"timstamp": "2017-06-13 23:46", "user": "j4f-shredder", "body": "it's a one page app"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "I don't generate content on the server"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "I mean, the navbars and that kind of visual components"}, {"timstamp": "2017-06-13 23:47", "user": "jccn", "body": "I think you misunderstand how the request/response cycle works"}, {"timstamp": "2017-06-13 23:47", "user": "Snugglebash", "body": "j4f-shredder: on your back end you can send a login form if they arent authorised and then they authenticate you can send app"}, {"timstamp": "2017-06-13 23:47", "user": "j4f-shredder", "body": "that's not the problem"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "that has already been covered"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "with the auth guard"}, {"timstamp": "2017-06-13 23:48", "user": "Snugglebash", "body": "no it hasnt"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "I just want to know if the user is logged in and show him the login or logout button"}, {"timstamp": "2017-06-13 23:48", "user": "Snugglebash", "body": "auth-guard doesnt do much other than hide stuff for a dumb user"}, {"timstamp": "2017-06-13 23:48", "user": "jccn", "body": "every request to the backend is sent with a token, the backend should only respond with data that user has access to"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "and I already did that"}, {"timstamp": "2017-06-13 23:48", "user": "j4f-shredder", "body": "I just want a good way of caching the auth state of the user"}, {"timstamp": "2017-06-13 23:48", "user": "jccn", "body": "how the frontend caches it doesn't matter because the data it has access to is authorized"}, {"timstamp": "2017-06-13 23:49", "user": "j4f-shredder", "body": "look, I already have blocked the user if he's not logged in"}, {"timstamp": "2017-06-13 23:49", "user": "jccn", "body": "backend needs to authorize _every_ request"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "yes"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "it is"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "i'm doing exaclty that"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "just try to understand what i'm asking"}, {"timstamp": "2017-06-13 23:50", "user": "Snugglebash", "body": "j4f-shredder: so what is your problem? you know if the user is logged in"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "yes"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "I want to avoid going to the backend for each request"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "I have a route"}, {"timstamp": "2017-06-13 23:50", "user": "j4f-shredder", "body": "that checks if the user is logged in"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "it returns a 200 if it's logged in"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "I want to avoid going to the backend for each request"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "no"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I don't want to make that request each time"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I mean, when the app loads"}, {"timstamp": "2017-06-13 23:51", "user": "jccn", "body": "any backend request needs to be authed individually"}, {"timstamp": "2017-06-13 23:51", "user": "j4f-shredder", "body": "I need to show the navbar with the login or logout button"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "depending on the user auth state"}, {"timstamp": "2017-06-13 23:52", "user": "jccn", "body": "a route that only responds 200 if the user is logged in is useless"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "I see"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "so, what is the best approach in this case"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "a variable on the auth service that holds the user info"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "auth info"}, {"timstamp": "2017-06-13 23:52", "user": "j4f-shredder", "body": "true or false"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "and then if a request is made and rejected then I update that status??"}, {"timstamp": "2017-06-13 23:53", "user": "Snugglebash", "body": "j4f-shredder: sure, check whether the user is authenticated, you have this info in your app"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "I mean"}, {"timstamp": "2017-06-13 23:53", "user": "j4f-shredder", "body": "lets imagine I have a variable called isAuthenticated which is a Subscriber"}, {"timstamp": "2017-06-13 23:53", "user": "jccn", "body": "my frontend guys ask for a number of routes, and one of them gives the user session info, username etc"}, {"timstamp": "2017-06-13 23:54", "user": "jccn", "body": "all of them are authed"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "then I do a request to get a list of things, if I get the forbidden code then I update that variable??"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "on the catch method?"}, {"timstamp": "2017-06-13 23:54", "user": "Snugglebash", "body": "jccn: he just wants to know how he should cache this info on the front end i think"}, {"timstamp": "2017-06-13 23:54", "user": "j4f-shredder", "body": "of the get request?"}, {"timstamp": "2017-06-13 23:54", "user": "jccn", "body": "Snugglebash ok, I'll leave it to you then"}, {"timstamp": "2017-06-13 23:54", "user": "Snugglebash", "body": "jccn: im not really sure though"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "maybe I'm not explaining myself correctly"}, {"timstamp": "2017-06-13 23:55", "user": "Snugglebash", "body": "j4f-shredder, you can store the auth info in a service"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "I am doing that"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "read what I put there"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "the thing is that the first page of my app is the landing page"}, {"timstamp": "2017-06-13 23:55", "user": "j4f-shredder", "body": "and it has a navbar"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "how do I do to know when the app starts if the user is logged in or not??"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "which is the correct way"}, {"timstamp": "2017-06-13 23:56", "user": "Snugglebash", "body": "j4f-shredder: just inject the service into the navbar"}, {"timstamp": "2017-06-13 23:56", "user": "j4f-shredder", "body": "I was doing a request to a route and if the server responded code 200 then I put logged in"}, {"timstamp": "2017-06-13 23:56", "user": "Snugglebash", "body": "then ask the service"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "I know how to do that"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "and I'm doing it"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "but which is the source of information if the user is logged in or not??"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "are you getting my question?"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "I need to make a request to a route"}, {"timstamp": "2017-06-13 23:57", "user": "j4f-shredder", "body": "to see the state of the user"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "how do I get the navbar to display login or logout"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "??"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "depending on the user status"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "should that string come from the server?"}, {"timstamp": "2017-06-13 23:58", "user": "j4f-shredder", "body": "or I should receive the 200 code and then putting it myself there?"}, {"timstamp": "2017-06-13 23:58", "user": "Snugglebash", "body": "j4f-shredder: your service knows if your user is logged in... if it has made a request to login and it was accepted then it receives the response..."}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "you can use ngif"}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "if you really want add a boolean to your service"}, {"timstamp": "2017-06-13 23:59", "user": "Snugglebash", "body": "that will make it easier for you"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "I already did that"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "my problem is"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "what happens"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "if the session dies"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "on the backend"}, {"timstamp": "2017-06-13 23:59", "user": "j4f-shredder", "body": "and I still have that set to true"}], "label": "other"}
{"id": "0ec1e562", "body": "", "comments": [{"timstamp": "22:32", "user": "Izoughe", "body": "I can't get the angular cli to install on CentOS 7 with npm. My node.js and npm are up to date, and the system is a netinstall with very little on it. Does anyone know what could be going on?"}, {"timstamp": "23:03", "user": "Izoughe", "body": "I think I probably need to install an older version of angular CLI. Is there any easy way to see which versions of angular CLI require which versions of node?"}], "label": "other"}
{"id": "73af7cd2", "body": "", "comments": [{"timstamp": "08:53", "user": "Paradisee", "body": "o/"}, {"timstamp": "09:01", "user": "icebox", "body": "Paradisee: hey"}], "label": "other"}
{"id": "93d594ab", "body": "", "comments": [{"timstamp": "2016-08-07 13:48", "user": "zomg", "body": "so what makes you think that spamming the channel is going to make people more inclined to help you?"}, {"timstamp": "2016-08-07 13:51", "user": "ng-dirty", "body": "zomg you always pop-up like an silly amazon advertisement"}, {"timstamp": "2016-08-07 13:53", "user": "ng-dirty", "body": "what is the use of ng-dirty?"}, {"timstamp": "2016-08-07 13:54", "user": "MarkTheMark", "body": "its the dirt you apply on your dirty little face ng-dirty"}, {"timstamp": "2016-08-07 13:54", "user": "drej", "body": "The ng-dirty class tells you that the form has been modified by the user"}, {"timstamp": "2016-08-07 13:55", "user": "ng-dirty", "body": "drej ya i read the same on docs but even after modifying the form the suggested color of the form is not changing"}, {"timstamp": "2016-08-07 14:00", "user": "ng-dirty", "body": "MarktheMark are u P.A of zomg"}, {"timstamp": "2016-08-07 14:01", "user": "Velocity", "body": "ng-dirty they both are stupid ,never mind"}, {"timstamp": "2016-08-07 14:02", "user": "MarkTheMark", "body": "you are even dummer"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "Cool, another person to add to my list of people that I won't bother helping :p"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "aka /ignore"}, {"timstamp": "2016-08-07 14:04", "user": "zomg", "body": "lol"}, {"timstamp": "2016-08-07 14:05", "user": "zomg", "body": "And it's the first time I've seen you here, so... :P"}], "label": "other"}
{"id": "93d59509", "body": "", "comments": [{"timstamp": "2017-03-21 08:32", "user": "McJuicy", "body": "Anyone have any ideas on how to get rid of csrf tokens on cross origin requests to other websites?"}, {"timstamp": "2017-03-21 08:32", "user": "McJuicy", "body": "angular2"}, {"timstamp": "2017-03-21 08:35", "user": "heartburn", "body": "why?"}, {"timstamp": "2017-03-21 08:35", "user": "tobias", "body": "uh"}, {"timstamp": "2017-03-21 08:35", "user": "tobias", "body": "what are you trying :P"}, {"timstamp": "2017-03-21 08:35", "user": "McJuicy", "body": "Trying to access the twitch api from the client side"}, {"timstamp": "2017-03-21 08:36", "user": "McJuicy", "body": "Preflight is telling me that twitch api doesn't have XSRF-TOKEN header and I really shouldn't be sending it to external sites I believe"}, {"timstamp": "2017-03-21 08:37", "user": "McJuicy", "body": "Does that make sense?"}, {"timstamp": "2017-03-21 08:37", "user": "heartburn", "body": "you sure you're talking to the right api?"}, {"timstamp": "2017-03-21 08:38", "user": "McJuicy", "body": "Yea - there's an options request that goes out first because I'm asking for json back from the twitch api which is a cross site request"}, {"timstamp": "2017-03-21 08:38", "user": "McJuicy", "body": "In that, angular 2 is for some reason adding the XSRF header?"}, {"timstamp": "2017-03-21 08:38", "user": "McJuicy", "body": "or at least asking if it can use it"}, {"timstamp": "2017-03-21 08:43", "user": "heartburn", "body": "that's probably the browser doing that, not angular. preflights are mandatory for cross-origin requests that aren't GET."}, {"timstamp": "2017-03-21 08:44", "user": "heartburn", "body": "but i might be wrong on that one."}, {"timstamp": "2017-03-21 08:46", "user": "heartburn", "body": "since all the ng2-savvy people here didn't wake up yet..."}, {"timstamp": "2017-03-21 08:46", "user": "heartburn", "body": "memorobot: ng2-chat"}, {"timstamp": "2017-03-21 08:46", "user": "memorobot", "body": ""}, {"timstamp": "2017-03-21 08:46", "user": "heartburn", "body": "try there -^"}, {"timstamp": "2017-03-21 08:47", "user": "icebox", "body": "McJuicy: the question is... \"how to bypass cors?\""}, {"timstamp": "2017-03-21 08:47", "user": "McJuicy", "body": "haha"}, {"timstamp": "2017-03-21 08:48", "user": "McJuicy", "body": "Icebox: is there a way to have the preflight not request an XSRF header for a cross origin requests options request?"}, {"timstamp": "2017-03-21 08:48", "user": "McJuicy", "body": "That is the only one giving me grief, not any other part of the request"}, {"timstamp": "2017-03-21 08:48", "user": "icebox", "body": "McJuicy: I don't think so, but it is not angular (or whatever) matter"}, {"timstamp": "2017-03-21 08:50", "user": "heartburn", "body": "fwiw, if the preflight fails, that means that the server doesn't allow such requests to a certain endpoint."}, {"timstamp": "2017-03-21 08:51", "user": "McJuicy", "body": "Icebox: I'm not sure that all browser preflight requests ask for use of that header. The only other solution is to make those requests server side which is not the most ideal :("}, {"timstamp": "2017-03-21 08:51", "user": "icebox", "body": "McJuicy: cors requests on server side is best practice :)"}, {"timstamp": "2017-03-21 08:52", "user": "McJuicy", "body": "For sure :) it offloads requests to an HSTS provider from the server side but I'll move toward that"}, {"timstamp": "2017-03-21 08:52", "user": "McJuicy", "body": "Feels bad man"}, {"timstamp": "2017-03-21 08:52", "user": "McJuicy", "body": "Miss angular 1 for somethings"}, {"timstamp": "2017-03-21 08:53", "user": "heartburn", "body": "btw, #twitch-api seems to be a thing."}, {"timstamp": "2017-03-21 08:53", "user": "icebox", "body": "McJuicy: you may debug the requests with curl (-vv), just to see what happens behind the scenes"}, {"timstamp": "2017-03-21 08:53", "user": "heartburn", "body": "might as well ask there."}, {"timstamp": "2017-03-21 08:54", "user": "McJuicy", "body": "icebox: I'm getting a response when not asking for that header. Heartburn: thanks."}, {"timstamp": "2017-03-21 08:54", "user": "McJuicy", "body": "I appreciate it - I'll do it serverside."}, {"timstamp": "2017-03-21 08:54", "user": "McJuicy", "body": "No request transformations angular 2"}, {"timstamp": "2017-03-21 08:55", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-21 08:56", "user": "icebox", "body": "McJuicy: in 4.1 -"}, {"timstamp": "2017-03-21 08:58", "user": "McJuicy", "body": "W00t! 4.1"}, {"timstamp": "2017-03-21 08:59", "user": "heartburn", "body": "Score: 93 - Game over (Refresh page to play again)"}, {"timstamp": "2017-03-21 09:00", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-21 09:01", "user": "icebox", "body": "McJuicy: 4.0 is upcoming... 4.1 is matter of two or three months"}, {"timstamp": "2017-03-21 09:02", "user": "icebox", "body": "McJuicy: considering 5.x is planned for October :)"}, {"timstamp": "2017-03-21 09:02", "user": "icebox", "body": "McJuicy:"}, {"timstamp": "2017-03-21 09:06", "user": "heartburn", "body": "memorobot: @add ng-versioning"}, {"timstamp": "2017-03-21 09:06", "user": "memorobot", "body": "Added `ng-versioning`"}, {"timstamp": "2017-03-21 09:12", "user": "icebox", "body": "heartburn: a few handy links... just in case..."}, {"timstamp": "2017-03-21 09:12", "user": "heartburn", "body": "icebox: you can add them too, just so you know. :o)"}, {"timstamp": "2017-03-21 09:13", "user": "heartburn", "body": "memorobot: !help"}, {"timstamp": "2017-03-21 09:13", "user": "memorobot", "body": "Everything you ever wanted to know but were too afraid to ask:"}, {"timstamp": "2017-03-21 09:13", "user": "heartburn", "body": "memorobot: @obey icebox"}, {"timstamp": "2017-03-21 09:13", "user": "memorobot", "body": "icebox is already my supervisor"}, {"timstamp": "2017-03-21 09:13", "user": "heartburn", "body": "memorobot: !list"}, {"timstamp": "2017-03-21 09:13", "user": "memorobot", "body": "controllerAs :: enable-cors :: help :: ionic :: jquery :: jsperf :: list :: ng-styleguide :: ng-ui :: ng-versioning :: ng2-chat :: rules :: semantic-ui :: zomg"}, {"timstamp": "2017-03-21 09:19", "user": "icebox", "body": "heartburn: if someone is interested I would like to develop a conversational bot focused on angular(js)... like"}, {"timstamp": "2017-03-21 09:20", "user": "icebox", "body": "heartburn: based on bayesan database build with irc text"}, {"timstamp": "2017-03-21 09:20", "user": "icebox", "body": "*built"}, {"timstamp": "2017-03-21 09:21", "user": "icebox", "body": "heartburn: like this"}, {"timstamp": "2017-03-21 09:21", "user": "heartburn", "body": "very nice."}, {"timstamp": "2017-03-21 09:59", "user": "heartburn", "body": "you two should get a room already."}, {"timstamp": "2017-03-21 10:00", "user": "Elarcis", "body": "heartburn: this is our room, how nice of you to come!"}, {"timstamp": "2017-03-21 10:06", "user": "Pyrrhus666", "body": "and a good morning to you too heartburn ;)"}, {"timstamp": "2017-03-21 10:10", "user": "heartburn", "body": "Score: 67 - Game over (Refresh page to play again)"}, {"timstamp": "2017-03-21 10:10", "user": "heartburn", "body": ""}, {"timstamp": "2017-03-21 10:11", "user": "heartburn", "body": "(i know i should stop doing that but i dont wanna)"}, {"timstamp": "2017-03-21 10:13", "user": "Elarcis", "body": "heartburn: it's not the most reactive to user input I believe"}, {"timstamp": "2017-03-21 10:13", "user": "heartburn", "body": "~ e x c u s e s ~"}, {"timstamp": "2017-03-21 10:15", "user": "Elarcis", "body": "heartburn: you're an excuse :P"}, {"timstamp": "2017-03-21 10:17", "user": "heartburn", "body": "you reckon they are broken?"}, {"timstamp": "2017-03-21 10:18", "user": "jlebrech", "body": "haha"}], "label": "other"}
{"id": "93d594b6", "body": "", "comments": [{"timstamp": "2017-02-18 18:13", "user": "PickAndMix", "body": "Hi people, I'm really confused on how I can get started with Angular."}, {"timstamp": "2017-02-18 18:13", "user": "PickAndMix", "body": "Should I just use a StarterFile and play around?"}, {"timstamp": "2017-02-18 18:13", "user": "PickAndMix", "body": "Or should I try to create my own starterfile?"}, {"timstamp": "2017-02-18 18:13", "user": "graingert", "body": "PickAndMix: use cli.angular.io"}, {"timstamp": "2017-02-18 18:13", "user": "PickAndMix", "body": "graingert: Is that for Angular 1 or 2?"}, {"timstamp": "2017-02-18 18:13", "user": "graingert", "body": "PickAndMix: angular"}, {"timstamp": "2017-02-18 18:14", "user": "PickAndMix", "body": "Uhhh. What's the difference?"}, {"timstamp": "2017-02-18 18:14", "user": "graingert", "body": "PickAndMix: angularjs is old and broke"}, {"timstamp": "2017-02-18 18:14", "user": "PickAndMix", "body": "I'm really new to this, and I heard there's major difference between 1 and 2"}, {"timstamp": "2017-02-18 18:14", "user": "graingert", "body": "angular is new and broken"}, {"timstamp": "2017-02-18 18:14", "user": "PickAndMix", "body": "So I really don't want to invest time in Angular 1."}, {"timstamp": "2017-02-18 18:14", "user": "graingert", "body": "PickAndMix: it's angularjs and angular now"}, {"timstamp": "2017-02-18 18:15", "user": "teresko", "body": "graingert, and angular 2 has no documentation ion JS"}, {"timstamp": "2017-02-18 18:15", "user": "graingert", "body": "teresko: ion?"}, {"timstamp": "2017-02-18 18:15", "user": "teresko", "body": "in"}, {"timstamp": "2017-02-18 18:15", "user": "PickAndMix", "body": "So which one is the new one?"}, {"timstamp": "2017-02-18 18:15", "user": "graingert", "body": "PickAndMix: angular is new"}, {"timstamp": "2017-02-18 18:15", "user": "graingert", "body": "PickAndMix: angularjs is old"}, {"timstamp": "2017-02-18 18:15", "user": "PickAndMix", "body": "Ohh."}, {"timstamp": "2017-02-18 18:15", "user": "teresko", "body": "google is using Angular2 as their 5th attempt to replace EcmaScript"}, {"timstamp": "2017-02-18 18:15", "user": "PickAndMix", "body": "graingert: How would you suggest I pick up Angular"}, {"timstamp": "2017-02-18 18:15", "user": "PickAndMix", "body": "Or how did you pick it up?"}, {"timstamp": "2017-02-18 18:16", "user": "graingert", "body": "PickAndMix: cli.angular.io"}, {"timstamp": "2017-02-18 18:16", "user": "PickAndMix", "body": "I'm on there already, installing it right now."}, {"timstamp": "2017-02-18 18:16", "user": "graingert", "body": "PickAndMix: I went to angular connect"}, {"timstamp": "2017-02-18 18:16", "user": "PickAndMix", "body": ":("}, {"timstamp": "2017-02-18 18:16", "user": "graingert", "body": "PickAndMix: I'm an angular contributor"}, {"timstamp": "2017-02-18 18:16", "user": "PickAndMix", "body": "Anyway I can start getting better with Angular?"}, {"timstamp": "2017-02-18 18:16", "user": "PickAndMix", "body": "I would love to hop on the Angular \"stack\""}, {"timstamp": "2017-02-18 18:17", "user": "PickAndMix", "body": "Googling it is pretty confusing at times."}, {"timstamp": "2017-02-18 18:17", "user": "graingert", "body": "PickAndMix: sure but I'd try out Elm and React too"}, {"timstamp": "2017-02-18 18:17", "user": "PickAndMix", "body": "I tried React! :)"}, {"timstamp": "2017-02-18 18:17", "user": "PickAndMix", "body": "What's Elm?"}, {"timstamp": "2017-02-18 18:17", "user": "PickAndMix", "body": "I figured I would choose Angular instead"}, {"timstamp": "2017-02-18 18:18", "user": "PickAndMix", "body": "Due to it being more 'complete' as a MVC, instead of React being just a View."}, {"timstamp": "2017-02-18 18:18", "user": "graingert", "body": "Never found that an issue with react"}, {"timstamp": "2017-02-18 18:19", "user": "graingert", "body": "PickAndMix: Elm is a pure functional tool for creating components"}, {"timstamp": "2017-02-18 18:19", "user": "PickAndMix", "body": "I see."}, {"timstamp": "2017-02-18 18:19", "user": "PickAndMix", "body": "My current focus right now in Angular though."}, {"timstamp": "2017-02-18 18:32", "user": "WhatTheDilly", "body": "lol teresko?"}, {"timstamp": "2017-02-18 18:40", "user": "teresko", "body": "WhatTheDilly, did I say something wrong?"}, {"timstamp": "2017-02-18 18:43", "user": "WhatTheDilly", "body": "i don't nkow about wrong. just found it to be a bit odd /; funny :p the \"t5th attempt to replace ecma script\""}, {"timstamp": "2017-02-18 18:43", "user": "WhatTheDilly", "body": "i see angulr as trying to replace 3rd party server side languages like php / asp.net mvc / jsp / etc and try to convince people to9 use nodejs"}], "label": "other"}
{"id": "73af7d32", "body": "", "comments": [{"timstamp": "13:28", "user": "trampi", "body": "I'll be off for today. Wish everyone a short friday and a nice weekend!"}, {"timstamp": "13:30", "user": "SargoDarya", "body": "trampi: Have fun, enjoy bodensee"}, {"timstamp": "13:35", "user": "jlebrech", "body": "have fun trampi"}], "label": "other"}
{"id": "0ec1e236", "body": "", "comments": [{"timstamp": "15:25", "user": "stennowork", "body": "SargoDarya, not in ##jsgolf anymore :("}, {"timstamp": "15:26", "user": "stennowork", "body": "sadface"}, {"timstamp": "15:26", "user": "stennowork", "body": "you were just there for the gambling all along!"}, {"timstamp": "15:26", "user": "SargoDarya", "body": "stennowork: I'm already distracted from work enough xD"}, {"timstamp": "15:26", "user": "stennowork", "body": "aw"}, {"timstamp": "15:26", "user": "stennowork", "body": "but fair"}, {"timstamp": "15:28", "user": "stennowork", "body": "##jsgolf, a channel here on freenode for javascript golf challenges"}, {"timstamp": "15:29", "user": "stennowork", "body": "and a golf challenge is 'write a program that does x, in the shortest possible amount of characters/bytes'"}], "label": "other"}
{"id": "93d594c7", "body": "", "comments": [{"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "angular 6 already? things moves too fast"}, {"timstamp": "2018-04-10 11:53", "user": "Pyrrhus666", "body": "jlebrech, and rxjs 6. prepare for breakage."}, {"timstamp": "2018-04-10 11:53", "user": "jlebrech", "body": "could have at least made a transition between 1.x and 2 ffs."}, {"timstamp": "2018-04-10 11:53", "user": "icebox", "body": "jlebrech: by design, every 6 months"}, {"timstamp": "2018-04-10 11:55", "user": "icebox", "body": "jlebrech:"}, {"timstamp": "2018-04-10 11:55", "user": "jlebrech", "body": "gonna split my app into 5 and rewrite individual bits in @ctrl.latest_angular"}, {"timstamp": "2018-04-10 11:56", "user": "jlebrech", "body": "they could have gave us 2, but also gave us a 1.9 that deprecated things that no longer exist. still would have to rewrite things"}, {"timstamp": "2018-04-10 11:57", "user": "icebox", "body": "jlebrech: totally agreed"}, {"timstamp": "2018-04-10 11:58", "user": "icebox", "body": "jlebrech: this is what we have"}, {"timstamp": "2018-04-10 11:58", "user": "jlebrech", "body": "i think splitting my app into multiple and rewriting the worse bits in latest ver is the best bet."}, {"timstamp": "2018-04-10 11:59", "user": "icebox", "body": "jlebrech: I updated my PoC to 5.2.9 and found an interesting stackblitz for the integration between AngularJS and Angular... see"}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: but maybe this is good for progressively rewriting."}, {"timstamp": "2018-04-10 12:01", "user": "jlebrech", "body": "icebox: i've made attempts, but I think I can just use the same session data for unconnected apps and put them on separate pages :)"}, {"timstamp": "2018-04-10 12:02", "user": "jlebrech", "body": "icebox: can use my 1 file login.js app as proof of concept"}, {"timstamp": "2018-04-10 13:26", "user": "icebox", "body": "back"}], "label": "other"}
{"id": "93d5954b", "body": "", "comments": [{"timstamp": "2018-07-20 04:15", "user": "Techdeck", "body": "hey everyone! I'd like to build a standalone angular library. If I run ng new ... it creates a new project, to run 'ng generate library ...' I need an entire angular project. Is there a way to just create the library without the outside project? at some point I'd like to just post this library on the global npm repository (without the wrapping project)"}, {"timstamp": "2018-07-20 04:15", "user": "Techdeck", "body": "this is using angular 6 btw"}, {"timstamp": "2018-07-20 05:07", "user": "Techdeck", "body": "never mind, figured it out"}], "label": "other"}
{"id": "93d59553", "body": "", "comments": [{"timstamp": "2017-08-31 18:07", "user": "Elarcis", "body": "I want to murder people. Can one of you step forward please?"}, {"timstamp": "2017-08-31 18:18", "user": "pheurton", "body": "but I don't want to get up"}], "label": "other"}
{"id": "93d5947a", "body": "", "comments": [{"timstamp": "2016-08-29 13:35", "user": "cyberbrai", "body": ""}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "unable to get json data"}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "json data enclosed with double quotes"}, {"timstamp": "2016-08-29 13:36", "user": "cyberbrai", "body": "any help guyz"}, {"timstamp": "2016-08-29 13:38", "user": "z3r0_", "body": "cyberbrai: var jsonObject = angular.formJson( swx);"}, {"timstamp": "2016-08-29 13:38", "user": "cyberbrai", "body": "ok let me try"}, {"timstamp": "2016-08-29 13:41", "user": "cyberbrai", "body": "<z3r0_> undefined is not a function (formJson)"}, {"timstamp": "2016-08-29 13:41", "user": "cyberbrai", "body": "any help"}, {"timstamp": "2016-08-29 13:42", "user": "senayar", "body": "undefined is not a function"}, {"timstamp": "2016-08-29 13:42", "user": "cyberbrai", "body": "yes"}, {"timstamp": "2016-08-29 13:43", "user": "senayar", "body": "yes because it's undefined"}, {"timstamp": "2016-08-29 13:43", "user": "cyberbrai", "body": "senayar json enclosed with double quotes"}, {"timstamp": "2016-08-29 13:43", "user": "z3r0_", "body": "cyberbrai: sorry, it's angular.fromJson();"}, {"timstamp": "2016-08-29 13:44", "user": "cyberbrai", "body": "after angular.fromJson(); Unexpected token '"}, {"timstamp": "2016-08-29 13:45", "user": "cyberbrai", "body": "tried with replace(/\\\"/g, \"\") but it's still not working"}, {"timstamp": "2016-08-29 13:45", "user": "senayar", "body": "it's because it's not json"}, {"timstamp": "2016-08-29 13:45", "user": "senayar", "body": "it's a string"}, {"timstamp": "2016-08-29 13:46", "user": "senayar", "body": "so ?"}, {"timstamp": "2016-08-29 13:46", "user": "cyberbrai", "body": "Api give string json and i want to make it json so i can acces json data"}, {"timstamp": "2016-08-29 13:48", "user": "cyberbrai", "body": ""}, {"timstamp": "2016-08-29 13:48", "user": "cyberbrai", "body": "nothing work"}, {"timstamp": "2016-08-29 13:50", "user": "z3r0_", "body": "cyberbrai: You designed the API ?"}, {"timstamp": "2016-08-29 13:50", "user": "cyberbrai", "body": "nope"}, {"timstamp": "2016-08-29 13:52", "user": "cyberbrai", "body": "any help z3r0_"}, {"timstamp": "2016-08-29 13:53", "user": "z3r0_", "body": "cyberbrai: And you're sure it return a JSON String ?"}, {"timstamp": "2016-08-29 13:53", "user": "cyberbrai", "body": "yes i am sure"}], "label": "other"}
{"id": "93d594f0", "body": "", "comments": [{"timstamp": "2017-01-25 15:50", "user": "Rudde", "body": "Can I get an <a> to trigger a function? In angular"}, {"timstamp": "2017-01-25 15:53", "user": "icebox", "body": "Rudde: getMyElement(\"a\"); foo(); // :)"}, {"timstamp": "2017-01-25 15:53", "user": "Rudde", "body": "What if I have multipler links that I want to do different stuff?"}, {"timstamp": "2017-01-25 15:54", "user": "icebox", "body": "Rudde: routing"}, {"timstamp": "2017-01-25 15:55", "user": "icebox", "body": "Rudde:"}, {"timstamp": "2017-01-25 15:55", "user": "Rudde", "body": "I found the routerLink and tested it, but it doesn't actually reload the page it only change the URL"}, {"timstamp": "2017-01-25 15:56", "user": "Rudde", "body": "Like if I'm navigating inside the same controller"}, {"timstamp": "2017-01-25 15:56", "user": "icebox", "body": "Rudde: so angular, not angularjs"}, {"timstamp": "2017-01-25 15:56", "user": "Rudde", "body": "yes angular2"}, {"timstamp": "2017-01-25 15:56", "user": "icebox", "body": "Rudde: I am afraid without any detail, it is hard to guess what it happens"}, {"timstamp": "2017-01-25 15:57", "user": "Rudde", "body": "I said in angular, you said that was 2 earlier today"}, {"timstamp": "2017-01-25 15:57", "user": "FatNoLife", "body": "ngOnInit"}, {"timstamp": "2017-01-25 15:58", "user": "Rudde", "body": "FatNoLife: That does not seem to be run when navigating within the same component"}, {"timstamp": "2017-01-25 15:59", "user": "FatNoLife", "body": "are you sure its not because you're loading the data within ngOnInit() and you aren't calling your function in a .then() with a promise?"}, {"timstamp": "2017-01-25 16:00", "user": "FatNoLife", "body": "like... you're running your function but the data isnt loaded yet"}, {"timstamp": "2017-01-25 16:00", "user": "Rudde", "body": "So I'm adding a query parameter"}, {"timstamp": "2017-01-25 16:00", "user": "Rudde", "body": "doing something if it's set and something else if not"}, {"timstamp": "2017-01-25 16:00", "user": "Rudde", "body": "That if is placed inside ngOnInit"}, {"timstamp": "2017-01-25 16:00", "user": "Rudde", "body": "and it's not triggered when I navigate to the query with routerLink"}, {"timstamp": "2017-01-25 16:02", "user": "Rudde", "body": "I never manage to set up angular there, is there any angular2 template I can work out from?"}, {"timstamp": "2017-01-25 16:04", "user": "angrybacon", "body": "Rudde codepen has a template feature, not sure about the others. I have an angular template to bootstrap things I want to share"}, {"timstamp": "2017-01-25 16:06", "user": "uru", "body": "Rudde: plunker has an ng2 template"}, {"timstamp": "2017-01-25 16:06", "user": "icebox", "body": "Rudde: link for angular plunker template in the topic"}, {"timstamp": "2017-01-25 16:06", "user": "uru", "body": "Even better :)"}, {"timstamp": "2017-01-25 16:12", "user": "Rudde", "body": "icebox: How do I get angular/router an such to work in it?"}, {"timstamp": "2017-01-25 16:14", "user": "uru", "body": "Rudde: Just use it as normal"}, {"timstamp": "2017-01-25 16:15", "user": "uru", "body": "Rudde: You can click the blue \"expand\" button in the top right of the preview window to open it in a new window and be able to see the routes"}, {"timstamp": "2017-01-25 16:21", "user": "Rudde", "body": "do plnkr even support routing?"}, {"timstamp": "2017-01-25 16:22", "user": "uru", "body": "Rudde: Yes"}, {"timstamp": "2017-01-25 16:30", "user": "Rudde", "body": "uru: What do I have to set APP_BASE_HREF to?"}, {"timstamp": "2017-01-25 16:38", "user": "uru", "body": "Rudde: That's a good question, I'm not actually sure..."}, {"timstamp": "2017-01-25 16:39", "user": "uru", "body": "Rudde:"}, {"timstamp": "2017-01-25 16:40", "user": "uru", "body": "uh, not that one, wrong link"}, {"timstamp": "2017-01-25 16:40", "user": "uru", "body": "Rudde:"}, {"timstamp": "2017-01-25 17:22", "user": "Rudde", "body": "How do I share the plunker I'm working on?"}], "label": "other"}
{"id": "8addb263", "body": "", "comments": [{"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "does anyone perchance knows how can i make empty datepicker with angular material"}, {"timstamp": "2016-05-27 11:17", "user": "arlekin", "body": "it stubbornly tries to set it to \"today\" by default"}, {"timstamp": "2016-05-27 11:19", "user": "icebox", "body": "arlekin: what else?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: err... please ?"}, {"timstamp": "2016-05-27 11:20", "user": "icebox", "body": "arlekin: do you mean to set another default date?"}, {"timstamp": "2016-05-27 11:20", "user": "arlekin", "body": "icebox: no, i'd like to have it empty by default, maybe some placeholder"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "angular material is awesome and great, but also frustrating and sucks at the same time (im not even mad)"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: well... I see... did you try emoty model and md-placeholder?"}, {"timstamp": "2016-05-27 11:22", "user": "icebox", "body": "arlekin: *empty"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "icebox: i did empty model"}, {"timstamp": "2016-05-27 11:22", "user": "arlekin", "body": "checking md-placeholder now"}, {"timstamp": "2016-05-27 11:23", "user": "arlekin", "body": "icebox: md-placeholder doesn't have any discernible effect"}, {"timstamp": "2016-05-27 11:24", "user": "icebox", "body": "arlekin:"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: been there, seen that"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "it links to another issue"}, {"timstamp": "2016-05-27 11:25", "user": "icebox", "body": "arlekin: I am afraid you need to give a look at the sources to understand better the behind the scenes about default date when model is empty"}, {"timstamp": "2016-05-27 11:25", "user": "arlekin", "body": "icebox: it seems so, i hate to modify source though"}, {"timstamp": "2016-05-27 11:26", "user": "arlekin", "body": "icebox: i need to remember then that i have this custom change"}, {"timstamp": "2016-05-27 11:26", "user": "icebox", "body": "arlekin: I didn't say that... I suggested to give a look to understand if it is feasible a PR or there is another way :)"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: there is always another way and it has to be feasible pr - since i don't imagine that having empty input field on datepicker is such an exotic usecase"}, {"timstamp": "2016-05-27 11:27", "user": "arlekin", "body": "icebox: but i get your point"}, {"timstamp": "2016-05-27 11:28", "user": "icebox", "body": "arlekin: no idea... if I would have your requirement and the lib doesn't behaviour how I wish.. firstly I would give a look at the sources :)"}, {"timstamp": "2016-05-27 11:29", "user": "arlekin", "body": "icebox: agreede"}], "label": "feature"}
{"id": "73af7ce0", "body": "", "comments": [{"timstamp": "09:13", "user": "trampi", "body": "morning everyone!"}], "label": "other"}
{"id": "8addb25a", "body": "", "comments": [{"timstamp": "2017-06-29 00:08", "user": "ferretzzz", "body": "Is there a way to tell the angular cli to put all my services into a services folder?"}, {"timstamp": "2017-06-29 00:20", "user": "helloNL", "body": "ferretzzz: the cli is expecting you to do it from root everytime"}, {"timstamp": "2017-06-29 00:21", "user": "helloNL", "body": "ng generate c s services/servicename is what you have to do"}, {"timstamp": "2017-06-29 00:22", "user": "helloNL", "body": "But this is sort of fixable by aliases in your terminal"}, {"timstamp": "2017-06-29 00:26", "user": "ferretzzz", "body": "helloNL: Yeah that's too much work for aliases. spelling out the directory works fine I suppose. thanks!"}, {"timstamp": "2017-06-29 00:27", "user": "ferretzzz", "body": "I feel like it would be a useful cli feature to just specify that I want all services in a services folder"}, {"timstamp": "2017-06-29 00:27", "user": "helloNL", "body": "ferretzzz: I have that issue with more systems :P"}], "label": "feature"}
{"id": "93d5948a", "body": "", "comments": [{"timstamp": "2018-01-30 13:11", "user": "Pyrrhus666", "body": "deadlines schmeadlines"}, {"timstamp": "2018-01-30 13:13", "user": "Pyrrhus666", "body": "it works for me with firefox on ubuntu, d&d from gnome filebrowser. I mean, if it works on linux, it should work everywhere ;)"}, {"timstamp": "2018-01-30 13:15", "user": "SargoDarya", "body": "Pyrrhus666: Tell that to IE"}, {"timstamp": "2018-01-30 13:15", "user": "Pyrrhus666", "body": "SargoDarya, whats an IE ?"}, {"timstamp": "2018-01-30 13:16", "user": "SargoDarya", "body": "Pyrrhus666: Internet Exploder"}], "label": "other"}
{"id": "93d5947e", "body": "", "comments": [{"timstamp": "2016-05-26 15:56", "user": "byteme", "body": "I am using signalR with angular js 1.5x and I want to add ng-change to detect data changes. The ng-change=\"model.dataUpdated()\" ng-model=\"model.data\" is not firing"}, {"timstamp": "2016-05-26 16:14", "user": "Fenikkusu", "body": "byteme, ngModel will update immediately with the value, regardless of ngChange. Are you sure you need ngChange?"}], "label": "other"}
{"id": "93d5954f", "body": "", "comments": [{"timstamp": "2017-06-12 08:58", "user": "covfefe123", "body": "morning guys"}, {"timstamp": "2017-06-12 08:58", "user": "covfefe123", "body": "and girls"}, {"timstamp": "2017-06-12 09:02", "user": "covfefe123", "body": "Hey, has anyone used angular js for financiall reporting?"}, {"timstamp": "2017-06-12 09:02", "user": "covfefe123", "body": "financial reporting tools"}, {"timstamp": "2017-06-12 09:02", "user": "icebox", "body": "covfefe123: sure... and?"}, {"timstamp": "2017-06-12 09:03", "user": "covfefe123", "body": "did you build on top of oracle by any chance?"}, {"timstamp": "2017-06-12 09:04", "user": "covfefe123", "body": "hyperion"}, {"timstamp": "2017-06-12 09:04", "user": "icebox", "body": "covfefe123: this question is not related to angularjs or angular"}, {"timstamp": "2017-06-12 09:05", "user": "covfefe123", "body": "i agree"}, {"timstamp": "2017-06-12 09:05", "user": "covfefe123", "body": "nvm"}, {"timstamp": "2017-06-12 09:19", "user": "SargoDarya", "body": "icebox: As if all we talk in here would be angular :P"}, {"timstamp": "2017-06-12 09:19", "user": "icebox", "body": ":P"}, {"timstamp": "2017-06-12 09:19", "user": "icebox", "body": "sure, but not oracle or bi tools :)"}, {"timstamp": "2017-06-12 09:20", "user": "SargoDarya", "body": "Ok, I agree we can skip oracle."}, {"timstamp": "2017-06-12 09:21", "user": "SargoDarya", "body": "Regarding databases though,"}], "label": "other"}
{"id": "8addb25d", "body": "", "comments": [{"timstamp": "2017-03-08 16:20", "user": "m0ltar", "body": "So I want to write some tests with Karma. But my entry index.html file loading a lot of stuff from CDN. And for karma I need to manually specify all deps in files: [] array. How do I go about that? Is there a way to just load my entry html file or something? This seems like a weird thing to ask to copy paste all deps into karma config."}, {"timstamp": "2017-03-08 16:20", "user": "m0ltar", "body": "lulz"}, {"timstamp": "2017-03-08 16:21", "user": "Elarcis", "body": "m0ltar: good question, I have no idea if CDN are suppported"}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "But even if it is supported, still would have to copy paste all deps into the config file..."}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "Kinda strange to copy paste."}, {"timstamp": "2017-03-08 16:21", "user": "m0ltar", "body": "against DRY"}, {"timstamp": "2017-03-08 16:22", "user": "m0ltar", "body": "Why can't karma just load my entry HTML and use that for tests?"}, {"timstamp": "2017-03-08 16:22", "user": "Elarcis", "body": "m0ltar: there's probably a plugin for that"}, {"timstamp": "2017-03-08 16:25", "user": "m0ltar", "body": "Speaking of VPN, if you want a good resource for VPN discovery:"}, {"timstamp": "2017-03-08 16:25", "user": "m0ltar", "body": "Has a nice Excel file too you can download and filter what you value"}], "label": "feature"}
{"id": "73af7d3d", "body": "", "comments": [{"timstamp": "18:04", "user": "ray02", "body": "for those that still there :P"}, {"timstamp": "18:04", "user": "ray02", "body": "have a good weekend folks"}], "label": "other"}
{"id": "8addb264", "body": "", "comments": [{"timstamp": "2016-08-31 22:42", "user": "dman777_alter", "body": "does anyone use angular-material? I am trying to find the documentation for class=\"md-toolbar-tools\" but I am not seeing it"}, {"timstamp": "2016-08-31 22:46", "user": "da_wunder", "body": "dman777_alter: angular material webpages are good resource"}, {"timstamp": "2016-08-31 22:47", "user": "da_wunder", "body": "dman777_alter:"}, {"timstamp": "2016-08-31 22:47", "user": "dman777_alter", "body": "da_wunder: is md-toolbar-tools listed on"}, {"timstamp": "2016-08-31 22:48", "user": "dman777_alter", "body": "da_wunder: there is no documentation for md-toolbar-tools and no litsing for it ether."}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "and then"}, {"timstamp": "2016-08-31 22:48", "user": "da_wunder", "body": "examples"}, {"timstamp": "2016-08-31 22:49", "user": "dman777_alter", "body": "da_wunder: yes, that is how I found out about it. But there should be documentation on it. It makes wonder what else I might be missing if it's not included in code examples. Also, a explanation is always nice."}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "see that <md-toolbar> should have div element with that class"}, {"timstamp": "2016-08-31 22:49", "user": "swag", "body": "copy and past the example and modify it. Also use some plugin snnipet for your favorite editor :p that's what I did"}, {"timstamp": "2016-08-31 22:49", "user": "da_wunder", "body": "as the docs points you"}, {"timstamp": "2016-08-31 22:50", "user": "swag", "body": "yeah I think the same dman77_alter"}, {"timstamp": "2016-08-31 22:50", "user": "dman777_alter", "body": "da_wunder: Polymer's material design elements give full documentation and list all attributes, in addition to code examples. This would be the normal standard."}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "dman777_alter: then create an issue to the repo"}, {"timstamp": "2016-08-31 22:51", "user": "da_wunder", "body": "i haven't seen any problems with that"}, {"timstamp": "2016-08-31 22:52", "user": "da_wunder", "body": "all that code is in github, so you could easily make an issue, adds some +1 for existing PR or make new PR to cover that issue"}, {"timstamp": "2016-08-31 22:58", "user": "dman777_alter", "body": "da_wunder: I'm a developer that was told to use angular and angular metarial. I'm not coming into this wanting to develop for angular material, I have my hands full already."}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "dman777_alter: welcome to OS world"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": ":D"}, {"timstamp": "2016-08-31 22:59", "user": "da_wunder", "body": "if you want to improve something, do it"}, {"timstamp": "2016-08-31 23:00", "user": "da_wunder", "body": "if not, just stay calm"}, {"timstamp": "2016-08-31 23:00", "user": "dman777_alter", "body": "lol...cool"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: personally i don't see any problems in that"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "dman777_alter: what is your problem ?"}, {"timstamp": "2016-08-31 23:01", "user": "da_wunder", "body": "if it's time, then just make an issue and wait IF someone answers that"}, {"timstamp": "2016-08-31 23:02", "user": "da_wunder", "body": "if not, study that yourself and when you know how it works - ask yourself the question would i make a PR to provide all my information to others too OR should i just be quiet"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "and if you choose to be quiet, so can also many others who are contributing these projects"}, {"timstamp": "2016-08-31 23:03", "user": "da_wunder", "body": "which _you_ use without any charge"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "tl;dr be active in os community, if you see a problem create issue, try to study it, if you know what is \"wrong\" create a PR"}, {"timstamp": "2016-08-31 23:04", "user": "dman777_alter", "body": "da_wunder: what is your problem? I didn't mean that offensively.... when I said 'lol...cool' I meant that in good nature and I was in agreemnet. Back off"}, {"timstamp": "2016-08-31 23:04", "user": "da_wunder", "body": "i just said some facts"}, {"timstamp": "2016-08-31 23:05", "user": "da_wunder", "body": "and when i was pointing that _you_ was the problem ?"}, {"timstamp": "2016-08-31 23:09", "user": "davidw", "body": "dman777_alter, similar situation; stuck with Angular"}, {"timstamp": "2016-08-31 23:12", "user": "dman777_alter", "body": "davidw: I love Angular 1.*, just not happy with incomplete documentation for angular-material. Although, my first choice is polymer personally for material design."}, {"timstamp": "2016-08-31 23:15", "user": "davidw", "body": "how can I test whether an element gets a certain class added to it in tests?"}], "label": "feature"}
{"id": "93d594a8", "body": "", "comments": [{"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "hi"}, {"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "anybody in the room"}, {"timstamp": "2016-08-30 12:18", "user": "ngWalrus", "body": "nope"}, {"timstamp": "2016-08-30 12:18", "user": "aaa__", "body": "Hi people"}, {"timstamp": "2016-08-30 12:19", "user": "aaa__", "body": "any good documentation about design patterns used in angular js"}, {"timstamp": "2016-08-30 12:19", "user": "aaa__", "body": "?"}, {"timstamp": "2016-08-30 12:20", "user": "ngWalrus", "body": "Yes"}, {"timstamp": "2016-08-30 12:21", "user": "Elarciss", "body": "read the docs"}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": ""}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": "also this"}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": ""}, {"timstamp": "2016-08-30 12:21", "user": "ngWalrus", "body": "that's pretty good too"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "any docs to master javascript"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "and javascript design patterns"}, {"timstamp": "2016-08-30 12:23", "user": "aaa__", "body": "?"}, {"timstamp": "2016-08-30 12:23", "user": "uru", "body": "aaa__: Google and lots of practice"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "practice is on the way"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "but still want to dig more"}, {"timstamp": "2016-08-30 12:24", "user": "aaa__", "body": "can anybody help"}, {"timstamp": "2016-08-30 12:25", "user": "aaa__", "body": "please share if you have any resources. Which u feel best"}, {"timstamp": "2016-08-30 12:25", "user": "Elarciss", "body": "aaa you will become master when you will work in real time environment,unless you have weird,strange,etc kind of demands by clients ,you can't become an master in any technology!"}, {"timstamp": "2016-08-30 12:26", "user": "aaa__", "body": "yes Elarciss you are right"}, {"timstamp": "2016-08-30 12:27", "user": "aaa__", "body": "still thurst expect something from mates"}, {"timstamp": "2016-08-30 12:27", "user": "aaa__", "body": "please share if u have any"}, {"timstamp": "2016-08-30 12:27", "user": "uru", "body": "aaa__: google.com"}, {"timstamp": "2016-08-30 12:28", "user": "uru", "body": "There's loads of stuff out there about design patterns in general and JS/angular specific if you look for them"}, {"timstamp": "2016-08-30 12:28", "user": "Elarciss", "body": "aaa download projects from google and study them!"}, {"timstamp": "2016-08-30 12:29", "user": "Preuk", "body": "aaa__: try to remake some nice stuff you like: when so see somehing nice in a module or on a page, try to make it your way"}, {"timstamp": "2016-08-30 12:29", "user": "Elarciss", "body": "aaa follow preuk"}, {"timstamp": "2016-08-30 12:29", "user": "aaa__", "body": "ok"}, {"timstamp": "2016-08-30 12:29", "user": "Preuk", "body": "there are so many ways to use JS ..."}, {"timstamp": "2016-08-30 12:31", "user": "Preuk", "body": "for fun stuff, you can look at some JS game system (warnet, factoryidle, cookie clicker come to mind :p) or replicate some google tools interface (google keep is pretty interesting for example)"}, {"timstamp": "2016-08-30 12:31", "user": "Preuk", "body": "the most different use case you know how to handle, the closer you are to \"mastery\""}, {"timstamp": "2016-08-30 12:32", "user": "Preuk", "body": "or even better: find clients ready to pay you for learning :p"}, {"timstamp": "2016-08-30 12:34", "user": "aaa__", "body": "Thank you ngWalrus,Elarciss and Preuk"}], "label": "other"}
{"id": "93d59488", "body": "", "comments": [{"timstamp": "2016-05-26 15:33", "user": "arlekin", "body": "Foxandxss: so... remember like about 16 hours ago we were talking about modules and DI..."}, {"timstamp": "2016-05-26 15:34", "user": "Foxandxss", "body": "yes"}, {"timstamp": "2016-05-26 15:34", "user": "arlekin", "body": "Foxandxss: and i'd be eternally grateful if you could help me with my service structure"}, {"timstamp": "2016-05-26 15:35", "user": "Foxandxss", "body": "I forgot all about angular"}, {"timstamp": "2016-05-26 15:35", "user": "arlekin", "body": "Foxandxss: meaning ?"}, {"timstamp": "2016-05-26 15:35", "user": "arlekin", "body": "its really more of an approach question"}, {"timstamp": "2016-05-26 15:35", "user": "Foxandxss", "body": "That I haven't use angular in the last year"}, {"timstamp": "2016-05-26 15:35", "user": "Foxandxss", "body": ":P"}, {"timstamp": "2016-05-26 15:36", "user": "arlekin", "body": "still, best practices die slowly"}, {"timstamp": "2016-05-26 15:36", "user": "icebox", "body": "Foxandxss: please, reboot :)"}, {"timstamp": "2016-05-26 15:36", "user": "icebox", "body": "Foxandxss: and restore the backup :)"}, {"timstamp": "2016-05-26 15:37", "user": "arlekin", "body": "so, i have tables of data on several pages and i get the data in similar way for each of 'em"}, {"timstamp": "2016-05-26 15:37", "user": "arlekin", "body": "and i have service handling the download"}, {"timstamp": "2016-05-26 15:38", "user": "arlekin", "body": "but services are singleton by design"}, {"timstamp": "2016-05-26 15:38", "user": "arlekin", "body": "so either i have to have service for each my table (which would be almost identical to the others)"}, {"timstamp": "2016-05-26 15:39", "user": "arlekin", "body": "or have one service and reinitialize it with different url for different tables"}, {"timstamp": "2016-05-26 15:39", "user": "Foxandxss", "body": "icebox: but but my ng2 knowledge is more interesting"}, {"timstamp": "2016-05-26 15:39", "user": "icebox", "body": "arlekin: memoize"}, {"timstamp": "2016-05-26 15:39", "user": "arlekin", "body": "so either i have to make some factory of services which seems unnecessary complex"}, {"timstamp": "2016-05-26 15:40", "user": "arlekin", "body": "or i can have single service, but that seems like bad design according to principes of angular"}, {"timstamp": "2016-05-26 15:40", "user": "arlekin", "body": "memoize ?"}, {"timstamp": "2016-05-26 15:42", "user": "arlekin", "body": "especially that i made my service with provider recipe with intention to setting url ($resource to be honest) in .config block"}, {"timstamp": "2016-05-26 15:43", "user": "arlekin", "body": "but then afaik all .config blocks are evaluated consecutively and im not sure how that would turn out"}, {"timstamp": "2016-05-26 15:50", "user": "Fenikkusu", "body": "arlekin, I would create a generic service that you pass the URL too. Then you can create specific services that each call the generic one. Your specific ones would be minor in code size, as all you have to do is call the generic with the config url."}, {"timstamp": "2016-05-26 15:52", "user": "arlekin", "body": "Fenikkusu: thats another time that askign question here, beside help and answer, brought me deep shame and doubt in my cognitive capabilities"}, {"timstamp": "2016-05-26 15:52", "user": "arlekin", "body": "Fenikkusu: thank you so much"}, {"timstamp": "2016-05-26 16:02", "user": "nimomo", "body": "Fenikkusu: thank you.. but I'm not sure how would you change the value of this element"}, {"timstamp": "2016-05-26 16:10", "user": "Fenikkusu", "body": "nimomo, your image uses ng-src=\"{model.some_image}\". Angular will take care of the rest."}], "label": "other"}
{"id": "93d59477", "body": "", "comments": [{"timstamp": "2018-06-11 08:50", "user": "SargoDarya", "body": "Morning fellas o/"}, {"timstamp": "2018-06-11 08:52", "user": "icebox", "body": "SargoDarya: hey"}, {"timstamp": "2018-06-11 08:52", "user": "SargoDarya", "body": "How's it going?"}, {"timstamp": "2018-06-11 08:53", "user": "Elarcis", "body": "Today, I get to debug an infinite loop! Yay!"}, {"timstamp": "2018-06-11 08:53", "user": "icebox", "body": "Elarcis: in a finite time? :)"}, {"timstamp": "2018-06-11 08:53", "user": "Elarcis", "body": "icebox: Im afraid so, yes."}, {"timstamp": "2018-06-11 08:54", "user": "Elarcis", "body": "icebox: an infinite _recursive_ loop, at that."}, {"timstamp": "2018-06-11 08:54", "user": "icebox", "body": "Elarcis: tail one?"}, {"timstamp": "2018-06-11 09:00", "user": "Elarcis", "body": "icebox: oof, I dont expect it to be one"}, {"timstamp": "2018-06-11 09:00", "user": "Elarcis", "body": "icebox: thatd be highly surprising, given who wrote the code"}, {"timstamp": "2018-06-11 09:16", "user": "Elarcis", "body": "icebox: (not a pro dev)"}, {"timstamp": "2018-06-11 09:16", "user": "icebox", "body": "well... I asked it because tail recursion is a bit more easy to debug"}, {"timstamp": "2018-06-11 09:17", "user": "Elarcis", "body": "icebox: hehehe"}, {"timstamp": "2018-06-11 09:51", "user": "Elarcis", "body": "icebox: found it. specific model asking for very broad data that depend on this very model to compute first, etc."}, {"timstamp": "2018-06-11 09:52", "user": "icebox_", "body": "Elarcis: nice catch :)"}, {"timstamp": "2018-06-11 09:53", "user": "Elarcis", "body": "icebox_: I was afraid itd be harder to find, but smartly placed breakpoints and clear callstack made it easier"}], "label": "other"}
{"id": "93d594d6", "body": "", "comments": [{"timstamp": "2016-06-16 14:45", "user": "Foxandxss", "body": "RC2 was released yesterday, featuring animations"}, {"timstamp": "2016-06-16 14:45", "user": "Pyrrhus", "body": "Foxandxss: congrats on rc2 ;)"}, {"timstamp": "2016-06-16 14:47", "user": "Foxandxss", "body": "Pyrrhus: hoping that RC3 won't take too much extra time"}, {"timstamp": "2016-06-16 14:49", "user": "Pyrrhus", "body": "Foxandxss: fingers crossed :)"}, {"timstamp": "2016-06-16 15:07", "user": "Pyrrhus", "body": "I see from the docs that DynamicComponentLoader is deprecated... anybody know what replaces it ? I want to programmatically create instances of components..."}, {"timstamp": "2016-06-16 15:10", "user": "Docmarten", "body": "Pyrrhus: I don't"}, {"timstamp": "2016-06-16 15:11", "user": "Pyrrhus", "body": "found a changelog that points to ComponentResolver. which is experimental and has no examples :("}, {"timstamp": "2016-06-16 15:11", "user": "Docmarten", "body": "heh...fun"}, {"timstamp": "2016-06-16 15:12", "user": "Pyrrhus", "body": "I really like ng2, but for an RC2 the API is, well, not really stable, let alone frozen. oh well."}, {"timstamp": "2016-06-16 15:57", "user": "Pyrrhus", "body": "this.componentResolver.resolveComponent(ItemComponent).then((factory => this.viewContainerRef.createComponent(factory,0,this.injector)).then(itemComponent : this.itemComponent = itemComponent);"}, {"timstamp": "2016-06-16 15:57", "user": "Pyrrhus", "body": "thats a very very convoluted way to do this.itemComponent = new ItemComponent();"}, {"timstamp": "2016-06-16 15:57", "user": "Pyrrhus", "body": "but the first one works. the second one doesnt...."}, {"timstamp": "2016-06-16 16:15", "user": "dcherman", "body": "Pyrrhus: unless `createComponent` is async, you can combine both `then` calls into one. that will also look nicer in the future potentially with `await`."}, {"timstamp": "2016-06-16 16:16", "user": "Pyrrhus", "body": "afaik its all async, but the docs are a bit lacking so far. Im glad I even got this to work :)"}, {"timstamp": "2016-06-16 16:17", "user": "Pyrrhus", "body": "although my gut-feeling says this is way too complicated for simply programmatically adding a new instance of a component to a parent"}, {"timstamp": "2016-06-16 16:19", "user": "dcherman", "body": "`createComponent` is not async per the docs, and the additional boilerplate is so that the injector can support async loading, that way you don't need to bundle your entire application at build time if you don't want to."}, {"timstamp": "2016-06-16 16:20", "user": "Pyrrhus", "body": "ah ok :) my knowledge is lacking, so this is the result of goole + docs + trial & error."}, {"timstamp": "2016-06-16 16:24", "user": "ejairn", "body": "Pyrrhus: you work with angular + firebase?"}, {"timstamp": "2016-06-16 16:25", "user": "Pyrrhus", "body": "ejairn: no, just angular that talks to a REST backend."}, {"timstamp": "2016-06-16 16:25", "user": "ejairn", "body": "Pyrrhus: ok, thanks."}, {"timstamp": "2016-06-16 16:26", "user": "Pyrrhus", "body": "btw : since you use promises, shouldnt you do .then(function(profile) { // use profile here }) ?"}, {"timstamp": "2016-06-16 16:27", "user": "Pyrrhus", "body": "looks like youre discarding the response, and assigning the promise."}, {"timstamp": "2016-06-16 16:28", "user": "Pyrrhus", "body": "but my angularFu is low today..."}, {"timstamp": "2016-06-16 16:48", "user": "ejairn", "body": "The code is update and work:"}, {"timstamp": "2016-06-16 16:53", "user": "ngbot", "body": "[angular.js] Narretz pushed 1 new commit to master:"}, {"timstamp": "2016-06-16 16:53", "user": "ngbot", "body": "angular.js/master ab526d5 Iain Apreotesei: style(indexPage.template.html): change bad punctuation in documentation footer..."}], "label": "other"}
{"id": "93d5953f", "body": "", "comments": [{"timstamp": "2016-11-04 11:41", "user": "hemangpatel", "body": "I want to crawl angularjs site and create sitemap"}, {"timstamp": "2016-11-04 11:41", "user": "hemangpatel", "body": "How can i achieve that ?"}, {"timstamp": "2016-11-04 11:41", "user": "icebox", "body": "hemangpatel: creating a crawler?"}, {"timstamp": "2016-11-04 11:42", "user": "hemangpatel", "body": "icebox, I want to build sitemap from any angularjs application. so yes i need crawler i think"}, {"timstamp": "2016-11-04 11:43", "user": "icebox", "body": "hemangpatel: perfect... a crawler is a server side app :)"}, {"timstamp": "2016-11-04 11:43", "user": "icebox", "body": "Elarcis: hey!"}, {"timstamp": "2016-11-04 11:44", "user": "Elarcis", "body": "hi icebox"}, {"timstamp": "2016-11-04 11:48", "user": "hemangpatel", "body": "icebox, I was thinking about phantomjs"}, {"timstamp": "2016-11-04 11:48", "user": "hemangpatel", "body": "and i found"}, {"timstamp": "2016-11-04 11:49", "user": "icebox", "body": "hemangpatel: always backend matter :)"}, {"timstamp": "2016-11-04 11:49", "user": "hemangpatel", "body": "icebox, Sorry i don't understand"}, {"timstamp": "2016-11-04 11:49", "user": "hemangpatel", "body": "backend of angular ?"}, {"timstamp": "2016-11-04 11:50", "user": "icebox", "body": "hemangpatel: your question is off topic..."}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "angular is only frontend"}, {"timstamp": "2016-11-04 11:50", "user": "hemangpatel", "body": "okay"}, {"timstamp": "2016-11-04 11:50", "user": "icebox", "body": "hemangpatel: a crawler or that app you pointed out are backend apps"}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "but if you want a sitemap you'd want your server to generate it"}, {"timstamp": "2016-11-04 11:50", "user": "smiche", "body": "ie express/spring/.net core or whatever else you're using for your backend"}], "label": "other"}
